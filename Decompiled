int32_t sub_4000(void* arg1, void* arg2, void* arg3, void* arg4 @ r4, int32_t* arg5 @ r6, int32_t arg6 @ r9, int32_t arg7 @ r11, int32_t arg8 @ r12, int32_t arg9 @ pc)
{
    bool n;
    if (n)
    {
        arg1 = (arg3 & (arg1 << 0x10));
    }
    bool z;
    if (z)
    {
        arg1 = ((arg1 & (arg1 << 2)) & arg2);
    }
    if (n)
    {
        arg1 = (arg3 & (arg1 << 8));
    }
    if (z)
    {
        arg1 = ((arg1 & arg2) & arg2);
    }
    if (n)
    {
        arg1 = (arg3 & arg1);
    }
    if (z)
    {
        arg1 = (((arg1 & (arg1 << 4)) & arg2) & arg2);
    }
    if (n)
    {
        arg1 = (arg3 & arg1);
    }
    if (z)
    {
        arg1 = (((arg1 & (arg1 << 8)) & arg2) & arg2);
    }
    if (n)
    {
        arg1 = (arg3 & arg1);
    }
    if (z)
    {
        arg1 = ((((arg1 & (arg1 << 0x10)) & arg2) & arg2) & arg2);
    }
    if (n)
    {
        arg1 = (arg3 & arg1);
    }
    if (z)
    {
        arg2 = arg1;
        arg1 = (((arg1 & arg2) & arg2) & arg2);
    }
    if (n)
    {
        arg1 = (arg3 & (arg1 << 0x18));
    }
    if (z)
    {
        arg3 = arg1;
        arg1 = ((arg1 & arg2) & arg2);
    }
    if (n)
    {
        arg1 = (arg3 & (arg1 << 8));
    }
    if (z)
    {
        arg4 = arg1;
        arg1 = (arg1 & arg2);
    }
    if (n)
    {
        arg1 = (arg3 & (arg1 << 8));
    }
    if (z)
    {
        arg1 = (((((arg1 & (arg1 >> 0x20)) & arg3) & arg2) & arg2) & arg4);
    }
    if (n)
    {
        arg1 = (arg3 & (arg1 << 8));
    }
    if (z)
    {
        int32_t lr;
        int16_t* r0_47 = ((((((arg1 & (arg1 << 1)) & arg3) & arg2) & arg2) & arg4) & (lr >> 0));
        *r0_47 = r0_47;
        void* r0_48 = (r0_47 - arg6);
        *r0_48 = ;
        *(r0_48 - arg9);
    }
    if ((!z))
    {
        *arg5;
    }
    /* undefined */;
}

int32_t sub_0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    /* unimplemented  {vext.8 d16, d15, d0, #0} */;
    int32_t r0_7 = ((arg1 >> 0x20) >> 0x20);
    int32_t r3 = r0_7;
    if (r3 != 0)
    {
        r0_7 = (r0_7 << 0x10);
        r3 = (r3 - 2);
    }
    /* tailcall */
    return sub_200(r0_7, ((r3 >> 0x19) >> 0x19), arg3);
}

int32_t sub_200(int32_t arg1, void* arg2, int32_t arg3)
{
    int32_t r4 = 0;
    if (arg3 != 0)
    {
        uint32_t r8_1 = 0;
        while (true)
        {
            int16_t r10_1 = (arg3 - r8_1);
            int32_t r0_1 = (arg1 + r8_1);
            char var_65_1 = r0_1;
            uint8_t var_66 = (r0_1 >> 8);
            if (r10_1 > (0x40 - (r0_1 & 0x3f)))
            {
                r10_1 = (0x40 - (r0_1 & 0x3f));
            }
            uint32_t r11_1 = r10_1;
            void var_64;
            sub_3ebc(&var_64, (arg2 + r8_1), r11_1);
            int32_t r0_6 = sub_1816(0x40005400, 0x50, &var_66, (r11_1 + 2), nullptr, 0);
            sub_1eb0(7);
            if (r0_6 != 0)
            {
                r4 = 0xfffffffd;
                break;
            }
            r8_1 = (r10_1 + r8_1);
            if (r8_1 >= arg3)
            {
                r4 = 0;
                break;
            }
        }
    }
    return r4;
}

int32_t sub_298(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        uint32_t r5_1 = 0;
        do
        {
            int32_t r0 = (r5_1 + arg1);
            uint32_t r1 = (arg3 - r5_1);
            char var_25_1 = r0;
            uint8_t var_26 = (r0 >> 8);
            uint8_t* r0_2 = (arg2 + r5_1);
            if (r1 < 0x41)
            {
                int32_t r4_1 = sub_1816(0x40005400, 0x50, &var_26, 2, r0_2, r1);
                sub_1eb0(2);
                if (r4_1 != 0)
                {
                    r4_1 = 0xfffffffe;
                }
                return r4_1;
            }
            int32_t r0_3 = sub_1816(0x40005400, 0x50, &var_26, 2, r0_2, 0x40);
            sub_1eb0(2);
            if (r0_3 != 0)
            {
                return 0xfffffffe;
            }
            r5_1 = (r5_1 + 0x40);
        } while (r5_1 < arg3);
    }
    return 0;
}

int32_t sub_334(int32_t arg1)
{
    if (arg1 != 0)
    {
        sub_16f8(0x40020c00, 0x2000);
        sub_1eb0(arg1);
    }
    /* tailcall */
    return sub_16f4(0x40020c00, 0x2000);
}

uint32_t sub_362()
{
    sub_25b0(0x15, 0x200004d0);
    sub_2634(0x200004d0, 0x5ac, &data_1635, 1);  {  // {"@FIF"}}
    sub_264a(0x200004d0, "Apple Inc.");
    sub_2694(0x200004d0, "Potassium Hub");
    sub_3ebc(0x20000562, 0x20001236, 0x30);
    uint32_t r1 = *0x200004d6;
    *0x200004e2 = 9;
    *0x200004e1 = 4;
    *0x200004d9 = 4;
    *0x200004da = 0;
    *0x200004db = 0;
    *0x200004dc = 0;
    __builtin_strncpy(0x200004dd, "d222", 4);
    *0x200004e5 = ((*0x20001234 + 0x1fe) >> 1);
    int32_t r1_5 = (((((r1 | (*0x200004d7 << 8)) | (*0x200004d8 << 0x10)) & 0xf04740) | 0x10800) | 0x93);
    *0x200004d6 = r1_5;
    *0x200004d8 = (r1_5 >> 0x10);
    *0x200004d7 = (r1_5 >> 8);
    uint32_t r0 = *0x20000450;
    if (r0 >= 5)
    {
        *0x200005ca = 2;
    }
    return r0;
}

int32_t sub_422()
{
    uint32_t i_1 = 0;
    int32_t r1 = 0;
    char* r0 = 0x2000042f;
    uint32_t i;
    do
    {
        uint32_t r4_1 = *r0;
        if (r4_1 == 0)
        {
            i = i_1;
            break;
        }
        void* r2_1 = (0x20001234 + (i_1 << 1));
        r1 = (r1 + 1);
        i_1 = (i_1 + 1);
        r0 = (r0 - 1);
        *(r2_1 + 3) = 0;
        *(r2_1 + 2) = r4_1;
        i = r1;
    } while (i < 0x18);
    int32_t r0_1 = 2;
    *0x20001235 = 3;
    *0x20001234 = (2 + (i << 1));
    uint32_t r1_2 = *0x2000048c;
    if (r1_2 != 0)
    {
        int32_t r3 = 3;
        int32_t r4_2 = 0;
        do
        {
            char r5_1 = *(0x20000469 + r4_2);
            void* r6_1 = (0x20001266 + (r4_2 << 1));
            r4_2 = (r4_2 + 1);
            *(r6_1 + 2) = r5_1;
            *(0x20001266 + r3) = 0;
            r3 = (r3 + 2);
        } while (r4_2 < r1_2);
        r0_1 = (r3 - 1);
    }
    *0x20001267 = 3;
    *0x20001266 = r0_1;
    return r0_1;
}

uint32_t sub_4c4()
{
    return *((((sub_16fe(0x40020800, 0x40) * 9) + 0x3f61) + (sub_16fe(0x40020800, 0x80) * 3)) + sub_16fe(0x40020800, 0x100));
}

int32_t sub_504(int32_t* arg1, int32_t arg2, char* arg3, int32_t arg4)
{
    int32_t i_1 = arg4;
    char* r6 = arg3;
    sub_1656(arg1);
    uint32_t r12;
    sub_15ae(arg1, 0xfe, r12);
    int32_t r1;
    if (arg2 == 1)
    {
        sub_15ae(arg1, 4, r12);
        r1 = 4;
    }
    int32_t r4_1;
    uint32_t r9;
    if ((arg2 != 1 && arg2 != 0))
    {
        r9 = 0xff;
        r4_1 = 0xff;
    }
    if (arg2 == 0)
    {
        sub_15ae(arg1, 5, r12);
        r1 = 5;
    }
    if ((arg2 == 1 || arg2 == 0))
    {
        r4_1 = sub_1c3c(0xffff, r1);
        r9 = (r4_1 >> 8);
    }
    if (i_1 != 0)
    {
        int32_t i;
        do
        {
            uint32_t r1_1 = *r6;
            if (r1_1 == 0xfe)
            {
                sub_15ae(arg1, 0xfe, r12);
                r1_1 = *r6;
            }
            int32_t r0_8 = sub_1c3c((r4_1 | (r9 << 8)), r1_1);
            char r1_2 = *r6;
            r6 = &r6[1];
            r4_1 = r0_8;
            sub_15ae(arg1, r1_2, r12);
            r9 = (r4_1 >> 8);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
    uint32_t r4_2 = r4_1;
    if (r4_2 == 0xfe)
    {
        sub_15ae(arg1, 0xfe, r12);
    }
    sub_15ae(arg1, r4_2, r12);
    if (r9 == 0xfe)
    {
        sub_15ae(arg1, 0xfe, r12);
    }
    sub_15ae(arg1, r9, r12);
    sub_15ae(arg1, 0xfe, r12);
    sub_15ae(arg1, 0x40, r12);
    return 2;
}

int32_t sub_5cc(int32_t* arg1, char* arg2, int32_t arg3)
{
    int32_t r0_3;
    if (*arg2 != 5)
    {
        r0_3 = 0xfffffff6;
    }
    else
    {
        int32_t r0_1 = sub_1c3c(0xffff, 5);
        uint8_t var_98;
        if (arg3 >= 2)
        {
            void* r6_1 = &arg2[1];
            int32_t i_1 = (arg3 - 1);
            char* r4_1 = &var_98;
            int32_t i;
            do
            {
                r0_1 = sub_1c3c(r0_1, *r6_1);
                char r1_1 = *r6_1;
                r6_1 = (r6_1 + 1);
                i = i_1;
                i_1 = (i_1 - 1);
                *r4_1 = r1_1;
                r4_1 = &r4_1[1];
            } while (i != 1);
        }
        if (r0_1 != 0)
        {
            r0_3 = 0xfffffff7;
        }
        else
        {
            char var_97;
            uint32_t r0_4 = var_97;
            uint32_t r5_1 = var_98;
            int32_t var_9c;
            int32_t* r2 = &var_9c;
            char var_96;
            char* r1_2 = &var_96;
            int32_t r4_2 = (r0_4 & 0x7f);
            var_9c = r4_2;
            int32_t* r0_9;
            uint8_t* r2_1;
            uint32_t r3_1;
            if (r0_4 > 0xffffffff)
            {
                char r0_7 = sub_1c9a(r5_1, r1_2, r2);
                char r1_3 = var_9c;
                var_98 = r5_1;
                r2_1 = &var_98;
                r3_1 = (r0_7 + 2);
                r0_9 = arg1;
                char var_97_1 = r1_3;
            }
            else
            {
                char r1_4 = 0;
                bool cond:2_1 = sub_1ce6(r5_1, r1_2, r2) != r4_2;
                var_98 = r5_1;
                r2_1 = &var_98;
                r3_1 = 3;
                if (cond:2_1)
                {
                    r1_4 = 1;
                }
                char r0_12 = var_9c;
                var_96 = r1_4;
                char var_97_2 = (r0_12 | 0x80);
                r0_9 = arg1;
            }
            sub_504(r0_9, 1, r2_1, r3_1);
            r0_3 = 0;
        }
    }
    return r0_3;
}

int32_t sub_688(int32_t* arg1, int32_t arg2)
{
    if (*arg1 == 0xffffffff)
    {
        return 0;
    }
    int32_t r12 = arg1[7];
    if ((r12 & 0xfffffffc) > arg2)
    {
        return 0;
    }
    /* tailcall */
    return sub_6a2(0, arg2, arg1, r12);
}

int32_t sub_6a2(int32_t arg1, int32_t arg2, int32_t* arg3, int32_t arg4 @ r12)
{
    int32_t r0_1 = (*0x40023830 | 0x1000);
    *0x40023830 = r0_1;
    *0x40023008 = 1;
    if (0 != (arg4 >> 2))
    {
        int32_t i_1 = (0 - (arg4 >> 2));
        int32_t i;
        do
        {
            int32_t r1 = *arg3;
            arg3 = &arg3[1];
            i = i_1;
            i_1 = (i_1 + 1);
            *0x40023000 = r1;
        } while (i != 0xffffffff);
    }
    bool cond:0 = *0x40023000 == 0;
    *0x40023830 = (*0x40023830 & 0xffffefff);
    if (cond:0)
    {
        r0_1 = 1;
    }
    return r0_1;
}

int32_t sub_6f6(int32_t arg1, int32_t* arg2)
{
    int32_t lr = 0;
    int32_t r2;
    int32_t r2_1;
    int32_t r12_1;
    if (arg1 < 0x10000)
    {
        r2 = 0xe;
        r12_1 = 0;
    }
    else if (arg1 >= "%u %u %u\n")
    {
        r2_1 = 0;
        if (0 == (arg1 >> 0x14))
        {
            r2 = 0x11;
            r12_1 = 4;
        }
    }
    else
    {
        r2 = 0x10;
        r12_1 = 3;
    }
    if (((arg1 < 0x10000 || (arg1 >= 0x10000 && arg1 < "%u %u %u\n")) || ((arg1 >= 0x10000 && arg1 >= "%u %u %u\n") && 0 == (arg1 >> 0x14))))
    {
        *arg2 = (((arg1 >> r2) + r12_1) << 3);
        if ((((1 << r2) - 1) & arg1) == 0)
        {
            lr = 1;
        }
        r2_1 = lr;
    }
    return r2_1;
}

int32_t sub_748(char* arg1, uint8_t* arg2)
{
    char var_11 = 0xff;
    sub_1570(1, &var_11, 1);
    uint32_t r2 = var_11;
    if (r2 == 0xff)
    {
        int32_t r2_1 = 0;
        *arg1 = 0x6b;
        char* r1_2 = 0x2000042f;
        uint32_t i_1 = 0;
        uint32_t i;
        do
        {
            uint32_t r3_1 = *r1_2;
            if (r3_1 == 0)
            {
                i = i_1;
                break;
            }
            r2_1 = (r2_1 + 1);
            arg1[(1 + i_1)] = r3_1;
            i_1 = (i_1 + 1);
            r1_2 = (r1_2 - 1);
            i = r2_1;
        } while (i < 0x18);
        *arg2 = (i + 1);
    }
    else
    {
        if (r2 >= 0x20)
        {
            r2 = 0x20;
        }
        *arg2 = r2;
        sub_1570(2, arg1, r2);
    }
    return 0;
}

int32_t sub_7b8()
{
    sub_1c5c(0x20000004, 0x49);
    int32_t* r1 = &data_8024;
    uint32_t r0 = *0x200005d0;
    if (r0 != 1)
    {
        r1 = &data_80024;
    }
    *0x200002f4 = *r1;
    int32_t r1_2 = 0x80000;
    if (r0 != 1)
    {
        r1_2 = 0x8000;
    }
    *0x200002fc = r1_2;
    int32_t* r2 = 0x20000300;
    if (r0 != 1)
    {
        r2 = 0x20000304;
    }
    *0x200002f8 = *r2;
    int32_t r3 = *0x20000494;
    int32_t r4 = *0x20000498;
    int32_t r5 = *0x2000049c;
    *0x20000308 = *0x20000490;
    *0x2000030c = r3;
    *0x20000310 = r4;
    *0x20000314 = r5;
    int32_t r2_1 = *0x200004a4;
    int32_t r3_1 = *0x200004a8;
    int32_t r4_1 = *0x200004ac;
    int32_t r5_1 = *0x200004b0;
    int32_t r6 = *0x200004b4;
    *0x20000418 = *0x200004a0;
    *0x2000041c = r2_1;
    *0x20000420 = r3_1;
    *0x20000424 = r4_1;
    *0x20000428 = r5_1;
    *0x2000042c = r6;
    sub_3ebc(0x20000430, 0x200004b8, 6);
    sub_1520(4, 0x20000436, 1);
    sub_1520(8, 0x20000437, 4);
    int32_t r0_4 = 0;
    while (*(0x20000436 + r0_4) == 0xff)
    {
        r0_4 = (r0_4 + 1);
        if (r0_4 > 4)
        {
            sub_3e98(0x20000436, 0, 5);
            sub_1548(4, 0x20000436, 1);
            sub_1548(8, 0x20000437, 4);
            break;
        }
    }
    sub_3e98(0x2000043b, 0, 6);
    *0x20000444 = 0;
    *0x20000448 = 0;
    *0x2000044c = 0;
    *0x20000450 = sub_4c4();
    /* tailcall */
    return sub_748(0x20000469, 0x2000048c);
}

int32_t sub_90a()
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1 = sub_1d4e(*0x200002e4);
    if (r0_1 != 0)
    {
        r0_1 = *0x200002e4;
        if (r0_1 == 0x65534c46)
        {
            int32_t r4_2 = (*0x200002e8 & 0xf);
            if ((r4_2 >= 0xc || (r4_2 < 0xc && r4_2 <= 1)))
            {
                __builtin_strncpy(0x200002e4, "!ERR", 4);
                *0x200002ec = 0xffffffff;
            }
            int32_t r0_18;
            if ((r4_2 > 1 && r4_2 < 0xc))
            {
                sub_2102();
                sub_2208(0xf3);
                r0_18 = sub_213c(*(0x3fa0 + (r4_2 << 2)), 2);
                sub_212a();
                if (r0_18 != 8)
                {
                    __builtin_strncpy(0x200002e4, "!ERR", 4);
                    *0x200002ec = r0_18;
                }
            }
            char r0_6;
            if (((r4_2 >= 0xc || (r4_2 < 0xc && r4_2 <= 1)) || ((r4_2 < 0xc && r4_2 > 1) && r0_18 != 8)))
            {
                r0_6 = 1;
            }
            if (((r4_2 < 0xc && r4_2 > 1) && r0_18 == 8))
            {
                *0x200002e4 = 0;
                r0_6 = 0;
            }
            /* tailcall */
            return sub_1348(r0_6);
        }
        char* r1_11;
        if (r0_1 == 0x76534c46)
        {
            __builtin_strncpy(0x200002e4, "!ERR", 4);
            r0_1 = sub_688(*0x200002fc, 0x78000);
            if (r0_1 != 0)
            {
                r0_1 = *0x200002fc;
                if (r0_1 == 0x80000)
                {
                    char var_26;
                    r1_11 = &var_26;
                    var_26 = 2;
                    goto label_aaa;
                }
                if (r0_1 != 0x8000)
                {
                    goto label_ab0;
                }
                char var_25;
                r1_11 = &var_25;
                var_25 = 1;
                goto label_aaa;
            }
        }
        else if (r0_1 == 0x77534c46)
        {
            void* r4_1 = *0x200002f0;
            sub_2102();
            sub_2208(0xf3);
            int32_t var_24;
            int32_t r0_3 = sub_6f6(r4_1, &var_24);
            int32_t r0_4 = var_24;
            char r0_16;
            if ((r0_4 | 8) == 8)
            {
                __builtin_strncpy(0x200002e4, "!ERR", 4);
                *0x200002ec = 0xffffffff;
            label_bb0:
                r0_16 = 1;
            }
            else
            {
                if (r0_3 != 0)
                {
                    int32_t r0_9 = sub_213c(r0_4, 2);
                    if (r0_9 != 8)
                    {
                        sub_212a();
                        __builtin_strncpy(0x200002e4, "!ERR", 4);
                        *0x200002ec = r0_9;
                        goto label_bb0;
                    }
                    sub_1eb0(0xa);
                }
                if (*0x200002e8 != 0)
                {
                    int32_t i = 0;
                    int32_t r0_14;
                    do
                    {
                        r0_14 = sub_21c0(((r4_1 + 0x8000000) + i), ((*(0x20000318 + i) | (*(i + 0x20000319) << 8)) | ((*(i + 0x2000031a) | (*(i + 0x2000031b) << 8)) << 0x10)));
                        if (r0_14 != 8)
                        {
                            break;
                        }
                        i = (i + 4);
                    } while (i < *0x200002e8);
                    if (r0_14 != 8)
                    {
                        sub_212a();
                        __builtin_strncpy(0x200002e4, "!ERR", 4);
                        *0x200002ec = (r0_14 | 0x80000000);
                        goto label_bb0;
                    }
                }
                sub_212a();
                *0x200002e4 = 0;
                r0_16 = 0;
            }
            r0_1 = sub_1348(r0_16);
        }
        if (r0_1 == 0x49465250)
        {
            char var_27;
            r1_11 = &var_27;
            var_27 = 0xff;
        label_aaa:
            r0_1 = sub_1548(5, r1_11, 1);
        label_ab0:
            *0x200002e4 = 0;
        }
        else if (r0_1 == 0x64696147)
        {
            *0x40023840 = (*0x40023840 | 0x10000000);
            *0x40007000 = (*0x40007000 | 0x100);
            *0x40023840 = (*0x40023840 & 0xefffffff);
            *0x40002854 = 0;
            sub_1eb0(0x64);
            __dsb_SY();
            *0xe000ed0c = ((*0xe000ed0c & 0x700) | 0x5fa0004);
            __dsb_SY();
            while (true)
            {
                /* nop */
            }
        }
    }
    return r0_1;
}

int32_t sub_bc0()
{
    sub_1664(&data_3fd0, 0xa);
    sub_148c(0x20000490);
    sub_7b8();
    sub_422();
    sub_29f6(0x200009ec, 0, 0x4120, 0x2000024c);
    sub_334(0);
    sub_362();
    sub_26e0(0x40005400, 0x2c, 0x200004d0);
    /* tailcall */
    return sub_2744(0x40005400, 0x2c);
}

int32_t sub_c32() __noreturn
{
    sub_1f5c(0);
    sub_2076();
    *0x40023c00 = 0x705;
    *0x40023840 = (*0x40023840 | 0x10000000);
    *0x40007000 = (*0x40007000 | 0x100);
    *0x40023840 = (*0x40023840 & 0xefffffff);
    int32_t r0_1;
    int32_t r1_4;
    r1_4 = HIGHD((*0x200002b0 * 0x10624dd3));
    r0_1 = LOWD((*0x200002b0 * 0x10624dd3));
    if (0 == ((0xffffffff + (r1_4 >> 6)) >> 0x18))
    {
        *0xe000e014 = (0xffffffff + (r1_4 >> 6));
        *0xe000ed23 = 0xf0;
        *0xe000e018 = 0;
        *0xe000e010 = 7;
    }
    *0xe000ed23 = 0x20;
    sub_1ed4();
    sub_1664(&data_40e8, 2);
    sub_178c(0x40005400, 0x186a0, 0);
    int32_t r5 = 1;
    char var_19;
    sub_1520(5, &var_19, 1);
    int32_t r0_2 = 0x10400;
    int32_t r1_7 = 0x10400;
    *0x20000304 = r0_2;
    *0x20000300 = r1_7;
    uint32_t r2_2 = var_19;
    if (r2_2 != 1)
    {
        if (r2_2 == 2)
        {
            r5 = 2;
        }
        else
        {
            int32_t r2_3 = (r0_2 & 0xfffffff);
            int32_t r3_1 = (r1_7 & 0xfffffff);
            if (r3_1 > r2_3)
            {
                r5 = 1;
            }
            else
            {
                r5 = 2;
                if ((r2_3 <= r3_1 && r1_7 > r0_2))
                {
                    r5 = 1;
                }
            }
        }
    }
    *0x200005d0 = r5;
    if (*0x40002850 == 0)
    {
        int32_t r0_4 = (r5 & 3);
        int32_t r0_7;
        int32_t r0_8;
        if (r0_4 == 2)
        {
            r0_7 = sub_688(&data_80000, 0x78000);
            if (r0_7 == 0)
            {
                r0_8 = sub_688(&data_8000, 0x78000);
            }
        }
        int32_t r0_5;
        int32_t r0_6;
        if (r0_4 == 1)
        {
            r0_5 = sub_688(&data_8000, 0x78000);
            if (r0_5 == 0)
            {
                r0_6 = sub_688(&data_80000, 0x78000);
            }
        }
        if (((r0_4 == 2 && r0_7 != 0) || ((r0_4 == 1 && r0_5 == 0) && r0_6 != 0)))
        {
            sub_de4(&data_80000);
            /* no return */
        }
        if ((((r0_4 == 2 && r0_7 == 0) && r0_8 != 0) || (r0_4 == 1 && r0_5 != 0)))
        {
            sub_de4(&data_8000);
            /* no return */
        }
    }
    *0x40002850 = 0;
    sub_bc0();
    sub_16f8(0x40020000, 0x800);
    while (true)
    {
        sub_1356();
        sub_90a();
    }
}

int32_t sub_de4(int32_t* arg1) __noreturn
{
    uint32_t r1 = *arg1;
    int32_t r0_1 = arg1[1];
    *0xe000ed08 = (arg1 & 0xffffff80);
    __msr(r1);
    r0_1();
    while (true)
    {
        /* nop */
    }
}

int32_t sub_e0a()
{
    if (*0x200009f6 != 0)
    {
        *0xe000ed10 = (*0xe000ed10 & 0xfffffff9);
        sub_1f5c(1);
        sub_36ec(0x200009ec);
    }
    /* tailcall */
    return sub_20f6(0x100000);
}

int32_t sub_e48()
{
    /* tailcall */
    return sub_3708(0x200009ec);
}

int32_t sub_e5c(void* arg1)
{
    sub_3c82(arg1, 0x82, 0x200, 2);
    sub_3c82(arg1, 2, 0x200, 2);
    sub_3c82(arg1, 0x83, 0x10, 3);
    *0x200005e8 = 1;
    *0x200005e9 = 0;
    sub_3cfa(arg1, 2, 0x200007ea, 0x200);
    return 0;
}

int32_t sub_eb8(void* arg1)
{
    sub_3e12(arg1, 0x82);
    sub_3e12(arg1, 0x83);
    *0x200005e9 = 0;
    *0x200005e8 = 0;
    sub_3cca(arg1, 0x82);
    sub_3cca(arg1, 2);
    sub_3cca(arg1, 0x83);
    return 0;
}

uint32_t sub_efe(void* arg1, char* arg2)
{
    uint32_t r1 = *arg2;
    int32_t r0 = (r1 & 0x60);
    char r6;
    int32_t r1_2;
    uint32_t r2_1;
    if (r0 == 0x40)
    {
        if (arg2[1] == 0xa0)
        {
            uint32_t r0_4 = *(arg2 + 2);
            if (r0_4 == 3)
            {
                uint32_t r2_4 = *(arg2 + 6);
                if ((r2_4 - 1) >= 4)
                {
                    goto label_1004;
                }
                sub_2a5c(arg1, 0x20001054, r2_4);
                uint32_t r0_11 = *0x20001054;
                if ((r0_11 == 8 || r0_11 == 4))
                {
                    *0x2000109c = 1;
                }
                goto label_fae;
            }
            if (r0_4 == 2)
            {
                *0x20001054 = 2;
                uint32_t r1_5 = *(arg2 + 6);
                *0x20001056 = r1_5;
                uint32_t r0_12 = *(arg2 + 4);
                *0x20001057 = r0_12;
                if ((r1_5 - 1) >= 0x40)
                {
                    goto label_1004;
                }
                *0x20001098 = r1_5;
                sub_1c9a(r0_12, 0x20001058, 0x20001098);
                int32_t r0_15 = *0x20001098;
                uint32_t r2_7 = *(arg2 + 6);
                if (r0_15 < r2_7)
                {
                    r2_7 = r0_15;
                }
                sub_2a5c(arg1, 0x20001058, r2_7);
                *0x20001054 = 4;
                *0x20001055 = *0x20001098;
                goto label_fae;
            }
            if (r0_4 != 1)
            {
                goto label_1004;
            }
            *0x20001054 = 1;
            r2_1 = *(arg2 + 6);
            *0x20001056 = r2_1;
            *0x20001057 = arg2[4];
            if (r2_1 >= 0x41)
            {
                goto label_1004;
            }
            r1_2 = 0x20001058;
        label_f46:
            sub_2a8e(arg1, r1_2, r2_1);
            goto label_fae;
        }
    label_1004:
        sub_2d46(arg1);
        r6 = 2;
    }
    else
    {
        if (r0 != 0x20)
        {
            goto label_1004;
        }
        r2_1 = *(arg2 + 6);
        if (r2_1 == 0)
        {
            r6 = 0;
            sub_12ba(arg2[1], arg2);
            sub_2ac0(arg1);
        }
        else
        {
            uint32_t r0_1 = arg2[1];
            if ((r1 << 0x18) >= 0)
            {
                *0x20000268 = r0_1;
                if (r2_1 >= 0x10)
                {
                    r2_1 = 0x10;
                }
                r1_2 = 0x200005d8;
                *0x20001050 = r2_1;
                goto label_f46;
            }
            sub_12ba(r0_1, 0x200005d8);
            sub_2a5c(arg1, 0x200005d8, *(arg2 + 6));
        label_fae:
            r6 = 0;
        }
    }
    return r6;
}

int32_t sub_1052()
{
    if (*0x2000109c == 1)
    {
        *0x20001054 = 0;
    }
    *0x2000109c = 0;
    return 0;
}

int32_t sub_1074()
{
    int32_t r0 = *0x20000268;
    if (r0 != 0xff)
    {
        *0x20001050;
        sub_12ba(r0, 0x200005d8);
        *0x20000268 = 0xff;
    }
    else
    {
        uint32_t r0_1 = *0x20001057;
        *0x20001098 = *0x20001056;
        uint32_t r0_2 = sub_1ce6(r0_1, 0x20001058, 0x20001098);
        char r2 = 8;
        *0x20001055 = *0x20001098;
        if (r0_2 == *0x20001056)
        {
            r2 = 4;
        }
        *0x20001054 = r2;
    }
    return 0;
}

int32_t sub_10da(void* arg1, int32_t arg2)
{
    if (arg2 == 2)
    {
        if (*0x200005e9 == 0)
        {
            *0x200005e8 = 1;
        }
        else
        {
            sub_3d44(arg1, 2, 0, 0);
            *0x200005e9 = 0;
        }
    }
    return 0;
}

int32_t sub_110e(void* arg1, int32_t arg2)
{
    if (arg2 == 2)
    {
        int32_t r1 = *(arg1 + 0x424);
        *0x200005d4 = r1;
        if (r1 == 0)
        {
            sub_3cfa(arg1, 2, 0x200007ea, 0x200);
        }
    }
    return 0;
}

int32_t sub_1142() __pure
{
    return;
}

int32_t sub_1144() __pure
{
    return;
}

int32_t sub_1146() __pure
{
    return;
}

int32_t sub_1148() __pure
{
    return;
}

int32_t sub_114a() __pure
{
    return;
}

int32_t sub_114c() __pure
{
    return;
}

int32_t sub_114e() __pure
{
    return;
}

int32_t sub_1150()
{
    int32_t var_2c = 0;
    int32_t var_28 = 0;
    sub_2540(7, 1);
    sub_22de(0x40020000, 3, 0xa);
    sub_22de(0x40020000, 5, 0xa);
    sub_22de(0x40020400, 0, 0xa);
    sub_22de(0x40020400, 1, 0xa);
    sub_22de(0x40020400, 5, 0xa);
    sub_22de(0x40020400, 0xa, 0xa);
    sub_22de(0x40020400, 0xb, 0xa);
    sub_22de(0x40020400, 0xc, 0xa);
    sub_22de(0x40020400, 0xd, 0xa);
    sub_22de(0x40020800, 3, 0xa);
    sub_22de(0x40020800, 2, 0xa);
    sub_22de(0x40020800, 0, 0xa);
    int32_t var_30 = 3;
    int32_t var_38 = 0x20;
    int32_t var_34 = 2;
    sub_224c(0x40020000, &var_38);
    int32_t var_30_1 = 3;
    var_38 = 8;
    int32_t var_34_1 = 2;
    int32_t var_2c_1 = 0;
    int32_t var_28_1 = 0;
    sub_224c(0x40020000, &var_38);
    int32_t var_30_2 = 3;
    var_38 = 0x3c23;
    int32_t var_34_2 = 2;
    int32_t var_2c_2 = 0;
    int32_t var_28_2 = 0;
    sub_224c(0x40020400, &var_38);
    int32_t var_30_3 = 3;
    var_38 = 1;
    int32_t var_34_3 = 2;
    sub_224c(0x40020800, &var_38);
    int32_t var_30_4 = 3;
    var_38 = 8;
    int32_t var_34_4 = 2;
    sub_224c(0x40020800, &var_38);
    int32_t var_30_5 = 3;
    var_38 = 4;
    int32_t var_34_5 = 2;
    sub_224c(0x40020800, &var_38);
    return sub_2540(0x60000000, 1);
}

void sub_128c()
{
    *0xe000e44d = 0x50;
    *0xe000e44a = 0x50;
    *0xe000e44b = 0x50;
    *0xe000e108 = 0x2000;
    *0xe000e108 = 0x400;
    *0xe000e108 = 0x800;
}

int32_t sub_12ba(int32_t arg1, char* arg2)
{
    if (arg1 == 0x21)
    {
        int32_t r0_5 = *0x20000284;
        *arg2 = r0_5;
        arg2[1] = (r0_5 >> 8);
        arg2[2] = (r0_5 >> 0x10);
        arg2[3] = (r0_5 >> 0x18);
        arg2[4] = *0x2000122c;
        arg2[5] = *0x20001230;
        arg2[6] = *0x20000288;
    }
    else if (arg1 == 0x20)
    {
        *0x20000284 = (((*arg2 | (arg2[1] << 8)) | (arg2[2] << 0x10)) | (arg2[3] << 0x18));
        *0x2000122c = arg2[4];
        *0x20001230 = arg2[5];
        *0x20000288 = arg2[6];
    }
    return 0;
}

int32_t sub_1348(char arg1)
{
    int32_t r12;
    /* tailcall */
    return sub_15ae(0x2000026c, arg1, r12);
}

int32_t sub_1356()
{
    int32_t lr;
    int32_t var_4 = lr;
    sub_1410();
    *0x2000109e = 0;
    int32_t r0 = *0x200005d4;
    if (r0 == 0)
    {
        return r0;
    }
    char* r0_1 = *0x20000280;
    int32_t i;
    do
    {
        if (sub_1d74(0x200011a4, 0, *r0_1, 0x200011a8, 0x20001228) != 0)
        {
            sub_5cc(0x2000026c, 0x200011a8, *0x20001228);
            sub_1410();
            *0x200005d4 = 0;
            break;
        }
        i = *0x200005d4;
        *0x200005d4 = (i - 1);
        r0_1 = (*0x20000280 + 1);
        *0x20000280 = r0_1;
    } while (i != 1);
    *0x20000280 = 0x200007ea;
    /* tailcall */
    return sub_3cfa(0x200009ec, 2, 0x200007ea, 0x200);
}

uint32_t sub_1410()
{
    uint32_t r0 = *0x200005e8;
    if (r0 != 0)
    {
        r0 = sub_1596(0x2000026c);
        if (r0 != 0)
        {
            int32_t r0_1 = sub_1628(0x2000026c, 0x200005ea, 0x200);
            *0x200005e8 = 0;
            r0 = sub_3d44(0x200009ec, 0x82, 0x200005ea, r0_1);
            if (r0_1 == 0x200)
            {
                r0 = sub_1596(0x2000026c);
                if (r0 == 0)
                {
                    *0x200005e9 = 1;
                }
            }
        }
    }
    return r0;
}

int32_t sub_148c(char* arg1)
{
    int32_t r0_2;
    if (sub_298(0, arg1, 0x40) < 0)
    {
        r0_2 = 0xfffffffc;
    }
    else
    {
        char var_11;
        sub_298(0x47, &var_11, 1);
        if (var_11 == 0x5a)
        {
            r0_2 = 0xfffffff0;
        }
        else
        {
            uint32_t r12_1 = *(arg1 + 0x3e);
            if ((r12_1 != 0xffff || (r12_1 == 0xffff && *(arg1 + 0x28) != 0xffff)))
            {
                uint32_t r3_1 = 0xffff;
                int32_t i = 0;
                do
                {
                    uint32_t r4_1 = (r3_1 ^ arg1[i]);
                    int32_t j_1 = 0xfffffff8;
                    int32_t j;
                    do
                    {
                        r3_1 = ((r4_1 >> 1) & 0x7fff);
                        if ((r4_1 & 1) != 0)
                        {
                            r3_1 = (r3_1 ^ 0xa001);
                        }
                        j = j_1;
                        j_1 = (j_1 + 1);
                        r4_1 = r3_1;
                    } while (j != 0xffffffff);
                    i = (i + 1);
                } while (i != 0x3e);
                r0_2 = 0xfffffff7;
                if (r12_1 == r3_1)
                {
                    r0_2 = 0;
                }
            }
            if ((r12_1 == 0xffff && *(arg1 + 0x28) == 0xffff))
            {
                sub_3e98(arg1, 0, 0x40);
                r0_2 = 1;
            }
        }
    }
    return r0_2;
}

int32_t sub_1520(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + 0x40) + arg3) >= 0x1000)
    {
        arg3 = 0;
        if (0 == ((arg1 + 0x40) >> 0xc))
        {
            arg3 = (0xfbf - arg1);
        }
    }
    /* tailcall */
    return sub_298((arg1 + 0x40), arg2, arg3);
}

int32_t sub_1548(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + 0x40) + arg3) >= 0x1000)
    {
        arg3 = 0;
        if (0 == ((arg1 + 0x40) >> 0xc))
        {
            arg3 = (0xfbf - arg1);
        }
    }
    /* tailcall */
    return sub_200((arg1 + 0x40), arg2, arg3);
}

int32_t sub_1570(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + 0x1000) + arg3) >= sub_4000)
    {
        arg3 = 0;
        if (0 == ((arg1 + 0x1000) >> 0xe))
        {
            arg3 = (0x2fff - arg1);
        }
    }
    /* tailcall */
    return sub_298((arg1 + 0x1000), arg2, arg3);
}

int32_t sub_1596(int32_t* arg1)
{
    if (*(arg1 + 0xd) == 0)
    {
        return (*arg1 & (arg1[1] - arg1[2]));
    }
    return (*arg1 + 1);
}

void sub_15ae(int32_t* arg1, char arg2, uint32_t arg3 @ r12)
{
    /* unimplemented  {mrs r12, primask} */;
    /* unimplemented  {cpsid I} */;
    arg1[3] = 0;
    if (*(arg1 + 0xd) != 0)
    {
        arg1[2] = ((arg1[2] + 1) & *arg1);
    }
    arg1[4][arg1[1]] = arg2;
    arg1[1] = (*arg1 & (arg1[1] + 1));
    if (arg1[1] == arg1[2])
    {
        *(arg1 + 0xd) = 1;
    }
    __msr(arg3);
}

int32_t sub_15ea(int32_t* arg1, char* arg2, uint32_t arg3)
{
    /* unimplemented  {mrs r2, primask} */;
    /* unimplemented  {cpsid I} */;
    *(arg1 + 0xd) = 0;
    int32_t r0;
    if (arg1[3] != 0)
    {
        r0 = 0xffffffff;
    }
    else
    {
        *arg2 = arg1[4][arg1[2]];
        arg1[2] = (*arg1 & (arg1[2] + 1));
        if (arg1[1] == arg1[2])
        {
            arg1[3] = 1;
        }
        r0 = 0;
    }
    __msr(arg3);
    return r0;
}

int32_t sub_1628(int32_t* arg1, void* arg2, uint32_t arg3)
{
    int32_t r4 = 0;
    if (arg3 != 0)
    {
        do
        {
            if (sub_15ea(arg1, (arg2 + r4), arg3) < 0)
            {
                break;
            }
            r4 = (r4 + 1);
        } while (r4 < arg3);
    }
    return r4;
}

void sub_1656(void* arg1)
{
    *(arg1 + 4) = 0;
    *(arg1 + 8) = 0;
    *(arg1 + 0xd) = 0;
    *(arg1 + 0xc) = 1;
}

void* sub_1664(void* arg1, int32_t arg2)
{
    int32_t i_1 = arg2;
    void* r0 = sub_2540(0x1ff, 1);
    if (i_1 != 0)
    {
        void* r5_1 = (arg1 + 0xc);
        int32_t i;
        do
        {
            int32_t r6_1 = *(r5_1 - 4);
            uint32_t r9_1 = *(r5_1 + 0xc);
            int32_t r0_1 = *(r5_1 + 8);
            int32_t r1 = *(r5_1 + 4);
            int32_t r2_1 = *r5_1;
            int32_t* r10_1 = *(r5_1 - 0xc);
            uint32_t j_1 = *(r5_1 - 8);
            uint32_t j_2 = j_1;
            int32_t var_34_1 = r6_1;
            int32_t var_30_1 = r2_1;
            int32_t var_2c_1 = r1;
            int32_t var_28_1 = r0_1;
            if (r6_1 != 1)
            {
                r0 = sub_224c(r10_1, &j_2);
                if (r6_1 == 2)
                {
                    int32_t temp0_1 = 0;
                    uint32_t j = j_1;
                    while (j != 0)
                    {
                        j = (j >> 1);
                        temp0_1 = (temp0_1 + 1);
                    }
                    r0 = sub_22de(r10_1, (0x1f - (0x20 - temp0_1)), r9_1);
                }
            }
            else
            {
                int16_t j_3 = j_1;
                if (r9_1 == 0)
                {
                    sub_22d8(r10_1, j_3);
                }
                else
                {
                    sub_22d4(r10_1, j_3);
                }
                r0 = sub_224c(r10_1, &j_2);
            }
            r5_1 = (r5_1 + 0x1c);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
    return r0;
}

void sub_16f4(void* arg1, int16_t arg2)
{
    *(arg1 + 0x18) = arg2;
}

void sub_16f8(void* arg1, int16_t arg2)
{
    *(arg1 + 0x1a) = arg2;
}

int32_t sub_16fe(void* arg1, uint32_t arg2)
{
    int32_t temp0 = 0;
    uint32_t i = arg2;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    int32_t r6 = (3 << (0xfffffffe + (((0x20 * 0) + temp0) << 1)));
    *(arg1 + 0xc) = (*(arg1 + 0xc) & (!r6));
    *(arg1 + 0xc) = ((1 << (0xfffffffe + (((0x20 * 0) + temp0) << 1))) | *(arg1 + 0xc));
    sub_1eb0(5);
    int32_t r8 = *(arg1 + 0x10);
    *(arg1 + 0xc) = (*(arg1 + 0xc) & (!r6));
    *(arg1 + 0xc) = ((2 << (0xfffffffe + (((0x20 * 0) + temp0) << 1))) | *(arg1 + 0xc));
    sub_1eb0(5);
    int32_t r0_10 = *(arg1 + 0x10);
    *(arg1 + 0xc) = (*(arg1 + 0xc) & (!r6));
    *(arg1 + 0xc) = *(arg1 + 0xc);
    if (((r0_10 | r8) & arg2) == 0)
    {
        return 0;
    }
    int32_t r0_11 = 2;
    if ((r0_10 & arg2) != 0)
    {
        r0_11 = 1;
    }
    if ((r8 & arg2) == 0)
    {
        r0_11 = 2;
    }
    return r0_11;
}

int16_t* sub_178c(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r0;
    if (arg1 == 0x40005c00)
    {
        r0 = 0x800000;
    }
    if (arg1 == 0x40005800)
    {
        r0 = 0x400000;
    }
    if (arg1 == 0x40005400)
    {
        r0 = 0x200000;
    }
    if (((arg1 == 0x40005c00 || arg1 == 0x40005800) || arg1 == 0x40005400))
    {
        sub_2558(r0, 1);
    }
    sub_23e0(arg1, 0);
    int32_t var_28 = arg2;
    int32_t var_24 = 0xbfff0000;
    int16_t var_20 = (arg3 << 1);
    int16_t var_1e = 0x400;
    int16_t var_1c = 0x4000;
    sub_230e(arg1, &var_28);
    sub_23e0(arg1, 1);
    return arg1;
}

int32_t sub_1816(int16_t* arg1, int32_t arg2, char* arg3, uint32_t arg4, uint8_t* arg5, uint32_t arg6)
{
    int32_t lr;
    int32_t var_4 = lr;
    if (sub_1864(arg1, arg2, arg3, arg4, arg5, arg6) == 0)
    {
        return 0;
    }
    sub_1a18(arg1);
    sub_1eb0(5);
    /* tailcall */
    return sub_1864(arg1, arg2, arg3, arg4, arg5, arg6);
}

uint32_t sub_1864(int16_t* arg1, int32_t arg2, char* arg3, uint32_t arg4, uint8_t* arg5, uint32_t arg6)
{
    uint32_t i_2 = arg4;
    char* r10 = arg3;
    int32_t r5 = *0x200012b0;
    if (sub_2460(arg1, "%u %u %u\n") == 1)
    {
        int32_t i;
        do
        {
            if ((*0x200012b0 + (0xfffffffb - r5)) >= 0)
            {
                sub_1a18(arg1);
                sub_1eb0(2);
                break;
            }
            i = sub_2460(arg1, "%u %u %u\n");
        } while (i == 1);
    }
    int32_t r5_2 = *0x200012b0;
    int32_t r0_6 = sub_2460(arg1, "%u %u %u\n");
    if (r0_6 == 1)
    {
        while ((*0x200012b0 + (0xfffffffb - r5_2)) <= 0xffffffff)
        {
            if (sub_2460(arg1, "%u %u %u\n") != 1)
            {
                break;
            }
        }
    }
    if ((r0_6 != 1 || (r0_6 == 1 && (*0x200012b0 + (0xfffffffb - r5_2)) <= 0xffffffff)))
    {
        uint32_t i_3 = arg6;
        if ((i_3 | i_2) == 0)
        {
            int32_t r0_26 = sub_1a9e(arg1, arg2, 1);
            sub_1b6a(arg1);
            i_2 = (r0_26 >> 0x1f);
        }
        else
        {
            int32_t var_28_1;
            if (i_2 == 0)
            {
                var_28_1 = arg2;
            }
            else if (i_2 < 0)
            {
            label_1998:
                i_2 = 0xfffffff1;
            }
            else
            {
                if (sub_1a9e(arg1, arg2, 0) <= 0xffffffff)
                {
                    goto label_1a0a;
                }
                if (sub_1bb4(arg1) == 0)
                {
                    goto label_1a0a;
                }
                var_28_1 = arg2;
                uint32_t i_1;
                do
                {
                    sub_243c(arg1, *r10);
                    int32_t r5_4 = *0x200012b0;
                    if (sub_2460(arg1, 0x10000080) == 0)
                    {
                        while ((*0x200012b0 + (0xfffffffb - r5_4)) < 0)
                        {
                            if (sub_2460(arg1, 0x10000080) != 0)
                            {
                                break;
                            }
                        }
                        if ((*0x200012b0 + (0xfffffffb - r5_4)) >= 0)
                        {
                            goto label_1a0a;
                        }
                    }
                    if (sub_1bb4(arg1) == 0)
                    {
                        goto label_1a0a;
                    }
                    r10 = &r10[1];
                    i_1 = i_2;
                    i_2 = (i_2 - 1);
                } while (i_1 > 1);
            }
            if ((i_2 == 0 || (i_2 != 0 && i_2 >= 0)))
            {
                if (i_3 == 0)
                {
                label_1a0a:
                    sub_1b6a(arg1);
                }
                else
                {
                    int32_t r5_7 = (i_3 + 1);
                    if (i_3 == 0xffffffff)
                    {
                        i_3 = 1;
                    }
                    else if (i_3 < 1)
                    {
                        goto label_1998;
                    }
                    if ((sub_1a9e(arg1, var_28_1, 1) > 0xffffffff && sub_1bb4(arg1) != 0))
                    {
                        uint8_t* r6_1 = arg5;
                        if (r5_7 == 0)
                        {
                            sub_2416(arg1, 1);
                            i_2 = sub_1be8(arg1);
                            *r6_1 = i_2;
                            r6_1 = &r6_1[1];
                        }
                        else
                        {
                            i_2 = i_3;
                        }
                        if ((r5_7 != 0 || (r5_7 == 0 && i_2 >= 1)))
                        {
                            do
                            {
                                uint32_t i_4 = i_2;
                                i_2 = (i_2 - 1);
                                int32_t r1_4;
                                if (i_4 == 1)
                                {
                                    r1_4 = 0;
                                }
                                else
                                {
                                    r1_4 = 1;
                                }
                                sub_2416(arg1, r1_4);
                                *r6_1 = sub_1be8(arg1);
                                r6_1 = &r6_1[1];
                            } while ((i_2 + 1) > 1);
                        }
                        goto label_1a0a;
                    }
                    sub_1b6a(arg1);
                    i_2 = i_3;
                }
            }
        }
    }
    if ((r0_6 == 1 && (*0x200012b0 + (0xfffffffb - r5_2)) > 0xffffffff))
    {
        i_2 = 0xfffffffb;
    }
    return i_2;
}

int32_t sub_1a18(int16_t* arg1)
{
    int16_t r0 = sub_2448(arg1, 0);
    int16_t r0_2 = sub_2448(arg1, 4);
    int16_t r0_4 = sub_2448(arg1, 8);
    int16_t r0_6 = sub_2448(arg1, 0xc);
    int16_t r0_8 = sub_2448(arg1, 0x1c);
    int16_t r0_10 = sub_2448(arg1, 0x20);
    sub_2428(arg1, 1);
    sub_1f3a(0x64);
    sub_2428(arg1, 0);
    arg1[2] = r0_2;
    arg1[4] = r0_4;
    arg1[6] = r0_6;
    arg1[0xe] = r0_8;
    arg1[0x10] = r0_10;
    *arg1 = (0xfcfe & r0);
    int32_t r0_15 = (*arg1 | 1);
    *arg1 = r0_15;
    return r0_15;
}

int32_t sub_1a9e(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r9 = arg2;
    sub_23f2(arg1, 1);
    int32_t r5 = *0x200012b0;
    int32_t r0_1 = sub_2460(arg1, 0x10000001);
    if (r0_1 == 0)
    {
        while ((*0x200012b0 + (0xfffffffb - r5)) < 0)
        {
            if (sub_2460(arg1, 0x10000001) != 0)
            {
                break;
            }
        }
    }
    int32_t r0_14;
    if ((r0_1 != 0 || (r0_1 == 0 && (*0x200012b0 + (0xfffffffb - r5)) < 0)))
    {
        if (arg3 == 0)
        {
            r9 = (r9 << 1);
        }
        else if (arg3 == 1)
        {
            r9 = (1 | (r9 << 1));
        }
        sub_243c(arg1, r9);
        int32_t r6_1 = *0x200012b0;
        if (sub_2460(arg1, 0x10000002) == 0)
        {
            while ((*0x200012b0 + (0xfffffffb - r6_1)) < 0)
            {
                if (sub_2460(arg1, 0x10000002) != 0)
                {
                    break;
                }
            }
            if ((*0x200012b0 + (0xfffffffb - r6_1)) >= 0)
            {
                sub_2492(arg1, 0x10000400);
                goto label_1b5e;
            }
        }
        uint32_t var_28_1 = arg1[0xc];
        r0_14 = 0;
    }
    if ((r0_1 == 0 && (*0x200012b0 + (0xfffffffb - r5)) >= 0))
    {
        sub_243c(arg1, 0);
    label_1b5e:
        r0_14 = 0xffffffff;
    }
    return r0_14;
}

int32_t sub_1b6a(int16_t* arg1)
{
    sub_2404(arg1, 1);
    int32_t r6 = *0x200012b0;
    int32_t i = sub_2460(arg1, "%u %u %u\n");
    if (i == 1)
    {
        do
        {
            i = (*0x200012b0 + (0xfffffffb - r6));
            if (i >= 0)
            {
                break;
            }
            i = sub_2460(arg1, "%u %u %u\n");
        } while (i == 1);
    }
    return i;
}

int32_t sub_1bb4(void* arg1)
{
    int32_t r0 = sub_2460(arg1, 0x10000400);
    if (r0 == 1)
    {
        sub_2492(arg1, 0x10000400);
    }
    int32_t r0_2 = 0;
    if (r0 != 1)
    {
        r0_2 = 1;
    }
    return r0_2;
}

uint32_t sub_1be8(void* arg1)
{
    int32_t r6 = *0x200012b0;
    int32_t r0 = sub_2460(arg1, 0x10000040);
    if (r0 == 0)
    {
        while ((*0x200012b0 + (0xfffffffb - r6)) <= 0xffffffff)
        {
            if (sub_2460(arg1, 0x10000040) != 0)
            {
                break;
            }
        }
    }
    uint32_t r0_6;
    if ((r0 != 0 || (r0 == 0 && (*0x200012b0 + (0xfffffffb - r6)) <= 0xffffffff)))
    {
        r0_6 = sub_2440(arg1);
    }
    if ((r0 == 0 && (*0x200012b0 + (0xfffffffb - r6)) > 0xffffffff))
    {
        r0_6 = 0xffffffff;
    }
    return r0_6;
}

int32_t sub_1c3c(int32_t arg1, int32_t arg2) __pure
{
    int32_t r3 = (arg2 ^ arg1);
    int32_t i_1 = 0xfffffff8;
    int32_t r0;
    int32_t i;
    do
    {
        r0 = ((r3 >> 1) & 0x7fff);
        if ((r3 & 1) != 0)
        {
            r0 = (r0 ^ 0xa001);
        }
        i = i_1;
        i_1 = (i_1 + 1);
        r3 = r0;
    } while (i != 0xffffffff);
    return r0;
}

void sub_1c5c(int32_t arg1, int32_t arg2)
{
    *0x200012ac = arg2;
    *0x200012a8 = arg1;
}

int32_t sub_1c72(int32_t arg1)
{
    int32_t r1 = 0x200002a8;
    if (*0x200012ac > arg1)
    {
        r1 = (*0x200012a8 + (arg1 << 3));
    }
    return r1;
}

uint32_t sub_1c9a(int32_t arg1, char* arg2, int32_t* arg3)
{
    uint32_t r6 = *arg3;
    int32_t* r0 = sub_1c72(arg1);
    uint32_t r1 = r0[1];
    *arg3 = r1;
    if (r6 > r1)
    {
        r6 = r1;
    }
    uint32_t r1_3 = 0;
    if (((*(r0 + 6) << 0x1e) >= 0 && r6 != 0))
    {
        int32_t r2 = 0;
        do
        {
            arg2[r2] = *r0[r2];
            if ((*(r0 + 6) << 0x1c) < 0)
            {
                *r0[r2] = 0;
            }
            r2 = (r2 + 1);
        } while (r2 < r6);
        r1_3 = r6;
    }
    return r1_3;
}

uint32_t sub_1ce6(int32_t arg1, char* arg2, int32_t* arg3)
{
    uint32_t r4 = *arg3;
    int32_t* r0 = sub_1c72(arg1);
    uint32_t r1 = r0[1];
    *arg3 = r1;
    if (r4 > r1)
    {
        r4 = r1;
    }
    uint32_t r1_1 = *(r0 + 6);
    if ((r1_1 & 4) == 0)
    {
        if ((r1_1 << 0x1f) != 0)
        {
            r4 = 0;
        }
        else if (r4 != 0)
        {
            int32_t r1_3 = 0;
            do
            {
                *r0[r1_3] = arg2[r1_3];
                r1_3 = (r1_3 + 1);
            } while (r1_3 < r4);
            goto label_1d40;
        }
    }
    else if (r4 != 0)
    {
        int32_t r1_4 = 0;
        do
        {
            char* r3_2 = *r0;
            r3_2[r1_4] = (r3_2[r1_4] & (!arg2[r1_4]));
            r1_4 = (r1_4 + 1);
        } while (r1_4 < r4);
        goto label_1d40;
    }
    if (((r1_1 & 4) != 0 || ((r1_1 & 4) == 0 && (r1_1 << 0x1f) == 0)))
    {
        r4 = 0;
    label_1d40:
        *(r0 + 6) = (*(r0 + 6) | 0x8000);
    }
    return r4;
}

int32_t sub_1d4e(int32_t arg1) __pure
{
    int32_t r0 = 0;
    if (arg1 != 0)
    {
        if (arg1 == 0x52524521)
        {
            return 0;
        }
        r0 = 0;
        if (arg1 != 0x444d4321)
        {
            r0 = 1;
        }
    }
    return r0;
}

int32_t sub_1d74(int32_t* arg1, int32_t arg2, int32_t arg3, char* arg4, char* arg5)
{
    int32_t lr = *arg1;
    if (lr > 3)
    {
        goto label_1e26;
    }
    int32_t r1;
    int32_t r1_1;
    switch (lr)
    {
        case 0:
        {
            r1 = 0;
            if (arg3 == 0xfe)
            {
                *arg5 = 0;
                *arg1 = 1;
            }
            break;
        }
        case 1:
        {
            *arg1 = 0;
            if (arg3 != 0xfe)
            {
                bool cond:2_1 = arg2 == 1;
                if (arg2 == 1)
                {
                    cond:2_1 = arg3 == 4;
                }
                if (cond:2_1)
                {
                label_1df8:
                    *arg4 = arg3;
                    goto label_1e1e;
                }
                if ((arg2 == 0 && arg3 == 5))
                {
                    goto label_1df8;
                }
                bool cond:3_1 = arg2 != 2;
                if (arg2 == 2)
                {
                    cond:3_1 = arg3 != 1;
                }
                if ((!cond:3_1))
                {
                    goto label_1df8;
                }
                r1 = 0;
                *arg1 = 0;
            }
            else
            {
                r1_1 = 1;
            label_1e24:
                *arg1 = r1_1;
            label_1e26:
                r1 = 0;
            }
            break;
        }
        case 2:
        {
            if (arg3 == 0xfe)
            {
                r1_1 = 3;
                goto label_1e24;
            }
            arg4[*arg5] = arg3;
            char r1_8 = (*arg5 + 1);
            *arg5 = r1_8;
            r1 = 0;
            if (r1_8 >= 0x46)
            {
                *arg1 = 0;
            }
            break;
        }
        case 3:
        {
            r1 = 0;
            *arg1 = 0;
            if (arg3 == 4)
            {
                *arg4 = 4;
            label_1e1e:
                *arg5 = 1;
                r1_1 = 2;
                goto label_1e24;
            }
            if (arg3 == 0x40)
            {
                r1 = 1;
            }
            else if (arg3 == 0xfe)
            {
                arg4[*arg5] = 0xfe;
                int32_t r2 = 2;
                char r1_4 = (*arg5 + 1);
                *arg5 = r1_4;
                if (r1_4 > 0x45)
                {
                    r2 = 0;
                }
                *arg1 = r2;
                goto label_1e26;
            }
            break;
        }
    }
    return r1;
}

int32_t sub_1e38() __pure
{
    return 0;
}

int32_t sub_1e3c() __noreturn
{
    sub_3ebc(0x20000000, "BOOT|?", 0x2e4);
    sub_3e98(0x200002e4, 0, 0xfe4);
    sub_c32();
    /* no return */
}

void sub_1ea8(int32_t* arg1)
{
    *arg1 = (*arg1 + 1);
}

int32_t sub_1eb0(int32_t arg1)
{
    int32_t r0 = (arg1 + *0x200012b0);
    if ((*0x200012b0 - r0) > 0xffffffff)
    {
        return r0;
    }
    do
    {
        __wfi();
    } while ((*0x200012b0 - r0) < 0);
    return r0;
}

int32_t sub_1ed4()
{
    void var_20;
    sub_2498(&var_20);
    sub_2558(0x10, 1);
    int32_t var_18;
    sub_2570(0x40001000, (-1 + ((var_18 / 0xf4240) << 1)), 1);
    sub_257a(0x40001000, 0xffff);
    sub_2582(0x40001000, 1);
    sub_25a8(0x40001000, 1);
    sub_2594(0x40001000, 1);
    return 0x40001000;
}

int32_t sub_1f3a(int32_t arg1)
{
    sub_2576(0x40001000, 0);
    int32_t r0;
    do
    {
        r0 = sub_257e(0x40001000);
    } while (r0 < arg1);
    return r0;
}

int32_t sub_1f5c(int32_t arg1)
{
    *0x40023800 = (*0x40023800 | 1);
    *0x40023808 = 0;
    *0x40023800 = (0xfef6ffff & *0x40023800);
    *0x40023804 = 0x24003010;
    *0x40023800 = (*0x40023800 & 0xfffbffff);
    *0x4002380c = 0;
    if (arg1 == 0)
    {
        *0x40023800 = (*0x40023800 | 0x40000);
    }
    int32_t i = 0;
    int32_t var_10 = 0;
    *0x40023800 = (*0x40023800 | 0x10000);
    do
    {
        i = (i + 1);
        if ((*0x40023800 & "%u %u %u\n") != 0)
        {
            break;
        }
    } while (i != 0x5000);
    int32_t r0_11;
    if ((*0x40023800 & "%u %u %u\n") == 0)
    {
        r0_11 = 0;
    }
    else
    {
        r0_11 = 1;
    }
    int32_t r0_12 = r0_11;
    if (r0_12 == 1)
    {
        *0x40023840 = (*0x40023840 | 0x10000000);
        *0x40007000 = (*0x40007000 | sub_4000);
        *0x40023808 = *0x40023808;
        *0x40023808 = (*0x40023808 | 0x8000);
        *0x40023808 = (*0x40023808 | 0x1400);
        *0x40023804 = 0x7405418;
        *0x40023800 = (*0x40023800 | 0x1000000);
        while ((*0x40023800 & 0x2000000) == 0)
        {
            /* nop */
        }
        *0x40023c00 = 0x605;
        *0x40023808 = (*0x40023808 & 0xfffffffc);
        *0x40023808 = (*0x40023808 | 2);
        while ((*0x40023808 & 0xc) != 8)
        {
            /* nop */
        }
        r0_12 = (*0x40023800 & 0xfffffffe);
        *0x40023800 = r0_12;
    }
    *0xe000ed08 = 0x8000000;
    return r0_12;
}

uint32_t sub_2076()
{
    int32_t r2 = (*0x40023808 & 0xc);
    uint32_t r1_1 = 0xf42400;
    if (r2 == 8)
    {
        int32_t r3_1 = 0x16e3600;
        if ((*0x40023804 & 0x400000) == 0)
        {
            r3_1 = 0xf42400;
        }
        r1_1 = ((((*0x40023804 >> 6) & 0x1ff) * (r3_1 / (*0x40023804 & 0x3f))) / (2 + (((*0x40023804 >> 0x10) & 3) << 1)));
    }
    else if (r2 == 4)
    {
        r1_1 = 0x16e3600;
    }
    *0x200002b0 = r1_1;
    uint32_t r0_3 = (r1_1 >> *(0x41ec + ((*0x40023808 >> 4) & 0xf)));
    *0x200002b0 = r0_3;
    return r0_3;
}

void sub_20f6(int32_t arg1)
{
    *0x40013c14 = arg1;
}

void sub_2102()
{
    if (*0x40023c10 > 0xffffffff)
    {
        return;
    }
    *0x40023c04 = 0x45670123;
    *0x40023c04 = 0xcdef89ab;
}

void sub_212a()
{
    *0x40023c10 = (*0x40023c10 | 0x80000000);
}

int32_t sub_213c(int32_t arg1, int32_t arg2)
{
    int32_t r0 = sub_21a4();
    if (r0 == 8)
    {
        *0x40023c10 = (*0x40023c10 & 0xfffffcff);
        int32_t r0_3 = 0x300;
        if (arg2 < 3)
        {
            r0_3 = (arg2 << 8);
        }
        *0x40023c10 = (r0_3 | *0x40023c10);
        *0x40023c10 = (*0x40023c10 & 0xffffff07);
        *0x40023c10 = ((*0x40023c10 | arg1) | 2);
        *0x40023c10 = (*0x40023c10 | 0x10000);
        r0 = sub_21a4();
        *0x40023c10 = (*0x40023c10 & 0xfffffffd);
        *0x40023c10 = (*0x40023c10 & 0xffffff07);
    }
    return r0;
}

int32_t sub_21a4()
{
    int32_t var_c = 8;
    int32_t i;
    do
    {
        i = sub_2214();
    } while (i == 1);
    return i;
}

int32_t sub_21c0(int32_t* arg1, int32_t arg2)
{
    int32_t r0 = sub_21a4();
    if (r0 == 8)
    {
        *0x40023c10 = (*0x40023c10 & 0xfffffcff);
        *0x40023c10 = (*0x40023c10 | 0x200);
        *0x40023c10 = (*0x40023c10 | 1);
        *arg1 = arg2;
        r0 = sub_21a4();
        *0x40023c10 = (*0x40023c10 & 0xfffffffe);
    }
    return r0;
}

void sub_2208(int32_t arg1)
{
    *0x40023c0c = arg1;
}

int32_t sub_2214()
{
    if ((*0x40023c0c & 0x10000) != 0)
    {
        return 1;
    }
    if ((*0x40023c0c & 0x10) != 0)
    {
        return 5;
    }
    int32_t r0_2;
    if ((*0x40023c0c & 0xef) != 0)
    {
        r0_2 = 6;
    }
    else
    {
        r0_2 = (8 - ((*0x40023c0c >> 1) & 1));
    }
    return r0_2;
}

void sub_224c(int32_t* arg1, int32_t* arg2)
{
    int32_t r8 = *arg2;
    int32_t r3 = 0;
    int32_t i = 0;
    do
    {
        int32_t r10_1 = (1 << i);
        if ((r8 & r10_1) != 0)
        {
            int32_t r6_1 = (3 << r3);
            int32_t r6_2 = (!r6_1);
            *arg1 = (*arg1 & (!r6_1));
            int32_t r2_3 = arg2[1];
            *arg1 = (*arg1 | (r2_3 << r3));
            if ((r2_3 - 1) <= 1)
            {
                arg1[2] = (arg1[2] & r6_2);
                arg1[2] = ((arg2[2] << r3) | arg1[2]);
                arg1[1] = (arg1[1] & (!r10_1));
                arg1[1] = ((arg2[3] << i) | arg1[1]);
            }
            arg1[3] = (arg1[3] & r6_2);
            arg1[3] = ((arg2[4] << r3) | arg1[3]);
        }
        i = (i + 1);
        r3 = (r3 + 2);
    } while (i != 0x10);
}

void sub_22d4(void* arg1, int16_t arg2)
{
    *(arg1 + 0x18) = arg2;
}

void sub_22d8(void* arg1, int16_t arg2)
{
    *(arg1 + 0x1a) = arg2;
}

void* sub_22de(void* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r12 = (0x1c & (arg2 << 2));
    void* r0 = (arg1 + (0x7ffc & (arg2 >> 1)));
    *(r0 + 0x20) = (*(r0 + 0x20) & (!(0xf << r12)));
    *(r0 + 0x20) = ((arg3 << r12) | *(r0 + 0x20));
    return r0;
}

uint32_t sub_230e(int16_t* arg1, int32_t* arg2)
{
    int16_t r6 = arg1[2];
    void var_28;
    sub_2498(&var_28);
    int32_t var_20;
    arg1[2] = ((r6 & 0xffc0) | (var_20 / 0xf4240));
    *arg1 = (*arg1 & 0xfffe);
    uint32_t r0_6 = (var_20 / 0xf4240);
    int32_t r2_1 = *arg2;
    uint32_t r1_1;
    if (r2_1 <= 0x186a0)
    {
        r1_1 = (var_20 / (r2_1 << 1));
        if ((0xfffc & r1_1) < 4)
        {
            r1_1 = 4;
        }
    }
    else
    {
        uint32_t r1_2;
        if (*(arg2 + 6) != 0xbfff)
        {
            r1_2 = ((var_20 / (0x19 * r2_1)) | sub_4000);
        }
        else
        {
            r1_2 = (var_20 / (r2_1 * 3));
        }
        if ((r1_2 & 0xfff) == 0)
        {
            r1_2 = (r1_2 | 1);
        }
        r1_1 = (r1_2 | 0x8000);
        r0_6 = ((0x12c * r0_6) / 0x3e8);
    }
    arg1[0x10] = (r0_6 + 1);
    arg1[0xe] = r1_1;
    *arg1 = (*arg1 | 1);
    *arg1 = (((*arg1 & 0xfbf5) | arg2[1]) | *(arg2 + 0xa));
    uint32_t r0_17 = (arg2[3] | arg2[2]);
    arg1[4] = r0_17;
    return r0_17;
}

void sub_23e0(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 1);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfffe);
    }
    *arg1 = r3;
}

void sub_23f2(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 0x100);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfeff);
    }
    *arg1 = r3;
}

void sub_2404(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 0x200);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfdff);
    }
    *arg1 = r3;
}

void sub_2416(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 0x400);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfbff);
    }
    *arg1 = r3;
}

void sub_2428(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3_1 = (r2 & 0x7fff);
    if (arg2 != 0)
    {
        r3_1 = (r2 | 0x8000);
    }
    *arg1 = r3_1;
}

void sub_243c(void* arg1, int16_t arg2)
{
    *(arg1 + 0x10) = arg2;
}

uint32_t sub_2440(void* arg1)
{
    return *(arg1 + 0x10);
}

uint32_t sub_2448(void* arg1, int32_t arg2)
{
    int32_t var_4 = 0;
    return *(arg1 + arg2);
}

int32_t sub_2460(void* arg1, int32_t arg2)
{
    int32_t var_4 = 0;
    int32_t var_8 = 0;
    uint32_t r0_1 = (arg2 & 0xffffff);
    int32_t* r1_2;
    if ((arg2 >> 0x1c) == 0)
    {
        r0_1 = (r0_1 >> 0x10);
        r1_2 = (arg1 + 0x18);
    }
    else
    {
        r1_2 = (arg1 + 0x14);
    }
    int32_t r0_2 = (r0_1 & *r1_2);
    if (r0_2 != 0)
    {
        r0_2 = 1;
    }
    return r0_2;
}

void sub_2492(void* arg1, int32_t arg2)
{
    *(arg1 + 0x14) = (!arg2);
}

void sub_2498(int32_t* arg1)
{
    int32_t r3 = (*0x40023808 & 0xc);
    uint32_t r2_1 = 0xf42400;
    if (r3 == 8)
    {
        int32_t r3_1 = 0x16e3600;
        if ((*0x40023804 & 0x400000) == 0)
        {
            r3_1 = 0xf42400;
        }
        r2_1 = ((((*0x40023804 >> 6) & 0x1ff) * (r3_1 / (*0x40023804 & 0x3f))) / (2 + (((*0x40023804 >> 0x10) & 3) << 1)));
    }
    else if (r3 == 4)
    {
        r2_1 = 0x16e3600;
    }
    *arg1 = r2_1;
    uint32_t r2_6 = (r2_1 >> *(0x41fc + ((*0x40023808 >> 4) & 0xf)));
    arg1[1] = r2_6;
    arg1[2] = (r2_6 >> *(0x41fc + ((*0x40023808 >> 0xa) & 7)));
    arg1[3] = (r2_6 >> *(0x41fc + ((*0x40023808 >> 0xd) & 7)));
}

int32_t sub_2540(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023830;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023830 = r0;
    return r0;
}

int32_t sub_2558(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023840;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023840 = r0;
    return r0;
}

void sub_2570(void* arg1, int16_t arg2, int16_t arg3)
{
    *(arg1 + 0x28) = arg2;
    *(arg1 + 0x14) = arg3;
}

void sub_2576(void* arg1, int32_t arg2)
{
    *(arg1 + 0x24) = arg2;
}

void sub_257a(void* arg1, int32_t arg2)
{
    *(arg1 + 0x2c) = arg2;
}

int32_t sub_257e(void* arg1)
{
    return *(arg1 + 0x24);
}

void sub_2582(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 2);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfffd);
    }
    *arg1 = r3;
}

void sub_2594(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 1);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfffe);
    }
    *arg1 = r3;
}

void sub_25a8(void* arg1, int32_t arg2)
{
    *(arg1 + 0x10) = (!arg2);
}

int32_t sub_25b0(int32_t arg1, char* arg2)
{
    sub_3e98(&arg2[0x11], 0, 0xef);
    char r1 = -0x65;
    arg2[1] = 4;
    *arg2 = 0x24;
    arg2[3] = ((arg1 | 0x2500) >> 8);
    arg2[2] = arg1;
    int32_t r0_4 = 0;
    if ((arg1 - 0x15) < 3)
    {
        r0_4 = 0xba0;
    }
    arg2[4] = r0_4;
    if (arg1 == 0x12)
    {
        r1 = -0x75;
    }
    arg2[6] = r1;
    arg2[7] = 0x20;
    arg2[8] = 2;
    char r1_1 = 0;
    arg2[9] = 0;
    if (arg1 == 0x12)
    {
        r1_1 = 8;
    }
    arg2[0xa] = r1_1;
    arg2[0xb] = r1_1;
    arg2[0xc] = 1;
    arg2[0xd] = 0x32;
    arg2[0xe] = 1;
    arg2[0xf] = 0x32;
    arg2[0x10] = 0x32;
    arg2[5] = (r0_4 >> 8);
    return 0;
}

int32_t sub_2634(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    arg1[2] = arg3;
    *arg1 = arg2;
    arg1[4] = arg4;
    arg1[3] = (arg3 >> 8);
    arg1[1] = (arg2 >> 8);
    arg1[5] = (arg4 >> 8);
    return 0;
}

int32_t sub_264a(void* arg1, char* arg2)
{
    int32_t r0_1 = sub_3ea6(arg2);
    if (r0_1 >= 0x1f)
    {
        r0_1 = 0x1f;
    }
    if (r0_1 != 0)
    {
        uint32_t r6_1 = 0;
        int32_t r4_1 = 0;
        do
        {
            r4_1 = (r4_1 + 1);
            (arg1 + 0x16)[(r6_1 << 1)] = arg2[r6_1];
            int32_t r2_2 = (1 | (r6_1 << 1));
            r6_1 = r4_1;
            (arg1 + 0x16)[r2_2] = 0;
        } while (r0_1 > r6_1);
    }
    *(arg1 + 0x13) = r0_1;
    return 0;
}

int32_t sub_2694(void* arg1, char* arg2)
{
    int32_t r0_1 = sub_3ea6(arg2);
    if (r0_1 >= 0x1f)
    {
        r0_1 = 0x1f;
    }
    if (r0_1 != 0)
    {
        uint32_t r6_1 = 0;
        int32_t r4_1 = 0;
        do
        {
            r4_1 = (r4_1 + 1);
            (arg1 + 0x54)[(r6_1 << 1)] = arg2[r6_1];
            int32_t r2_2 = (1 | (r6_1 << 1));
            r6_1 = r4_1;
            (arg1 + 0x54)[r2_2] = 0;
        } while (r0_1 > r6_1);
    }
    *(arg1 + 0x14) = r0_1;
    return 0;
}

int32_t sub_26e0(int16_t* arg1, int32_t arg2, int32_t* arg3)
{
    int32_t* r4 = arg3;
    uint32_t r6 = 0;
    char var_45 = 0x20;
    int16_t r0 = 0;
    int32_t r0_4;
    while (true)
    {
        char var_46 = r0;
        void var_44;
        sub_3ebc(&var_44, r4, 0x20);
        if (sub_1816(arg1, arg2, &var_46, 0x22, nullptr, 0) != 0)
        {
            r0_4 = 0xffffffff;
            break;
        }
        r0 = (r6 + 0x20);
        r4 = &r4[8];
        r6 = r0;
        if (r6 >= 0x100)
        {
            r0_4 = 0;
            break;
        }
    }
    return r0_4;
}

int32_t sub_2744(int16_t* arg1, int32_t arg2)
{
    char var_a = 1;
    int16_t var_c = 0x1ff;
    return sub_1816(arg1, arg2, &var_c, 3, nullptr, 0);
}

int32_t sub_276c(void* arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        int32_t r2_1 = *(*(arg1 + 0x65c) + 0x18);
        if ((r2_1 != 0 && *(arg1 + 0x112) == 3))
        {
            r2_1(arg1);
        }
    }
    else if (*(arg1 + 0x111) == 3)
    {
        int32_t r0_4 = *(arg1 + 0x3b8);
        int32_t r1 = *(arg1 + 0x3d0);
        if (r1 <= r0_4)
        {
            int32_t r1_2 = *(*(arg1 + 0x65c) + 0x10);
            if ((r1_2 != 0 && *(arg1 + 0x112) == 3))
            {
                r1_2(arg1);
            }
            sub_2ac0(arg1);
        }
        else
        {
            int32_t r2_2 = (r1 - r0_4);
            *(arg1 + 0x3d0) = r2_2;
            int32_t r1_1 = *(arg1 + 0x3c0);
            if (*(arg1 + 3) == 1)
            {
                r1_1 = (r1_1 + r0_4);
                *(arg1 + 0x3c0) = r1_1;
            }
            if (r2_2 < r0_4)
            {
                r0_4 = r2_2;
            }
            sub_2aae(arg1, r1_1, r0_4);
        }
    }
    return 0;
}

int32_t sub_27e2(void* arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        int32_t r2_1 = *(*(arg1 + 0x65c) + 0x14);
        if ((r2_1 != 0 && *(arg1 + 0x112) == 3))
        {
            r2_1(arg1);
        }
    }
    else
    {
        if (*(arg1 + 0x111) != 2)
        {
            int32_t r2_4 = *(*(arg1 + 0x65c) + 0x14);
            if ((r2_4 != 0 && *(arg1 + 0x112) == 3))
            {
                r2_4(arg1, 0);
            }
        }
        else
        {
            int32_t r0_4 = *(arg1 + 0x124);
            int32_t r1 = *(arg1 + 0x13c);
            if (r1 <= r0_4)
            {
                int32_t r1_2 = *(arg1 + 0x140);
                if (((r1_2 < r0_4 || (r1_2 >= r0_4 && (r1_2 % r0_4) != 0)) || ((r1_2 >= r0_4 && (r1_2 % r0_4) == 0) && r1_2 >= *(arg1 + 0x144))))
                {
                    int32_t r1_3 = *(*(arg1 + 0x65c) + 0xc);
                    if ((r1_3 != 0 && *(arg1 + 0x112) == 3))
                    {
                        r1_3(arg1);
                    }
                    sub_2ae2(arg1);
                }
                if (((r1_2 >= r0_4 && (r1_2 % r0_4) == 0) && r1_2 < *(arg1 + 0x144)))
                {
                    sub_2a7c(arg1, 0, 0);
                    *(arg1 + 0x144) = 0;
                }
            }
            else
            {
                int32_t r2_2 = (r1 - r0_4);
                *(arg1 + 0x13c) = r2_2;
                int32_t r1_1 = *(arg1 + 0x128);
                if (*(arg1 + 3) == 1)
                {
                    r1_1 = (r1_1 + r0_4);
                    *(arg1 + 0x128) = r1_1;
                }
                sub_2a7c(arg1, r1_1, r2_2);
            }
        }
        if (*(arg1 + 0x116) == 1)
        {
            *(*(arg1 + 0x10) + 4) = *0x200012b4;
            *(arg1 + 0x116) = 0;
        }
    }
    return 0;
}

int32_t sub_28b4(void* arg1)
{
    char var_18;
    sub_2e42(arg1, &var_18);
    uint32_t r0 = var_18;
    int32_t r1_1 = (r0 & 0x60);
    bool cond:0 = r1_1 == 0x40;
    if (r1_1 != 0x40)
    {
        cond:0 = r1_1 == 0x20;
    }
    if (cond:0)
    {
        *(*(arg1 + 0x65c) + 8)(arg1, &var_18);
    }
    else
    {
        int32_t r1_2;
        if (r1_1 == 0)
        {
            r1_2 = (r0 & 3);
            if (r1_2 == 2)
            {
                sub_2da0(arg1, &var_18);
            }
            if (r1_2 == 1)
            {
                sub_2d64(arg1, &var_18);
            }
            if (r1_2 == 0)
            {
                sub_2b04(arg1, &var_18);
            }
        }
        if ((r1_1 != 0 || (((r1_1 == 0 && r1_2 != 2) && r1_2 != 1) && r1_2 != 0)))
        {
            sub_3d88(arg1, (r0 & 0x80));
        }
    }
    return 0;
}

int32_t sub_291e(void* arg1)
{
    int32_t r1 = *(*(arg1 + 0x65c) + 0x1c);
    if (r1 != 0)
    {
        r1();
    }
    return 0;
}

int32_t sub_2934(void* arg1)
{
    sub_3c82(arg1, 0, 0x40, 0);
    sub_3c82(arg1, 0x80, 0x40, 0);
    *(arg1 + 0x112) = 1;
    *(*(arg1 + 0x660) + 4)(*(arg1 + 2));
    return 0;
}

int32_t sub_2964(void* arg1)
{
    *(arg1 + 0x113) = *(arg1 + 0x112);
    *(arg1 + 0x112) = 4;
    *(*(arg1 + 0x660) + 0xc)();
    return 0;
}

int32_t sub_2982(void* arg1)
{
    *(*(arg1 + 0x660) + 0x10)();
    *(arg1 + 0x112) = 3;
    return 0;
}

int32_t sub_299a(void* arg1)
{
    *(*(arg1 + 0x65c) + 0x20)();
    return 0;
}

int32_t sub_29aa(void* arg1)
{
    *(*(arg1 + 0x65c) + 0x24)();
    return 0;
}

int32_t sub_29ba(void* arg1)
{
    *(*(arg1 + 0x660) + 0x14)();
    *(arg1 + 0x115) = 1;
    return 0;
}

int32_t sub_29d2(void* arg1)
{
    *(*(arg1 + 0x660) + 0x18)();
    *(*(arg1 + 0x65c) + 4)(arg1, 0);
    *(arg1 + 0x115) = 0;
    return 0;
}

int32_t sub_29f6(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    sub_1150();
    *(arg1 + 0x660) = arg4;
    *(arg1 + 0x65c) = arg3;
    sub_3bf8(arg1);
    **(arg1 + 0x660)();
    /* tailcall */
    return sub_128c();
}

int32_t sub_2a30(void* arg1)
{
    **(arg1 + 0x65c)(arg1);
    *(*(arg1 + 0x660) + 8)();
    return 0;
}

int32_t sub_2a4c(void* arg1)
{
    *(*(arg1 + 0x65c) + 4)();
    return 0;
}

int32_t sub_2a5c(void* arg1, int32_t arg2, int32_t arg3)
{
    *(arg1 + 0x13c) = arg3;
    *(arg1 + 0x140) = arg3;
    *(arg1 + 0x111) = 2;
    sub_3d44(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_2a7c(void* arg1, int32_t arg2, int32_t arg3)
{
    sub_3d44(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_2a8e(void* arg1, int32_t arg2, int32_t arg3)
{
    *(arg1 + 0x3d0) = arg3;
    *(arg1 + 0x3d4) = arg3;
    *(arg1 + 0x111) = 3;
    sub_3cfa(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_2aae(void* arg1, int32_t arg2, int32_t arg3)
{
    sub_3cfa(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_2ac0(void* arg1)
{
    *(arg1 + 0x111) = 4;
    sub_3d44(arg1, 0, 0, 0);
    sub_36c8(arg1);
    return 0;
}

int32_t sub_2ae2(void* arg1)
{
    *(arg1 + 0x111) = 5;
    sub_3cfa(arg1, 0, 0, 0);
    sub_36c8(arg1);
    return 0;
}

int32_t sub_2b04(void* arg1, void* arg2)
{
    uint32_t r0 = *(arg2 + 1);
    if (r0 > 9)
    {
    label_2cca:
        sub_2d46(arg1);
    }
    else
    {
        int32_t r0_8;
        uint32_t r0_9;
        if (jump_table_2b1a[r0] == 0x26)
        {
            r0_9 = *(arg2 + 2);
            if (r0_9 == 1)
            {
                r0_8 = 1;
            }
            if (r0_9 == 2)
            {
                uint32_t r0_24 = *(arg2 + 4);
                if ((r0_24 & 0xff) == 0)
                {
                    uint32_t r1_5 = (-1 + (r0_24 >> 8));
                    int32_t r0_27 = *(*(arg1 + 0x10) + 4);
                    if (r1_5 <= 4)
                    {
                        r0_27 = ((r0_27 & 0xffffff8f) | (0x10 + (r1_5 << 4)));
                    }
                    *0x200012b4 = r0_27;
                    *(arg1 + 0x116) = 1;
                    goto label_2d40;
                }
            }
        }
        if (((jump_table_2b1a[r0] == 0x19 && (*(arg1 + 0x112) & 0xfe) == 2) && *(arg2 + 2) == 1))
        {
            r0_8 = 0;
        }
        if ((((jump_table_2b1a[r0] == 0x19 && (*(arg1 + 0x112) & 0xfe) == 2) && *(arg2 + 2) == 1) || (jump_table_2b1a[r0] == 0x26 && r0_9 == 1)))
        {
            *(arg1 + 0x118) = r0_8;
            *(*(arg1 + 0x65c) + 8)(arg1, arg2);
        label_2d40:
            sub_2ac0(arg1);
        }
        if ((jump_table_2b1a[r0] == 0x19 && (*(arg1 + 0x112) & 0xfe) != 2))
        {
            goto label_2cca;
        }
        void* r0_4;
        void* r1;
        uint32_t r2_1;
        switch (jump_table_2b1a[r0])
        {
            case 5:
            {
                if ((*(arg1 + 0x112) & 0xfe) != 2)
                {
                    goto label_2cca;
                }
                int32_t r0_3 = *(arg1 + 0x118);
                r2_1 = 2;
                r1 = 0x200012c4;
                if (r0_3 != 0)
                {
                    r0_3 = 2;
                }
                *0x200012c4 = r0_3;
                r0_4 = arg1;
                goto label_2d28;
            }
            case 0x36:
            {
                if (*(arg2 + 4) != 0)
                {
                    goto label_2cca;
                }
                if (*(arg2 + 6) != 0)
                {
                    goto label_2cca;
                }
                if (*(arg1 + 0x112) == 3)
                {
                    goto label_2cca;
                }
                int32_t r5_1 = (*(arg2 + 2) & 0x7f);
                *(arg1 + 0x114) = r5_1;
                sub_3e00(arg1, r5_1);
                sub_2ac0(arg1);
                char r0_18 = 2;
                if (r5_1 == 0)
                {
                    r0_18 = 1;
                }
                *(arg1 + 0x112) = r0_18;
                break;
            }
            case 0x56:
            {
                uint32_t r1_3 = *(arg2 + 2);
                if ((0xffffffff + (r1_3 >> 8)) > 6)
                {
                    goto label_2cca;
                }
                uint16_t var_16;
                uint32_t r0_32;
                int32_t r3_1;
                switch (*((r1_3 >> 8) + 0x2bd9))
                {
                    case 4:
                    {
                        r1 = &data_4150;
                        break;
                    }
                    case 0x4b:
                    {
                        r3_1 = *(*(arg1 + 0x65c) + 0x28);
                        break;
                    }
                    case 0x59:
                    {
                        uint32_t r0_33 = r1_3;
                        if (7 <= r0_33)
                        {
                            goto label_2cca;
                        }
                        r1 = *(0x2000028c + (r0_33 << 2));
                        if (r1 == 0)
                        {
                            goto label_2cca;
                        }
                        r0_32 = *r1;
                        if (r0_32 == 0)
                        {
                            goto label_2cca;
                        }
                        var_16 = r0_32;
                    label_2d16:
                        r2_1 = *(arg2 + 6);
                        if (r2_1 != 0)
                        {
                            if (r0_32 < r2_1)
                            {
                                r2_1 = r0_32;
                            }
                            r0_4 = arg1;
                            var_16 = r2_1;
                            goto label_2d28;
                        }
                        break;
                    }
                    case 0x6d:
                    {
                        if (*(arg1 + 2) != 0)
                        {
                            goto label_2cca;
                        }
                        r1 = &data_41a5;
                        break;
                    }
                    case 0x75:
                    {
                        if (*(arg1 + 2) != 0)
                        {
                            goto label_2cca;
                        }
                        break;
                    }
                    case 0x77:
                    {
                        goto label_2cca;
                    }
                }
                if ((*((r1_3 >> 8) + 0x2bd9) == 4 || *((r1_3 >> 8) + 0x2bd9) == 0x6d))
                {
                    r0_32 = *r1;
                }
                if ((*((r1_3 >> 8) + 0x2bd9) == 0x4b && r3_1 != 0))
                {
                    r1 = r3_1(*(arg1 + 2), r1_3, &var_16);
                    r0_32 = var_16;
                }
                if (((*((r1_3 >> 8) + 0x2bd9) == 0x4b && r3_1 == 0) || *((r1_3 >> 8) + 0x2bd9) == 0x75))
                {
                    r1 = &data_4162;
                    r0_32 = 0x43;
                }
                if ((((*((r1_3 >> 8) + 0x2bd9) == 4 || *((r1_3 >> 8) + 0x2bd9) == 0x6d) || (*((r1_3 >> 8) + 0x2bd9) == 0x4b && r3_1 == 0)) || *((r1_3 >> 8) + 0x2bd9) == 0x75))
                {
                    var_16 = r0_32;
                }
                if (((((((*((r1_3 >> 8) + 0x2bd9) == 0x4b && r3_1 != 0) || *((r1_3 >> 8) + 0x2bd9) == 4) || *((r1_3 >> 8) + 0x2bd9) == 0x6d) || (*((r1_3 >> 8) + 0x2bd9) == 0x4b && r3_1 == 0)) || *((r1_3 >> 8) + 0x2bd9) == 0x75) && r0_32 != 0))
                {
                    goto label_2d16;
                }
                break;
            }
            case 0x69:
            {
                if (*(arg2 + 6) != 1)
                {
                    goto label_2cca;
                }
                uint32_t r0_21 = *(arg1 + 0x112);
                if (r0_21 == 3)
                {
                    r1 = (arg1 + 0x110);
                }
                else
                {
                    if (r0_21 != 2)
                    {
                        goto label_2cca;
                    }
                    r1 = 0x200012c0;
                }
                r0_4 = arg1;
                r2_1 = 1;
            label_2d28:
                sub_2a5c(r0_4, r1, r2_1);
                break;
            }
            case 0x77:
            {
                char r0_22 = *(arg2 + 2);
                uint32_t r1_4 = r0_22;
                *0x200012bc = r0_22;
                if (r1_4 >= 2)
                {
                    goto label_2cca;
                }
                uint32_t r0_23 = *(arg1 + 0x112);
                if (r0_23 == 3)
                {
                    if (r1_4 == 0)
                    {
                        *(arg1 + 0x110) = r1_4;
                        *(arg1 + 0x112) = 2;
                        sub_2a4c(arg1);
                        goto label_2d40;
                    }
                    if (r1_4 == *(arg1 + 0x110))
                    {
                        goto label_2d40;
                    }
                    sub_2a4c(arg1);
                    r1_4 = *0x200012bc;
                }
                else
                {
                    if (r0_23 != 2)
                    {
                        goto label_2cca;
                    }
                    if (r1_4 == 0)
                    {
                        goto label_2d40;
                    }
                    *(arg1 + 0x112) = 3;
                }
                *(arg1 + 0x110) = r1_4;
                sub_2a30(arg1);
                goto label_2d40;
            }
            case 0xd7:
            {
                goto label_2cca;
            }
        }
    }
    return 0;
}

int32_t sub_2d46(int32_t arg1)
{
    sub_3d88(arg1, 0x80);
    sub_3d88(arg1, 0);
    /* tailcall */
    return sub_36c8(arg1);
}

int32_t sub_2d64(void* arg1, void* arg2)
{
    if ((*(arg1 + 0x112) != 3 || (*(arg1 + 0x112) == 3 && (*(arg2 + 4) & 0xfe) > 1)))
    {
        sub_2d46(arg1);
    }
    if ((*(arg1 + 0x112) == 3 && (*(arg2 + 4) & 0xfe) <= 1))
    {
        *(*(arg1 + 0x65c) + 8)(arg1, arg2);
        if (*(arg2 + 6) == 0)
        {
            sub_2ac0(arg1);
        }
    }
    return 0;
}

int32_t sub_2da0(void* arg1, void* arg2)
{
    uint32_t r0 = *(arg1 + 0x112);
    uint32_t r1 = *(arg2 + 4);
    if (r0 == 3)
    {
        uint32_t r0_3 = *(arg2 + 1);
        if (r0_3 == 0)
        {
            void* r0_10 = (((arg1 + 0x110) + ((r1 & 0x7f) * 0x2c)) + 0xc);
            if ((r1 & 0x80) == 0)
            {
                r0_10 = (((arg1 + 0x110) + (r1 * 0x2c)) + 0x2a0);
            }
            uint32_t r0_11 = *(r0_10 + 2);
            if (r0_11 != 0)
            {
                r0_11 = 1;
            }
            *0x200012b8 = r0_11;
            sub_2a5c(arg1, 0x200012b8, 2);
        }
        else
        {
            if (((r0_3 == 1 && *(arg2 + 2) == 0) && (r1 | 0x80) != 0x80))
            {
                sub_3dc4(arg1, r1);
            }
            if ((r0_3 == 3 && ((r1 << 0x19) != 0 && *(arg2 + 2) == 0)))
            {
                sub_3d88(arg1, r1);
            }
            if (((r0_3 == 1 && *(arg2 + 2) == 0) || r0_3 == 3))
            {
                sub_2ac0(arg1);
            }
        }
    }
    else if (r0 != 2)
    {
        sub_2d46(arg1);
    }
    else if ((r1 << 0x19) != 0)
    {
        sub_3d88(arg1, r1);
    }
    return 0;
}

void sub_2e42(void* arg1, char* arg2)
{
    *arg2 = *(arg1 + 0x644);
    arg2[1] = *(arg1 + 0x645);
    *(arg2 + 2) = (*(arg1 + 0x646) | (*(arg1 + 0x647) << 8));
    *(arg2 + 4) = (*(arg1 + 0x648) | (*(arg1 + 0x649) << 8));
    int32_t r2_6 = (*(arg1 + 0x64a) | (*(arg1 + 0x64b) << 8));
    *(arg2 + 6) = r2_6;
    *(arg1 + 0x111) = 1;
    *(arg1 + 0x144) = r2_6;
}

int32_t sub_2e86() __pure
{
    return;
}

void sub_2e88(int32_t arg1)
{
    int32_t i_1 = arg1;
    if (i_1 != 0)
    {
        int32_t i;
        do
        {
            sub_1eb0(1);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
}

int32_t sub_2e9c(void* arg1, char* arg2, int32_t arg3, int32_t arg4)
{
    if ((*(arg1 + 3) == 0 && arg4 != 0))
    {
        int32_t i = (arg4 + 4);
        int32_t* r0_1 = *((arg1 + (arg3 << 2)) + 0xd0);
        do
        {
            i = (i - 4);
            int32_t var_14;
            void* r3_3;
            if (i == 1)
            {
                r3_3 = &var_14;
            }
            else
            {
                void* r3_2;
                if (i == 2)
                {
                    r3_2 = &var_14;
                }
                else
                {
                    char* r3;
                    if (i == 3)
                    {
                        r3 = &var_14;
                    }
                    else
                    {
                        char r3_1 = *arg2;
                        arg2 = &arg2[1];
                        var_14 = r3_1;
                        r3 = (&var_14 | 1);
                    }
                    char r4_1 = *arg2;
                    arg2 = &arg2[1];
                    *r3 = r4_1;
                    r3_2 = &r3[1];
                }
                char r4_2 = *arg2;
                arg2 = &arg2[1];
                *r3_2 = r4_2;
                r3_3 = (r3_2 + 1);
            }
            char r4_3 = *arg2;
            arg2 = &arg2[1];
            *r3_3 = r4_3;
            *r0_1 = var_14;
        } while (i > 4);
    }
    return 0;
}

char* sub_2f04(void* arg1, char* arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        int32_t* r0 = *(arg1 + 0xd0);
        int32_t i = (arg3 + 4);
        do
        {
            uint32_t r3_1 = *r0;
            i = (i - 4);
            uint32_t var_14 = r3_1;
            char* r4_2;
            if (i == 2)
            {
                r4_2 = &var_14;
            }
            else
            {
                uint32_t* r4_1;
                if (i == 3)
                {
                    r4_1 = &var_14;
                }
                else
                {
                    if (i == 1)
                    {
                        *arg2 = r3_1;
                        arg2 = &arg2[1];
                        break;
                    }
                    *arg2 = r3_1;
                    arg2 = &arg2[1];
                    r4_1 = (&var_14 | 1);
                    r3_1 = *var_14[1];
                }
                *arg2 = r3_1;
                arg2 = &arg2[1];
                r4_2 = (r4_1 + 1);
                r3_1 = *r4_2;
            }
            *arg2 = r3_1;
            arg2[1] = r4_2[1];
            arg2 = &arg2[2];
        } while (i > 4);
    }
    return arg2;
}

int32_t sub_2f5e(char* arg1, int32_t arg2)
{
    char r3 = 1;
    arg1[2] = 1;
    arg1[3] = 0;
    *(arg1 + 4) = 0x40;
    uint32_t r2;
    char r4_1;
    int32_t r6;
    char r12_1;
    int16_t lr_1;
    if (arg2 == 0)
    {
        r12_1 = 1;
        lr_1 = 0x500;
        r2 = 6;
        r4_1 = 0xc;
        r3 = 0;
        r6 = 0x40040000;
    }
    if ((arg2 != 0 && arg2 != 1))
    {
        r2 = arg1[1];
        r6 = 0;
    }
    if (arg2 == 1)
    {
        r12_1 = 2;
        r6 = 0x50000000;
        lr_1 = 0x140;
        r2 = 4;
        r4_1 = 8;
    }
    if ((arg2 == 0 || arg2 == 1))
    {
        *arg1 = r4_1;
        arg1[0xb] = r3;
        arg1[1] = r2;
        *(arg1 + 6) = lr_1;
        arg1[8] = r12_1;
    }
    *(arg1 + 0xc) = r6;
    *(arg1 + 0x10) = (r6 + 0x800);
    if (r2 != 0)
    {
        int32_t r3_1 = (r6 + 0x900);
        int32_t r4_2 = 0;
        do
        {
            void* r1_1 = &arg1[(r4_2 << 2)];
            r4_2 = (r4_2 + 1);
            *(r1_1 + 0x54) = (r3_1 + 0x200);
            *(r1_1 + 0x18) = r3_1;
            r3_1 = (r3_1 + 0x20);
        } while (r4_2 < r2);
    }
    *(arg1 + 0xcc) = (r6 + 0x440);
    *(arg1 + 0x14) = (r6 + 0x400);
    uint32_t i_1 = *arg1;
    if (i_1 != 0)
    {
        int32_t r4_3 = (r6 + 0x500);
        int32_t r1_4 = 0;
        do
        {
            *((arg1 + 0x90) + (r1_4 << 2)) = r4_3;
            r1_4 = (r1_4 + 1);
            r4_3 = (r4_3 + 0x20);
        } while (r1_4 < i_1);
        if (i_1 != 0)
        {
            void* r3_3 = &arg1[0xd0];
            int32_t r4_4 = (r6 + 0x1000);
            uint32_t i;
            do
            {
                *r3_3 = r4_4;
                r3_3 = (r3_3 + 4);
                i = i_1;
                i_1 = (i_1 - 1);
                r4_4 = (r4_4 + 0x1000);
            } while (i != 1);
        }
    }
    *(arg1 + 0x10c) = (r6 + 0xe00);
    return 0;
}

int32_t sub_302a(void* arg1)
{
    void* r0 = *(arg1 + 0xc);
    if (*(arg1 + 8) != 1)
    {
        *(r0 + 0xc) = (*(r0 + 0xc) | 0x40);
        sub_30ac(arg1);
        int32_t r1_6 = 0x1d0000;
        if (*(arg1 + 9) == 0)
        {
            r1_6 = 0xd0000;
        }
        *(*(arg1 + 0xc) + 0x38) = r1_6;
        sub_2e88(0x14);
    }
    else
    {
        int32_t r1_1 = *(r0 + 0x38);
        int32_t r3_2 = ((r1_1 & 0xffeeffff) | 0x100000);
        if (*(arg1 + 9) == 0)
        {
            r3_2 = (r1_1 & 0xfffeffff);
        }
        *(r0 + 0x38) = r3_2;
        *(r0 + 0xc) = (*(r0 + 0xc) & 0xffb5ffbf);
        sub_30ac(arg1);
        if (*(arg1 + 3) == 1)
        {
            *(*(arg1 + 0xc) + 8) = 0x2a;
        }
    }
    if (((*(arg1 + 8) == 1 && *(arg1 + 3) == 1) || (*(arg1 + 8) != 1 && *(arg1 + 3) == 1)))
    {
        void* r0_8 = *(arg1 + 0xc);
        *(r0_8 + 8) = ((*(r0_8 + 8) & 0xffffffc1) | 0x2a);
    }
    return 0;
}

void* const sub_30ac(void* arg1)
{
    int32_t r6 = 0xffffffff;
    int32_t var_1c = 0;
    void* const r0_1;
    while (true)
    {
        r0_1 = *(arg1 + 0xc);
        r6 = (r6 + 1);
        int32_t r1_1 = *(r0_1 + 0x10);
        if (r6 > 0x30d3f)
        {
            break;
        }
        if (r1_1 <= 0xffffffff)
        {
            *(r0_1 + 0x10) = (r1_1 | 1);
            int32_t r1_6 = 0xffffffff;
            do
            {
                r1_6 = (r1_6 + 1);
                if (r1_6 > 0x30d3f)
                {
                    break;
                }
            } while ((*(r0_1 + 0x10) & 1) != 0);
            r0_1 = &data_3;
            break;
        }
    }
    return r0_1;
}

int32_t sub_3112(void* arg1)
{
    void* r0_1 = *(arg1 + 0xc);
    *(r0_1 + 8) = (*(r0_1 + 8) | 1);
    return 0;
}

int32_t sub_3120(void* arg1)
{
    void* r0_1 = *(arg1 + 0xc);
    *(r0_1 + 8) = (*(r0_1 + 8) & 0xfffffffe);
    return 0;
}

int32_t sub_312e(void* arg1, int32_t arg2)
{
    void* r0 = *(arg1 + 0xc);
    *(r0 + 0x10) = (0x20 | ((arg2 & 0x1f) << 6));
    int32_t r1_1 = 0xffffffff;
    do
    {
        r1_1 = (r1_1 + 1);
        if (r1_1 > 0x30d3f)
        {
            break;
        }
    } while ((*(r0 + 0x10) & 0x20) != 0);
    return 0;
}

int32_t sub_3178(void* arg1)
{
    void* r0 = *(arg1 + 0xc);
    *(r0 + 0x10) = 0x10;
    int32_t r1 = 0xffffffff;
    do
    {
        r1 = (r1 + 1);
        if (r1 > 0x30d3f)
        {
            break;
        }
    } while ((*(r0 + 0x10) & 0x10) != 0);
    return 0;
}

int32_t sub_31ba(void* arg1, int32_t arg2)
{
    void* r0_1 = *(arg1 + 0xc);
    int32_t r2_1 = (*(r0_1 + 0xc) & 0x9fffffff);
    int32_t r1;
    if (arg2 == 1)
    {
        r1 = 0x20000000;
    }
    if (arg2 == 0)
    {
        r1 = 0x40000000;
    }
    if ((arg2 == 1 || arg2 == 0))
    {
        r2_1 = (r2_1 | r1);
    }
    *(r0_1 + 0xc) = r2_1;
    sub_2e88(0x32);
    return 0;
}

int32_t sub_31e6(void* arg1)
{
    return (1 & (!*(*(arg1 + 0xc) + 0x14)));
}

int32_t sub_31f4(void* arg1)
{
    void* r0_2 = *(arg1 + 0xc);
    return (*(r0_2 + 0x18) & *(r0_2 + 0x14));
}

int32_t sub_3200(void* arg1)
{
    **(arg1 + 0x10c) = 0;
    int32_t* r0_1 = *(arg1 + 0x10);
    *r0_1 = (*r0_1 & 0xffffe7ff);
    if (*(arg1 + 0xb) == 0)
    {
        int32_t r2_2 = (*r0_1 & 0xfffffffc);
        if (*(arg1 + 8) != 1)
        {
            r2_2 = (r2_2 | 1);
        }
        *r0_1 = r2_2;
        void* r0_2 = *(arg1 + 0xc);
        *(r0_2 + 0x24) = 0x200;
        *(r0_2 + 0x28) = 0x100200;
        __builtin_memcpy((r0_2 + 0x104), "\x10\x02\x54\x01\x64\x03\x80\x00\xe4\x03\x10\x00\xf4\x03\x00\x00\xf4\x03\x00\x00", 0x14);
    }
    sub_312e(arg1, 0x10);
    sub_3178(arg1);
    void* r12 = *(arg1 + 0x10);
    *(r12 + 0x10) = 0;
    *(r12 + 0x14) = 0;
    *(r12 + 0x18) = 0xffffffff;
    *(r12 + 0x1c) = 0;
    uint32_t i_1 = *(arg1 + 1);
    if (i_1 != 0)
    {
        int32_t r4_1 = 0;
        do
        {
            int32_t* r6_1 = *((arg1 + 0x18) + (r4_1 << 2));
            r4_1 = (r4_1 + 1);
            *r6_1 = (0x48000000 & (*r6_1 >> 0x1f));
            r6_1[4] = 0;
            r6_1[2] = 0xff;
        } while (r4_1 < i_1);
        if (i_1 != 0)
        {
            void* r2_4 = (arg1 + 0x54);
            uint32_t i;
            do
            {
                int32_t* r6_2 = *r2_4;
                r2_4 = (r2_4 + 4);
                i = i_1;
                i_1 = (i_1 - 1);
                *r6_2 = (0x48000000 & (*r6_2 >> 0x1f));
                r6_2[4] = 0;
                r6_2[2] = 0xff;
            } while (i != 1);
        }
    }
    *(r12 + 0x10) = (*(r12 + 0x10) | 0x100);
    uint32_t r1_4 = *(arg1 + 3);
    if (r1_4 == 1)
    {
        *(r12 + 0x30) = 0x810103;
    }
    void* r0_7 = *(arg1 + 0xc);
    *(r0_7 + 0x18) = 0;
    *(r0_7 + 0x14) = 0xbfffffff;
    *(r0_7 + 4) = 0xffffffff;
    *(r0_7 + 0x14) = 0xbfffffff;
    *(r0_7 + 0x18) = 0x80000800;
    int32_t r2_5 = 0x403c380c;
    if (r1_4 == 0)
    {
        r2_5 = 0x403c381c;
    }
    *(r0_7 + 0x18) = (((0xbfc3c7f3 ^ r2_5) & *(r0_7 + 0x18)) | r2_5);
    return 0;
}

int32_t sub_3356(void* arg1)
{
    return *(0x4210 + ((((*(*(arg1 + 0x10) + 8) >> 1) & 3) ^ 2) << 2));
}

int32_t sub_3370(void* arg1)
{
    void* r1 = *(arg1 + 0x10);
    int32_t* r0 = *(arg1 + 0x18);
    int32_t r2 = (*r0 & 0xfffff800);
    if ((*(r1 + 8) & 6) == 4)
    {
        r2 = (r2 | 3);
    }
    *r0 = r2;
    *(r1 + 4) = (*(r1 + 4) | 0x100);
    return 0;
}

int32_t sub_339c(void* arg1, char* arg2)
{
    uint32_t r3 = *arg2;
    int32_t* r3_1;
    uint32_t r12;
    if (arg2[1] != 1)
    {
        r12 = (0x10000 << r3);
        r3_1 = *((arg1 + (r3 << 2)) + 0x54);
    }
    else
    {
        r12 = (1 << r3);
        r3_1 = *((arg1 + (r3 << 2)) + 0x18);
    }
    int32_t r2_3 = *r3_1;
    if ((r2_3 & 0x8000) == 0)
    {
        int32_t r1_4 = ((((((r2_3 & 0xe4337800) | (*(arg2 + 8) & 0x7ff)) | (0xc0000 & (arg2[3] << 0x12))) | ((*(arg2 + 6) & 0xf) << 0x16)) | 0x18000000) | 0x8000);
        *r3_1 = r1_4;
    }
    void* r0 = *(arg1 + 0x10);
    *(r0 + 0x1c) = (*(r0 + 0x1c) | r12);
    return 0;
}

int32_t sub_3416(void* arg1, char* arg2)
{
    uint32_t r2_4 = *arg2;
    uint32_t r1_2;
    int32_t* r2_1;
    if (arg2[1] != 1)
    {
        r1_2 = (0x10000 << r2_4);
        r2_1 = *((arg1 + (r2_4 << 2)) + 0x54);
    }
    else
    {
        r2_1 = *((arg1 + (r2_4 << 2)) + 0x18);
        r1_2 = (1 << r2_4);
    }
    *r2_1 = 0;
    void* r0 = *(arg1 + 0x10);
    *(r0 + 0x1c) = (*(r0 + 0x1c) & (!r1_2));
    return 0;
}

int32_t sub_344a(void* arg1, char* arg2)
{
    uint32_t r2 = *arg2;
    if (arg2[1] != 1)
    {
        int32_t* r2_2 = *((arg1 + (r2 << 2)) + 0x54);
        int32_t r12_1 = *r2_2;
        int32_t r3_6 = r2_2[4];
        int32_t r5_4 = *(arg2 + 0x18);
        int32_t r4_7 = *(arg2 + 8);
        int32_t r3_8;
        int32_t r5_10;
        if (r5_4 == 0)
        {
            r5_10 = 0x80000;
            r3_8 = ((r3_6 & 0xe0000000) | (r4_7 & 0x7ffff));
        }
        else
        {
            uint32_t r5_7 = (((r5_4 + r4_7) - 1) / r4_7);
            r3_8 = (((r3_6 & 0xe0000000) & 0xe007ffff) | ((r5_7 & 0x3ff) << 0x13));
            r5_10 = ((r4_7 * (r5_7 & 0x3ff)) & 0x7ffff);
        }
        r2_2[4] = (r3_8 | r5_10);
        if (*(arg1 + 3) == 1)
        {
            r2_2[5] = *(arg2 + 0x14);
        }
        if (arg2[3] == 1)
        {
            uint32_t r0_3 = arg2[5];
            int32_t r1_1 = 0x10000000;
            int32_t r0_4 = 0xefffffff;
            if (r0_3 != 0)
            {
                r1_1 = 0x20000000;
            }
            if (r0_3 != 0)
            {
                r0_4 = 0xdfffffff;
            }
            r12_1 = ((r0_4 & r12_1) | r1_1);
        }
        *r2_2 = (r12_1 | 0x84000000);
    }
    else
    {
        int32_t* lr_1 = *((arg1 + (r2 << 2)) + 0x18);
        int32_t r12 = *lr_1;
        int32_t r3_2 = lr_1[4];
        int32_t r4 = *(arg2 + 0x18);
        int32_t r3_5;
        int32_t r4_6;
        int32_t r5_3;
        if (r4 == 0)
        {
            r3_5 = (r3_2 & 0xfff80000);
            r4_6 = 0x80000;
            r5_3 = 0xe007ffff;
        }
        else
        {
            int32_t r5_2 = *(arg2 + 8);
            r3_5 = (((r3_2 & 0xe0000000) | (r4 & 0x7ffff)) | (0x1ff80000 & ((((r4 + r5_2) - 1) / r5_2) << 0x13)));
            if (arg2[3] == 1)
            {
                r4_6 = 0x20000000;
                r5_3 = 0x9fffffff;
            }
        }
        if ((r4 == 0 || (r4 != 0 && arg2[3] == 1)))
        {
            r3_5 = ((r3_5 & r5_3) | r4_6);
        }
        lr_1[4] = r3_5;
        if (*(arg1 + 3) == 1)
        {
            lr_1[5] = *(arg2 + 0x14);
        }
        if (((*(arg1 + 3) != 1 && arg2[3] == 1) || (*(arg1 + 3) == 1 && arg2[3] == 1)))
        {
            int32_t r3_16 = (0x10000000 & (*(*(arg1 + 0x10) + 8) << 0x14));
            *lr_1 = ((((r3_16 ^ 0x10000000) + 0x10000000) | ((0x5fffffff + r3_16) & r12)) | 0x84000000);
            sub_2e9c(arg1, *(arg2 + 0xc), r2, *(arg2 + 0x18));
        }
        if (((*(arg1 + 3) != 1 && arg2[3] != 1) && *(arg2 + 0x18) != 0))
        {
            void* r0_7 = *(arg1 + 0x10);
            *(r0_7 + 0x34) = ((1 << r2) | *(r0_7 + 0x34));
        }
        if (((*(arg1 + 3) == 1 && arg2[3] != 1) || (*(arg1 + 3) != 1 && arg2[3] != 1)))
        {
            *lr_1 = (r12 | 0x84000000);
        }
    }
    return 0;
}

int32_t sub_3596(void* arg1, char* arg2)
{
    int32_t* r2_1;
    uint32_t r3_7;
    int32_t r12;
    if (arg2[1] == 1)
    {
        r2_1 = *(arg1 + 0x18);
        r12 = *r2_1;
        int32_t lr = r2_1[4];
        int32_t r3 = *(arg2 + 0x18);
        int32_t r3_1;
        if (r3 == 0)
        {
            r3_1 = (lr & 0xffffff80);
        }
        else
        {
            int32_t r4_1 = *(arg2 + 8);
            if (r3 > r4_1)
            {
                *(arg2 + 0x18) = r4_1;
                r3 = r4_1;
            }
            r3_1 = ((r3 & 0x7f) | (((lr >> 7) & 0x1ffffff) << 7));
        }
        r2_1[4] = ((r3_1 & 0xffe7ffff) | 0x80000);
        r3_7 = *(arg1 + 3);
        if (r3_7 == 1)
        {
            *(*((arg1 + (*arg2 << 2)) + 0x18) + 0x14) = *(arg2 + 0x14);
        }
        else
        {
            *r2_1 = (r12 | 0x84000000);
            if ((r3_7 == 0 && *(arg2 + 0x18) != 0))
            {
                void* r0_6 = *(arg1 + 0x10);
                *(r0_6 + 0x34) = ((1 << *arg2) | *(r0_6 + 0x34));
            }
        }
    }
    else
    {
        r2_1 = *((arg1 + (*arg2 << 2)) + 0x54);
        r12 = *r2_1;
        int32_t lr_1 = r2_1[4];
        int32_t r3_2 = *(arg2 + 8);
        if (*(arg2 + 0x18) != 0)
        {
            *(arg2 + 0x18) = r3_2;
        }
        r2_1[4] = (((r3_2 & 0x7f) | (0xffe7ff80 & lr_1)) | 0x80000);
        if (*(arg1 + 3) == 1)
        {
            r2_1[5] = *(arg2 + 0x14);
        }
    }
    if (((arg2[1] == 1 && r3_7 == 1) || arg2[1] != 1))
    {
        *r2_1 = (r12 | 0x84000000);
    }
    return 0;
}

int32_t sub_3648(int32_t arg1, char* arg2)
{
    void* r0 = (arg1 + (*arg2 << 2));
    int32_t* r0_1;
    int32_t r1_1;
    if (arg2[1] != 1)
    {
        r0_1 = *(r0 + 0x54);
        r1_1 = *r0_1;
    }
    else
    {
        r0_1 = *(r0 + 0x18);
        r1_1 = *r0_1;
        if (r1_1 < 0)
        {
            r1_1 = (r1_1 | 0x40000000);
        }
    }
    *r0_1 = (r1_1 | 0x200000);
    return 0;
}

int32_t sub_3670(int32_t arg1, char* arg2)
{
    void* r0 = (arg1 + (*arg2 << 2));
    int32_t* r0_1;
    if (arg2[1] != 1)
    {
        r0_1 = *(r0 + 0x54);
    }
    else
    {
        r0_1 = *(r0 + 0x18);
    }
    int32_t r2 = *r0_1;
    uint32_t r1 = arg2[3];
    bool cond:0 = r1 != 3;
    if (r1 != 3)
    {
        cond:0 = r1 != 2;
    }
    int32_t r1_2;
    if (cond:0)
    {
        r1_2 = (r2 & 0xffdfffff);
    }
    else
    {
        r1_2 = ((r2 & 0xefdfffff) | 0x10000000);
    }
    *r0_1 = r1_2;
    return 0;
}

uint32_t sub_36a0(void* arg1)
{
    void* r0_3 = *(arg1 + 0x10);
    return ((*(r0_3 + 0x1c) & *(r0_3 + 0x18)) >> 0x10);
}

int32_t sub_36ac(void* arg1, int32_t arg2)
{
    return (*(*(arg1 + 0x10) + 0x14) & *(*((arg1 + (arg2 << 2)) + 0x54) + 8));
}

uint32_t sub_36bc(void* arg1)
{
    void* r0_3 = *(arg1 + 0x10);
    return (*(r0_3 + 0x1c) & *(r0_3 + 0x18));
}

void sub_36c8(void* arg1)
{
    int32_t* r1 = *(arg1 + 0x54);
    r1[4] = 0xc0080018;
    if (*(arg1 + 3) != 1)
    {
        return;
    }
    r1[5] = (arg1 + 0x644);
    *r1 = 0x80008000;
}

void sub_36ec(int32_t* arg1)
{
    if ((*(arg1 + 0xa) != 0 && (*(arg1[4] + 8) & 1) != 0))
    {
        arg1 = arg1[0x43];
        *arg1 = (arg1 & 0xfffffffc);
    }
}

int32_t sub_3708(void* arg1)
{
    int32_t r0 = sub_31e6(arg1);
    int32_t r5_1;
    int32_t r9;
    if (r0 != 0)
    {
        r5_1 = sub_31f4(arg1);
        if (r5_1 != 0)
        {
            if ((r5_1 << 0xc) >= 0)
            {
                r9 = 0;
            }
            else
            {
                uint32_t r0_5 = sub_36a0(arg1);
                r9 = 1;
                if (r0_5 != 0)
                {
                    int32_t r6_1 = 0x15;
                    int32_t r11_1 = 0;
                    uint32_t r8_1;
                    do
                    {
                        r8_1 = r0_5;
                        if ((r8_1 << 0x1f) != 0)
                        {
                            uint32_t r5_2 = (r6_1 - 0x15);
                            int32_t r0_9 = sub_36ac(arg1, r5_2);
                            if ((r0_9 & 1) != 0)
                            {
                                void* r0_14 = *(arg1 + (r6_1 << 2));
                                *(r0_14 + 8) = 1;
                                if (*(arg1 + 3) == 1)
                                {
                                    void* r1_6 = (arg1 + r11_1);
                                    *(r1_6 + 0x3cc) = (*(r1_6 + 0x3b8) - (*(r0_14 + 0x10) & 0x7ffff));
                                }
                                **0x200002e0(arg1, r5_2);
                                if ((r11_1 == 0 && (*(arg1 + 3) == 1 && *(arg1 + 0x111) == 5)))
                                {
                                    sub_36c8(arg1);
                                }
                            }
                            else
                            {
                                void* r0_13;
                                int32_t r1_4;
                                if ((r0_9 << 0x1e) < 0)
                                {
                                    r0_13 = *(arg1 + (r6_1 << 2));
                                    r1_4 = 2;
                                }
                                if (((r0_9 << 0x1e) >= 0 && (r0_9 << 0x1c) < 0))
                                {
                                    *(*0x200002e0 + 8)(arg1);
                                    r0_13 = *(arg1 + (r6_1 << 2));
                                    r1_4 = 8;
                                }
                                if (((r0_9 << 0x1e) < 0 || ((r0_9 << 0x1e) >= 0 && (r0_9 << 0x1c) < 0)))
                                {
                                    *(r0_13 + 8) = r1_4;
                                }
                            }
                        }
                        r11_1 = (r11_1 + 0x2c);
                        r6_1 = (r6_1 + 1);
                        r0_5 = (r8_1 >> 1);
                    } while (0 != (r8_1 >> 1));
                    r9 = 1;
                }
            }
            if ((r5_1 << 0xd) < 0)
            {
                uint32_t r0_25 = sub_36bc(arg1);
                r9 = 1;
                if (r0_25 != 0)
                {
                    int32_t r10_1 = 0;
                    uint32_t r11_2;
                    do
                    {
                        r11_2 = r0_25;
                        if ((r11_2 << 0x1f) != 0)
                        {
                            void* r1_8 = *(arg1 + 0x10);
                            void* r0_28 = *((arg1 + (r10_1 << 2)) + 0x18);
                            int32_t r2_8 = ((((*(r1_8 + 0x34) >> r10_1) << 7) | *(r1_8 + 0x10)) & *(r0_28 + 8));
                            if ((r2_8 & 1) != 0)
                            {
                                *(r1_8 + 0x34) = (*(r1_8 + 0x34) & (!(1 << r10_1)));
                                *(r0_28 + 8) = 1;
                                *(*0x200002e0 + 4)(arg1, r10_1);
                                if ((r10_1 == 0 && (*(arg1 + 3) == 1 && *(arg1 + 0x111) == 4)))
                                {
                                    sub_36c8(arg1);
                                }
                            }
                            else
                            {
                                int32_t r1_14;
                                if ((r2_8 << 0x1c) < 0)
                                {
                                    r1_14 = 8;
                                label_393e:
                                    *(r0_28 + 8) = r1_14;
                                }
                                else
                                {
                                    if ((r2_8 << 0x1b) < 0)
                                    {
                                        r1_14 = 0x10;
                                        goto label_393e;
                                    }
                                    if ((r2_8 << 0x19) < 0)
                                    {
                                        r1_14 = 0x40;
                                        goto label_393e;
                                    }
                                    if ((r2_8 << 0x1e) < 0)
                                    {
                                        r1_14 = 2;
                                        goto label_393e;
                                    }
                                    if ((r2_8 << 0x18) < 0)
                                    {
                                        void* r2_10 = (arg1 + (r10_1 * 0x2c));
                                        int32_t r3_6 = *(r2_10 + 0x134);
                                        int32_t r5_3 = *(r2_10 + 0x138);
                                        int32_t r5_4 = (r3_6 - r5_3);
                                        int32_t r0_36;
                                        int32_t r2_15;
                                        if (r3_6 != r5_3)
                                        {
                                            int32_t r1_9 = *(r2_10 + 0x124);
                                            if (r5_4 > r1_9)
                                            {
                                                r5_4 = r1_9;
                                            }
                                            if (*(r0_28 + 0x18) >= ((r5_4 + 3) >> 2))
                                            {
                                                char* r1_12 = *(r2_10 + 0x128);
                                                do
                                                {
                                                    sub_2e9c(arg1, r1_12, r10_1, r5_4);
                                                    r1_12 = &*(r2_10 + 0x128)[r5_4];
                                                    *(r2_10 + 0x128) = r1_12;
                                                    r0_36 = (*(r2_10 + 0x138) + r5_4);
                                                    *(r2_10 + 0x138) = r0_36;
                                                    r2_15 = *(r2_10 + 0x134);
                                                    r5_4 = (r2_15 - r0_36);
                                                    if (r2_15 == r0_36)
                                                    {
                                                        break;
                                                    }
                                                    int32_t r0_38 = *(r2_10 + 0x124);
                                                    if (r5_4 > r0_38)
                                                    {
                                                        r5_4 = r0_38;
                                                    }
                                                    r0_28 = *((arg1 + (r10_1 << 2)) + 0x18);
                                                } while (*(r0_28 + 0x18) >= ((r5_4 + 3) >> 2));
                                                if (r2_15 == r0_36)
                                                {
                                                    r0_28 = *((arg1 + (r10_1 << 2)) + 0x18);
                                                    r1_8 = *(arg1 + 0x10);
                                                }
                                            }
                                        }
                                        if ((((r3_6 != r5_3 && *(r0_28 + 0x18) >= ((r5_4 + 3) >> 2)) && r2_15 == r0_36) || r3_6 == r5_3))
                                        {
                                            *(r1_8 + 0x34) = (*(r1_8 + 0x34) & (!(1 << r10_1)));
                                        }
                                        r1_14 = 0x80;
                                        goto label_393e;
                                    }
                                }
                            }
                        }
                        r0_25 = (r11_2 >> 1);
                        r10_1 = (r10_1 + 1);
                    } while (0 != (r11_2 >> 1));
                    r9 = 1;
                }
            }
            if ((r5_1 << 0x1e) < 0)
            {
                *(*(arg1 + 0xc) + 0x14) = 2;
            }
            if (r5_1 <= 0xffffffff)
            {
                if (*(arg1 + 0xa) != 0)
                {
                    int32_t* r0_47 = *(arg1 + 0x10c);
                    *r0_47 = (r0_47 & 0xfffffffc);
                }
                void* r0_48 = *(arg1 + 0x10);
                *(r0_48 + 4) = (*(r0_48 + 4) & 0xfffffffe);
                *(*0x200002e0 + 0x18)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 0x80000000;
            }
            if ((r5_1 << 0x14) < 0)
            {
                char var_25_1 = 0;
                char r0_53 = *(arg1 + 0x112);
                *(*0x200002e0 + 0x14)(arg1);
                bool cond:0_1 = (*(*(arg1 + 0x10) + 8) & 1) == 0;
                *(*(arg1 + 0xc) + 0x14) = 0x800;
                if (((!cond:0_1) && (*(arg1 + 0xa) != 0 && (*(arg1 + 0x115) == 1 && r0_53 == 3))))
                {
                    int32_t* r0_61 = *(arg1 + 0x10c);
                    *r0_61 = (*r0_61 | 1);
                    *r0_61 = (*r0_61 | 3);
                    *0xe000ed10 = (*0xe000ed10 | 6);
                }
                r9 = 1;
            }
            if ((r5_1 << 0x1c) < 0)
            {
                *(*0x200002e0 + 0xc)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 8;
            }
            if ((r5_1 << 0x1b) < 0)
            {
                void* r0_67 = *(arg1 + 0xc);
                *(r0_67 + 0x18) = (*(r0_67 + 0x18) & 0xffffffef);
                int32_t r6_4 = *(r0_67 + 0x20);
                int32_t r0_68 = ((r6_4 >> 0x11) & 0xf);
                int32_t r8_2 = (r6_4 & 0xf);
                if (r0_68 == 6)
                {
                    sub_2f04(arg1, (arg1 + 0x644), 8);
                    void* r0_74 = (arg1 + (r8_2 * 0x2c));
                    *(r0_74 + 0x3cc) = (*(r0_74 + 0x3cc) + ((r6_4 >> 4) & 0x7ff));
                }
                else if (r0_68 == 2)
                {
                    int32_t r9_1 = ((r6_4 >> 4) & 0x7ff);
                    if (r9_1 != 0)
                    {
                        void* r6_5 = (arg1 + (r8_2 * 0x2c));
                        sub_2f04(arg1, *(r6_5 + 0x3c0), r9_1);
                        int32_t r1_31 = *(r6_5 + 0x3cc);
                        *(r6_5 + 0x3c0) = (*(r6_5 + 0x3c0) + r9_1);
                        *(r6_5 + 0x3cc) = (r1_31 + r9_1);
                    }
                }
                void* r0_75 = *(arg1 + 0xc);
                r9 = 1;
                *(r0_75 + 0x18) = (*(r0_75 + 0x18) | 0x10);
            }
            if ((r5_1 << 0x13) < 0)
            {
                void* r0_77 = *(arg1 + 0x10);
                *(r0_77 + 4) = (*(r0_77 + 4) & 0xfffffffe);
                sub_312e(arg1, 0);
                uint32_t i_1 = *(arg1 + 1);
                if (i_1 != 0)
                {
                    void* r1_39 = (arg1 + 0x54);
                    uint32_t i;
                    do
                    {
                        i = i_1;
                        i_1 = (i_1 - 1);
                        *(*(r1_39 - 0x3c) + 8) = 0xff;
                        void* r3_15 = *r1_39;
                        r1_39 = (r1_39 + 4);
                        *(r3_15 + 8) = 0xff;
                    } while (i != 1);
                }
                int32_t* r0_79 = *(arg1 + 0x10);
                r0_79[6] = 0xffffffff;
                r0_79[7] = 0x10001;
                r0_79[5] = 0xb;
                r0_79[4] = 0xb;
                *r0_79 = (*r0_79 & 0xfffff80f);
                sub_36c8(arg1);
                *(*(arg1 + 0xc) + 0x14) = 0x1000;
                *(*0x200002e0 + 0x10)(arg1);
                r9 = 1;
            }
            if ((r5_1 << 0x12) < 0)
            {
                sub_3370(arg1);
                int32_t r6_6 = *(*(arg1 + 0xc) + 0xc);
                int32_t r0_88 = sub_3356(arg1);
                char r1_43 = 0;
                r9 = 1;
                if (r0_88 != 3)
                {
                    r1_43 = 1;
                }
                *(arg1 + 2) = r1_43;
                int16_t r1_44 = 0x40;
                if (r0_88 == 3)
                {
                    r1_44 = 0x200;
                }
                *(arg1 + 4) = r1_44;
                int32_t r1_45 = 0x1400;
                if (r0_88 == 3)
                {
                    r1_45 = 0x2400;
                }
                void* r1_46 = *(arg1 + 0xc);
                *(r1_46 + 0xc) = ((r6_6 & 0xffffc3ff) | r1_45);
                *(r1_46 + 0x14) = 0x2000;
            }
            if ((r5_1 << 0xb) < 0)
            {
                *(*0x200002e0 + 0x1c)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 0x100000;
            }
            if ((r5_1 << 0xa) < 0)
            {
                *(*0x200002e0 + 0x20)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 0x200000;
            }
            if ((r5_1 << 1) < 0)
            {
                *(*0x200002e0 + 0x24)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 0x40000000;
            }
            if ((r5_1 << 0x1d) < 0)
            {
                void* r0_104 = *(arg1 + 0xc);
                int32_t r5_5 = *(r0_104 + 4);
                if ((r5_5 & 4) != 0)
                {
                    *(*0x200002e0 + 0x28)(arg1);
                    r0_104 = *(arg1 + 0xc);
                }
                r9 = 1;
                *(r0_104 + 4) = r5_5;
            }
        }
    }
    if ((r0 == 0 || (r0 != 0 && r5_1 == 0)))
    {
        r9 = 0;
    }
    return r9;
}

int32_t sub_3bf8(char* arg1)
{
    int32_t r1;
    sub_2f5e(arg1, r1);
    arg1[0x112] = 1;
    arg1[0x114] = 0;
    uint32_t r0 = arg1[1];
    if (r0 != 0)
    {
        void* r3_1 = &arg1[0x11c];
        int32_t r5_1 = 0;
        do
        {
            *r3_1 = r5_1;
            *(r3_1 + 1) = 1;
            *(r3_1 + 6) = r5_1;
            r5_1 = (r5_1 + 1);
            *(r3_1 + 3) = 0;
            *(r3_1 + 8) = 0x40;
            *(r3_1 + 0xc) = 0;
            *(r3_1 + 0x10) = 0;
            *(r3_1 + 0x18) = 0;
            r3_1 = (r3_1 + 0x2c);
        } while (r5_1 < r0);
        if (r0 != 0)
        {
            void* r1_1 = &arg1[0x3b0];
            int32_t r5_2 = 0;
            do
            {
                *r1_1 = r5_2;
                *(r1_1 + 1) = 0;
                *(r1_1 + 6) = r5_2;
                r5_2 = (r5_2 + 1);
                *(r1_1 + 3) = 0;
                *(r1_1 + 8) = 0x40;
                *(r1_1 + 0xc) = 0;
                *(r1_1 + 0x10) = 0;
                *(r1_1 + 0x18) = 0;
                r1_1 = (r1_1 + 0x2c);
            } while (r0 != r5_2);
        }
    }
    sub_3120(arg1);
    sub_302a(arg1);
    sub_31ba(arg1, 0);
    sub_3200(arg1);
    /* tailcall */
    return sub_3112(arg1);
}

int32_t sub_3c82(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t lr = (arg2 & 0x7f);
    void* r4 = (arg1 + (lr * 0x2c));
    char* r1 = (r4 + 0x11c);
    if ((arg2 & 0x80) == 0)
    {
        r1 = (r4 + 0x3b0);
    }
    r1[1] = (arg2 >> 7);
    *r1 = lr;
    *(r1 + 8) = arg3;
    r1[3] = arg4;
    if (0 != (arg2 >> 7))
    {
        *(r1 + 6) = lr;
    }
    if (arg4 == 2)
    {
        r1[4] = 0;
    }
    sub_339c(arg1, r1);
    return 0;
}

int32_t sub_3cca(void* arg1, int32_t arg2)
{
    int32_t r12 = (arg2 & 0x7f);
    void* r3 = (arg1 + (r12 * 0x2c));
    char* r2 = (r3 + 0x11c);
    if ((arg2 & 0x80) == 0)
    {
        r2 = (r3 + 0x3b0);
    }
    r2[1] = (arg2 >> 7);
    *r2 = r12;
    sub_3416(arg1, r2);
    return 0;
}

int32_t sub_3cfa(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r12 = (arg2 & 0x7f);
    void* lr = (arg1 + (r12 * 0x2c));
    *(lr + 0x3c0) = arg3;
    *(lr + 0x3bc) = 0;
    *(lr + 0x3c8) = arg4;
    *(lr + 0x3cc) = 0;
    *(lr + 0x3b1) = 0;
    *(lr + 0x3b0) = r12;
    if (*(arg1 + 3) == 1)
    {
        *(lr + 0x3c4) = arg3;
    }
    if (r12 == 0)
    {
        sub_3596(arg1, (lr + 0x3b0));
    }
    else
    {
        sub_344a(arg1, (lr + 0x3b0));
    }
    return 0;
}

int32_t sub_3d44(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r12 = (arg2 & 0x7f);
    void* lr = (arg1 + (r12 * 0x2c));
    *(lr + 0x11c) = r12;
    *(lr + 0x11d) = 1;
    *(lr + 0x128) = arg3;
    *(lr + 0x12c) = 0;
    *(lr + 0x138) = 0;
    *(lr + 0x134) = arg4;
    if (r12 == 0)
    {
        sub_3596(arg1, (lr + 0x11c));
    }
    else
    {
        sub_344a(arg1, (lr + 0x11c));
    }
    return 0;
}

int32_t sub_3d88(int32_t arg1, int32_t arg2)
{
    int32_t r3 = (arg2 & 0x7f);
    void* r2_2 = (((arg1 + 0x110) + (r3 * 0x2c)) + 0xc);
    if ((arg2 & 0x80) == 0)
    {
        r2_2 = (((arg1 + 0x110) + (arg2 * 0x2c)) + 0x2a0);
    }
    *r2_2 = r3;
    *(r2_2 + 2) = 1;
    *(r2_2 + 1) = (arg2 >> 7);
    sub_3648(arg1, r2_2);
    return 0;
}

int32_t sub_3dc4(int32_t arg1, int32_t arg2)
{
    int32_t r3 = (arg2 & 0x7f);
    void* r2_2 = (((arg1 + 0x110) + (r3 * 0x2c)) + 0xc);
    if ((arg2 & 0x80) == 0)
    {
        r2_2 = (((arg1 + 0x110) + (arg2 * 0x2c)) + 0x2a0);
    }
    *r2_2 = r3;
    *(r2_2 + 2) = 0;
    *(r2_2 + 1) = (arg2 >> 7);
    sub_3670(arg1, r2_2);
    return 0;
}

int32_t* sub_3e00(void* arg1, int32_t arg2)
{
    int32_t* r0 = *(arg1 + 0x10);
    *r0 = (*r0 | ((arg2 & 0x7f) << 4));
    return r0;
}

void* sub_3e12(void* arg1, int32_t arg2)
{
    int32_t r12 = (arg2 & 0x7f);
    void* r2 = *(arg1 + 0xc);
    int32_t lr = (1 << r12);
    void* r4_2 = *(arg1 + 0x10);
    int32_t* r1_1 = (arg1 + 0xc)[(r12 + 3)];
    *(r4_2 + 0x1c) = ((0xffff0000 | (!lr)) & *(r4_2 + 0x1c));
    *(r4_2 + 0x34) = (*(r4_2 + 0x34) | lr);
    if (*r1_1 <= 0xffffffff)
    {
        *r1_1 = (*r1_1 | 0x8000000);
        while ((r1_1[2] & 0x40) == 0)
        {
            /* nop */
        }
        *r1_1 = (*r1_1 | 0x40000000);
        while ((*r1_1 & 0x40000000) != 0)
        {
            /* nop */
        }
    }
    *(r2 + 0x10) = ((*(r2 + 0x10) & 0xfffff83f) | ((r12 & 0x1f) << 6));
    *(r2 + 0x10) = (*(r2 + 0x10) | 0x20);
    while ((*(r2 + 0x10) & 0x20) != 0)
    {
        /* nop */
    }
    r1_1[2] = r1_1[2];
    void* r0 = *(arg1 + 0x10);
    *(r0 + 0x1c) = (*(r0 + 0x1c) | lr);
    return r0;
}

void sub_3e98(char* arg1, char arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        char* r3_1 = arg1;
        int32_t i;
        do
        {
            *r3_1 = arg2;
            r3_1 = &r3_1[1];
            i = arg3;
            arg3 = (arg3 - 1);
        } while (i != 1);
    }
}

int32_t sub_3ea6(char* arg1)
{
    if (*arg1 == 0)
    {
        return 0;
    }
    int32_t r0 = 0;
    uint32_t i;
    do
    {
        i = arg1[(1 + r0)];
        r0 = (r0 + 1);
    } while (i != 0);
    return r0;
}

void sub_3ebc(int32_t* arg1, int32_t* arg2, int32_t arg3)
{
    bool v_1 = /* bool v_1 = unimplemented  {orrs r3, r0, r1} */;
    if (((arg1 | arg2) << 0x1e) != 0)
    {
        __msr((arg3 << 0x1c));
        if ((!(TEST_BIT(arg3, 4))))
        {
            arg3 = (arg3 - 2);
            *(arg1 + arg3) = *(arg2 + arg3);
        }
        if (v_1)
        {
            arg3 = (arg3 - 1);
            *(arg1 + arg3) = *(arg2 + arg3);
        }
        uint32_t i_3 = (arg3 >> 2);
        if (i_3 == 0)
        {
            return;
        }
        uint32_t i;
        do
        {
            i = i_3;
            i_3 = (i_3 - 1);
            arg1[i_3] = arg2[i_3];
        } while (i > 1);
        return;
    }
    int32_t* var_20 = arg1;
    int32_t i_2 = (arg3 - 0x20);
    if ((arg3 - 0x20) >= 0)
    {
        int32_t i_1;
        do
        {
            int32_t r3_1 = *arg2;
            int32_t r4_1 = arg2[1];
            int32_t r5_1 = arg2[2];
            int32_t r6_1 = arg2[3];
            int32_t r7_1 = arg2[4];
            int32_t r8_1 = arg2[5];
            int32_t r9_1 = arg2[6];
            int32_t lr_1 = arg2[7];
            arg2 = &arg2[8];
            i_1 = i_2;
            i_2 = (i_2 - 0x20);
            *arg1 = r3_1;
            arg1[1] = r4_1;
            arg1[2] = r5_1;
            arg1[3] = r6_1;
            arg1[4] = r7_1;
            arg1[5] = r8_1;
            arg1[6] = r9_1;
            arg1[7] = lr_1;
            arg1 = &arg1[8];
        } while (i_1 >= 0x20);
    }
    if (i_2 != 0xffffffe0)
    {
        bool v = ((i_2 + 0x20) - 0x10);
        if ((i_2 + 0x10) < 0 == v)
        {
            int32_t r3_2 = *arg2;
            int32_t r4_2 = arg2[1];
            int32_t r5_2 = arg2[2];
            int32_t r6_2 = arg2[3];
            arg2 = &arg2[4];
            *arg1 = r3_2;
            arg1[1] = r4_2;
            arg1[2] = r5_2;
            arg1[3] = r6_2;
            arg1 = &arg1[4];
        }
        __msr(((i_2 + 0x10) << 0x1c));
        if (((i_2 + 0x10) << 0x1c) < 0)
        {
            int32_t r3_3 = *arg2;
            int32_t r4_3 = arg2[1];
            arg2 = &arg2[2];
            *arg1 = r3_3;
            arg1[1] = r4_3;
            arg1 = &arg1[2];
        }
        if (((i_2 + 0x10) & 0xf) == 0)
        {
            int32_t r3_4 = *arg2;
            arg2 = &arg2[1];
            *arg1 = r3_4;
            arg1 = &arg1[1];
        }
        if ((!(TEST_BIT((i_2 + 0x10), 4))))
        {
            int16_t r3_5 = *arg2;
            arg2 = (arg2 + 2);
            *arg1 = r3_5;
            arg1 = (arg1 + 2);
        }
        if (v)
        {
            *arg1 = *arg2;
        }
    }
}

int32_t sub_803a(int32_t arg1, void* arg2 @ r5, void* arg3 @ r7, void* arg4)
{
    int32_t r6;
    arg_2f4 = r6;
    int32_t r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    if (arg1 >= 0)
    {
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        if (arg1 < 0)
        {
            arg3 = arg4;
            arg_74 = r4;
            arg_74 = r4;
            arg_74 = r4;
            arg_74 = r4;
            arg_74 = r4;
            arg_74 = r4;
            arg_74 = r4;
        }
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        arg_74 = r4;
        *(*(arg3 + 0x7c) + 0x7c);
    }
    *(arg2 + 0x7c);
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    arg_74 = r4;
    int32_t r2;
    /* tailcall */
    return sub_8200(arg1, arg1, r2);
}

int32_t sub_8200(int32_t arg1, void* arg2, int32_t arg3)
{
    int32_t r4 = 0;
    if (arg3 != 0)
    {
        uint32_t r8_1 = 0;
        while (true)
        {
            int16_t r10_1 = (arg3 - r8_1);
            int32_t r0_1 = (arg1 + r8_1);
            char var_65_1 = r0_1;
            uint8_t var_66 = (r0_1 >> 8);
            if (r10_1 > (0x40 - (r0_1 & 0x3f)))
            {
                r10_1 = (0x40 - (r0_1 & 0x3f));
            }
            uint32_t r11_1 = r10_1;
            void var_64;
            sub_1ff48(&var_64, (arg2 + r8_1), r11_1);
            int32_t r0_6 = sub_182b6(0x40005400, 0x50, &var_66, (r11_1 + 2), nullptr, 0);
            sub_196cc(7);
            if (r0_6 != 0)
            {
                r4 = 0xfffffffd;
                break;
            }
            r8_1 = (r10_1 + r8_1);
            if (r8_1 >= arg3)
            {
                r4 = 0;
                break;
            }
        }
    }
    return r4;
}

int32_t sub_8298(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        uint32_t r5_1 = 0;
        do
        {
            int32_t r0 = (r5_1 + arg1);
            uint32_t r1 = (arg3 - r5_1);
            char var_25_1 = r0;
            uint8_t var_26 = (r0 >> 8);
            uint8_t* r0_2 = (arg2 + r5_1);
            if (r1 < 0x41)
            {
                int32_t r4_1 = sub_182b6(0x40005400, 0x50, &var_26, 2, r0_2, r1);
                sub_196cc(2);
                if (r4_1 != 0)
                {
                    r4_1 = 0xfffffffe;
                }
                return r4_1;
            }
            int32_t r0_3 = sub_182b6(0x40005400, 0x50, &var_26, 2, r0_2, 0x40);
            sub_196cc(2);
            if (r0_3 != 0)
            {
                return 0xfffffffe;
            }
            r5_1 = (r5_1 + 0x40);
        } while (r5_1 < arg3);
    }
    return 0;
}

int32_t sub_8334(int32_t arg1)
{
    if (arg1 != 0)
    {
        sub_18190(0x40020c00, 0x2000);
        sub_16930(arg1);
    }
    /* tailcall */
    return sub_1818c(0x40020c00, 0x2000);
}

uint32_t sub_8362()
{
    sub_1ac80(0x15, 0x20005074);
    sub_1ad04(0x20005074, 0x5ac, &data_1635, 1);  {  // {"@FIF"}}
    sub_1ad1a(0x20005074, "Apple Inc.");
    sub_1ad64(0x20005074, "Potassium Hub");
    sub_1ff48(0x20005106, 0x20005cd8, 0x30);
    uint32_t r1 = *0x2000507a;
    *0x20005086 = 9;
    *0x20005085 = 4;
    *0x2000507d = 4;
    *0x2000507e = 0;
    *0x2000507f = 0;
    *0x20005080 = 0;
    __builtin_strncpy(0x20005081, "d222", 4);
    *0x20005089 = ((*0x20005cd6 + 0x1fe) >> 1);
    int32_t r1_5 = (((((r1 | (*0x2000507b << 8)) | (*0x2000507c << 0x10)) & 0xf04740) | 0x10800) | 0x93);
    *0x2000507a = r1_5;
    *0x2000507c = (r1_5 >> 0x10);
    *0x2000507b = (r1_5 >> 8);
    uint32_t r0 = *0x20001ee8;
    if (r0 >= 5)
    {
        *0x2000516e = 2;
    }
    return r0;
}

int32_t sub_8422()
{
    uint32_t i_1 = 0;
    int32_t r1 = 0;
    char* r0 = 0x20001ec7;
    uint32_t i;
    do
    {
        uint32_t r4_1 = *r0;
        if (r4_1 == 0)
        {
            i = i_1;
            break;
        }
        void* r2_1 = (0x20005cd6 + (i_1 << 1));
        r1 = (r1 + 1);
        i_1 = (i_1 + 1);
        r0 = (r0 - 1);
        *(r2_1 + 3) = 0;
        *(r2_1 + 2) = r4_1;
        i = r1;
    } while (i < 0x18);
    int32_t r0_1 = 2;
    *0x20005cd7 = 3;
    *0x20005cd6 = (2 + (i << 1));
    uint32_t r1_2 = *0x20001f3d;
    if (r1_2 != 0)
    {
        int32_t r3 = 3;
        int32_t r4_2 = 0;
        do
        {
            char r5_1 = *(0x20001f04 + r4_2);
            void* r6_1 = (0x20005d08 + (r4_2 << 1));
            r4_2 = (r4_2 + 1);
            *(r6_1 + 2) = r5_1;
            *(0x20005d08 + r3) = 0;
            r3 = (r3 + 2);
        } while (r4_2 < r1_2);
        r0_1 = (r3 - 1);
    }
    *0x20005d09 = 3;
    *0x20005d08 = r0_1;
    return r0_1;
}

uint32_t sub_84c4()
{
    return *((((sub_1819e(0x40020800, 0x40) * 9) + 0x21aa1) + (sub_1819e(0x40020800, 0x80) * 3)) + sub_1819e(0x40020800, 0x100));
}

int32_t sub_8504(int32_t* arg1, int32_t arg2, char* arg3, int32_t arg4)
{
    int32_t i_1 = arg4;
    char* r6 = arg3;
    sub_1806e(arg1);
    uint32_t r12;
    sub_17f96(arg1, 0xfe, r12);
    int32_t r1;
    if (arg2 == 1)
    {
        sub_17f96(arg1, 4, r12);
        r1 = 4;
    }
    int32_t r4_1;
    uint32_t r9;
    if ((arg2 != 1 && arg2 != 0))
    {
        r9 = 0xff;
        r4_1 = 0xff;
    }
    if (arg2 == 0)
    {
        sub_17f96(arg1, 5, r12);
        r1 = 5;
    }
    if ((arg2 == 1 || arg2 == 0))
    {
        r4_1 = sub_18b1c(0xffff, r1);
        r9 = (r4_1 >> 8);
    }
    if (i_1 != 0)
    {
        int32_t i;
        do
        {
            uint32_t r1_1 = *r6;
            if (r1_1 == 0xfe)
            {
                sub_17f96(arg1, 0xfe, r12);
                r1_1 = *r6;
            }
            int32_t r0_8 = sub_18b1c((r4_1 | (r9 << 8)), r1_1);
            char r1_2 = *r6;
            r6 = &r6[1];
            r4_1 = r0_8;
            sub_17f96(arg1, r1_2, r12);
            r9 = (r4_1 >> 8);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
    uint32_t r4_2 = r4_1;
    if (r4_2 == 0xfe)
    {
        sub_17f96(arg1, 0xfe, r12);
    }
    sub_17f96(arg1, r4_2, r12);
    if (r9 == 0xfe)
    {
        sub_17f96(arg1, 0xfe, r12);
    }
    sub_17f96(arg1, r9, r12);
    sub_17f96(arg1, 0xfe, r12);
    sub_17f96(arg1, 0x40, r12);
    return 2;
}

int32_t sub_85cc(int32_t* arg1, char* arg2, int32_t arg3)
{
    int32_t r0_3;
    if (*arg2 != 5)
    {
        r0_3 = 0xfffffff6;
    }
    else
    {
        int32_t r0_1 = sub_18b1c(0xffff, 5);
        uint8_t var_98;
        if (arg3 >= 2)
        {
            void* r6_1 = &arg2[1];
            int32_t i_1 = (arg3 - 1);
            char* r4_1 = &var_98;
            int32_t i;
            do
            {
                r0_1 = sub_18b1c(r0_1, *r6_1);
                char r1_1 = *r6_1;
                r6_1 = (r6_1 + 1);
                i = i_1;
                i_1 = (i_1 - 1);
                *r4_1 = r1_1;
                r4_1 = &r4_1[1];
            } while (i != 1);
        }
        if (r0_1 != 0)
        {
            r0_3 = 0xfffffff7;
        }
        else
        {
            char var_97;
            uint32_t r0_4 = var_97;
            uint32_t r5_1 = var_98;
            int32_t var_9c;
            int32_t* r2 = &var_9c;
            char var_96;
            char* r1_2 = &var_96;
            int32_t r4_2 = (r0_4 & 0x7f);
            var_9c = r4_2;
            int32_t* r0_9;
            uint8_t* r2_1;
            uint32_t r3_1;
            if (r0_4 > 0xffffffff)
            {
                char r0_7 = sub_18b7a(r5_1, r1_2, r2);
                char r1_3 = var_9c;
                var_98 = r5_1;
                r2_1 = &var_98;
                r3_1 = (r0_7 + 2);
                r0_9 = arg1;
                char var_97_1 = r1_3;
            }
            else
            {
                char r1_4 = 0;
                bool cond:2_1 = sub_18bc6(r5_1, r1_2, r2) != r4_2;
                var_98 = r5_1;
                r2_1 = &var_98;
                r3_1 = 3;
                if (cond:2_1)
                {
                    r1_4 = 1;
                }
                char r0_12 = var_9c;
                var_96 = r1_4;
                char var_97_2 = (r0_12 | 0x80);
                r0_9 = arg1;
            }
            sub_8504(r0_9, 1, r2_1, r3_1);
            r0_3 = 0;
        }
    }
    return r0_3;
}

int32_t sub_8688(int32_t* arg1, int32_t arg2)
{
    if (*arg1 == 0xffffffff)
    {
        return 0;
    }
    int32_t r12 = arg1[7];
    if ((r12 & 0xfffffffc) > arg2)
    {
        return 0;
    }
    /* tailcall */
    return sub_86a2(0, arg2, arg1, r12);
}

int32_t sub_86a2(int32_t arg1, int32_t arg2, int32_t* arg3, int32_t arg4 @ r12)
{
    int32_t r0_1 = (*0x40023830 | 0x1000);
    *0x40023830 = r0_1;
    *0x40023008 = 1;
    if (0 != (arg4 >> 2))
    {
        int32_t i_1 = (0 - (arg4 >> 2));
        int32_t i;
        do
        {
            int32_t r1 = *arg3;
            arg3 = &arg3[1];
            i = i_1;
            i_1 = (i_1 + 1);
            *0x40023000 = r1;
        } while (i != 0xffffffff);
    }
    bool cond:0 = *0x40023000 == 0;
    *0x40023830 = (*0x40023830 & 0xffffefff);
    if (cond:0)
    {
        r0_1 = 1;
    }
    return r0_1;
}

int32_t sub_86f6(int32_t arg1, int32_t* arg2)
{
    int32_t lr = 0;
    int32_t r2;
    int32_t r2_1;
    int32_t r12_1;
    if (arg1 < 0x10000)
    {
        r2 = 0xe;
        r12_1 = 0;
    }
    else if (arg1 >= "%u %u %u\n")
    {
        r2_1 = 0;
        if (0 == (arg1 >> 0x14))
        {
            r2 = 0x11;
            r12_1 = 4;
        }
    }
    else
    {
        r2 = 0x10;
        r12_1 = 3;
    }
    if (((arg1 < 0x10000 || (arg1 >= 0x10000 && arg1 < "%u %u %u\n")) || ((arg1 >= 0x10000 && arg1 >= "%u %u %u\n") && 0 == (arg1 >> 0x14))))
    {
        *arg2 = (((arg1 >> r2) + r12_1) << 3);
        if ((((1 << r2) - 1) & arg1) == 0)
        {
            lr = 1;
        }
        r2_1 = lr;
    }
    return r2_1;
}

void sub_8746(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (*(0x20000000 + (arg1 << 2)) == arg2)
    {
        return;
    }
    /* tailcall */
    return sub_8758(arg1, arg2, arg3, 0x20000000);
}

void sub_8758(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4 @ r12)
{
    *(arg4 + (arg1 << 2)) = arg2;
    uint32_t r3 = *0x20000c74;
    uint32_t r4 = (r3 * 3);
    *(0x20000c76 + (r4 << 1)) = arg3;
    *((r4 << 1) + 0x20000c7b) = arg2;
    *((r4 << 1) + 0x20000c7a) = arg1;
    *((r4 << 1) + 0x20000c79) = (arg3 >> 0x18);
    *((r4 << 1) + 0x20000c78) = (arg3 >> 0x10);
    *((r4 << 1) + 0x20000c77) = (arg3 >> 8);
    int32_t r2_2 = ((r3 + 1) & 0x7f);
    *0x20000c74 = r2_2;
    int32_t r2_3 = (r2_2 * 3);
    *(0x20000c76 + (r2_3 << 1)) = 0;
    *((r2_3 << 1) + 0x20000c7a) = 0;
    *((r2_3 << 1) + 0x20000c79) = 0;
    *((r2_3 << 1) + 0x20000c78) = 0;
    *((r2_3 << 1) + 0x20000c77) = 0;
    *((r2_3 << 1) + 0x20000c7b) = 0;
}

int32_t sub_87c0(char* arg1, uint8_t* arg2)
{
    char var_11 = 0xff;
    sub_17ed8(1, &var_11, 1);
    uint32_t r2 = var_11;
    if (r2 == 0xff)
    {
        int32_t r2_1 = 0;
        *arg1 = 0x6b;
        char* r1_2 = 0x20001ec7;
        uint32_t i_1 = 0;
        uint32_t i;
        do
        {
            uint32_t r3_1 = *r1_2;
            if (r3_1 == 0)
            {
                i = i_1;
                break;
            }
            r2_1 = (r2_1 + 1);
            arg1[(1 + i_1)] = r3_1;
            i_1 = (i_1 + 1);
            r1_2 = (r1_2 - 1);
            i = r2_1;
        } while (i < 0x18);
        *arg2 = (i + 1);
    }
    else
    {
        if (r2 >= 0x20)
        {
            r2 = 0x20;
        }
        *arg2 = r2;
        sub_17ed8(2, arg1, r2);
    }
    return 0;
}

uint32_t sub_882e()
{
    char var_11 = 0;
    sub_17ed8(0, &var_11, 1);
    uint32_t r0 = var_11;
    if (r0 == 0xff)
    {
        var_11 = 0;
        r0 = 0;
    }
    sub_17b8a(r0);
    return r0;
}

int32_t sub_885c(int32_t arg1)
{
    /* tailcall */
    return sub_17ed8(0x100, arg1, 0x54);
}

int32_t sub_8868(int32_t arg1)
{
    /* tailcall */
    return sub_17eb2(0x100, arg1, 0x54);
}

int32_t sub_8874(int32_t arg1)
{
    int32_t r1 = 0;
    if ((*0x20001378 != 0 && *0x2000137c != 0))
    {
        int32_t r1_1 = *0x2000170c;
        if (r1_1 == 2)
        {
            uint32_t r1_3 = *0x2000170a;
            *0x2000170a = (r1_3 + 1);
            *(r1_3 + 0x200014aa) = arg1;
            arg1 = (arg1 ^ 0xff);
        label_8958:
            sub_8b30(arg1);
        label_8aec:
            r1 = 1;
        }
        else
        {
            if (r1_1 == 1)
            {
                uint32_t r1_5 = *0x2000170a;
                uint32_t r2_3 = (r1_5 + 1);
                *0x2000170a = r2_3;
                *(r1_5 + 0x200014aa) = arg1;
                uint32_t r9_1 = *0x20001708;
                if (r9_1 == 0x22)
                {
                    r2_3 = *0x2000138c;
                    uint32_t r1_7 = *0x2000138e;
                    uint32_t r3_1 = *0x20001397;
                    bool cond:0_1 = r2_3 != 8;
                    if (r2_3 == 8)
                    {
                        cond:0_1 = r1_7 != 0x45;
                    }
                    if ((cond:0_1 || ((!cond:0_1) && r3_1 != 0x11)))
                    {
                        if ((*0x20001f38 << 0x1e) >= 0)
                        {
                            goto label_898c;
                        }
                        uint32_t var_34_1 = r3_1;
                        int32_t var_38_1 = (r1_7 & 0xf);
                        sub_17c48(5, "Not Hippo packet: bad header %u …", r2_3);
                    label_898c:
                        sub_8af8();
                        goto label_8aec;
                    }
                }
                int32_t r0_4;
                if (arg1 == 0xfe)
                {
                    r0_4 = 2;
                }
                else
                {
                    if (arg1 != 0xfb)
                    {
                        goto label_8958;
                    }
                    if (r9_1 <= 0x29)
                    {
                        if ((*0x20001f38 << 0x1e) < 0)
                        {
                            sub_17c48(5, "Not Hippo packet: too small\n", r2_3);
                        }
                        goto label_898c;
                    }
                    *0x20001700 = 0;
                    uint32_t r0_8 = *0x200013a4;
                    int32_t r1_8 = ((r0_8 >> 0x18) | (((r0_8 >> 0x10) & 0xff) | (((r0_8 >> 8) & 0xff) | (r0_8 & 0xff))));
                    if ((0x5f4d + (r1_8 >> 0x10)) < 0x28)
                    {
                        sub_8af8();
                    }
                    else
                    {
                        uint32_t r0_12 = (*0x2000139a | (*0x2000139c << 0x10));
                        void* r5_1 = 0x20001720;
                        int32_t r1_9 = 0;
                        int32_t r0_13 = ((r0_12 >> 0x18) | (((r0_12 >> 0x10) & 0xff) | (((r0_12 >> 8) & 0xff) | (r0_12 & 0xff))));
                        while (true)
                        {
                            uint32_t r2_7 = *(r5_1 + 6);
                            if (r2_7 != (r1_8 >> 0x10))
                            {
                                r1_9 = (r1_9 + 1);
                                r5_1 = (r5_1 + 0x1c);
                                if (r1_9 < 0xb)
                                {
                                    continue;
                                }
                            }
                            else if (r5_1 != 0x10)
                            {
                                uint32_t r1_10 = *0x200013a2;
                                *r5_1 = r0_13;
                                *(r5_1 + 4) = (((r1_10 >> 0x18) | (((r1_10 >> 0x10) & 0xff) | (((r1_10 >> 8) & 0xff) | (r1_10 & 0xff)))) >> 0x10);
                                uint32_t r12;
                                if ((*0x20001f39 << 0x1f) != 0)
                                {
                                    int32_t var_28_1 = (r9_1 - 0x2a);
                                    uint32_t var_2c_1 = r0_13;
                                    int32_t var_30_1 = ((r0_13 >> 8) & 0xff);
                                    int32_t var_34_2 = ((r0_13 >> 0x10) & 0xff);
                                    uint32_t var_38_2 = (r0_13 >> 0x18);
                                    r12 = sub_17c48(5, "Rx hippo packet len: %u port: %u…", r9_1);
                                }
                                if (r9_1 != 0x2a)
                                {
                                    int32_t* r0_15 = *(r5_1 - 0x10);
                                    if (r0_15 != 0)
                                    {
                                        sub_17f96(r0_15, *0x200013aa, r12);
                                        if (r9_1 != 0x2b)
                                        {
                                            char* r8_2 = 0x200013ab;
                                            int32_t i_2 = (r9_1 - 0x2b);
                                            int32_t i;
                                            do
                                            {
                                                char r1_19 = *r8_2;
                                                r8_2 = &r8_2[1];
                                                sub_17f96(*(r5_1 - 0x10), r1_19, r12);
                                                i = i_2;
                                                i_2 = (i_2 - 1);
                                            } while (i != 1);
                                        }
                                    }
                                }
                                break;
                            }
                            if ((*0x20001f38 << 0x1e) < 0)
                            {
                                uint32_t var_2c_2 = r0_13;
                                int32_t var_30_2 = ((r0_13 >> 8) & 0xff);
                                int32_t var_34_3 = ((r0_13 >> 0x10) & 0xff);
                                uint32_t var_38_3 = (r0_13 >> 0x18);
                                r2_7 = sub_17c48(5, "Unexpected hippo packet len: %u …", r9_1);
                                r9_1 = *0x20001708;
                            }
                            if (r9_1 != 0)
                            {
                                int32_t i_1 = 0;
                                do
                                {
                                    if (((i_1 << 0x1c) == 0 && (*0x20001f38 << 0x1e) < 0))
                                    {
                                        r2_7 = sub_17c48(5, &data_20156, r2_7);
                                    }
                                    if ((*0x20001f38 << 0x1e) < 0)
                                    {
                                        r2_7 = sub_17c48(5, "%02X ", *(0x20001380 + i_1));
                                    }
                                    i_1 = (i_1 + 1);
                                } while (i_1 < *0x20001708);
                            }
                            if ((*0x20001f38 << 0x1e) >= 0)
                            {
                                break;
                            }
                            sub_17c48(5, &data_20160, r2_7);
                            break;
                        }
                    }
                    r0_4 = 0;
                }
                *0x2000170c = r0_4;
                goto label_8aec;
            }
            if (r1_1 != 0)
            {
                r1 = 0;
            }
            else
            {
                r1 = 0;
                if (arg1 == 0xfa)
                {
                    *0x2000170c = 1;
                    *0x20001708 = 0;
                    *0x20001700 = 1;
                    *0x20001704 = (*0x20006064 + *0x20000538);
                    goto label_8aec;
                }
            }
        }
    }
    return r1;
}

int32_t sub_8af8()
{
    *0x20001700 = 0;
    *0x2000170c = 0;
    sub_171fc(&data_21abd, 1, 0);
    /* tailcall */
    return sub_171fc(0x200014aa, *0x2000170a, 0);
}

void sub_8b30(char arg1)
{
    uint32_t r2 = *0x20001708;
    if (r2 != 0x12a)
    {
        *0x20001708 = (r2 + 1);
        *(0x20001380 + r2) = arg1;
        *0x2000170c = 1;
        return;
    }
    if ((*0x20001f38 << 0x1e) >= 0)
    {
        /* tailcall */
        return sub_8af8();
    }
    /* tailcall */
    return sub_8b54();
}

int32_t sub_8b54()
{
    int32_t r2;
    sub_17c48(5, "Not Hippo packet: too large\n", r2);
    /* tailcall */
    return sub_8af8();
}

int32_t sub_8b7e(int32_t arg1, int32_t arg2, int32_t arg3, int16_t arg4)
{
    if (arg1 >= 0xb)
    {
        sub_1fef2("HippoPortSetup", "/Users/cwlange/Desktop/potassium…", 0x168, "idx < numOfHippoPorts");
        /* no return */
    }
    int32_t r12 = (arg1 * 7);
    *(0x20001710 + (r12 << 2)) = arg3;
    *((r12 << 2) + 0x20001714) = arg2;
    *((r12 << 2) + 0x20001726) = arg4;
    *((r12 << 2) + 0x20001724) = 0;
    *((r12 << 2) + 0x20001720) = 0;
    *((r12 << 2) + 0x20001718) = 0;
    *((r12 << 2) + 0x20001729) = 1;
    sub_8bd4(arg1, 0);
    return 0;
}

int32_t sub_8bd4(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if (arg1 >= 0xb)
    {
        sub_1fef2("HippoPortEnable", "/Users/cwlange/Desktop/potassium…", 0x178, "idx < numOfHippoPorts");
        /* no return */
    }
    int32_t r8 = (arg1 * 7);
    if (arg2 != *((r8 << 2) + 0x20001728))
    {
        sub_1806e(*((r8 << 2) + 0x20001714));
        sub_1806e(*(0x20001710 + (r8 << 2)));
    }
    *((r8 << 2) + 0x20001728) = arg2;
    int32_t r0_4 = ((arg2 << arg1) | (*0x20001378 & (!(1 << arg1))));
    *0x20001378 = r0_4;
    if (r0_4 != 0)
    {
        return r0_4;
    }
    /* tailcall */
    return sub_1806e(0x2000002c);
}

int32_t sub_8c64(uint32_t arg1)
{
    if (arg1 <= 0xffffffff)
    {
        arg1 = *0x2000137c;
    }
    else
    {
        if (arg1 != 0)
        {
            arg1 = 1;
        }
        *0x2000137c = arg1;
    }
    int32_t r1 = *0x20001378;
    if (r1 != 0)
    {
        r1 = 1;
    }
    return (arg1 & r1);
}

void sub_8c9a(void* arg1, char arg2)
{
    bool cond:0 = arg1 < 0xb;
    if (arg1 < 0xb)
    {
        arg1 = (0x20001710 + (arg1 * 0x1c));
    }
    if (cond:0)
    {
        *(arg1 + 0x19) = arg2;
        return;
    }
    /* no return */
}

int32_t sub_8cb4() __noreturn
{
    sub_1fef2("HippoPortPingEnable", "/Users/cwlange/Desktop/potassium…", 0x194, "idx < numOfHippoPorts");
    /* no return */
}

uint32_t sub_8cd8(int32_t arg1)
{
    uint32_t r0_2 = *((arg1 * 0x1c) + 0x20001724);
    if (r0_2 != 0)
    {
        r0_2 = 1;
    }
    return r0_2;
}

uint32_t sub_8cf2()
{
    uint32_t r12;
    if ((*0x20001700 != 0 && (*0x20006064 - *0x20001704) >= 0))
    {
        int32_t r2;
        if ((*0x20001f38 << 0x1e) < 0)
        {
            sub_17c48(5, "Not Hippo packet: timeout\n", r2);
        }
        r12 = sub_8af8();
    }
    uint32_t r0_6 = *0x2000137c;
    if (r0_6 != 0)
    {
        int32_t i = 0;
        do
        {
            r0_6 = *((i * 0x1c) + 0x20001728);
            if (r0_6 != 0)
            {
                r0_6 = *((i * 0x1c) + 0x20001714);
                if (r0_6 != 0)
                {
                    uint32_t r0_7;
                    if (*((i * 0x1c) + 0x20001724) != 0)
                    {
                        r0_7 = sub_17f92(r0_6);
                        if (r0_7 == 0)
                        {
                            uint32_t j_2 = sub_17f62(*((i * 0x1c) + 0x20001714));
                            if ((0x56 + (j_2 << 1)) <= sub_17f78(0x2000002c))
                            {
                                sub_17f96(0x2000002c, 0xfa, r12);
                                int32_t r1_7;
                                uint32_t r2_5;
                                r1_7 = sub_8ee4((0x20001710 + (i * 0x1c)), j_2, 0);
                                uint32_t j_1 = j_2;
                                if (j_2 != 0)
                                {
                                    uint32_t j;
                                    do
                                    {
                                        int32_t r0_17;
                                        r0_17 = sub_17ff6(*((i * 0x1c) + 0x20001714), r1_7, r2_5);
                                        r1_7 = sub_8ea4(r0_17, 1);
                                        j = j_1;
                                        j_1 = (j_1 - 1);
                                    } while (j != 1);
                                }
                                sub_17f96(0x2000002c, 0xfb, r12);
                                if ((*0x20001f39 << 0x1f) != 0)
                                {
                                    r12 = sub_17c48(5, "Tx hippo packet port: %u payload…", *((i * 0x1c) + 0x20001726));
                                }
                            }
                            int32_t r0_20 = *0x20006064;
                            *((i * 0x1c) + 0x20001718) = 1;
                            r0_6 = (r0_20 + 0xfa);
                            *((i * 0x1c) + 0x2000171c) = r0_6;
                        }
                    }
                    if ((*((i * 0x1c) + 0x20001724) == 0 || (*((i * 0x1c) + 0x20001724) != 0 && r0_7 != 0)))
                    {
                        r0_6 = ((i * 0x1c) + 0x20001718);
                        void* r1_5;
                        if (*r0_6 == 0)
                        {
                            r1_5 = ((i * 0x1c) + 0x2000171c);
                        }
                        else
                        {
                            r1_5 = ((i * 0x1c) + 0x2000171c);
                        }
                        if ((*r0_6 == 0 || (*r0_6 != 0 && (*0x20006064 - *r1_5) >= 0)))
                        {
                            *r1_5 = (*0x20006064 + 0xfa);
                            *r0_6 = 1;
                            r0_6 = *((i * 0x1c) + 0x20001729);
                            if (r0_6 != 0)
                            {
                                r0_6 = sub_17f78(0x2000002c);
                                if (r0_6 >= 0x5a)
                                {
                                    sub_17f96(0x2000002c, 0xfa, r12);
                                    r12 = sub_8ee4((0x20001710 + (i * 0x1c)), 2, 1);
                                    sub_8ea4(*((i * 0x1c) + 0x20001727), 1);
                                    sub_8ea4(*((i * 0x1c) + 0x20001726), 1);
                                    r0_6 = 0x2000002c;
                                    sub_17f96(0x2000002c, 0xfb, r12);
                                }
                            }
                        }
                    }
                }
            }
            i = (i + 1);
        } while (i != 0xb);
    }
    return r0_6;
}

int32_t sub_8ea4(int32_t arg1, int32_t arg2)
{
    int32_t r4 = arg1;
    uint32_t r12;
    if ((arg2 == 1 && ((r4 - 0xfa) <= 4 && ((1 << (r4 - 0xfa)) & 0x13) != 0)))
    {
        sub_17f96(0x2000002c, 0xfe, r12);
        r4 = (!r4);
    }
    /* tailcall */
    return sub_17f96(0x2000002c, r4, r12);
}

int32_t sub_8ee4(void* arg1, int32_t arg2, int32_t arg3)
{
    void var_4c;
    sub_1f886(&var_4c, 0, 0x2a);
    int16_t var_40 = 8;
    char var_3e = 0x45;
    char var_35 = 0x11;
    int16_t var_30 = 0;
    int16_t var_32 = 0;
    int32_t r0_1 = *(arg1 + 0x10);
    uint16_t var_3c = ((((arg2 + 0x1c) >> 0x18) | ((((arg2 + 0x1c) >> 0x10) & 0xff) | ((((arg2 + 0x1c) >> 8) & 0xff) | ((arg2 + 0x1c) & 0xff)))) >> 0x10);
    int32_t r0_2 = ((r0_1 >> 0x18) | (((r0_1 >> 0x10) & 0xff) | (((r0_1 >> 8) & 0xff) | (r0_1 & 0xff))));
    int16_t var_2e = r0_2;
    uint16_t var_2c = (r0_2 >> 0x10);
    uint16_t r0_4;
    uint16_t r1_3;
    if (arg3 == 0)
    {
        uint32_t r0_5 = *(arg1 + 0x14);
        r1_3 = (((r0_5 >> 0x18) | (((r0_5 >> 0x10) & 0xff) | (((r0_5 >> 8) & 0xff) | (r0_5 & 0xff)))) >> 0x10);
        uint32_t r0_7 = *(arg1 + 0x16);
        r0_4 = (((r0_7 >> 0x18) | (((r0_7 >> 0x10) & 0xff) | (((r0_7 >> 8) & 0xff) | (r0_7 & 0xff)))) >> 0x10);
    }
    else
    {
        r0_4 = 0x3bc9;
        r1_3 = 0x3bc9;
    }
    uint16_t var_28 = r1_3;
    uint16_t var_2a = r0_4;
    int16_t var_24 = 0;
    int32_t i = 1;
    uint16_t var_26 = ((((arg2 + 8) >> 0x18) | ((((arg2 + 8) >> 0x10) & 0xff) | ((((arg2 + 8) >> 8) & 0xff) | ((arg2 + 8) & 0xff)))) >> 0x10);
    sub_8ea4(0, 1);
    do
    {
        sub_8ea4(*(&var_4c + i), 1);
        i = (i + 1);
    } while (i != 0x2a);
    return 0x2000002c;
}

uint32_t sub_8f96(uint32_t arg1)
{
    uint32_t r4;
    if (arg1 >= 0x10000)
    {
        r4 = *0x20001844;
    }
    else
    {
        r4 = arg1;
        if (arg1 != 0)
        {
            r4 = 1;
        }
        if ((*0x20001f38 << 0x1d) < 0)
        {
            int32_t r2_1 = 0x54;
            if (*0x20001844 == 0)
            {
                r2_1 = 0x46;
            }
            sub_17c48(5, "swd_bypass_enable: %c -> %c\n", r2_1);
        }
        *0x20001844 = r4;
    }
    return r4;
}

uint32_t sub_8ffe(uint32_t arg1)
{
    uint32_t r4;
    if (arg1 >= 0x10000)
    {
        r4 = *0x20001846;
    }
    else
    {
        r4 = arg1;
        if (arg1 != 0)
        {
            r4 = 1;
        }
        if ((*0x20001f38 << 0x1d) < 0)
        {
            int32_t r2_1 = 0x54;
            if (*0x20001846 == 0)
            {
                r2_1 = 0x46;
            }
            sub_17c48(5, "swd_overrun_mode: %c -> %c\n", r2_1);
        }
        *0x20001846 = r4;
    }
    return r4;
}

uint32_t sub_9068()
{
    int32_t lr;
    int32_t var_4 = lr;
    *0x20000044 = 0xffffffff;
    uint32_t i_1 = *0x2000004c;
    uint32_t i_2 = i_1;
    if (i_1 >= 0x20)
    {
        uint32_t i = i_1;
        do
        {
            sub_9d48(0x20, 0xffffffff);
            i = (i - 0x20);
        } while (i > 0x1f);
        i_2 = (i_1 & 0x1f);
    }
    if (i_2 != 0)
    {
        sub_9d48(i_2, 0xffffffff);
    }
    if ((*0x20001f38 << 0x1c) < 0)
    {
        sub_17c48(5, "ILR:%X\n", i_1);
    }
    int32_t r2_2 = sub_9d48(0x10, 0xe79e);
    uint32_t r0_3 = (*0x20001f38 << 0x1c);
    if (r0_3 >= 0)
    {
        return r0_3;
    }
    /* tailcall */
    return sub_17c48(5, "J2S\n", r2_2);
}

int32_t sub_90ec()
{
    int32_t r5 = *0x2000184c;
    sub_9068();
    sub_9176();
    if (r5 != 0)
    {
        uint32_t r6_1 = *0x20001846;
        sub_8ffe(1);
        int32_t var_1c_1 = 0;
        sub_17928();
        sub_8ffe(r6_1);
    }
    sub_17928();
    return 1;
}

uint32_t sub_9176()
{
    int32_t lr;
    int32_t var_4 = lr;
    *0x20000044 = 0xffffffff;
    uint32_t i_2 = *0x20000048;
    uint32_t i_3 = *0x2000004c;
    uint32_t i_4 = i_3;
    if (i_3 >= 0x20)
    {
        uint32_t i = i_3;
        do
        {
            sub_9d48(0x20, 0xffffffff);
            i = (i - 0x20);
        } while (i > 0x1f);
        i_4 = (i_3 & 0x1f);
    }
    if (i_4 != 0)
    {
        sub_9d48(i_4, 0xffffffff);
    }
    if ((*0x20001f38 << 0x1c) < 0)
    {
        sub_17c48(5, "ILR:%X\n", i_3);
    }
    uint32_t i_5 = i_2;
    if (i_2 >= 0x20)
    {
        uint32_t i_1 = i_2;
        do
        {
            sub_9d48(0x20, 0);
            i_1 = (i_1 - 0x20);
        } while (i_1 > 0x1f);
        i_5 = (i_2 & 0x1f);
    }
    if (i_5 != 0)
    {
        sub_9d48(i_5, 0);
    }
    uint32_t r0_3 = (*0x20001f38 << 0x1c);
    if (r0_3 >= 0)
    {
        return r0_3;
    }
    /* tailcall */
    return sub_17c48(5, "IDL:%X\n", i_2);
}

int32_t sub_922a()
{
    sub_17928();
    return 0;
}

int32_t sub_9248()
{
    sub_17928();
    return 0;
}

uint32_t sub_9266(int32_t arg1, uint32_t arg2, uint32_t* arg3)
{
    int32_t r0 = (arg1 ^ (arg1 >> 0x10));
    int32_t r0_1 = (r0 ^ (r0 >> 8));
    uint32_t r11 = *0x20001846;
    uint32_t i_3 = *0x20000048;
    sub_9d48(8, (((0x20 & ((0x6996 >> ((r0_1 ^ (r0_1 >> 4)) & 0xf)) << 5)) | arg1) | 0x81));
    uint32_t r5 = *0x20001848;
    if (r5 != 0)
    {
        r5 = (1 << r5);
    }
    uint32_t i_2 = (r5 * 0x38);
    uint32_t i;
    do
    {
        i = i_2;
        i_2 = (i_2 - 1);
    } while (i > 1);
    sub_1810a(0x40020000, 4);
    sub_18190(0x40020000, 0x40);
    uint32_t r0_8 = sub_9dc0(4);
    sub_1818c(0x40020000, 0x40);
    sub_1812e(0x40020000, 4);
    int32_t r2 = sub_9d48(1, 0);
    if ((*0x20001f38 << 0x1c) < 0)
    {
        int32_t var_30_1 = (0xc & (arg1 >> 1));
        r2 = sub_17c48(5, "%10u %cP w %X", *0x20006064);
    }
    uint32_t r5_2 = (r0_8 >> 1);
    uint32_t* r4_1;
    if ((r11 != 0 || (r11 == 0 && r5_2 == 1)))
    {
        sub_9d48(0x20, arg2);
        uint32_t r0_14 = (arg2 ^ (arg2 >> 0x10));
        uint32_t r0_15 = (r0_14 ^ (r0_14 >> 8));
        sub_9d48(1, ((0x6996 >> ((r0_15 ^ (r0_15 >> 4)) & 0xf)) & 1));
        r4_1 = arg3;
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_17c48(5, " = %08X", arg2);
        }
    }
    if ((r11 == 0 && r5_2 != 1))
    {
        r4_1 = arg3;
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_17c48(5, "           ", r2);
        }
    }
    if ((*0x20001f38 << 0x1c) < 0)
    {
        sub_17c48(5, " ack %X idl %X\n", r5_2);
    }
    if (i_3 >= 0x20)
    {
        uint32_t i_1 = i_3;
        do
        {
            sub_9d48(0x20, 0);
            i_1 = (i_1 - 0x20);
        } while (i_1 > 0x1f);
        i_3 = (i_3 & 0x1f);
    }
    if (i_3 != 0)
    {
        sub_9d48(i_3, 0);
    }
    uint32_t r0_24 = 0x40020000;
    sub_1818c(0x40020000, 4);
    bool cond:1 = arg1 != 8;
    if (arg1 == 8)
    {
        cond:1 = r5_2 != 1;
    }
    if ((!cond:1))
    {
        r0_24 = sub_8ffe((arg2 & 1));
    }
    *r4_1 = r5_2;
    return r0_24;
}

uint32_t* sub_9430(int32_t arg1, int32_t* arg2, uint32_t* arg3)
{
    int32_t r0_1 = ((arg1 | 4) ^ (arg1 >> 0x10));
    int32_t r0_2 = (r0_1 ^ (r0_1 >> 8));
    uint32_t r8 = *0x20001846;
    uint32_t r10 = *0x20000048;
    sub_9d48(8, (((0x20 & ((0x6996 >> ((r0_2 ^ (r0_2 >> 4)) & 0xf)) << 5)) | arg1) | 0x85));
    uint32_t r6 = *0x20001848;
    if (r6 != 0)
    {
        r6 = (1 << r6);
    }
    uint32_t i_2 = (r6 * 0x38);
    uint32_t i;
    do
    {
        i = i_2;
        i_2 = (i_2 - 1);
    } while (i > 1);
    sub_1810a(0x40020000, 4);
    sub_18190(0x40020000, 0x40);
    uint32_t r0_9;
    int32_t r2;
    r0_9 = sub_9dc0(4);
    if ((*0x20001f38 << 0x1c) < 0)
    {
        int32_t var_30_1 = (0xc & (arg1 >> 1));
        r2 = sub_17c48(5, "%10u %cP r %X", *0x20006064);
    }
    uint32_t r4_1 = (r0_9 >> 1);
    char const* const r5_1;
    if ((r8 != 0 || (r8 == 0 && r4_1 == 1)))
    {
        *arg2 = sub_9dc0(0x20);
        uint32_t r0_16 = sub_9dc0(1);
        int32_t r2_2 = *arg2;
        r5_1 = &data_2022a;
        int32_t r1_1 = (r2_2 ^ (r2_2 >> 0x10));
        int32_t r1_2 = (r1_1 ^ (r1_1 >> 8));
        int32_t r3_3 = 0;
        uint32_t r0_17 = r4_1;
        if (r0_16 != ((0x6996 >> ((r1_2 ^ (r1_2 >> 4)) & 0xf)) & 1))
        {
            r3_3 = 1;
        }
        if (r4_1 != 1)
        {
            r0_17 = 0;
        }
        if ((r0_17 & r3_3) != 0)
        {
            r5_1 = "bad parity";
            r4_1 = 9;
        }
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_17c48(5, " = %08X", r2_2);
        }
    }
    if ((r8 == 0 && r4_1 != 1))
    {
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_17c48(5, "           ", r2);
        }
        *arg2 = 0xffffffff;
        r5_1 = &data_2022a;
    }
    if ((*0x20001f38 << 0x1c) < 0)
    {
        char const* const var_30_2 = r5_1;
        sub_17c48(5, " ack %X idl %X %s\n", r4_1);
    }
    sub_1818c(0x40020000, 0x40);
    sub_1812e(0x40020000, 4);
    int32_t i_3 = (r10 + 1);
    if (r10 >= 0x1f)
    {
        int32_t i_1 = i_3;
        do
        {
            sub_9d48(0x20, 0);
            i_1 = (i_1 - 0x20);
        } while (i_1 > 0x1f);
        i_3 = (i_3 & 0x1f);
    }
    if ((r10 < 0x1f || (r10 >= 0x1f && i_3 != 0)))
    {
        sub_9d48(i_3, 0);
    }
    sub_1818c(0x40020000, 4);
    *arg3 = r4_1;
    return arg3;
}

int32_t sub_960c(int32_t arg1, int32_t arg2, int32_t* arg3)
{
    int32_t r8 = 0xc8;
    int32_t r5 = arg2;
    uint32_t r10 = *0x20001846;
    if (r10 != 0)
    {
        r8 = 0x14;
    }
    int32_t var_30;
    int32_t r0_1;
    int32_t i;
    if (*arg3 == 0)
    {
        i = 0;
    }
    else
    {
        r0_1 = (arg1 & 2);
        i = 0;
        do
        {
            int32_t r9_1 = 0;
            int32_t r0_3;
            while (true)
            {
                int32_t var_2c_1 = 0;
                sub_17928();
                r0_3 = var_2c_1;
                var_30 = r0_3;
                if (r0_3 != 2)
                {
                    break;
                }
                int32_t r0_5;
                if (r10 != 0)
                {
                    r0_5 = sub_9728(&var_30);
                }
                if ((r10 == 0 || (r10 != 0 && r0_5 != 0)))
                {
                    r9_1 = (r9_1 + 1);
                    if (r9_1 < r8)
                    {
                        if (i >= *arg3)
                        {
                            goto label_96ae;
                        }
                        continue;
                    }
                }
                r0_3 = var_30;
                break;
            }
            if (r0_3 != 1)
            {
                break;
            }
            bool cond:1_1 = i != 0;
            int32_t r0_7 = (r5 + 4);
            i = (i + 1);
            if (cond:1_1)
            {
                r5 = r0_7;
            }
            if (r0_1 == 0)
            {
                r5 = r0_7;
            }
        } while (i < *arg3);
    label_96ae:
    }
    int32_t r0_14;
    if (((*arg3 == 0 || (*arg3 != 0 && r0_1 == 0)) || ((*arg3 != 0 && r0_1 != 0) && i == 0)))
    {
        r0_14 = var_30;
    }
    if (((*arg3 != 0 && r0_1 != 0) && i != 0))
    {
        int32_t r9_2 = 0;
        do
        {
            int32_t var_28_1 = 0;
            sub_17928();
            var_30 = var_28_1;
            if (var_28_1 != 2)
            {
                break;
            }
            if ((r10 != 0 && sub_9728(&var_30) == 0))
            {
                break;
            }
            r9_2 = (r9_2 + 1);
        } while (r9_2 < r8);
        r0_14 = var_30;
        if (r0_14 != 1)
        {
            i = (i - 1);
        }
    }
    if (r0_14 == 7)
    {
        sub_97e6();
        r0_14 = var_30;
    }
    *arg3 = i;
    int32_t r0_15;
    if (r0_14 == 1)
    {
        r0_15 = 0;
    }
    else if (r0_14 == 8)
    {
        r0_15 = 0xfd;
    }
    else if (r0_14 != 2)
    {
        r0_15 = 0xfe;
    }
    else
    {
        r0_15 = 0xff;
    }
    return r0_15;
}

int32_t sub_9728(int32_t* arg1)
{
    int32_t i_1 = 1;
    int32_t var_2c;
    int32_t r2_1;
    int32_t i;
    do
    {
        int32_t var_28_1 = 0;
        r2_1 = sub_17928();
        if ((var_2c & 0xb2) != 0)
        {
            break;
        }
        i = i_1;
        i_1 = (i_1 - 1);
    } while (i != 1);
    int32_t r0_3;
    int32_t r5;
    if ((var_2c << 0x18) >= 0)
    {
        r5 = 1;
        r0_3 = 0;
    }
    else
    {
        if ((*0x20001f38 << 0x1d) < 0)
        {
            sub_17c48(5, "wdataerr\n", r2_1);
        }
        r0_3 = 8;
        r5 = 0;
        if (arg1 != 0)
        {
            *arg1 = 8;
        }
    }
    if ((var_2c & 0x30) != 0)
    {
        r5 = 0;
        if (arg1 != 0)
        {
            *arg1 = 4;
        }
    }
    if (((0x10 & (var_2c << 3)) | r0_3) != 0)
    {
        int32_t var_24_1 = 0;
        sub_17928();
    }
    return r5;
}

uint32_t sub_97e6()
{
    sub_17928();
    sub_9176();
    int32_t r2 = sub_17928();
    int32_t r4 = 0;
    if ((*0x20001f38 << 0x1d) < 0)
    {
        r2 = sub_17c48(5, "clean; ack = %X", r4);
    }
    int32_t var_1c;
    if ((r4 == 1 && (*0x20001f38 << 0x1d) < 0))
    {
        r2 = sub_17c48(5, "; idcode = %08X", var_1c);
    }
    uint32_t r0_7 = (*0x20001f38 << 0x1d);
    if (r0_7 < 0)
    {
        r0_7 = sub_17c48(5, &data_20160, r2);
    }
    return r0_7;
}

int32_t sub_9876(int32_t arg1, int32_t arg2, int32_t* arg3)
{
    int32_t r9 = 0xc8;
    uint32_t r0 = *0x20001846;
    int32_t r0_1 = 0;
    if (r0 != 0)
    {
        r9 = 0x14;
    }
    if ((arg1 & 0x1a) == 0x1a)
    {
        r0_1 = 1;
    }
    uint32_t r1_1 = *0x20001844;
    if (r1_1 != 0)
    {
        r1_1 = 1;
    }
    if (arg1 == 0x10)
    {
        *0x20000044 = 0xffffffff;
    }
    int32_t r1_2 = (r1_1 & r0_1);
    int32_t r5_1;
    int32_t r10;
    if (*arg3 == 0)
    {
        r5_1 = 1;
        r10 = 0;
    }
    else
    {
        int32_t r3_1 = (arg1 & 2);
        r10 = 0;
        int32_t var_40_1 = r3_1;
        int32_t r0_3 = 0;
        int32_t r1_3 = r3_1;
        int32_t r8_1 = 0;
        if (r10 < 2)
        {
            r0_3 = 1;
        }
        if (r3_1 != 0)
        {
            r1_3 = 1;
        }
        while (true)
        {
            *(arg2 + (r10 << 2));
            sub_17928();
            r5_1 = 0;
            if ((1 | (r1_3 & r0_3)) != 0)
            {
                break;
            }
            int32_t r0_9;
            if (r0 != 0)
            {
                r0_9 = sub_9728(nullptr);
            }
            if ((r0 == 0 || (r0 != 0 && r0_9 != 0)))
            {
                r8_1 = (r8_1 + 1);
                if ((r8_1 < r9 && r10 < *arg3))
                {
                    continue;
                }
            }
            r5_1 = 2;
            break;
        }
        r1_2 = r1_2;
    }
    *arg3 = r10;
    int32_t r0_23;
    if ((r1_2 != 1 && r5_1 == 7))
    {
        sub_97e6();
    label_9a9a:
        r0_23 = 0xfe;
    }
    if (r1_2 == 1)
    {
        uint32_t r9_1 = *0x20001845;
        uint32_t i_2 = *0x20000048;
        uint32_t i_3 = *0x2000004c;
        uint32_t i_4 = i_3;
        if (i_3 >= 0x20)
        {
            uint32_t i = i_3;
            do
            {
                sub_9d48(0x20, 0);
                i = (i - 0x20);
            } while (i > 0x1f);
            i_4 = (i_3 & 0x1f);
        }
        if (i_4 != 0)
        {
            sub_9d48(i_4, 0);
        }
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_17c48(5, "IDL:%X\n", i_3);
        }
        if (r9_1 == 0)
        {
            sub_9176();
        }
        else
        {
            sub_9068();
        }
        uint32_t i_5 = i_2;
        if (i_2 >= 0x20)
        {
            uint32_t i_1 = i_2;
            do
            {
                sub_9d48(0x20, 0);
                i_1 = (i_1 - 0x20);
            } while (i_1 > 0x1f);
            i_5 = (i_2 & 0x1f);
        }
        if (i_5 != 0)
        {
            sub_9d48(i_5, 0);
        }
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_17c48(5, "IDL:%X\n", i_2);
        }
        int32_t r2_2 = sub_17928();
        r5_1 = 0;
        if ((*0x20001f38 << 0x1d) < 0)
        {
            r2_2 = sub_17c48(5, "bypass; ack = %X", 0);
        }
        if ((*0x20001f38 << 0x1d) < 0)
        {
            sub_17c48(5, &data_20160, r2_2);
        }
    }
    if (((r1_2 != 1 && r5_1 != 7) || r1_2 == 1))
    {
        if (r5_1 == 1)
        {
            r0_23 = 0;
        }
        else if (r5_1 == 8)
        {
            r0_23 = 0xfd;
        }
        else
        {
            if (r5_1 != 2)
            {
                goto label_9a9a;
            }
            r0_23 = 0xff;
        }
    }
    return r0_23;
}

int32_t sub_9aac(int32_t arg1, int32_t arg2, int32_t arg3, int32_t* arg4)
{
    int32_t r4 = ((arg2 & 0xf0) | (arg1 << 0x18));
    int32_t r0 = *0x20000044;
    int32_t var_28 = r4;
    int32_t r0_1;
    if (r4 != r0)
    {
        int32_t var_24 = 1;
        r0_1 = sub_9876(0x10, &var_28, &var_24);
        if ((r0_1 == 0 && *0x20000040 != 0))
        {
            *0x20000044 = r4;
        }
    }
    if ((r4 == r0 || (r4 != r0 && r0_1 == 0)))
    {
        r0_1 = sub_960c(((0x18 & (arg2 << 1)) | 2), arg3, arg4);
    }
    return r0_1;
}

int32_t sub_9b10(int32_t arg1, int32_t arg2, int32_t arg3, int32_t* arg4)
{
    int32_t r4 = ((arg2 & 0xf0) | (arg1 << 0x18));
    int32_t r0 = *0x20000044;
    int32_t var_28 = r4;
    int32_t r0_1;
    if (r4 != r0)
    {
        int32_t var_24 = 1;
        r0_1 = sub_9876(0x10, &var_28, &var_24);
        if ((r0_1 == 0 && *0x20000040 != 0))
        {
            *0x20000044 = r4;
        }
    }
    if ((r4 == r0 || (r4 != r0 && r0_1 == 0)))
    {
        r0_1 = sub_9876(((0x18 & (arg2 << 1)) | 2), arg3, arg4);
    }
    return r0_1;
}

int32_t sub_9b74(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t* arg6)
{
    int32_t r0_3;
    while (true)
    {
        int32_t var_30 = 0;
        int32_t var_2c;
        int32_t var_28;
        if (arg1 != 4)
        {
            var_2c = arg3;
            var_28 = 1;
            r0_3 = sub_9b10(arg1, 4, &var_2c, &var_28);
            if (r0_3 != 0)
            {
                break;
            }
        }
        if ((arg1 == 4 || (r0_3 == 0 && arg1 == 4)))
        {
            var_2c = arg4;
            var_28 = 1;
            r0_3 = sub_9b10(arg1, 8, &var_2c, &var_28);
            if (r0_3 != 0)
            {
                break;
            }
        }
        var_30 = *arg6;
        r0_3 = sub_9aac(arg1, 0xc, arg5, &var_30);
        if (r0_3 != 0xfd)
        {
            *arg6 = var_30;
            break;
        }
    }
    return r0_3;
}

int32_t sub_9bf6(int32_t arg1, int32_t arg2, int32_t arg3)
{
    int32_t var_c = 1;
    return sub_9b10(arg1, arg2, arg3, &var_c);
}

int32_t sub_9c0a(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t* arg6)
{
    int32_t var_30 = *arg6;
    *arg6 = 0;
    int32_t var_2c = arg3;
    int32_t var_28 = 1;
    int32_t i = sub_9b10(arg1, 4, &var_2c, &var_28);
    if (i == 0)
    {
        if (arg1 == 4)
        {
            var_2c = arg4;
            var_28 = 1;
            i = sub_9b10(4, 8, &var_2c, &var_28);
        }
        if ((arg1 != 4 || (arg1 == 4 && i == 0)))
        {
            i = sub_9b10(arg1, 0xc, arg5, &var_30);
            if (*0x20001844 != 0)
            {
                sub_8f96(0);
            }
            else
            {
                *arg6 = var_30;
                if (i == 0)
                {
                    do
                    {
                        int32_t r8_2 = 1;
                        int32_t r0_9;
                        int32_t r6;
                        while (true)
                        {
                            r6 = 0;
                            var_28 = 0;
                            sub_17928();
                            r0_9 = var_2c;
                            if ((r0_9 & 0xb2) != 0)
                            {
                                break;
                            }
                            int32_t temp0_1 = r8_2;
                            r8_2 = (r8_2 - 1);
                            if (temp0_1 == 1)
                            {
                                r6 = 1;
                                break;
                            }
                        }
                        if ((r0_9 << 0x18) >= 0)
                        {
                            if (r6 == 0)
                            {
                                i = 0xfe;
                                *arg6 = (*arg6 - 1);
                            }
                            else
                            {
                                i = 0;
                            }
                            break;
                        }
                        var_28 = 0;
                        sub_17928();
                        int32_t r0_12 = *arg6;
                        var_28 = 1;
                        i = sub_9b10(arg1, 0xc, ((arg5 + (r0_12 << 2)) - 4), &var_28);
                    } while (i == 0);
                }
            }
        }
    }
    return i;
}

int32_t sub_9d32(int32_t arg1, int32_t arg2, int32_t arg3)
{
    int32_t var_c = 1;
    return sub_9aac(arg1, arg2, arg3, &var_c);
}

int32_t sub_9d48(int32_t arg1, uint32_t arg2)
{
    int32_t i_4 = *0x20000050;
    if (i_4 == 0)
    {
        uint32_t r1 = (arg2 >> 1);
        if ((!(TEST_BIT(arg2, 0))))
        {
            *0x40020018 = 4;
        }
        else
        {
            *0x4002001a = 4;
        }
        while (true)
        {
            int32_t temp3_1 = arg1;
            arg1 = (arg1 - 1);
            if (temp3_1 < 1)
            {
                break;
            }
            *0x40020018 = 2;
            uint32_t temp4_1 = r1;
            r1 = (r1 >> 1);
            if ((!(TEST_BIT(temp4_1, 0))))
            {
                *0x40020018 = 4;
            }
            else
            {
                *0x4002001a = 4;
            }
            *0x4002001a = 2;
        }
        return arg1;
    }
    while (true)
    {
        int32_t temp1_1 = arg1;
        arg1 = (arg1 - 1);
        *0x4002001a = 2;
        if (temp1_1 < 1)
        {
            break;
        }
        uint32_t temp2_1 = arg2;
        arg2 = (arg2 >> 1);
        if ((!(TEST_BIT(temp2_1, 0))))
        {
            *0x40020018 = 4;
        }
        else
        {
            *0x4002001a = 4;
        }
        int32_t i_2 = i_4;
        int32_t i;
        do
        {
            i = i_2;
            i_2 = (i_2 - 1);
        } while (i > 1);
        *0x40020018 = 2;
        int32_t i_3 = i_4;
        int32_t i_1;
        do
        {
            i_1 = i_3;
            i_3 = (i_3 - 1);
        } while (i_1 > 1);
    }
    return arg1;
}

uint32_t sub_9dc0(int32_t arg1)
{
    int32_t i_4 = *0x20000050;
    int32_t r1;
    if (i_4 == 0)
    {
        r1 = 0;
        int32_t r4_1 = arg1;
        while (true)
        {
            int32_t temp0_1 = r4_1;
            r4_1 = (r4_1 - 1);
            if (temp0_1 < 1)
            {
                break;
            }
            int32_t r3_2 = *0x42400208;
            *0x40020018 = 2;
            r1 = (RORD((r1 | r3_2), 1));
            *0x4002001a = 2;
        }
    }
    else
    {
        r1 = 0;
        int32_t r5_1 = arg1;
        while (true)
        {
            int32_t temp1_1 = r5_1;
            r5_1 = (r5_1 - 1);
            if (temp1_1 < 1)
            {
                break;
            }
            int32_t r3_1 = *0x42400208;
            *0x40020018 = 2;
            r1 = (RORD((r1 | r3_1), 1));
            int32_t i_2 = i_4;
            int32_t i;
            do
            {
                i = i_2;
                i_2 = (i_2 - 1);
            } while (i > 1);
            *0x4002001a = 2;
            int32_t i_3 = i_4;
            int32_t i_1;
            do
            {
                i_1 = i_3;
                i_3 = (i_3 - 1);
            } while (i_1 > 1);
        }
    }
    return (r1 >> (0x20 - arg1));
}

int32_t sub_9e38()
{
    int32_t r2;
    sub_17ba2(4, "Initializing SWD \n", r2);
    sub_1807c(&data_21ac0, 2);
    sub_1812e(0x40020000, 0x10);
    sub_1812e(0x40020000, 0x40);
    sub_18190(0x40020000, 2);
    sub_1818c(0x40020000, 0x10);
    sub_1812e(0x40020000, 2);
    sub_1818c(0x40020000, 0x40);
    sub_1812e(0x40020000, 4);
    /* tailcall */
    return sub_18190(0x40021000, 0x8000);
}

int32_t sub_9ea6(int32_t arg1)
{
    sub_17ba2(4, "Initializing Mojo/UART at baud %…", arg1);
    sub_1812e(0x40020000, 0x10);
    sub_1812e(0x40020000, 0x40);
    sub_18190(0x40020000, 0x10);
    sub_1818c(0x40020000, 0x40);
    sub_1807c(&data_21af8, 2);
    sub_1a000("%u %u %u\n", 1);
    sub_1a000(0x80000, 1);
    int32_t r1;
    if (arg1 < 0x16e361)
    {
        sub_1a372(0x40004400, 0);
        r1 = 0;
    }
    else
    {
        sub_17ba2(6, "High Baud Rate, Setting Oversamp…", 0x40023840);
        sub_1a372(0x40004400, 1);
        r1 = 1;
    }
    sub_1a372(0x40004c00, r1);
    int32_t var_30 = arg1;
    int32_t var_2c = 0;
    int32_t var_28 = 0x80000;
    int16_t var_24 = 0;
    sub_1a29c(0x40004400, &var_30);
    sub_1a360(0x40004400, 1);
    var_30 = arg1;
    int32_t var_2c_1 = 0;
    int32_t var_28_1 = 0x40000;
    int16_t var_24_1 = 0;
    sub_1a29c(0x40004c00, &var_30);
    sub_1a360(0x40004c00, 1);
    *0xe000e104 = 0x100000;
    *0xe000e434 = 0x80;
    int32_t r0 = sub_17ba2(3, "Target ready for host comms\n", sub_1a390(0x40004c00, 0x525, 1));
    *0x20001d9c = 1;
    return r0;
}

int32_t sub_9fd6()
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0 = sub_1a3d6(0x40004c00, 0x525);
    if (r0 == 0)
    {
        return r0;
    }
    int32_t r12;
    /* tailcall */
    return sub_17f96(0x20000aec, *0x40004c04, r12);
}

uint32_t sub_a004()
{
    uint32_t i = sub_17f92(0x20000b00);
    if (i == 0)
    {
        do
        {
            int32_t r1;
            uint32_t r2;
            r1 = sub_197c2(0x40004400, sub_17ff6(0x20000b00, r1, r2));
            i = sub_17f92(0x20000b00);
        } while (i == 0);
    }
    return i;
}

int32_t sub_a040()
{
    int32_t r2;
    sub_17ba2(4, "DeInit Debug Pins\n", r2);
    *0xe000e184 = 0x100000;
    sub_1a360(0x40004c00, 0);
    sub_1a1d8(0x40004c00);
    sub_1a000(0x80000, 0);
    sub_1a360(0x40004400, 0);
    sub_1a1d8(0x40004400);
    sub_1a000("%u %u %u\n", 0);
    int32_t r0 = sub_17ba2(3, "Target NOT ready for host comms\n", sub_1807c(&data_21b30, 4));
    *0x20001d9c = 0;
    return r0;
}

int32_t sub_a0ce(int32_t arg1)
{
    int32_t r1 = 0;
    int32_t r2 = *0x20000050;
    int32_t r4_1;
    int32_t lr;
    while (true)
    {
        r4_1 = *(0x21ba0 + (r1 << 3));
        if (r4_1 >= r2)
        {
            lr = *((r1 << 3) + 0x21ba4);
            break;
        }
        r1 = (r1 + 1);
        if (r1 >= 0x17)
        {
            r4_1 = *(0x21ba0 + (r1 << 3));
            lr = 0;
            r1 = 0x17;
            break;
        }
    }
    int32_t r5_1 = (r4_1 - *(0x21ba0 + ((r1 - 1) << 3)));
    if (r5_1 >= 2)
    {
        lr = (lr + (((r4_1 - r2) * (*(((r1 - 1) << 3) + 0x21ba4) - *((r1 << 3) + 0x21ba4))) / r5_1));
    }
    if (arg1 != 0)
    {
        int32_t* r1_6 = &data_21ba4;
        int32_t r3_1 = 0;
        int32_t r2_2;
        while (true)
        {
            int32_t r4_2 = *r1_6;
            if (r4_2 <= arg1)
            {
                r2_2 = *(r1_6 - 4);
                if (r3_1 != 0)
                {
                    int32_t r3_3 = (r2_2 - *(r1_6 - 0xc));
                    if (r3_3 >= 2)
                    {
                        r2_2 = (r2_2 - ((r3_3 * (arg1 - r4_2)) / (*(r1_6 - 8) - r4_2)));
                    }
                }
                break;
            }
            r3_1 = (r3_1 + 1);
            r1_6 = &r1_6[2];
            if (r3_1 >= 0x17)
            {
                r2_2 = 0xad2;
                break;
            }
        }
        *0x20000050 = r2_2;
    }
    return lr;
}

int32_t sub_a178() __pure
{
    return 0;
}

int32_t sub_a17c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t* arg5, char* arg6)
{
    int32_t r0 = 0;
    bool cond:0 = arg1 != 1;
    if (arg1 == 1)
    {
        cond:0 = arg2 != 0xff00;
    }
    if ((!cond:0))
    {
        if (arg4 != 1)
        {
            return 2;
        }
        arg5[2] = 0x16330002;
        arg5[1] = 0;
        *arg5 = 0x5ac;  {  // {"@FIF"}}
        *arg6 = 3;
        r0 = 1;
    }
    return r0;
}

int32_t sub_a1b0(int32_t* arg1, int32_t arg2)
{
    *0x200018ad = arg2;
    int32_t r2_1 = sub_1ff48(0x200018b0, arg1, (arg2 << 2));
    if ((sub_17b96() >= 3 && arg2 != 0))
    {
        int32_t r5_1 = 0;
        do
        {
            int32_t r0_1 = arg1[r5_1];
            r5_1 = (r5_1 + 1);
            int32_t var_30_1 = r0_1;
            int32_t var_38_1 = (((r0_1 >> 0xa) & 0x3ff) * 0x32);
            *(0x21c58 + ((r0_1 >> 0x1e) << 2));
            int32_t var_34_1 = ((r0_1 & 0x3ff) * 0xa);
            r2_1 = sub_17ba2(3, "Rcpt Got PDO[%d]: %s %dmV %dmA (…", r5_1);
        } while (arg2 != r5_1);
    }
    uint32_t r0_6;
    int32_t r2_4;
    int32_t r2_5;
    int32_t r11_1;
    if (*0x20001850 != 0)
    {
        r0_6 = *0x20001d99;
        if (r0_6 == 8)
        {
            int32_t r0_21 = *0x200018d4;
            r2_5 = ((r0_21 >> 0x1c) & 7);
            int32_t r1_18 = *(&arg1[r2_5] - 4);
            *0x200018d0 = r0_21;
            *0x200018cc = r1_18;
        }
        else
        {
            int32_t r0_7;
            if (r0_6 != 9)
            {
                sub_b2cc(7);
                r0_7 = *arg1;
                int32_t var_38_4 = 0;
                int32_t var_34_6 = 0;
            }
            else
            {
                sub_17ba2(3, "Received SourceCap message on re…", r2_1);
                sub_cd56(0);
                sub_fb88(0);
                sub_b2cc(7);
                r0_7 = *arg1;
                int32_t var_38_2 = 0;
                int32_t var_34_2 = 0;
            }
            r11_1 = sub_1913a(arg1, arg2, 0x1388, ((r0_7 & 0x3ff) * 0xa), 0, 0);
            int32_t r0_26 = *arg1;
            *0x200018d0 = r11_1;
            *0x200018cc = r0_26;
            r2_4 = ((r11_1 >> 0x1c) & 7);
        label_a426:
            sub_17ba2(3, "Rcpt Request PDO %d\n", r2_4);
        }
    }
    if ((*0x20001850 == 0 && (*0x20001858 == 0 || (*0x20001858 != 0 && *0x2000187e != 0))))
    {
        uint32_t r0_10 = *0x20001d99;
        if (r0_10 != 4)
        {
            int32_t r0_20;
            if (r0_10 == 3)
            {
                uint32_t r0_11 = *0x20001884;
                if (r0_11 != 0)
                {
                    uint32_t i;
                    do
                    {
                        int32_t r0_13 = *((r0_11 << 2) + 0x200018d4);
                        int32_t var_38_3;
                        int32_t* r0_16;
                        uint32_t r1_4;
                        int32_t r1_12;
                        int32_t r2_3;
                        int32_t r3_2;
                        int32_t r4_1;
                        if (0 == (r0_13 >> 0x1e))
                        {
                            int32_t var_34_4 = 0;
                            int32_t var_30_3 = 0x1000000;
                            r4_1 = ((r0_13 & 0x3ff) * 0xa);
                            r1_12 = arg2;
                            var_38_3 = r4_1;
                            r2_3 = (((r0_13 >> 0xa) & 0x3ff) * 0x32);
                            r0_16 = arg1;
                            r3_2 = r2_3;
                        }
                        else
                        {
                            r1_4 = (r0_13 >> 0x1e);
                            if (r1_4 == 1)
                            {
                                int32_t var_34_5 = 0;
                                int32_t var_30_4 = 0x1000000;
                                r3_2 = (((r0_13 >> 0x14) & 0x3ff) * 0x32);
                                r4_1 = ((0x3d090 * (r0_13 & 0x3ff)) / r3_2);
                                var_38_3 = r4_1;
                                r2_3 = (((r0_13 >> 0xa) & 0x3ff) * 0x32);
                            }
                            if (r1_4 == 2)
                            {
                                int32_t var_34_3 = 0;
                                int32_t var_30_2 = 0x1000000;
                                r4_1 = ((r0_13 & 0x3ff) * 0xa);
                                var_38_3 = r4_1;
                                r2_3 = (((r0_13 >> 0xa) & 0x3ff) * 0x32);
                                r3_2 = (((r0_13 >> 0x14) & 0x3ff) * 0x32);
                            }
                            if ((r1_4 == 1 || r1_4 == 2))
                            {
                                r0_16 = arg1;
                                r1_12 = arg2;
                            }
                        }
                        if ((0 == (r0_13 >> 0x1e) || (0 != (r0_13 >> 0x1e) && (r1_4 == 1 || r1_4 == 2))))
                        {
                            r11_1 = sub_1921e(r0_16, r1_12, r2_3, r3_2, var_38_3, 0, 0x1000000);
                            int32_t r0_19 = ((r11_1 >> 0x1c) & 7);
                            if (r11_1 != 0x1500280a)
                            {
                                int32_t r8_2 = *(&arg1[r0_19] - 4);
                                int32_t r0_39;
                                char r1_29;
                                int32_t* r2_8;
                                if (r0_19 != 1)
                                {
                                    int32_t r0_40 = 0;
                                    uint32_t r5_4;
                                    uint32_t r9_2;
                                    uint32_t r0_70;
                                    int32_t r6_1;
                                    if (0 == (r8_2 >> 0x1e))
                                    {
                                        r5_4 = (((r8_2 >> 0xa) & 0x3ff) * 0x32);
                                        int32_t r0_58;
                                        int32_t r1_37;
                                        r0_58 = sub_1f4c0(r5_4);
                                        r6_1 = ((r8_2 & 0x3ff) * 0xa);
                                        int32_t r0_64;
                                        int32_t r1_38;
                                        r0_64 = sub_1f41c(sub_1f588(r6_1));
                                        int32_t r0_65;
                                        int32_t r1_39;
                                        r0_65 = sub_1f5e0(r0_64, r1_38, 0x33333333, 0xbfc33333);
                                        int32_t r0_67;
                                        int32_t r1_41;
                                        r0_67 = sub_1f07c(r0_58, r1_37, r0_65, r1_39);
                                        r9_2 = sub_1f490(r0_67, r1_41);
                                        if (sub_18194(0x40020400, sub_4000) != 0)
                                        {
                                        label_a6fc:
                                            r0_40 = r6_1;
                                        }
                                        else
                                        {
                                            r0_70 = (0xf4240 / r5_4);
                                        label_a716:
                                            r0_40 = (r6_1 - r0_70);
                                        }
                                        if (r6_1 > r4_1)
                                        {
                                            int32_t r8_4 = (r8_2 & 0x3ff);
                                            r11_1 = ((r8_4 | (r11_1 & 0xfff00000)) | (r8_4 << 0xa));
                                        }
                                    }
                                    else
                                    {
                                        uint32_t r1_30 = (r8_2 >> 0x1e);
                                        if ((r1_30 != 1 && r1_30 != 2))
                                        {
                                            r5_4 = 0;
                                            r9_2 = 0;
                                        }
                                        uint32_t r1_36;
                                        if (r1_30 == 2)
                                        {
                                            uint32_t r0_42 = (0x32 * ((r8_2 >> 0xa) & 0x3ff));
                                            int32_t r0_43;
                                            int32_t r1_31;
                                            r0_43 = sub_1f4c0(r0_42);
                                            r6_1 = ((r8_2 & 0x3ff) * 0xa);
                                            int32_t r0_49;
                                            int32_t r1_32;
                                            r0_49 = sub_1f41c(sub_1f588(r6_1));
                                            int32_t r0_50;
                                            int32_t r1_33;
                                            r0_50 = sub_1f5e0(r0_49, r1_32, 0x33333333, 0xbfc33333);
                                            int32_t r0_52;
                                            int32_t r1_35;
                                            r0_52 = sub_1f07c(r0_43, r1_31, r0_50, r1_33);
                                            r9_2 = sub_1f490(r0_52, r1_35);
                                            r5_4 = (((r8_2 >> 0x14) & 0x3ff) * 0x32);
                                            if (sub_18194(0x40020400, sub_4000) != 0)
                                            {
                                                goto label_a6fc;
                                            }
                                            r1_36 = r0_42;
                                        }
                                        if (r1_30 == 1)
                                        {
                                            r5_4 = (((r8_2 >> 0x14) & 0x3ff) * 0x32);
                                            r6_1 = ((0x3d090 * (r8_2 & 0x3ff)) / r5_4);
                                            uint32_t r0_76 = (0x32 * ((r8_2 >> 0xa) & 0x3ff));
                                            int32_t r0_77;
                                            int32_t r1_42;
                                            r0_77 = sub_1f4c0(r0_76);
                                            int32_t r0_80;
                                            int32_t r1_43;
                                            r0_80 = sub_1f41c(sub_1f588(r6_1));
                                            int32_t r0_81;
                                            int32_t r1_44;
                                            r0_81 = sub_1f5e0(r0_80, r1_43, 0x33333333, 0xbfc33333);
                                            int32_t r0_83;
                                            int32_t r1_46;
                                            r0_83 = sub_1f07c(r0_77, r1_42, r0_81, r1_44);
                                            r9_2 = sub_1f490(r0_83, r1_46);
                                            if (sub_18194(0x40020400, sub_4000) != 0)
                                            {
                                                goto label_a6fc;
                                            }
                                            r1_36 = r0_76;
                                        }
                                        if ((r1_30 == 1 || r1_30 == 2))
                                        {
                                            r0_70 = (0xf4240 / r1_36);
                                            goto label_a716;
                                        }
                                    }
                                    int32_t r1_49 = ((r0_40 / 0xa) & 0x3ff);
                                    int32_t r2_14 = r1_49;
                                    if (*0x20001880 != 2)
                                    {
                                        r2_14 = 0x12c;
                                    }
                                    if (r0_40 <= 0xbb8)
                                    {
                                        r2_14 = r1_49;
                                    }
                                    int32_t r1_50;
                                    int32_t r3_10;
                                    r3_10 = HIGHD((r9_2 * 0x51eb851f));
                                    r1_50 = LOWD((r9_2 * 0x51eb851f));
                                    r0_39 = (((((0xffc00 & (r3_10 << 6)) & 0xc00fffff) | (((r5_4 / 0x32) & 0x3ff) << 0x14)) | r2_14) | 0x80000000);
                                    r2_8 = 0x20001860;
                                    r1_29 = 2;
                                }
                                else
                                {
                                    int32_t r8_3 = (r8_2 & 0x3ff);
                                    int32_t r1_24 = (r8_3 * 5);
                                    int32_t r3_6 = (r1_24 << 1);
                                    if (sub_18194(0x40020400, sub_4000) == 0)
                                    {
                                        r3_6 = (0xffffff38 + (r1_24 << 1));
                                    }
                                    int32_t r1_27 = (((r3_6 / 0xa) & 0x3ff) | 0x22019000);
                                    r0_39 = r1_27;
                                    if (r3_6 > 0xbb8)
                                    {
                                        r0_39 = 0x2201912c;
                                    }
                                    if (*0x20001880 == 2)
                                    {
                                        r0_39 = r1_27;
                                    }
                                    r2_8 = 0x2000185c;
                                    r11_1 = ((r8_3 | (r11_1 & 0xfff00000)) | (r8_3 << 0xa));
                                    r1_29 = 1;
                                }
                                *r2_8 = r0_39;
                                *0x2000011c = r1_29;
                                r2_4 = ((r11_1 >> 0x1c) & 7);
                                r0_20 = *(&arg1[r2_4] - 4);
                                goto label_a39a;
                            }
                        }
                        i = r0_11;
                        r0_11 = (r0_11 - 1);
                    } while (i != 1);
                }
            }
            r11_1 = 0x11000000;
            r0_20 = *arg1;
            r2_4 = 1;
        label_a39a:
            *0x200018d0 = r11_1;
            *0x200018cc = r0_20;
            goto label_a426;
        }
        *0x20001885 = 1;
        int32_t r0_35 = *0x20001d8c;
        *0x200018cc = *0x20001d88;
        *0x200018d0 = r0_35;
        r2_5 = ((r0_35 >> 0x1c) & 7);
    }
    if (((*0x20001850 != 0 && r0_6 == 8) || (*0x20001850 == 0 && (*0x20001858 == 0 || (*0x20001858 != 0 && *0x2000187e != 0)))))
    {
        sub_17ba2(3, "Rcpt Request PDO %d\n", r2_5);
        r11_1 = *0x200018d0;
    }
    if (((*0x20001850 == 0 && *0x20001858 != 0) && *0x2000187e == 0))
    {
        int32_t r4_2 = ((*arg1 & 0x3ff) * 5);
        int32_t r5_2 = (r4_2 << 1);
        r11_1 = sub_1913a(arg1, arg2, 0x1388, r5_2, 0, 0);
        if (sub_18194(0x40020400, sub_4000) == 0)
        {
            r5_2 = (0xffffff38 + (r4_2 << 1));
        }
        if (r5_2 >= 0xbb8)
        {
            r5_2 = 0xbb8;
        }
        *0x20001854 = (0x22019000 | (r5_2 / 0xa));
        sub_17ba2(3, "RCPT charging current of %d (RDO…", r5_2);
        int32_t r0_34 = *arg1;
        *0x200018d0 = r11_1;
        *0x200018cc = r0_34;
    }
    return r11_1;
}

uint32_t sub_a7b2(int32_t* arg1)
{
    int32_t r1_4;
    if ((*0x20001858 != 0 && *0x2000187e == 0))
    {
        r1_4 = 0x1912c;
    }
    if (((*0x20001858 == 0 || (*0x20001858 != 0 && *0x2000187e != 0)) && *0x20001884 == 0))
    {
        r1_4 = 0x19000;
    }
    if (((*0x20001858 != 0 && *0x2000187e == 0) || ((*0x20001858 == 0 || (*0x20001858 != 0 && *0x2000187e != 0)) && *0x20001884 == 0)))
    {
        *arg1 = r1_4;
        return 1;
    }
    if (((*0x20001858 == 0 || (*0x20001858 != 0 && *0x2000187e != 0)) && *0x20001884 != 0))
    {
        sub_1ff48(arg1, 0x200018d8, (*0x20001884 << 2));
        return *0x20001884;
    }
}

int32_t sub_a802(int32_t arg1)
{
    sub_17ba2(4, "DR_Swap Result: %d\n", arg1);
    *0x2000187b = arg1;
    return 0;
}

int32_t sub_a826(int32_t arg1)
{
    sub_17ba2(4, "PR_Swap Result: %d\n", arg1);
    return 0;
}

int32_t sub_a83e(int32_t arg1)
{
    sub_17ba2(4, "VConn_Swap Result: %d\n", arg1);
    *0x2000187a = arg1;
    return 0;
}

int32_t sub_a862(int32_t arg1)
{
    if (arg1 == 0)
    {
        sub_137d0(0);
        if (sub_c9b6(1) != 0)
        {
            uint32_t r0_4 = *0x20001d99;
            int32_t r0_6;
            if ((r0_4 - 7) <= 2)
            {
                sub_ca16(1, sub_1913a(0x200018b0, *0x200018ad, 0x1388, ((*0x200018b0 & 0x3ff) * 0xa), 0, 0));
                r0_6 = 7;
            }
            if (((r0_4 - 7) > 2 && r0_4 != 5))
            {
                sub_ca16(1, 0x11000000);
                r0_6 = 0;
            }
            if (((r0_4 - 7) <= 2 || ((r0_4 - 7) > 2 && r0_4 != 5)))
            {
                sub_b2cc(r0_6);
            }
            *0x2000011c = 1;
            *0x200018f4 = 0;
            *0x20001884 = 0;
            *0x2000188b = 0;
            int32_t r0_8;
            int32_t r1_5;
            r1_5 = HIGHD((*0x20000524 * 0xcccccccd));
            r0_8 = LOWD((*0x20000524 * 0xcccccccd));
            *0x2000185c = (((r1_5 >> 3) & 0x3ff) | 0x22019000);
        }
    }
    else
    {
        uint32_t r0 = *0x20001d99;
        int32_t r0_2;
        if ((r0 > 9 || (r0 <= 9 && ((1 << r0) & 0x3a0) == 0)))
        {
            r0_2 = 1;
        }
        if ((r0 <= 9 && ((1 << r0) & 0x3a0) != 0))
        {
            r0_2 = 2;
        }
        sub_137d0(r0_2);
    }
    return 0;
}

int32_t sub_a95e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t* arg5, char* arg6)
{
    char r0;
    int32_t r0_4;
    char* r0_9;
    int32_t r5_1;
    if (arg1 == 2)
    {
        if (arg2 == 0x5ac)  {  // {"@FIF"}}
        {
            r5_1 = 2;
            if (arg4 > 0x13)
            {
                if (arg4 == 0x14)
                {
                    r5_1 = 2;
                    if ((arg3 == 1 && *0x200018f5 == 1))
                    {
                        r0_4 = 0xa0908;
                        goto label_aa46;
                    }
                }
                else if (arg4 == 0x15)
                {
                    r5_1 = 2;
                    if ((arg3 == 1 && *0x200018f5 == 1))
                    {
                        if (*arg6 != 2)
                        {
                            goto label_aba0;
                        }
                        int32_t r0_16 = *arg5;
                        int32_t r1_3 = arg5[1];
                        int32_t var_1c = 0;
                        int32_t r1_4;
                        if (r1_3 == 3)
                        {
                            r1_4 = 0x2ee;
                        }
                        if (r1_3 == 2)
                        {
                            r1_4 = 0x5dc;
                        }
                        if ((r1_3 == 3 || r1_3 == 2))
                        {
                            var_1c = r1_4;
                            r1_3 = 2;
                        }
                        if (sub_14b9a(((((1 << ((r0_16 & 0xf) - 1)) & 0xf) & 0xfffff0ff) | ((r1_3 & 0xf) << 8)), &var_1c) == 0x52524521)
                        {
                            goto label_aba0;
                        }
                        r0 = 0;
                        goto label_a9f0;
                    }
                }
                else if (arg4 == 0x16)
                {
                    r5_1 = 2;
                    if ((arg3 == 1 && *0x200018f5 == 1))
                    {
                        if (*arg6 != 1)
                        {
                            goto label_aba0;
                        }
                        int32_t r5_2 = *arg5;
                        sub_15038(1);
                        if (r5_2 != 0)
                        {
                            *0x20000514 = r5_2;
                            sub_15038(0);
                        }
                        *arg6 = 0;
                        goto label_a9f2;
                    }
                }
                goto label_aa00;
            }
            if (arg4 == 3)
            {
                r0_4 = 0x30006;
            label_aa46:
                r5_1 = 1;
                *arg5 = r0_4;
                *arg6 = 1;
                goto label_aa00;
            }
            if (arg4 != 4)
            {
                if (arg4 == 5)
                {
                    *arg6 = 0;
                    if ((arg3 != 7 && arg3 != 1))
                    {
                        goto label_aba0;
                    }
                    *0x200018f5 = 0;
                    goto label_a9f2;
                }
                goto label_aa00;
            }
            *arg6 = 0;
            if (arg3 != 1)
            {
                goto label_aba0;
            }
            r5_1 = 1;
            r0_9 = 0x200018f5;
        }
        else
        {
            if (arg2 != 0xff00)
            {
                goto label_a9f6;
            }
            if (arg4 != 2)
            {
                if (arg4 != 1)
                {
                label_aba0:
                    r5_1 = 2;
                }
                else
                {
                    arg5[1] = 0;
                    *arg5 = 0x1c0005ac;
                    arg5[2] = 0x16340002;
                    arg5[3] = (0x1083030 | (*0x20001ee8 << 0x1c));
                    r0 = 4;
                label_a9f0:
                    *arg6 = r0;
                label_a9f2:
                    r5_1 = 1;
                }
                goto label_aa00;
            }
        }
    }
    if ((arg1 == 1 && arg2 != 0x5ac))  {  // {"@FIF"}}
    {
        if (arg2 != 0xff00)
        {
            goto label_a9f6;
        }
        if (arg4 != 2)
        {
            if (arg4 != 1)
            {
                goto label_aba0;
            }
            arg5[2] = 0x16340002;
            arg5[1] = 0;
            *arg5 = 0x800005ac;
            r0 = 3;
            goto label_a9f0;
        }
    }
    if (((arg1 == 1 && arg2 != 0x5ac) || (arg1 == 2 && arg2 != 0x5ac)))  {  // {"@FIF"}}
    {
        r0_4 = 0x5ac0000;
        goto label_aa46;
    }
    if ((arg1 == 1 && arg2 == 0x5ac))  {  // {"@FIF"}}
    {
        if (arg4 == 5)
        {
            if ((arg3 != 7 && arg3 != 1))
            {
                goto label_aba0;
            }
            sub_1330a();
            *0x2000188a = 0;
            goto label_a9f2;
        }
        if (arg4 != 4)
        {
            if (arg4 == 3)
            {
                r0_4 = 2;
                goto label_aa46;
            }
            r5_1 = 0;
            if ((arg4 == 6 && *0x2000188a == 1))
            {
                r5_1 = 0;
                sub_10228(0, *arg5, &arg5[1], (*arg6 - 1));
            }
            goto label_aa00;
        }
        if (arg3 != 1)
        {
            goto label_aba0;
        }
        sub_11154(0);
        r5_1 = 1;
        sub_1330a();
        r0_9 = 0x2000188a;
    }
    if (((arg1 == 2 && arg2 == 0x5ac) || (arg1 == 1 && arg2 == 0x5ac)))  {  // {"@FIF"}}
    {
        *r0_9 = 1;
        goto label_aa00;
    }
    if ((arg1 != 2 && arg1 != 1))
    {
    label_a9f6:
        r5_1 = 0;
    label_aa00:
        return r5_1;
    }
}

int32_t sub_aba8(int32_t arg1, int32_t arg2, int16_t* arg3, char* arg4, char* arg5)
{
    if ((arg2 == 0x5ac && *0x2000188a == 1))  {  // {"@FIF"}}
    {
        sub_10228(0, *arg3, arg4, *arg5);
    }
    return 0;
}

uint32_t sub_abdc(int32_t* arg1)
{
    uint32_t r0 = *0x20001d99;
    if (r0 == 5)
    {
        *0x2000011c = 1;
        *0x2000185c = *0x20001854;
    }
    else if ((r0 - 7) <= 2)
    {
        uint32_t r0_4 = *0x200018ad;
        if (r0_4 == 0)
        {
            r0_4 = 0;
        }
        else
        {
            uint32_t i = 0;
            int32_t r9_1 = 0;
            do
            {
                int32_t r10_1 = *(0x200018b0 + (i << 2));
                uint32_t r1_1;
                uint32_t r1_7;
                int32_t r1_9;
                if (0 != (r10_1 >> 0x1e))
                {
                    r1_1 = (r10_1 >> 0x1e);
                    if ((r1_1 != 1 && r1_1 != 2))
                    {
                        r1_9 = r10_1;
                    }
                    if (r1_1 == 1)
                    {
                        int32_t r5_1 = (((r10_1 >> 0x14) & 0x3ff) * 0x32);
                        uint32_t r6_1 = ((0x3d090 * (r10_1 & 0x3ff)) / r5_1);
                        if (sub_18194(0x40020400, sub_4000) == 0)
                        {
                            r6_1 = (r6_1 - (0xf4240 / (0x32 * ((r10_1 >> 0xa) & 0x3ff))));
                        }
                        uint32_t r0_20 = r6_1;
                        if (*0x20001880 != 2)
                        {
                            r0_20 = 0xbb8;
                        }
                        if (r6_1 <= 0xbb8)
                        {
                            r0_20 = r6_1;
                        }
                        r1_7 = ((r5_1 * r0_20) / 0x3d090);
                    }
                }
                if ((0 == (r10_1 >> 0x1e) || (0 != (r10_1 >> 0x1e) && r1_1 == 2)))
                {
                    int32_t r2_1 = ((r10_1 & 0x3ff) * 0xa);
                    if (sub_18194(0x40020400, sub_4000) == 0)
                    {
                        r2_1 = (r2_1 - (0xf4240 / (0x32 * ((r10_1 >> 0xa) & 0x3ff))));
                    }
                    uint32_t r0_10 = (r2_1 / 0xa);
                    r1_7 = r0_10;
                    if (*0x20001880 != 2)
                    {
                        r1_7 = 0x12c;
                    }
                    if (r2_1 <= 0xbb8)
                    {
                        r1_7 = r0_10;
                    }
                }
                if ((((0 != (r10_1 >> 0x1e) && r1_1 == 1) || 0 == (r10_1 >> 0x1e)) || (0 != (r10_1 >> 0x1e) && r1_1 == 2)))
                {
                    r1_9 = ((r1_7 & 0x3ff) | (((r10_1 >> 0xa) & 0x3fffff) << 0xa));
                    r0_4 = *0x200018ad;
                }
                r9_1 = (r9_1 + 1);
                *(0x2000185c + (i << 2)) = r1_9;
                i = r9_1;
            } while (i < r0_4);
        }
        *0x2000011c = r0_4;
        sub_b2cc(8);
    }
    uint32_t r0_27;
    if ((r0 == 5 || (r0 != 5 && *0x2000011c != 0)))
    {
        uint32_t r1_11 = 0;
        int32_t r6_2 = 0;
        do
        {
            int32_t r0_25 = *(0x2000185c + (r1_11 << 2));
            arg1[r1_11] = r0_25;
            int32_t var_28_1 = r0_25;
            int32_t var_2c_1 = ((r0_25 & 0x3ff) * 0xa);
            *(0x21c58 + ((r0_25 >> 0x1e) << 2));
            int32_t var_30_1 = (((r0_25 >> 0xa) & 0x3ff) * 0x32);
            sub_17ba2(3, "Plug Send PDO[%d]: %s %dmV %dmA …", (r1_11 + 1));
            r6_2 = (r6_2 + 1);
            r0_27 = *0x2000011c;
            r1_11 = r6_2;
        } while (r1_11 < r0_27);
    }
    if ((r0 != 5 && *0x2000011c == 0))
    {
        r0_27 = 0;
    }
    *arg1 = ((*arg1 & 0xfbffffff) | ((*0x200004ec & 1) << 0x1a));
    return r0_27;
}

int32_t sub_ae1c(int32_t arg1)
{
    int32_t r2 = ((arg1 >> 0x1c) & 7);
    int32_t r4_1;
    if (r2 == 0)
    {
    label_ae3c:
        r4_1 = 2;
    }
    else
    {
        if (r2 > *0x2000011c)
        {
            goto label_ae3c;
        }
        int32_t r8_1 = (arg1 & 0x4000000);
        int32_t r5_1 = ((arg1 & 0x3ff) * 0xa);
        int32_t r3_5 = (((arg1 >> 0xa) & 0x3ff) * 0xa);
        int32_t r12_1 = *((r2 << 2) + 0x20001858);
        int32_t r6_1 = ((r12_1 & 0x3ff) * 0xa);
        if ((r8_1 != 0 || (r8_1 == 0 && r5_1 > r6_1)))
        {
            r4_1 = 2;
            if ((r3_5 <= r5_1 && (r8_1 != 0 && r3_5 <= r6_1)))
            {
                goto label_aea4;
            }
        }
        if ((r8_1 == 0 && r5_1 <= r6_1))
        {
            if (r3_5 > r5_1)
            {
                goto label_ae3c;
            }
        label_aea4:
            *0x200018d4 = arg1;
            *0x200018f8 = r12_1;
            if (r2 == 1)
            {
                *0x200018f8 = ((r12_1 & 0xfbffffff) | ((*0x200004ec & 1) << 0x1a));
            }
            *0x200018f4 = r2;
            int32_t r2_1 = sub_17ba2(3, "Plug Request PDO %d\n", r2);
            r4_1 = 1;
            if ((r8_1 != 0 && *0x20001d99 == 0))
            {
                sub_17ba2(3, "Detected Mismatch\n", r2_1);
                r4_1 = 1;
                sub_b2cc(1);
            }
        }
    }
    return r4_1;
}

int32_t sub_af12(int32_t* arg1, int32_t arg2)
{
    sub_1ff48(0x200018d8, arg1, (arg2 << 2));
    *0x20001884 = arg2;
    return 0;
}

int32_t sub_af36(int32_t* arg1, int32_t arg2)
{
    int32_t* r4 = arg1;
    if ((sub_17b96() >= 3 && arg2 != 0))
    {
        int32_t r6_1 = 0;
        do
        {
            int32_t r0_1 = r4[r6_1];
            r6_1 = (r6_1 + 1);
            int32_t var_28_1 = r0_1;
            int32_t var_30_1 = (((r0_1 >> 0xa) & 0x3ff) * 0x32);
            *(0x21c58 + ((r0_1 >> 0x1e) << 2));
            int32_t var_2c_1 = ((r0_1 & 0x3ff) * 0xa);
            sub_17ba2(3, "Plug Got PDO[%d]: %s %dmV %dmA (…", r6_1);
        } while (arg2 != r6_1);
    }
    int32_t r0_6 = sub_1913a(r4, arg2, *0x200004e8, *0x200004ea, 0, 0x1000000);
    uint32_t r2_3 = *0x2000188b;
    if ((r2_3 < 5 || (r2_3 >= 5 && (r0_6 & 0x4000000) == 0)))
    {
        r4 = (&r4[((r0_6 >> 0x1c) & 7)] - 4);
    }
    if ((r2_3 >= 5 && (r0_6 & 0x4000000) != 0))
    {
        r0_6 = 0x11000000;
    }
    int32_t r3_6 = *r4;
    *0x2000188b = (r2_3 + 1);
    *0x200018f8 = r3_6;
    *0x200018d4 = (r0_6 | ((*0x200004ec & 1) << 0x19));
    sub_17ba2(3, "Plug Request PDO %d\n", ((r0_6 >> 0x1c) & 7));
    return *0x200018d4;
}

int32_t sub_b020(int32_t* arg1)
{
    int32_t r1_1;
    int32_t r3;
    r3 = HIGHD((*0x200004ea * 0xcccccccd));
    r1_1 = LOWD((*0x200004ea * 0xcccccccd));
    int32_t r1_2 = ((r3 >> 3) & 0x3ff);
    uint32_t r2 = *0x200004e8;
    *arg1 = (((r1_2 | ((*0x200004ec & 1) << 0x1a)) | 0x22000000) | 0x19000);
    if (r2 == 0x1388)
    {
        return 1;
    }
    int32_t r2_1;
    int32_t r3_6;
    r3_6 = HIGHD((r2 * 0x51eb851f));
    r2_1 = LOWD((r2 * 0x51eb851f));
    arg1[1] = (r1_2 | (0xffc00 & (r3_6 << 6)));
    return 2;
}

int32_t sub_b086(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    if (arg4 >= 2)
    {
        int32_t r0 = 1;
        do
        {
            uint32_t r12_1 = r0;
            if (*(arg3 + (r12_1 << 2)) == 2)
            {
                sub_cc40(0, 1, 0x5ac, r12_1, 4, nullptr, 0, 0xb0d5);  {  // {"@FIF"}}
                break;
            }
            r0 = (r0 + 1);
        } while (r0 < arg4);
    }
    return 0;
}

int32_t sub_b0d6()
{
    sub_1330a();
    *0x2000188a = 1;
    return 0;
}

int32_t sub_b0f4(int32_t arg1, int32_t arg2, int32_t arg3)
{
    int32_t* r0_15;
    if (arg1 == 1)
    {
        if (arg2 != 0)
        {
            sub_13b82(arg2);
            sub_13c22(1);
            sub_cd3a(1);
        }
        else
        {
            sub_13c22(0);
            sub_cd56(1);
            uint32_t r0_16 = *0x20001d99;
            if ((*0x20001850 == 0 && (r0_16 & 0xfe) == 4))
            {
                sub_cd56(0);
                sub_fb88(0);
                sub_faf8(0);
            }
            if ((*0x20001850 != 0 && (r0_16 - 7) <= 2))
            {
                sub_b2cc(0);
                sub_cd56(0);
                sub_fb88(0);
            }
            if (((*0x20001850 == 0 && (r0_16 & 0xfe) == 4) || (*0x20001850 != 0 && (r0_16 - 7) <= 2)))
            {
                r0_16 = *0x20001d99;
            }
            *0x20001854 = 0;
            if (r0_16 == 3)
            {
                sub_b2cc(0);
            }
            r0_15 = 0x20001d88;
        }
    }
    if ((arg1 == 0 && arg2 == 0))
    {
        sub_13bd2(0);
        sub_137d0(0);
        sub_1387c(0, 0, 2, 2);
        sub_a040();
        j_sub_1c900(0);
        sub_cd56(0);
        sub_c824();
        r0_15 = 0x20001d80;
    }
    if (((arg1 == 0 && arg2 == 0) || (arg1 == 1 && arg2 == 0)))
    {
        r0_15[1] = 0;
        *r0_15 = 0;
    }
    if ((arg1 == 0 && arg2 != 0))
    {
        if ((*0x20001850 == 0 || (*0x20001850 != 0 && (*0x20001d99 - 7) < 3)))
        {
            sub_13b32(arg2);
            sub_13bd2(1);
            *0x20001851 = 0;
            if (arg3 == 1)
            {
                uint32_t r0_5 = *0x20001d99;
                int32_t r0_7;
                if ((r0_5 > 9 || (r0_5 <= 9 && ((1 << r0_5) & 0x3a0) == 0)))
                {
                    r0_7 = 1;
                }
                if ((r0_5 <= 9 && ((1 << r0_5) & 0x3a0) != 0))
                {
                    r0_7 = 2;
                }
                sub_137d0(r0_7);
                if (((*0x20001f24 << 0x1d) < 0 && *0x200004f8 == 0))
                {
                    *0x20001851 = 1;
                }
            }
            sub_1387c(arg2, 1, 2, 0);
            sub_cd3a(0);
            if ((*0x20000534 << 0x1f) != 0)
            {
                sub_17ba2(3, "Resetting main FIFOs\n", 0xdc);
                sub_1806e(0x20000b00);
                sub_1806e(0x20000aec);
            }
            sub_166ee(2);
        }
        if ((*0x20001850 != 0 && (*0x20001d99 - 7) >= 3))
        {
            sub_17ba2(3, "Charger must be connected first …", arg3);
            sub_fb88(0);
        }
    }
    return 0;
}

uint32_t sub_b2cc(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0 = *0x20001d99;
    if (r0 == arg1)
    {
        return r0;
    }
    *(0x21c68 + (arg1 << 2));
    sub_17ba2(6, "Charge-through: %s -> %s\n", *(0x21c68 + (r0 << 2)));
    *0x20001d99 = arg1;
    /* tailcall */
    return sub_8746(6, arg1, *0x20006064);
}

int32_t sub_b318()
{
    int32_t r1 = *0x200004fc;
    char* r1_1;
    if (r1 == 2)
    {
        r1_1 = 0x20001858;
    }
    if (r1 == 3)
    {
        r1_1 = 0x20001850;
    }
    if ((r1 == 2 || r1 == 3))
    {
        *r1_1 = 1;
    }
    int32_t r0 = *0x20000524;
    *0x20001860 = 0;
    *0x2000011c = 1;
    *0x2000185c = (((r0 / 0xa) & 0x3ff) | 0x22019000);
    sub_1301c();
    return 0;
}

int32_t sub_b384()
{
    if (sub_c9b6(0) != 0)
    {
        uint32_t r0_1 = *0x20001d98;
        if (r0_1 <= 7)
        {
            char r0_13;
            char r0_31;
            int32_t r1_2;
            char* r5_1;
            switch (jump_table_b3ae[r0_1])
            {
                case 8:
                {
                    if (sub_1edd8(0) >= 0x44)
                    {
                        *0x20001d98 = 1;
                        sub_8746(5, 1, *0x20006064);
                        *0x20001879 = 0;
                        *0x2000187a = 0;
                        sub_166ee(3);
                        uint32_t r0_3 = sub_1db5c(0);
                        sub_1dbac(0);
                        int32_t var_28_1 = *0x200004f0;
                        sub_17ba2(4, "DR:%d PR:%d Default:%d\n", r0_3);
                    }
                    break;
                }
                case 0x3e:
                {
                    r5_1 = 0x2000187a;
                    uint32_t r0_6 = *0x2000187a;
                    if (r0_6 != 0xff)
                    {
                        if ((r0_6 == 0 && *0x20001851 == 1))
                        {
                            sub_cbac(0);
                        label_b7aa:
                            r0_31 = -1;
                            goto label_b7ac;
                        }
                        *0x20001d98 = 2;
                        sub_8746(5, 2, *0x20006064);
                        *0x20001879 = 0;
                        *0x2000187b = 0;
                    }
                    break;
                }
                case 0x55:
                {
                    r5_1 = 0x2000187b;
                    uint32_t r0_8 = *0x2000187b;
                    if (r0_8 <= 3)
                    {
                        char r0_30;
                        int32_t r1_13;
                        if ((jump_table_b46c[r0_8] == 0x109 || (*(&jump_table_b46c + (r0_8 << 1)) == 0x102 && *0x200004f0 == 2)))
                        {
                            r0_30 = 7;
                            r1_13 = 7;
                        }
                        if ((*(&jump_table_b46c + (r0_8 << 1)) == 0x102 && *0x200004f0 != 2))
                        {
                            r0_30 = 3;
                            r1_13 = 3;
                        }
                        if (((*(&jump_table_b46c + (r0_8 << 1)) == 0x109 || (*(&jump_table_b46c + (r0_8 << 1)) == 0x102 && *0x200004f0 == 2)) || (*(&jump_table_b46c + (r0_8 << 1)) == 0x102 && *0x200004f0 != 2)))
                        {
                            *0x20001d98 = r0_30;
                            sub_8746(5, r1_13, *0x20006064);
                            r0_31 = 0;
                        label_b7ac:
                            *r5_1 = r0_31;
                        }
                        if (*(&jump_table_b46c + (r0_8 << 1)) == 0x10c)
                        {
                            int32_t r2_10 = *0x20006064;
                            if (*0x200018fc == 0)
                            {
                                *0x200018fc = 1;
                                *0x20001900 = (r2_10 + 0x1f4);
                            }
                            else if ((r2_10 - *0x20001900) >= 0)
                            {
                                *0x200018fc = 0;
                                char r2_13 = (*0x20001879 + 1);
                                *0x20001879 = r2_13;
                                if (r2_13 >= 3)
                                {
                                    *0x20001d98 = 7;
                                    sub_8746(5, 7, *0x20006064);
                                }
                                *0x2000187b = 0;
                            }
                        }
                        if ((*(&jump_table_b46c + (r0_8 << 1)) == 4 && sub_1edd8(0) >= 0x44))
                        {
                            int32_t r0_10 = *0x200004f0;
                            int32_t r1_1;
                            if (r0_10 == 2)
                            {
                                r1_1 = 0;
                            }
                            else
                            {
                                if (r0_10 != 0)
                                {
                                    goto label_b628;
                                }
                                r1_1 = 1;
                            }
                            sub_cad4(0, r1_1);
                            goto label_b7aa;
                        }
                    }
                    break;
                }
                case 0x77:
                {
                    if (sub_1db5c(0) == 1)
                    {
                        int32_t r0_12;
                        int32_t r2_3;
                        r0_12 = sub_cc40(0, 1, 0xff00, 0, 1, nullptr, 0, 0xb85b);
                        if (r0_12 == 0)
                        {
                            sub_17ba2(3, "Discover Identity sent\n", r2_3);
                        }
                        *0x2000187c = 0;
                        *0x20001879 = 0;
                        r0_13 = 4;
                        r1_2 = 4;
                        goto label_b784;
                    }
                    break;
                }
                case 0xa4:
                {
                    uint32_t r0_14 = *0x2000187c;
                    int32_t r0_21;
                    if (r0_14 == 0)
                    {
                        int32_t r2_8;
                        r0_21 = sub_1edd8(0);
                        if (r0_21 >= 0xc9)
                        {
                            char r1_7 = (*0x20001879 + 1);
                            *0x20001879 = r1_7;
                            if (r1_7 <= 9)
                            {
                            label_b628:
                                r0_13 = 3;
                                r1_2 = 3;
                                goto label_b784;
                            }
                            sub_17ba2(3, "Failed to get Discover Identity …", r2_8);
                        }
                    }
                    int32_t r2_5;
                    if (((r0_14 != 0 && r0_14 != 0x5ac) || (r0_14 == 0 && r0_21 >= 0xc9)))  {  // {"@FIF"}}
                    {
                        r0_13 = 7;
                        r1_2 = 7;
                    label_b784:
                        *0x20001d98 = r0_13;
                        r2_5 = *0x20006064;
                    label_b792:
                        sub_8746(5, r1_2, r2_5);
                    }
                    if (r0_14 == 0x5ac)  {  // {"@FIF"}}
                    {
                        *0x20001d98 = 6;
                        sub_8746(5, 6, *0x20006064);
                        if ((*0x2000187c == 0x5ac && (*0x20001886 == 0x1633 && *0x20001888 == 2)))  {  // {"@FIF"}}
                        {
                            r1_2 = 8;
                            *0x20001d98 = 8;
                            r2_5 = *0x20006064;
                            goto label_b792;
                        }
                    }
                    break;
                }
                case 0xda:
                {
                    if (sub_1db5c(0) == 1)
                    {
                        sub_11cc8();
                        if (sub_11146(0) != 0)
                        {
                            sub_110c2(0);
                        }
                    }
                    break;
                }
            }
            if ((*(&jump_table_b3ae + (r0_1 << 1)) == 0xda || *(&jump_table_b3ae + (r0_1 << 1)) == 0xe8))
            {
                int32_t r0_20;
                int32_t r2_6;
                r0_20 = sub_1edd8(0);
                if (r0_20 >= 0x12)
                {
                    if ((*0x200004fc == 1 || (*0x200004fc != 1 && *0x2000187e == 1)))
                    {
                        uint32_t r1_5 = *0x20001d99;
                        if (r1_5 == 6)
                        {
                            int32_t r1_15 = *0x20001880;
                            int32_t r0_25;
                            if ((r1_15 == 0 && *0x20001878 == 0))
                            {
                                r0_25 = *0x200004f8;
                                int32_t r6_1;
                                if ((r0_25 - 1) >= 2)
                                {
                                    r6_1 = 1;
                                    if (r0_25 != 3)
                                    {
                                        sub_1dcfc(0, (sub_1dd12(0) | 2));
                                        sub_cc40(0, 2, 0xff00, 0, 1, nullptr, 0, sub_b8ae);
                                        r1_15 = *0x20001880;
                                        *0x20001878 = 1;
                                    }
                                }
                                else
                                {
                                    r6_1 = 2;
                                }
                                if (((r0_25 - 1) < 2 || ((r0_25 - 1) >= 2 && r0_25 == 3)))
                                {
                                    *0x20001880 = r6_1;
                                label_b7fe:
                                    *0x20001878 = 0;
                                    sub_b2cc(2);
                                    sub_cab6(0);
                                }
                            }
                            if (((((((r1_15 == 0 && *0x20001878 == 0) && (r0_25 - 1) >= 2) && r0_25 != 3) || r1_15 != 0) || (r1_15 == 0 && *0x20001878 != 0)) && r1_15 != 0))
                            {
                                goto label_b7fe;
                            }
                        }
                        else if (r1_5 == 2)
                        {
                            if ((sub_c9b6(1) != 0 && *0x20001884 != 0))
                            {
                                goto label_b738;
                            }
                        }
                        else if (r1_5 == 1)
                        {
                            sub_17ba2(4, "Got mismatch from Target\n", r2_6);
                            sub_b2cc(6);
                        }
                        else if ((*0x20001885 == 1 && sub_c9b6(1) != 0))
                        {
                            *0x20001885 = 0;
                        label_b738:
                            sub_b2cc(3);
                            sub_ca8a(1);
                        }
                    }
                    if (((*0x200004fc != 1 && *0x2000187e != 1) && (*0x20001d99 - 7) <= 2))
                    {
                        int32_t r1_11 = *0x20001880;
                        uint32_t r2_9 = *0x20001878;
                        if ((r1_11 == 0 && r2_9 == 0))
                        {
                            int32_t r0_23 = *0x200004f8;
                            if ((r0_23 - 1) <= 1)
                            {
                                r1_11 = 2;
                            }
                            else if (r0_23 != 3)
                            {
                                sub_1dcfc(0, (sub_1dd12(0) | 2));
                                sub_cc40(0, 2, 0xff00, 0, 1, nullptr, 0, sub_b8ae);
                                r1_11 = *0x20001880;
                            }
                            else
                            {
                                r1_11 = 1;
                            }
                            if (((r0_23 - 1) <= 1 || ((r0_23 - 1) > 1 && r0_23 == 3)))
                            {
                                *0x20001880 = r1_11;
                            }
                            r2_9 = 1;
                            *0x20001878 = 1;
                        }
                        if ((r1_11 != 0 && r2_9 != 0))
                        {
                            *0x20001878 = 0;
                            sub_ca5c(0);
                        }
                    }
                }
            }
        }
    }
    return 0;
}

int32_t sub_b85c(int32_t arg1, int32_t arg2, int16_t* arg3)
{
    if ((*arg3 & 0xc0) == 0x40)
    {
        int16_t r0_1 = *(arg3 + 4);
        *0x2000187c = r0_1;
        int32_t r1 = *(arg3 + 0xc);
        *0x20001888 = r1;
        uint32_t var_10_1 = r1;
        *0x20001886 = (r1 >> 0x10);
        sub_17ba2(4, "Target's VID = %04X PID = %04X b…", r0_1);
    }
    return 0;
}

int32_t sub_b8ae(int32_t arg1, int32_t arg2, void* arg3)
{
    int32_t r0_1;
    if (arg1 == 0)
    {
        r0_1 = ((*(arg3 + 0x10) >> 5) & 3);
    }
    else
    {
        r0_1 = 1;
    }
    *0x20001880 = r0_1;
    sub_1dcfc(0, (sub_1dd12(0) & 0xfffffffd));
    return 0;
}

int32_t j_sub_11c1e()
{
    /* tailcall */
    return sub_11c1e();
}

int32_t j_sub_11c32()
{
    /* tailcall */
    return sub_11c32();
}

int32_t sub_b8e4()
{
    int32_t r0_5 = 0;
    if (((((*0x20001886 ^ 0x1633) | (*0x2000187c ^ 0x5ac)) | (*0x20001888 ^ 2)) << 0x10) == 0)  {  // {"@FIF"}}
    {
        r0_5 = 1;
    }
    return r0_5;
}

uint32_t sub_b922()
{
    return *0x2000188a;
}

uint32_t sub_b92e()
{
    return *0x20001851;
}

int32_t sub_b93a(int32_t arg1)
{
    int32_t r0_1;
    int32_t r1_2;
    int32_t r2_1;
    int32_t r4;
    if (arg1 == 0)
    {
        r4 = 0;
        *0x2000011c = 1;
        int32_t r0_3;
        r1_2 = HIGHD((*0x20000524 * 0xcccccccd));
        r0_3 = LOWD((*0x20000524 * 0xcccccccd));
    }
    else if (*0x200004fc != 1)
    {
        r4 = 1;
    }
    else
    {
        r0_1 = *0x20001d84;
        if ((r0_1 & 0x70000000) != 0x20000000)
        {
            r4 = 0;
            int32_t r1_4;
            r2_1 = HIGHD((*0x20000524 * 0xcccccccd));
            r1_4 = LOWD((*0x20000524 * 0xcccccccd));
            if (((r0_1 >> 0xa) & 0x3ff) <= (r2_1 >> 3))
            {
                sub_b2cc(0);
                *0x20001884 = 0;
                *0x2000011c = 1;
                int32_t r0_9;
                r1_2 = HIGHD((*0x20000524 * 0xcccccccd));
                r0_9 = LOWD((*0x20000524 * 0xcccccccd));
            }
        }
    }
    if ((arg1 == 0 || (((arg1 != 0 && *0x200004fc == 1) && (r0_1 & 0x70000000) != 0x20000000) && ((r0_1 >> 0xa) & 0x3ff) <= (r2_1 >> 3))))
    {
        *0x2000185c = (((r1_2 >> 3) & 0x3ff) | 0x22019000);
        sub_ca5c(0);
    }
    if (((arg1 != 0 && *0x200004fc == 1) && (r0_1 & 0x70000000) == 0x20000000))
    {
        r4 = 0;
    }
    return r4;
}

void sub_b9f6()
{
    *0x2000188b = 0;
}

int32_t sub_ba04(int32_t arg1, int32_t arg2, int32_t arg3 @ r6, int32_t arg4 @ r9)
{
    int32_t var_c = arg3;
    int32_t var_1c = arg4;
    *0x2000187b = 0;
    sub_cad4(0, arg1);
    int32_t r5_1 = (arg2 + *0x20006064);
    if ((*0x20006064 - r5_1) <= 0xffffffff)
    {
        do
        {
            uint32_t r0_3 = *0x2000187b;
            if (r0_3 == 3)
            {
                int32_t r0_4 = *0x20006064;
                if ((arg3 << 0x18) == 0)
                {
                    arg4 = (r0_4 + 0x64);
                    arg3 = 1;
                }
                else if ((r0_4 - arg4) >= 0)
                {
                    arg3 = 0;
                    *0x2000187b = 0;
                    sub_cad4(0, arg1);
                }
            }
            else
            {
                if (r0_3 == 2)
                {
                    *0x2000187b = 0;
                    sub_16930(1);
                    return 0xfffffff2;
                }
                if (r0_3 == 1)
                {
                    *0x2000187b = 0;
                    sub_16930(1);
                    return 0;
                }
            }
            sub_16930(1);
        } while ((*0x20006064 - r5_1) < 0);
    }
    return 0xffffffff;
}

int32_t sub_baac()
{
    int32_t r4 = 0xffffffff;
    if ((*0x20001858 != 0 && *0x20001d99 == 5))
    {
        r4 = 0;
        *0x2000187e = 1;
        sub_b2cc(0);
        *0x20001884 = 0;
        *0x2000011c = 1;
        int32_t r0_3;
        int32_t r1_1;
        r1_1 = HIGHD((*0x20000524 * 0xcccccccd));
        r0_3 = LOWD((*0x20000524 * 0xcccccccd));
        *0x2000185c = (((r1_1 >> 3) & 0x3ff) | 0x22019000);
        sub_ca5c(0);
    }
    return r4;
}

int32_t sub_bb2e(int32_t* arg1)
{
    sub_1dcfc(0, (sub_1dd12(0) | 2));
    *0x2000188c = 0;
    sub_cc40(0, 2, 0xff00, 0, 1, nullptr, 0, sub_bba8);
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_16930(1);
    }
    int32_t r0_3;
    if (r0_1 != 1)
    {
        r0_3 = 0;
    }
    else
    {
        sub_1ff48(arg1, 0x20001894, 0x10);
        r0_3 = 1;
    }
    return r0_3;
}

int32_t sub_bba8(int32_t arg1, int32_t arg2, int16_t* arg3, int32_t arg4)
{
    if (arg2 == 2)
    {
        sub_17ba2(4, "Got Cable response of %d\n", arg1);
        if ((arg1 + 3) <= 3)
        {
            int32_t r0 = 0xffffffff;
            switch (jump_table_bbd8[(3 + arg1)])
            {
                case 2:
                {
                    r0 = 5;
                    break;
                }
                case 4:
                {
                    r0 = 6;
                    break;
                }
                case 6:
                {
                    int32_t r0_1 = *arg3;
                    if (r0_1 <= 0xffffffff)
                    {
                        r0 = ((r0_1 >> 6) & 3);
                        if ((r0 != 1 && r0 != 2))
                        {
                            r0 = 3;
                        }
                    }
                    if ((r0_1 > 0xffffffff || (r0_1 <= 0xffffffff && r0 == 1)))
                    {
                        sub_1ff48(0x20001890, arg3, (arg4 << 2));
                        *0x200018ac = arg4;
                        r0 = 1;
                    }
                    break;
                }
            }
            *0x2000188c = r0;
        }
        sub_1dcfc(0, (sub_1dd12(0) & 0xfffffffd));
    }
    return 0;
}

int32_t sub_bc3c(int32_t arg1)
{
    sub_1dcfc(0, (sub_1dd12(0) | 2));
    *0x2000188c = 0;
    sub_cc40(0, 2, 0xff00, 0, 2, nullptr, 0, sub_bba8);
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_16930(1);
    }
    if (r0_1 == 1)
    {
        uint32_t i = *0x200018ac;
        if (i >= 2)
        {
            int32_t r2_1 = 1;
            do
            {
                int32_t r5_1 = *(0x20001890 + (r2_1 << 2));
                int32_t r0_3 = 1;
                if (arg1 == (r5_1 >> 0x10))
                {
                    return r0_3;
                }
                if (r5_1 == arg1)
                {
                    return r0_3;
                }
                r2_1 = (r2_1 + 1);
            } while (r2_1 < i);
        }
    }
    return 0;
}

int32_t sub_bcd4(int16_t arg1, int32_t arg2, int32_t arg3, int32_t* arg4)
{
    sub_1dcfc(0, (sub_1dd12(0) | 2));
    *0x2000188c = 0;
    sub_cc40(0, 2, arg1, 0, 3, nullptr, 0, sub_bba8);
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_16930(1);
    }
    int32_t r0_2;
    uint32_t i;
    int32_t r4_1;
    if (r0_1 == 1)
    {
        i = *0x200018ac;
        if (i >= 2)
        {
            r0_2 = 1;
            int32_t r3 = 1;
            do
            {
                r4_1 = *(0x20001890 + (r0_2 << 2));
                if (((r4_1 ^ arg2) & arg3) == 0)
                {
                    break;
                }
                r3 = (r3 + 1);
                r0_2 = (r0_2 + 1);
            } while (r3 < i);
            if ((((r4_1 ^ arg2) & arg3) == 0 && arg4 != 0))
            {
                *arg4 = r4_1;
            }
        }
    }
    if (((r0_1 != 1 || (r0_1 == 1 && i < 2)) || ((r0_1 == 1 && i >= 2) && ((r4_1 ^ arg2) & arg3) != 0)))
    {
        r0_2 = 0;
    }
    return r0_2;
}

int32_t sub_bd7c(int16_t arg1, int32_t arg2)
{
    sub_1dcfc(0, (sub_1dd12(0) | 2));
    *0x2000188c = 0;
    sub_cc40(0, 2, arg1, arg2, 4, nullptr, 0, sub_bba8);
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_16930(1);
    }
    int32_t r0_2;
    if (r0_1 != 1)
    {
        r0_2 = 0;
    }
    else
    {
        r0_2 = 1;
    }
    return r0_2;
}

int32_t sub_bde2(int16_t arg1, int32_t arg2)
{
    sub_1dcfc(0, (sub_1dd12(0) | 2));
    *0x2000188c = 0;
    sub_cc40(0, 2, arg1, arg2, 5, nullptr, 0, sub_bba8);
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_16930(1);
    }
    int32_t r0_2;
    if (r0_1 != 1)
    {
        r0_2 = 0;
    }
    else
    {
        r0_2 = 1;
    }
    return r0_2;
}

int32_t sub_be48(int32_t arg1, int32_t arg2, char* arg3, char* arg4, int32_t* arg5)
{
    sub_1dcfc(0, (sub_1dd12(0) | 2));
    *0x2000188c = 0;
    sub_ccc8(0, 2, 0x5ac, ((0xf | (arg2 << 4)) | ((arg1 & 7) << 0xc)), nullptr, 0, 1, sub_bba8);  {  // {"@FIF"}}
    int32_t r0_3;
    while (true)
    {
        r0_3 = *0x2000188c;
        if (r0_3 != 0)
        {
            break;
        }
        sub_16930(1);
    }
    int32_t r0_8;
    if (r0_3 != 1)
    {
        r0_8 = 0;
    }
    else
    {
        *arg3 = ((*0x20001890 >> 9) & 7);
        int32_t r2 = ((*0x20001890 >> 4) & 0x1f);
        *arg4 = r2;
        sub_1ff48(arg5, 0x20001894, r2);
        r0_8 = 1;
    }
    return r0_8;
}

int32_t sub_beea()
{
    int32_t r0;
    int32_t var_14 = r0;
    int32_t var_18 = 1;
    sub_1dcfc(0, (sub_1dd12(0) | 2));
    *0x2000188c = 0;
    sub_cc40(0, 2, 0x5ac, 2, 0x15, &var_18, 2, sub_bba8);  {  // {"@FIF"}}
    int32_t r0_2;
    while (true)
    {
        r0_2 = *0x2000188c;
        if (r0_2 != 0)
        {
            break;
        }
        sub_16930(1);
    }
    int32_t r0_3;
    if (r0_2 != 1)
    {
        r0_3 = 0;
    }
    else
    {
        r0_3 = 1;
    }
    return r0_3;
}

int32_t sub_bf50(int32_t* arg1)
{
    int32_t var_1c = 1;
    sub_1dcfc(0, (sub_1dd12(0) | 2));
    *0x2000188c = 0;
    sub_cc40(0, 2, 0x5ac, 3, 0x10, &var_1c, 1, sub_bba8);  {  // {"@FIF"}}
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_16930(1);
    }
    int32_t r0_3;
    int32_t r0_5;
    if (r0_1 == 1)
    {
        sub_1dcfc(0, (sub_1dd12(0) | 2));
        *0x2000188c = 0;
        sub_cc40(0, 2, 0x5ac, 3, 0x11, nullptr, 0, sub_bba8);  {  // {"@FIF"}}
        while (true)
        {
            r0_3 = *0x2000188c;
            if (r0_3 != 0)
            {
                break;
            }
            sub_16930(1);
        }
        if (r0_3 == 1)
        {
            if (arg1 != 0)
            {
                *arg1 = *0x20001894;
            }
            r0_5 = 1;
        }
    }
    if ((r0_1 != 1 || (r0_1 == 1 && r0_3 != 1)))
    {
        r0_5 = 0;
    }
    return r0_5;
}

int32_t sub_c010()
{
    int32_t var_1c = 1;
    sub_1dcfc(0, (sub_1dd12(0) | 2));
    *0x2000188c = 0;
    sub_cc40(0, 2, 0x5ac, 3, 0x10, &var_1c, 1, sub_bba8);  {  // {"@FIF"}}
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_16930(1);
    }
    if (r0_1 == 1)
    {
        while (true)
        {
            sub_1dcfc(0, (sub_1dd12(0) | 2));
            *0x2000188c = 0;
            sub_cc40(0, 2, 0x5ac, 3, 0x12, nullptr, 0, sub_bba8);  {  // {"@FIF"}}
            int32_t r0_3;
            while (true)
            {
                r0_3 = *0x2000188c;
                if (r0_3 != 0)
                {
                    break;
                }
                sub_16930(1);
            }
            if (r0_3 == 1)
            {
                return 1;
            }
            if (r0_3 != 3)
            {
                break;
            }
            sub_16930(0x32);
            if (*0x2000188c != 3)
            {
                return 1;
            }
        }
    }
    return 0;
}

uint32_t sub_c0d0()
{
    char var_21 = 0;
    char var_20;
    int32_t r0 = sub_c104(0, 1, &var_20, 0, &var_21, 1);
    uint32_t r1 = var_20;
    if (r0 == 0)
    {
        r1 = 0xffffffff;
    }
    return r1;
}

int32_t sub_c104(int32_t arg1, char arg2, int32_t* arg3, int32_t arg4, char* arg5, char arg6)
{
    sub_1dcfc(0, (sub_1dd12(0) | 2));
    *0x2000188c = 0;
    sub_ccc8(0, 2, 0x4b4, ((arg2 & 0x1f) | (arg1 << 5)), arg3, arg4, arg6, sub_bba8);
    int32_t r0_4;
    while (true)
    {
        r0_4 = *0x2000188c;
        if (r0_4 != 0)
        {
            break;
        }
        sub_16930(1);
    }
    int32_t r0_8;
    if (r0_4 != 1)
    {
        r0_8 = 0;
    }
    else
    {
        if (arg5 != 0)
        {
            *arg5 = *0x200018ac;
        }
        if (arg3 != 0)
        {
            sub_1ff48(arg3, 0x20001894, (*arg5 << 2));
        }
        r0_8 = 1;
    }
    return r0_8;
}

int32_t sub_c1a8()
{
    int32_t var_20 = 0x4a;
    sub_c104(0, 5, &var_20, 1, nullptr, 0);
    return 0xffffffff;
}

int32_t sub_c1cc()
{
    int32_t r4 = 0;
    int32_t var_28 = 0x50;
    char var_29 = 0;
    int32_t r0_3;
    if (sub_c104(0, 6, &var_28, 1, &var_29, 1) == 0)
    {
        r0_3 = 0xffffffff;
    }
    else
    {
        if (var_28 == 2)
        {
            r4 = 1;
        }
        uint32_t r0_2 = var_29;
        if (r0_2 != 0)
        {
            r0_2 = 1;
        }
        r0_3 = (r0_2 & r4);
    }
    return r0_3;
}

int32_t sub_c212(int32_t arg1, int32_t arg2, int32_t arg3)
{
    int32_t r0_3;
    int32_t r0_6;
    if (arg1 >= 0x9a)
    {
        int32_t i = 0;
        do
        {
            int32_t r0 = (i * 3);
            bool cond:0_1 = i == 5;
            int32_t r3_1 = 6;
            i = (i + 1);
            if (cond:0_1)
            {
                r3_1 = 2;
            }
            sub_c104(i, 7, (arg3 + (r0 << 3)), r3_1, nullptr, 0);
            int32_t j;
            do
            {
                sub_16930(1);
                j = sub_1edd8(0);
            } while (j < 0xf);
        } while (i != 6);
        int32_t r4_1 = 0;
        char var_31 = 0;
        int32_t var_30 = (0x46 | (arg1 << 8));
        r0_3 = sub_c104(0, 8, &var_30, 1, &var_31, 1);
        if (r0_3 != 0)
        {
            if (var_30 == 2)
            {
                r4_1 = 1;
            }
            uint32_t r0_5 = var_31;
            if (r0_5 != 0)
            {
                r0_5 = 1;
            }
            r0_6 = (r0_5 & r4_1);
        }
    }
    if ((arg1 < 0x9a || (arg1 >= 0x9a && r0_3 == 0)))
    {
        r0_6 = 0xffffffff;
    }
    return r0_6;
}

int32_t sub_c2aa(int32_t arg1)
{
    int32_t var_28 = arg1;
    int32_t r4 = 0;
    char var_29 = 0;
    int32_t r0_3;
    if (sub_c104(0, 0xb, &var_28, 1, &var_29, 1) == 0)
    {
        r0_3 = 0xffffffff;
    }
    else
    {
        if (var_28 == 2)
        {
            r4 = 1;
        }
        uint32_t r0_2 = var_29;
        if (r0_2 != 0)
        {
            r0_2 = 1;
        }
        r0_3 = (r0_2 & r4);
    }
    return r0_3;
}

int32_t sub_c2ee() __pure
{
    return 0;
}

int32_t sub_c2f2()
{
    *0x20001d8c = 0;
    *0x20001d88 = 0;
    sub_fba2(1);
    return 0;
}

int32_t sub_c30e()
{
    *0x20001d8c = 0;
    *0x20001d88 = 0;
    sub_fbbc(1);
    return 0;
}

int32_t sub_c32a() __pure
{
    return 1;
}

uint32_t sub_c32e()
{
    uint32_t r0 = sub_1dbac(1);
    if (r0 != 1)
    {
        r0 = 2;
    }
    return r0;
}

int32_t sub_c340() __pure
{
    return 2;
}

int32_t sub_c344()
{
    *0x20001d88 = *0x200018cc;
    *0x20001d8c = *0x200018d0;
    int32_t r0_5;
    if ((*0x20001858 != 0 && *0x2000187e == 0))
    {
        if (sub_c9b6(0) != 0)
        {
            sub_ca5c(0);
        }
        r0_5 = 5;
        goto label_c3be;
    }
    uint32_t r0_4 = *0x20001d99;
    if (r0_4 == 7)
    {
        if (sub_c9b6(0) != 0)
        {
            sub_ca5c(0);
            r0_5 = 8;
        label_c3be:
            sub_b2cc(r0_5);
        }
        else if (((*0x20001f40 | (*0x20001f24 & 0x70)) << 0x18) == 0)
        {
            sub_faf8(0);
        }
    }
    else if (r0_4 == 3)
    {
        sub_ca5c(0);
        r0_5 = 4;
        goto label_c3be;
    }
    return 0;
}

int32_t sub_c3ec()
{
    if (*0x20001858 != 0)
    {
        int32_t r0_1;
        int32_t r2_1;
        r0_1 = sub_fc58(1);
        int32_t r4_1;
        if (r0_1 == 3)
        {
            sub_17ba2(4, "Charger with 3A Rp detected\n", r2_1);
            r4_1 = 0xbb8;
        }
        if (r0_1 == 2)
        {
            sub_17ba2(4, "Charger with 1.5A Rp detected\n", r2_1);
            r4_1 = 0x5dc;
        }
        if (r0_1 == 1)
        {
            sub_17ba2(4, "Charger with Default Rp detected…", r2_1);
            r4_1 = 0x1f4;
        }
        if (((r0_1 == 3 || r0_1 == 2) || r0_1 == 1))
        {
            bool cond:0_1 = sub_18194(0x40020400, sub_4000) == 0;
            *0x20001d88 = 0xffffffff;
            *0x20001d8c = r4_1;
            if (cond:0_1)
            {
                r4_1 = (r4_1 - 0xc8);
            }
            *0x20001854 = (0x22019000 | (r4_1 / 0xa));
            if (sub_c9b6(0) != 0)
            {
                sub_ca5c(0);
            }
            sub_b2cc(5);
        }
    }
    return 0;
}

int32_t sub_c4aa()
{
    int32_t r0 = *0x200004f0;
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_c4bc()
{
    sub_c824();
    *0x20001d84 = 0;
    *0x20001d80 = 0;
    sub_fba2(0);
    return 0;
}

int32_t sub_c4dc()
{
    sub_c824();
    *0x20001d84 = 0;
    *0x20001d80 = 0;
    sub_fbbc(0);
    return 0;
}

int32_t sub_c4fc()
{
    if (*0x20001880 != 0)
    {
        return 0;
    }
    int32_t r0_2 = 0;
    if ((*0x2000187a == 1 && *0x200004f8 == 0))
    {
        sub_1dcfc(0, (sub_1dd12(0) | 2));
        r0_2 = 1;
    }
    return r0_2;
}

int32_t sub_c544()
{
    int32_t r1 = 2;
    if (sub_1db5c(0) == 0)
    {
        r1 = 1;
    }
    return r1;
}

int32_t sub_c55a() __pure
{
    return 2;
}

int32_t sub_c55e()
{
    int32_t r0 = 2;
    if (*0x20001851 != 0)
    {
        r0 = 0x81;
    }
    return r0;
}

int32_t sub_c572()
{
    uint32_t r0 = *0x20001d99;
    uint32_t r1 = *0x20001904;
    int32_t r4;
    if ((r0 - 7) > 2)
    {
        int32_t r1_2;
        if (r1 != 1)
        {
            *0x20001904 = 1;
            r1_2 = (*0x20006064 + 0x19);
            *0x20001908 = r1_2;
        }
        else
        {
            r1_2 = *0x20001908;
        }
        if ((*0x20006064 - r1_2) < 0)
        {
        label_c6c6:
            r4 = 1;
        }
        else
        {
            *0x20001904 = 0;
            *0x20001d80 = *0x200018f8;
            int32_t r1_6 = *0x200018d4;
            *0x20001d84 = r1_6;
            uint32_t r2_4 = *0x200018f4;
            int32_t r0_8;
            if (r2_4 != 1)
            {
                if (r0 != 4)
                {
                    sub_17ba2(4, "Switching to 5V path (This shoul…", r2_4);
                }
                else
                {
                    r4 = 2;
                    sub_137d0(2);
                    sub_196cc(0xa);
                }
            }
            else
            {
                int32_t r2_6;
                int32_t r3_1;
                r2_6 = HIGHD((*0x20000524 * 0xcccccccd));
                r3_1 = LOWD((*0x20000524 * 0xcccccccd));
                if ((r0 == 5 || (r0 != 5 && ((r1_6 >> 0xa) & 0x3ff) > (r2_6 >> 3))))
                {
                    r0_8 = 2;
                    goto label_c6ee;
                }
            }
            if (((r2_4 != 1 && r0 != 4) || r2_4 == 1))
            {
                r0_8 = 1;
            label_c6ee:
                sub_137d0(r0_8);
                sub_196cc(0xa);
                goto label_c6f8;
            }
        }
    }
    else
    {
        if (r1 == 0)
        {
            *0x20001904 = 1;
            *0x20001908 = (*0x20006064 + 0x15e);
            sub_b2cc(8);
            sub_ca8a(1);
            char r0_3 = sub_cdd2(1);
            *0x20001d91 = r0_3;
            sub_8746(4, r0_3, *0x20006064);
        }
        if (sub_c9b6(1) != 0)
        {
            *0x20001904 = 0;
            *0x20001d80 = *0x200018f8;
            *0x20001d84 = *0x200018d4;
            sub_b2cc(9);
        label_c6f8:
            r4 = 2;
        }
        else
        {
            if (*0x20001904 != 1)
            {
                goto label_c6c6;
            }
            if ((*0x20006064 - *0x20001908) < 0)
            {
                goto label_c6c6;
            }
            r4 = 0;
            *0x20001904 = 0;
        }
    }
    return r4;
}

int32_t sub_c6fe()
{
    int32_t r1 = *0x20006064;
    int32_t r4;
    if (*0x2000190c == 0)
    {
        r4 = 1;
        *0x2000190c = 1;
        *0x20001910 = (r1 + 0x2bc);
        sub_137d0(0);
        if ((*0x20001d99 - 7) <= 2)
        {
            sub_b2cc(7);
            r4 = 1;
            sub_ca8a(1);
        }
    }
    else if ((r1 - *0x20001910) < 0)
    {
        r4 = 1;
    }
    else
    {
        *0x2000190c = 0;
        uint32_t r0_1 = *0x20001d99;
        if (((r0_1 - 7) <= 2 || ((r0_1 - 7) > 2 && r0_1 == 5)))
        {
            r4 = 2;
            sub_137d0(2);
        }
        if (((r0_1 - 7) > 2 && r0_1 != 5))
        {
            sub_137d0(1);
            r4 = 2;
        }
    }
    return r4;
}

int32_t sub_c796()
{
    sub_ca5c(0);
    return 0;
}

int32_t sub_c7a4()
{
    int32_t r0 = *0x200018f8;
    int32_t r2 = *0x200018d4;
    *0x20001d80 = r0;
    *0x20001d84 = r2;
    if (*0x200004ea == (((r2 >> 0xa) & 0x3ff) * 0xa))
    {
        uint32_t r2_3;
        if (2 != (r0 >> 0x1e))
        {
            r2_3 = (r0 >> 0x1e);
            if ((r2_3 != 1 && (r2_3 == 0 && (0x32 * ((r0 >> 0xa) & 0x3ff)) == *0x200004e8)))
            {
                goto label_c81e;
            }
        }
        if ((2 == (r0 >> 0x1e) || (2 != (r0 >> 0x1e) && r2_3 == 1)))
        {
            uint32_t r1_2 = *0x200004e8;
            if (((0x32 * ((r0 >> 0x14) & 0x3ff)) >= r1_2 && (0x32 * ((r0 >> 0xa) & 0x3ff)) <= r1_2))
            {
            label_c81e:
                *0x2000188b = 0;
            }
        }
    }
    return 0;
}

int32_t sub_c824()
{
    sub_1dcfc(0, (sub_1dd12(0) & 0xffffffe7));
    *0x2000011c = 1;
    *0x200018f4 = 0;
    *0x20001884 = 0;
    *0x2000188b = 0;
    *0x200004e8 = 0x1388;
    *0x200004ea = 0;
    *0x2000187e = 0;
    *0x2000187b = 0;
    *0x2000187a = 0;
    *0x20001851 = 0;
    *0x20001880 = 0;
    int32_t r0_2;
    int32_t r1_1;
    r1_1 = HIGHD((*0x20000524 * 0xcccccccd));
    r0_2 = LOWD((*0x20000524 * 0xcccccccd));
    *0x2000185c = (((r1_1 >> 3) & 0x3ff) | 0x22019000);
    sub_110fc();
    *0x2000188a = 0;
    uint32_t r0_5 = *0x20001d99;
    if ((r0_5 - 7) <= 2)
    {
        sub_b2cc(7);
        sub_ca8a(1);
    }
    else if (r0_5 != 5)
    {
        if (sub_c9b6(1) != 0)
        {
            sub_ca16(1, 0x11000000);
        }
        sub_b2cc(0);
    }
    *0x20001886 = 0;
    *0x2000187c = 0;
    *0x20001888 = 0;
    sub_112a4();
    *0x20001d98 = 0;
    sub_8746(5, 0, *0x20006064);
    *0x20001885 = 0;
    *0x200018f5 = 0;
    if (*0x200004f8 == 3)
    {
        char var_11 = 0;
        sub_17938(0x40005c00, 0x1c, 0x664e4f43, 0, &var_11, 1, 0, 0x64);
    }
    sub_166ee(1);
    return sub_166a2();
}

int32_t sub_c9b6(int32_t arg1)
{
    int32_t r1 = 0;
    int32_t r0 = 0;
    uint32_t r2 = *((arg1 * 0xdc) + 0x20001918);
    if (r2 != 7)
    {
        r1 = 1;
    }
    int32_t r2_1 = 0;
    if (r2 != 0x13)
    {
        r2_1 = 1;
    }
    if ((r2_1 & r1) == 0)
    {
        if ((*((arg1 * 0xdc) + 0x20001976) & 1) == 0)
        {
            return 0;
        }
        uint32_t r1_5 = ((*((arg1 * 0xdc) + 0x2000197a) | (*((arg1 * 0xdc) + 0x2000197b) << 8)) | ((*((arg1 * 0xdc) + 0x2000197c) | (*((arg1 * 0xdc) + 0x2000197d) << 8)) << 0x10));
        r0 = 0;
        if (r1_5 == 5)
        {
            r0 = 1;
        }
    }
    return r0;
}

void* sub_ca16(int32_t arg1, int32_t arg2)
{
    if (sub_1dbac(arg1) == 0)
    {
        *((arg1 * 0xdc) + 0x2000197a) = 1;
        *((arg1 * 0xdc) + 0x2000197d) = 0;
        *((arg1 * 0xdc) + 0x2000197c) = 0;
        *((arg1 * 0xdc) + 0x2000197b) = 0;
        *((arg1 * 0xdc) + 0x200019c4) = arg2;
        *((arg1 * 0xdc) + 0x20001978) = (*((arg1 * 0xdc) + 0x20001978) | 0x40);
        return (0x20001914 + (arg1 * 0xdc));
    }
    return 0xffffffff;
}

int32_t sub_ca5c(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x2000197a) = 0;
    *((arg1 * 0xdc) + 0x2000197d) = 0;
    *((arg1 * 0xdc) + 0x2000197c) = 0;
    *((arg1 * 0xdc) + 0x2000197b) = 0;
    *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 8);
    return 0;
}

int32_t sub_ca8a(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x2000197a) = 0;
    *((arg1 * 0xdc) + 0x2000197d) = 0;
    *((arg1 * 0xdc) + 0x2000197c) = 0;
    *((arg1 * 0xdc) + 0x2000197b) = 0;
    *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 2);
    return 0;
}

int32_t sub_cab6(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 0x10);
    return 0;
}

int32_t sub_cad4(int32_t arg1, int32_t arg2)
{
    uint32_t r0 = sub_1db5c(arg1);
    int32_t r1;
    char const* const r1_1;
    int32_t r2_1;
    if (r0 == 0)
    {
        if (arg2 == 0)
        {
            r2_1 = *(*(0x20001acc + (arg1 << 2)) + 0x1c);
            if (r2_1 != 0)
            {
                r1 = 0;
            }
        }
        else
        {
            r1_1 = "Requesting DR_Swap to DFP\n";
        }
    }
    if ((r0 != 0 && arg2 != 1))
    {
        r1_1 = "Requesting DR_Swap to UFP\n";
    }
    if (((r0 == 0 && arg2 != 0) || (r0 != 0 && arg2 != 1)))
    {
        sub_17ba2(4, r1_1, 0x47c);
        *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 0x40);
    }
    if ((r0 != 0 && arg2 == 1))
    {
        r2_1 = *(*(0x20001acc + (arg1 << 2)) + 0x1c);
        if (r2_1 != 0)
        {
            r1 = 1;
        }
    }
    if ((((r0 == 0 && arg2 == 0) && r2_1 != 0) || ((r0 != 0 && arg2 == 1) && r2_1 != 0)))
    {
        r2_1(1, r1);
    }
    return 0;
}

int32_t sub_cb4c(int32_t arg1, int32_t arg2)
{
    uint32_t r0 = sub_1dbac(arg1);
    int32_t r1;
    int32_t r2_1;
    if (r0 == 0)
    {
        if (arg2 == 0)
        {
            r2_1 = *(*(0x20001acc + (arg1 << 2)) + 0x20);
            if (r2_1 != 0)
            {
                r1 = 1;
            }
        }
    }
    else if (arg2 == 1)
    {
        r2_1 = *(*(0x20001acc + (arg1 << 2)) + 0x20);
        if (r2_1 != 0)
        {
            r1 = 0;
        }
    }
    if ((((r0 == 0 && arg2 == 0) && r2_1 != 0) || ((r0 != 0 && arg2 == 1) && r2_1 != 0)))
    {
        r2_1(1, r1);
    }
    if (((r0 == 0 && arg2 != 0) || (r0 != 0 && arg2 != 1)))
    {
        *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 0x20);
    }
    return 0;
}

int32_t sub_cbac(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 0x80);
    return 0;
}

int32_t sub_cbca(int32_t arg1, uint32_t arg2, int16_t arg3, char* arg4, int32_t arg5)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0 = sub_1dbac(arg1);
    int32_t r0_4 = sub_1e41a(arg1, arg2, arg3, arg4, (arg5 << 2));
    char r1_2;
    int32_t r2_1;
    if (r0 == 0)
    {
        r2_1 = (r0_4 + 2);
        if (r0_4 == 0xfffffffe)
        {
            r1_2 = 3;
        label_cc32:
            /* tailcall */
            return sub_1959c((0x20001914 + (arg1 * 0xdc)), r1_2, r2_1);
        }
        if (r0_4 == 0xfffffffd)
        {
            r1_2 = 0xb;
            goto label_cc32;
        }
    }
    else
    {
        r2_1 = (r0_4 + 2);
        if (r0_4 == 0xfffffffe)
        {
            r1_2 = 0xf;
            goto label_cc32;
        }
        if (r0_4 == 0xfffffffd)
        {
            r1_2 = 0x18;
            goto label_cc32;
        }
    }
    return (0x20001914 + (arg1 * 0xdc));
}

int32_t sub_cc40(int32_t arg1, int32_t arg2, int16_t arg3, int32_t arg4, int16_t arg5, int32_t* arg6, int32_t arg7, int32_t arg8)
{
    int32_t r0_1;
    if (*((arg1 * 0xdc) + 0x200019c8) == 0)
    {
        *((arg1 * 0xdc) + 0x200019c8) = arg2;
        *((arg1 * 0xdc) + 0x200019ce) = arg3;
        *((arg1 * 0xdc) + 0x200019cc) = ((((arg5 & 0x1f) | ((arg4 & 7) << 8)) | (*((arg1 * 0xdc) + 0x200019cc) & 0x1820)) | 0x8000);
        sub_1ff48(((arg1 * 0xdc) + 0x200019d0), arg6, (arg7 << 2));
        char r0_8 = *((arg1 * 0xdc) + 0x20001977);
        *((arg1 * 0xdc) + 0x200019ec) = (arg8 >> 0x10);
        *((arg1 * 0xdc) + 0x200019ea) = arg8;
        *((arg1 * 0xdc) + 0x200019e8) = (arg7 + 1);
        *((arg1 * 0xdc) + 0x200019e9) = 1;
        *((arg1 * 0xdc) + 0x20001977) = (r0_8 | 8);
        r0_1 = 0;
    }
    else
    {
        r0_1 = 0xffffffff;
    }
    return r0_1;
}

int32_t sub_ccc8(int32_t arg1, int32_t arg2, int16_t arg3, int16_t arg4, int32_t* arg5, int32_t arg6, char arg7, int32_t arg8)
{
    int32_t r0_1;
    if (*((arg1 * 0xdc) + 0x200019c8) == 0)
    {
        *((arg1 * 0xdc) + 0x200019c8) = arg2;
        *((arg1 * 0xdc) + 0x200019cc) = (arg4 & 0x7fff);
        *((arg1 * 0xdc) + 0x200019ce) = arg3;
        sub_1ff48(((arg1 * 0xdc) + 0x200019d0), arg5, (arg6 << 2));
        char r0_3 = *((arg1 * 0xdc) + 0x20001977);
        *((arg1 * 0xdc) + 0x200019ec) = (arg8 >> 0x10);
        *((arg1 * 0xdc) + 0x200019ea) = arg8;
        *((arg1 * 0xdc) + 0x200019e8) = (arg6 + 1);
        *((arg1 * 0xdc) + 0x200019e9) = arg7;
        *((arg1 * 0xdc) + 0x20001977) = (r0_3 | 8);
        r0_1 = 0;
    }
    else
    {
        r0_1 = 0xffffffff;
    }
    return r0_1;
}

void* sub_cd3a(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x20001976) = (*((arg1 * 0xdc) + 0x20001976) | 1);
    return (0x20001914 + (arg1 * 0xdc));
}

void* sub_cd56(int32_t arg1)
{
    if ((*((arg1 * 0xdc) + 0x20001976) & 1) == 0)
    {
        return (0x20001914 + (arg1 * 0xdc));
    }
    *((arg1 * 0xdc) + 0x20001976) = 2;
    /* tailcall */
    return sub_1959c((0x20001914 + (arg1 * 0xdc)), 0, 2);
}

int32_t sub_cd7c(int32_t arg1, int32_t arg2)
{
    int32_t i = 0;
    int32_t* r6 = 0x20001914;
    int32_t r0_1;
    do
    {
        sub_19424(r6, *(arg1 + (i << 2)), 0x28, 0x20000120, 0, i);
        r0_1 = *(arg2 + (i << 2));
        r6 = &r6[0x37];
        *(0x20001acc + (i << 2)) = r0_1;
        i = (i + 1);
    } while (i != 2);
    return r0_1;
}

uint32_t sub_cdd2(int32_t arg1)
{
    uint32_t r2;
    if (((*((arg1 * 0xdc) + 0x20001976) << 0x1e) < 0 && *((arg1 * 0xdc) + 0x20001919) != 0))
    {
        sub_1959c((0x20001914 + (arg1 * 0xdc)), 0, r2);
    }
    int32_t* r0_5;
    uint32_t r12;
    r0_5 = sub_1ddda(arg1);
    if (r0_5 != 0)
    {
        uint32_t r1_2;
        r1_2 = sub_ce7a(arg1, r0_5);
        sub_1e3ba(r0_5, r1_2);
    }
    sub_19486((0x20001914 + (arg1 * 0xdc)), arg1, 6, r12);
    if ((*((arg1 * 0xdc) + 0x2000196c) != 0 && (*0x20006064 - *((arg1 * 0xdc) + 0x20001970)) >= 0))
    {
        *((arg1 * 0xdc) + 0x200019c8) = 0;
        *((arg1 * 0xdc) + 0x2000196c) = 0;
        *((arg1 * 0xdc) + 0x20001977) = (*((arg1 * 0xdc) + 0x20001977) & 0xe7);
        int32_t r6_1 = (*((arg1 * 0xdc) + 0x200019ea) | (*((arg1 * 0xdc) + 0x200019ec) << 0x10));
        if (r6_1 != 0)
        {
            r6_1(0xfffffffd, 0, 0, 0);
        }
    }
    return *((arg1 * 0xdc) + 0x20001918);
}

uint32_t sub_ce7a(int32_t arg1, int16_t* arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r4 = *arg2;
    if (sub_1e3d6(arg2) != 0x20)
    {
        int32_t r9 = (r4 & 0x7000);
        int32_t r8 = (r4 & 0x1f);
        uint32_t r0_7 = ((*((arg1 * 0xdc) + 0x20001977) | (*((arg1 * 0xdc) + 0x20001978) << 8)) | (*((arg1 * 0xdc) + 0x20001979) << 0x10));
        uint32_t r0_15;
        int32_t r0_16;
        if ((r0_7 & 0x10) != 0)
        {
            if ((r9 != 0 && r8 == 0xf))
            {
                *((arg1 * 0xdc) + 0x20001978) = (r0_7 >> 8);
                *((arg1 * 0xdc) + 0x20001977) = (0xef & r0_7);
                *((arg1 * 0xdc) + 0x20001979) = (r0_7 >> 0x10);
            label_cf80:
                r0_15 = ((0x801e >> r8) << 0x1f);
                if (r0_15 == 0)
                {
                    goto label_cfb4;
                }
                r0_16 = 0x21c90;
                goto label_cfae;
            }
            *((arg1 * 0xdc) + 0x2000196c) = 0;
            *((arg1 * 0xdc) + 0x200019c8) = 0;
            *((arg1 * 0xdc) + 0x20001978) = (r0_7 >> 8);
            uint32_t r1_5 = (0xffffe7 & r0_7);
            *((arg1 * 0xdc) + 0x20001977) = r1_5;
            *((arg1 * 0xdc) + 0x20001979) = (r0_7 >> 0x10);
            int32_t r4_1 = (*((arg1 * 0xdc) + 0x200019ea) | (*((arg1 * 0xdc) + 0x200019ec) << 0x10));
            if (r4_1 == 0)
            {
                r0_7 = r1_5;
            }
            else
            {
                r4_1(0xfffffffe, 0, 0, 0);
                r0_7 = ((*((arg1 * 0xdc) + 0x20001977) | (*((arg1 * 0xdc) + 0x20001978) << 8)) | (*((arg1 * 0xdc) + 0x20001979) << 0x10));
            }
        }
        *((arg1 * 0xdc) + 0x20001978) = (r0_7 >> 8);
        *((arg1 * 0xdc) + 0x20001977) = (0xef & r0_7);
        *((arg1 * 0xdc) + 0x20001979) = (r0_7 >> 0x10);
        if (r9 != 0)
        {
            goto label_cf80;
        }
        r0_15 = (r8 - 1);
        if (r0_15 > 0xc)
        {
        label_cfb4:
            return r0_15;
        }
        r0_16 = 0x21cd0;
    label_cfae:
        /* jump -> *(r0_16 + (r8 << 2)) */
    }
    char r1;
    if (sub_1dbac(arg1) != 0)
    {
        r1 = 0x18;
    }
    else
    {
        r1 = 0xb;
    }
    /* tailcall */
    return sub_1959c((0x20001914 + (arg1 * 0xdc)), r1, 0x47c);
}

uint32_t sub_cfb6(int32_t arg1, int16_t* arg2)
{
    int32_t r3 = ((*arg2 >> 0xc) & 7);
    *((arg1 * 0xdc) + 0x20001980) = r3;
    if (r3 != 0)
    {
        int32_t i = 0;
        do
        {
            void* r5_1 = &arg2[(i * 2)];
            *(((arg1 * 0xdc) + 0x20001984) + (i << 2)) = (((*(r5_1 + 2) | (*(r5_1 + 3) << 8)) | (*(r5_1 + 4) << 0x10)) | (*(r5_1 + 5) << 0x18));
            i = (i + 1);
        } while (i < *((arg1 * 0xdc) + 0x20001980));
    }
    uint32_t r0_6 = sub_1dbac(arg1);
    if (r0_6 == 0)
    {
        uint32_t r0_8 = *((arg1 * 0xdc) + 0x20001918);
        if (((r0_8 - 7) > 0x1c || ((r0_8 - 7) <= 0x1c && ((1 << (r0_8 - 7)) & 0x10000005) == 0)))
        {
            r0_6 = (r0_8 - 2);
        }
        if ((((r0_8 - 7) <= 0x1c && ((1 << (r0_8 - 7)) & 0x10000005) != 0) || (((r0_8 - 7) > 0x1c || ((r0_8 - 7) <= 0x1c && ((1 << (r0_8 - 7)) & 0x10000005) == 0)) && r0_6 < 2)))
        {
            r0_6 = (0x20001914 + (arg1 * 0xdc));
            *(r0_6 + 0x64) = (*(r0_6 + 0x64) | 2);
        }
    }
    return r0_6;
}

uint32_t sub_d04a(int32_t arg1, void* arg2)
{
    uint32_t r0 = sub_1dbac(arg1);
    if (r0 != 0)
    {
        r0 = (0x20001914 + (arg1 * 0xdc));
        *(r0 + 0xac) = (((*(arg2 + 2) | (*(arg2 + 3) << 8)) | (*(arg2 + 4) << 0x10)) | (*(arg2 + 5) << 0x18));
        uint32_t r1_4 = *(r0 + 4);
        if ((r1_4 == 0x13 || r1_4 == 0xf))
        {
            *(r0 + 0x64) = (*(r0 + 0x64) | 0x20);
        }
    }
    return r0;
}

int32_t sub_d096(int32_t arg1, void* arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if ((*(arg2 + 5) & 0xf0) != 0x50)
    {
        return sub_1e41a(arg1, sub_1e3d6(arg2), 4, nullptr, 0);
    }
    /* tailcall */
    return sub_1e78e(arg1, 2);
}

uint32_t sub_d0d0(int32_t arg1, int16_t* arg2)
{
    int32_t r3 = ((*arg2 >> 0xc) & 7);
    *((arg1 * 0xdc) + 0x200019a0) = r3;
    if (r3 != 0)
    {
        int32_t i = 0;
        do
        {
            void* r5_1 = &arg2[(i * 2)];
            *(((arg1 * 0xdc) + 0x200019a4) + (i << 2)) = (((*(r5_1 + 2) | (*(r5_1 + 3) << 8)) | (*(r5_1 + 4) << 0x10)) | (*(r5_1 + 5) << 0x18));
            i = (i + 1);
        } while (i < *((arg1 * 0xdc) + 0x200019a0));
    }
    uint32_t r0_6 = sub_1dbac(arg1);
    if (r0_6 != 0)
    {
        r0_6 = (0x20001914 + (arg1 * 0xdc));
        uint32_t r1 = *(r0_6 + 4);
        if ((r1 == 0x25 || r1 == 0x15))
        {
            *(r0_6 + 0x64) = (*(r0_6 + 0x64) | 4);
        }
    }
    return r0_6;
}

int32_t sub_d14a(int32_t arg1, int16_t* arg2)
{
    int32_t r0_1 = ((*arg2 >> 0xc) & 7);
    char var_3d = r0_1;
    if (r0_1 != 0)
    {
        int32_t r1 = 0;
        int16_t var_3c;
        do
        {
            void* r2_1 = &arg2[(r1 * 2)];
            *(&var_3c + (r1 << 2)) = (((*(r2_1 + 2) | (*(r2_1 + 3) << 8)) | (*(r2_1 + 4) << 0x10)) | (*(r2_1 + 5) << 0x18));
            r1 = (r1 + 1);
        } while (r0_1 != r1);
        char r4_2 = (r0_1 - 1);
        int32_t r0_2 = var_3c;
        var_3d = r4_2;
        int16_t var_3a;
        void var_38;
        int32_t r6_1;
        if (r0_2 > 0xffffffff)
        {
            int16_t var_40 = (r0_2 & 0x7fff);
            if (*((arg1 * 0xdc) + 0x200019c8) == 0)
            {
                int32_t r4_3 = *(*(0x20001acc + (arg1 << 2)) + 0x34);
                if (r4_3 != 0)
                {
                    r6_1 = r4_3(sub_1e3d6(arg2), var_3a, &var_40, &var_38, &var_3d);
                    if ((r6_1 & 0xff) != 0)
                    {
                        var_3c = ((var_40 & 0x7fff) | (var_3c & 0x8000));
                    }
                }
                if ((r4_3 == 0 || (r4_3 != 0 && (r6_1 & 0xff) == 0)))
                {
                    r6_1 = 0;
                }
            }
            else
            {
                r6_1 = 0;
                *((arg1 * 0xdc) + 0x200019c8) = 0;
                char r1_4 = (*((arg1 * 0xdc) + 0x20001977) & 0xe7);
                *((arg1 * 0xdc) + 0x2000196c) = 0;
                *((arg1 * 0xdc) + 0x20001977) = r1_4;
                int32_t r9_1 = (*((arg1 * 0xdc) + 0x200019ea) | (*((arg1 * 0xdc) + 0x200019ec) << 0x10));
                if (r9_1 != 0)
                {
                    r6_1 = 0;
                    r9_1(0, sub_1e3d6(arg2), &var_3c, (r4_2 + 1));
                }
            }
            goto label_d290;
        }
        if ((r0_2 & 0xc0) != 0)
        {
            char r1_8 = (*((arg1 * 0xdc) + 0x20001977) & 0xe7);
            *((arg1 * 0xdc) + 0x2000196c) = 0;
            *((arg1 * 0xdc) + 0x200019c8) = 0;
            *((arg1 * 0xdc) + 0x20001977) = r1_8;
            r0_1 = *((arg1 * 0xdc) + 0x200019ea);
            int32_t r6_2 = (r0_1 | (*((arg1 * 0xdc) + 0x200019ec) << 0x10));
            if (r6_2 != 0)
            {
                r0_1 = r6_2(0, sub_1e3d6(arg2), &var_3c, (r4_2 + 1));
            }
        }
        else
        {
            r0_1 = *(0x20001acc + (arg1 << 2));
            int32_t r4_4 = *(r0_1 + 0x30);
            if (r4_4 != 0)
            {
                int32_t r0_34 = sub_1e3d6(arg2);
                uint32_t r3_9 = var_3c;
                r6_1 = r4_4(r0_34, var_3a, ((r3_9 >> 8) & 7), (r3_9 & 0x1f), &var_38, &var_3d);
                uint32_t r0_36 = r6_1;
                int16_t r0_39;
                if (r0_36 == 3)
                {
                    var_3d = 0;
                    r0_39 = (var_3c | 0xc0);
                }
                if (r0_36 == 2)
                {
                    var_3d = 0;
                    r0_39 = ((var_3c & 0xff3f) | 0x80);
                }
                if (r0_36 == 1)
                {
                    r0_39 = ((var_3c & 0xff3f) | 0x40);
                }
                if (((r0_36 == 3 || r0_36 == 2) || r0_36 == 1))
                {
                    var_3c = r0_39;
                label_d296:
                    if (sub_1e3d6(arg2) != 1)
                    {
                        r0_1 = sub_1e3d6(arg2);
                        if (r0_1 == 2)
                        {
                            r0_1 = sub_1e41a(arg1, 2, 0xf, &var_3c, (4 + (var_3d << 2)));
                        }
                    }
                    else
                    {
                        uint32_t r0_25 = sub_1dbac(arg1);
                        int32_t r0_28;
                        uint32_t r2_8;
                        r0_28 = sub_1e41a(arg1, 1, 0xf, &var_3c, (4 + (var_3d << 2)));
                        char r1_16;
                        if (r0_25 != 0)
                        {
                            if (r0_28 == 0xfffffffe)
                            {
                                r0_1 = (0x20001914 + (arg1 * 0xdc));
                                r1_16 = 0xf;
                                goto label_d368;
                            }
                            r0_1 = (r0_28 + 3);
                            if (r0_28 == 0xfffffffd)
                            {
                                r0_1 = (0x20001914 + (arg1 * 0xdc));
                                r1_16 = 0x18;
                                goto label_d368;
                            }
                        }
                        else if (r0_28 != 0xfffffffe)
                        {
                            r0_1 = (r0_28 + 3);
                            if (r0_28 == 0xfffffffd)
                            {
                                r0_1 = (0x20001914 + (arg1 * 0xdc));
                                r1_16 = 0xb;
                                goto label_d368;
                            }
                        }
                        else
                        {
                            r0_1 = (0x20001914 + (arg1 * 0xdc));
                            r1_16 = 3;
                        label_d368:
                            sub_1959c(r0_1, r1_16, r2_8);
                        }
                    }
                }
                if (((r0_36 != 3 && r0_36 != 2) && r0_36 != 1))
                {
                label_d290:
                    r0_1 = (r6_1 << 0x18);
                    if (r0_1 != 0)
                    {
                        goto label_d296;
                    }
                }
            }
        }
    }
    return r0_1;
}

int32_t sub_d39c() __pure
{
    return;
}

void* sub_d39e(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x20001978) = (*((arg1 * 0xdc) + 0x20001978) | 1);
    return (0x20001914 + (arg1 * 0xdc));
}

void sub_d3ba(char* arg1)
{
    char r1 = 0x14;
    uint32_t r2_1 = *((arg1 * 0xdc) + 0x20001918);
    if (r2_1 > 0x1e)
    {
        return;
    }
    int32_t temp0 = ((1 << r2_1) & 0x4c000020);
    if (temp0 != 0)
    {
        arg1 = ((arg1 * 0xdc) + 0x20001977);
        r1 = (*arg1 & 0x9f);
    }
    if (temp0 != 0)
    {
        *arg1 = (r1 | 0x20);
    }
}

void sub_d3f8(char* arg1)
{
    char r1 = 0x14;
    uint32_t r2_1 = *((arg1 * 0xdc) + 0x20001918);
    if (r2_1 > 0x1e)
    {
        return;
    }
    int32_t temp0 = ((1 << r2_1) & 0x4c000020);
    if (temp0 != 0)
    {
        arg1 = ((arg1 * 0xdc) + 0x20001977);
        r1 = (*arg1 & 0x9f);
    }
    if (temp0 != 0)
    {
        *arg1 = (r1 | 0x40);
    }
}

int32_t sub_d436() __pure
{
    return;
}

void sub_d438(char* arg1)
{
    char r1 = 0x14;
    int32_t r2_2 = (*((arg1 * 0xdc) + 0x20001918) - 6);
    if (r2_2 > 0x1a)
    {
        return;
    }
    int32_t temp0 = ((1 << r2_2) & 0x6400001);
    if (temp0 != 0)
    {
        arg1 = ((arg1 * 0xdc) + 0x20001977);
        r1 = (*arg1 | 0x80);
    }
    if (temp0 != 0)
    {
        *arg1 = r1;
    }
}

void* sub_d474(int32_t arg1)
{
    uint32_t r1 = *((arg1 * 0xdc) + 0x20001918);
    if ((r1 != 0x13 && r1 != 7))
    {
        return (0x20001914 + (arg1 * 0xdc));
    }
    *((arg1 * 0xdc) + 0x20001978) = (*((arg1 * 0xdc) + 0x20001978) | 0x10);
    return (0x20001914 + (arg1 * 0xdc));
}

void* sub_d49c(int32_t arg1)
{
    uint32_t r1 = *((arg1 * 0xdc) + 0x20001918);
    if ((r1 != 0x13 && r1 != 7))
    {
        return (0x20001914 + (arg1 * 0xdc));
    }
    *((arg1 * 0xdc) + 0x20001978) = (*((arg1 * 0xdc) + 0x20001978) | 8);
    return (0x20001914 + (arg1 * 0xdc));
}

int32_t sub_d4c4(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r3 = 0;
    int32_t r2 = 0;
    uint32_t r1 = *((arg1 * 0xdc) + 0x20001918);
    if (r1 != 7)
    {
        r3 = 1;
    }
    if (r1 != 0x13)
    {
        r2 = 1;
    }
    void* r0_18;
    char r1_7;
    int32_t r2_3;
    if (((r2 & r3) == 0 && (*((arg1 * 0xdc) + 0x20001976) & 1) != 0))
    {
        uint32_t r0_4 = ((*((arg1 * 0xdc) + 0x2000197a) | (*((arg1 * 0xdc) + 0x2000197b) << 8)) | ((*((arg1 * 0xdc) + 0x2000197c) | (*((arg1 * 0xdc) + 0x2000197d) << 8)) << 0x10));
        if (r0_4 == 5)
        {
            int32_t r0_6 = *(*(0x20001acc + (arg1 << 2)) + 0x10);
            uint32_t r0_8;
            int16_t r2_4;
            uint32_t r6_2;
            if (r0_6 != 0)
            {
                r0_8 = r0_6();
                if ((r0_8 != 0 && r0_8 != 2))
                {
                    if (r0_8 == 1)
                    {
                        uint32_t r0_10 = sub_1dbac(arg1);
                        int32_t r0_12;
                        uint32_t r2_2;
                        r0_12 = sub_1e41a(arg1, 1, 3, nullptr, 0);
                        void* r0_13;
                        char r1_6;
                        if (r0_10 != 0)
                        {
                            if (r0_12 == 0xfffffffe)
                            {
                                r0_13 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0xf;
                                goto label_d614;
                            }
                            if (r0_12 == 0xfffffffd)
                            {
                                r0_13 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0x18;
                                goto label_d614;
                            }
                        }
                        else if (r0_12 == 0xfffffffe)
                        {
                            r0_13 = (0x20001914 + (arg1 * 0xdc));
                            r1_6 = 3;
                        label_d614:
                            sub_1959c(r0_13, r1_6, r2_2);
                        }
                        else if (r0_12 == 0xfffffffd)
                        {
                            r0_13 = (0x20001914 + (arg1 * 0xdc));
                            r1_6 = 0xb;
                            goto label_d614;
                        }
                        /* tailcall */
                        return sub_1db72(arg1);
                    }
                    r6_2 = sub_1dbac(arg1);
                    r2_4 = 0xc;
                }
            }
            if (((r0_6 == 0 || (r0_6 != 0 && r0_8 == 0)) || (r0_6 != 0 && r0_8 == 2)))
            {
                r6_2 = sub_1dbac(arg1);
                r2_4 = 4;
            }
            int32_t r0_22;
            r0_22 = sub_1e41a(arg1, 1, r2_4, nullptr, 0);
            int32_t r0_23;
            if (r6_2 == 0)
            {
                if (r0_22 == 0xfffffffe)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_d58e;
                }
                r0_23 = (r0_22 + 3);
                if (r0_22 == 0xfffffffd)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_d5b6;
                }
            }
            else
            {
                if (r0_22 == 0xfffffffe)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_d580;
                }
                r0_23 = (r0_22 + 3);
                if (r0_22 == 0xfffffffd)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    r1_7 = 0x18;
                    goto label_d5d4;
                }
            }
            return r0_23;
        }
    }
    int32_t r0_15 = sub_1ee0a(arg1, 1, 0);
    uint32_t r0_17;
    r0_17 = sub_1dbac(arg1);
    if (r0_15 <= 0xffffffff)
    {
        if (r0_17 == 0)
        {
            r0_18 = (0x20001914 + (arg1 * 0xdc));
        label_d5b6:
            r1_7 = 0xb;
            goto label_d5d4;
        }
        r0_18 = (0x20001914 + (arg1 * 0xdc));
        r1_7 = 0x17;
    label_d5d4:
        /* tailcall */
        return sub_1959c(r0_18, r1_7, r2_3);
    }
    if (r0_17 == 0)
    {
        r0_18 = (0x20001914 + (arg1 * 0xdc));
    label_d58e:
        r1_7 = 3;
        goto label_d5d4;
    }
    r0_18 = (0x20001914 + (arg1 * 0xdc));
label_d580:
    r1_7 = 0xf;
    goto label_d5d4;
}

int32_t sub_d628(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r3 = 0;
    int32_t r2 = 0;
    uint32_t r1 = *((arg1 * 0xdc) + 0x20001918);
    if (r1 != 7)
    {
        r3 = 1;
    }
    if (r1 != 0x13)
    {
        r2 = 1;
    }
    void* r0_19;
    char r1_7;
    int32_t r2_3;
    if (((r2 & r3) == 0 && (*((arg1 * 0xdc) + 0x20001976) & 1) != 0))
    {
        uint32_t r0_4 = ((*((arg1 * 0xdc) + 0x2000197a) | (*((arg1 * 0xdc) + 0x2000197b) << 8)) | ((*((arg1 * 0xdc) + 0x2000197c) | (*((arg1 * 0xdc) + 0x2000197d) << 8)) << 0x10));
        if (r0_4 == 5)
        {
            int32_t r0_6 = *(*(0x20001acc + (arg1 << 2)) + 0x14);
            uint32_t r0_8;
            int16_t r2_4;
            uint32_t r6_2;
            if (r0_6 != 0)
            {
                r0_8 = r0_6();
                if ((r0_8 != 0 && r0_8 != 2))
                {
                    if (r0_8 == 1)
                    {
                        sub_1f014(arg1, 1);
                        uint32_t r0_11 = sub_1dbac(arg1);
                        int32_t r0_13;
                        uint32_t r2_2;
                        r0_13 = sub_1e41a(arg1, 1, 3, nullptr, 0);
                        void* r0_30;
                        char r1_13;
                        if (r0_11 == 0)
                        {
                            void* r0_27;
                            char r1_12;
                            if (r0_13 == 0xfffffffe)
                            {
                                r0_27 = (0x20001914 + (arg1 * 0xdc));
                                r1_12 = 3;
                            }
                            if (r0_13 == 0xfffffffd)
                            {
                                r0_27 = (0x20001914 + (arg1 * 0xdc));
                                r1_12 = 0xb;
                            }
                            if ((r0_13 == 0xfffffffe || r0_13 == 0xfffffffd))
                            {
                                sub_1959c(r0_27, r1_12, r2_2);
                            }
                            r0_30 = (0x20001914 + (arg1 * 0xdc));
                            r1_13 = 0x20;
                        }
                        else
                        {
                            void* r0_14;
                            char r1_6;
                            if (r0_13 == 0xfffffffe)
                            {
                                r0_14 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0xf;
                            }
                            if (r0_13 == 0xfffffffd)
                            {
                                r0_14 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0x18;
                            }
                            if ((r0_13 == 0xfffffffe || r0_13 == 0xfffffffd))
                            {
                                sub_1959c(r0_14, r1_6, r2_2);
                            }
                            r0_30 = (0x20001914 + (arg1 * 0xdc));
                            r1_13 = 0x21;
                        }
                        /* tailcall */
                        return sub_1958a(r0_30, r1_13, r2_2);
                    }
                    r6_2 = sub_1dbac(arg1);
                    r2_4 = 0xc;
                }
            }
            if (((r0_6 == 0 || (r0_6 != 0 && r0_8 == 0)) || (r0_6 != 0 && r0_8 == 2)))
            {
                r6_2 = sub_1dbac(arg1);
                r2_4 = 4;
            }
            int32_t r0_23;
            r0_23 = sub_1e41a(arg1, 1, r2_4, nullptr, 0);
            int32_t r0_24;
            if (r6_2 == 0)
            {
                if (r0_23 == 0xfffffffe)
                {
                    r0_19 = (0x20001914 + (arg1 * 0xdc));
                    goto label_d6fa;
                }
                r0_24 = (r0_23 + 3);
                if (r0_23 == 0xfffffffd)
                {
                    r0_19 = (0x20001914 + (arg1 * 0xdc));
                    goto label_d722;
                }
            }
            else
            {
                if (r0_23 == 0xfffffffe)
                {
                    r0_19 = (0x20001914 + (arg1 * 0xdc));
                    goto label_d6ec;
                }
                r0_24 = (r0_23 + 3);
                if (r0_23 == 0xfffffffd)
                {
                    r0_19 = (0x20001914 + (arg1 * 0xdc));
                    r1_7 = 0x18;
                    goto label_d740;
                }
            }
            return r0_24;
        }
    }
    int32_t r0_16 = sub_1ee0a(arg1, 1, 0);
    uint32_t r0_18;
    r0_18 = sub_1dbac(arg1);
    if (r0_16 <= 0xffffffff)
    {
        if (r0_18 == 0)
        {
            r0_19 = (0x20001914 + (arg1 * 0xdc));
        label_d722:
            r1_7 = 0xb;
            goto label_d740;
        }
        r0_19 = (0x20001914 + (arg1 * 0xdc));
        r1_7 = 0x17;
    label_d740:
        /* tailcall */
        return sub_1959c(r0_19, r1_7, r2_3);
    }
    if (r0_18 == 0)
    {
        r0_19 = (0x20001914 + (arg1 * 0xdc));
    label_d6fa:
        r1_7 = 3;
        goto label_d740;
    }
    r0_19 = (0x20001914 + (arg1 * 0xdc));
label_d6ec:
    r1_7 = 0xf;
    goto label_d740;
}

int32_t sub_d79e(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r3 = 0;
    int32_t r2 = 0;
    uint32_t r1 = *((arg1 * 0xdc) + 0x20001918);
    if (r1 != 7)
    {
        r3 = 1;
    }
    if (r1 != 0x13)
    {
        r2 = 1;
    }
    void* r0_18;
    char r1_7;
    int32_t r2_3;
    if (((r2 & r3) == 0 && (*((arg1 * 0xdc) + 0x20001976) & 1) != 0))
    {
        uint32_t r0_4 = ((*((arg1 * 0xdc) + 0x2000197a) | (*((arg1 * 0xdc) + 0x2000197b) << 8)) | ((*((arg1 * 0xdc) + 0x2000197c) | (*((arg1 * 0xdc) + 0x2000197d) << 8)) << 0x10));
        if (r0_4 == 5)
        {
            int32_t r0_6 = *(*(0x20001acc + (arg1 << 2)) + 0x18);
            uint32_t r0_8;
            int16_t r2_4;
            uint32_t r6_2;
            if (r0_6 != 0)
            {
                int32_t r0_7 = r0_6();
                r0_8 = r0_7;
                if ((r0_8 != 0 && r0_8 != 2))
                {
                    if (r0_8 == 1)
                    {
                        uint32_t r0_10 = sub_1dbac(arg1);
                        int32_t r0_12;
                        uint32_t r2_2;
                        r0_12 = sub_1e41a(arg1, 1, 3, nullptr, 0);
                        void* r0_13;
                        char r1_6;
                        if (r0_10 != 0)
                        {
                            if (r0_12 == 0xfffffffe)
                            {
                                r0_13 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0xf;
                                goto label_d8f2;
                            }
                            if (r0_12 == 0xfffffffd)
                            {
                                r0_13 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0x18;
                                goto label_d8f2;
                            }
                        }
                        else if (r0_12 == 0xfffffffe)
                        {
                            r0_13 = (0x20001914 + (arg1 * 0xdc));
                            r1_6 = 3;
                        label_d8f2:
                            sub_1959c(r0_13, r1_6, r2_2);
                        }
                        else if (r0_12 == 0xfffffffd)
                        {
                            r0_13 = (0x20001914 + (arg1 * 0xdc));
                            r1_6 = 0xb;
                            goto label_d8f2;
                        }
                        char r1_12;
                        if ((r0_7 << 0x18) < 0)
                        {
                            r1_12 = 0x1c;
                        }
                        else
                        {
                            r1_12 = 0x1d;
                        }
                        /* tailcall */
                        return sub_1958a((0x20001914 + (arg1 * 0xdc)), r1_12, r2_2);
                    }
                    r6_2 = sub_1dbac(arg1);
                    r2_4 = 0xc;
                }
            }
            if (((r0_6 == 0 || (r0_6 != 0 && r0_8 == 0)) || (r0_6 != 0 && r0_8 == 2)))
            {
                r6_2 = sub_1dbac(arg1);
                r2_4 = 4;
            }
            int32_t r0_22;
            r0_22 = sub_1e41a(arg1, 1, r2_4, nullptr, 0);
            int32_t r0_23;
            if (r6_2 == 0)
            {
                if (r0_22 == 0xfffffffe)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_d86c;
                }
                r0_23 = (r0_22 + 3);
                if (r0_22 == 0xfffffffd)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_d894;
                }
            }
            else
            {
                if (r0_22 == 0xfffffffe)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_d85e;
                }
                r0_23 = (r0_22 + 3);
                if (r0_22 == 0xfffffffd)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    r1_7 = 0x18;
                    goto label_d8b2;
                }
            }
            return r0_23;
        }
    }
    int32_t r0_15 = sub_1ee0a(arg1, 1, 0);
    uint32_t r0_17;
    r0_17 = sub_1dbac(arg1);
    if (r0_15 <= 0xffffffff)
    {
        if (r0_17 == 0)
        {
            r0_18 = (0x20001914 + (arg1 * 0xdc));
        label_d894:
            r1_7 = 0xb;
            goto label_d8b2;
        }
        r0_18 = (0x20001914 + (arg1 * 0xdc));
        r1_7 = 0x17;
    label_d8b2:
        /* tailcall */
        return sub_1959c(r0_18, r1_7, r2_3);
    }
    if (r0_17 == 0)
    {
        r0_18 = (0x20001914 + (arg1 * 0xdc));
    label_d86c:
        r1_7 = 3;
        goto label_d8b2;
    }
    r0_18 = (0x20001914 + (arg1 * 0xdc));
label_d85e:
    r1_7 = 0xf;
    goto label_d8b2;
}

void sub_d90e(char* arg1)
{
    char r1 = 0x14;
    uint32_t r2_1 = *((arg1 * 0xdc) + 0x20001918);
    if (r2_1 > 0x1e)
    {
        return;
    }
    int32_t temp0 = ((1 << r2_1) & 0x4c000020);
    if (temp0 != 0)
    {
        arg1 = ((arg1 * 0xdc) + 0x20001977);
        r1 = (*arg1 | 0x60);
    }
    if (temp0 != 0)
    {
        *arg1 = r1;
    }
}

int32_t sub_d948(int32_t arg1, void* arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if (sub_1e3d6(arg2) != 1)
    {
        return sub_1e41a(arg1, sub_1e3d6(arg2), 3, nullptr, 0);
    }
    sub_1e41a(arg1, 1, 3, nullptr, 0);
    char r1;
    if (sub_1dbac(arg1) == 0)
    {
        r1 = 3;
    }
    else
    {
        r1 = 0xf;
    }
    /* tailcall */
    return sub_1959c((0x20001914 + (arg1 * 0xdc)), r1, 0x47c);
}

void* sub_d9ae(int32_t arg1, int32_t arg2)
{
    sub_1f886(((arg2 * 0xdc) + 0x20001977), 0, 7);
    sub_1f886(((arg2 * 0xdc) + 0x20001924), 0, 0x52);
    *((arg2 * 0xdc) + 0x20001976) = (*((arg2 * 0xdc) + 0x20001976) & 1);
    sub_1f886(((arg2 * 0xdc) + 0x20001980), 0, 0x48);
    return ((arg2 * 0xdc) + 0x20001980);
}

int32_t sub_d9f2(int32_t arg1, int32_t arg2)
{
    int32_t r0_1 = **(0x20001acc + (arg2 << 2));
    int32_t r2;
    if (r0_1 != 0)
    {
        int32_t r0_2;
        r0_2 = r0_1();
        if (r0_2 != 0)
        {
            /* tailcall */
            return sub_1958a(arg1, 0xd, r2);
        }
    }
    /* tailcall */
    return sub_1958a(arg1, 1, r2);
}

char* sub_da24(int32_t arg1, int32_t arg2)
{
    *((arg2 * 0xdc) + 0x2000192c) = 0;
    *((arg2 * 0xdc) + 0x20001975) = 0;
    *((arg2 * 0xdc) + 0x2000193c) = 0;
    *((arg2 * 0xdc) + 0x20001934) = 0;
    *((arg2 * 0xdc) + 0x20001944) = 0;
    sub_1f886(((arg2 * 0xdc) + 0x20001977), 0, 7);
    *((arg2 * 0xdc) + 0x20001980) = 0;
    *((arg2 * 0xdc) + 0x200019a0) = 0;
    *((arg2 * 0xdc) + 0x200019c0) = 0;
    *((arg2 * 0xdc) + 0x200019c4) = 0;
    return ((arg2 * 0xdc) + 0x20001977);
}

int32_t j_sub_1958a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_1958a(arg1, 2, r2);
}

int32_t sub_da6c() __pure
{
    return;
}

void sub_da6e(int32_t arg1, int32_t arg2)
{
    if ((*((arg2 * 0xdc) + 0x20001976) << 0x1f) != 0)
    {
        /* tailcall */
        return sub_1958a(arg1, 3, (0x20001914 + (arg2 * 0xdc)));
    }
    if ((*((arg2 * 0xdc) + 0x20001924) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001928)) >= 0))
    {
        *((arg2 * 0xdc) + 0x20001924) = 0;
        uint32_t r2_2 = *((arg2 * 0xdc) + 0x20001974);
        if (((*((arg2 * 0xdc) + 0x20001977) & 1) != 0 && r2_2 >= 3))
        {
            arg1 = *(*(0x20001acc + (arg2 << 2)) + 4);
            if (arg1 != 0)
            {
                /* jump -> arg1 */
            }
        }
        if (((*((arg2 * 0xdc) + 0x20001977) & 1) == 0 && r2_2 > 2))
        {
            /* tailcall */
            return sub_1958a(arg1, 0xc, r2_2);
        }
        if ((((*((arg2 * 0xdc) + 0x20001977) & 1) != 0 && r2_2 < 3) || (*((arg2 * 0xdc) + 0x20001977) & 1) == 0))
        {
            /* tailcall */
            return sub_1958a(arg1, 0xa, r2_2);
        }
    }
}

void sub_db24(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2_1 = (*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8));
    uint32_t lr_1 = (r2_1 | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    char r1_4;
    if ((lr_1 & 0x200) != 0)
    {
        *((arg2 * 0xdc) + 0x20001977) = lr_1;
        *((arg2 * 0xdc) + 0x20001979) = (lr_1 >> 0x10);
        *((arg2 * 0xdc) + 0x20001978) = ((0xfffdff & lr_1) >> 8);
        *((arg2 * 0xdc) + 0x20001934) = 0;
        r1_4 = 4;
    }
    else
    {
        if (*((arg2 * 0xdc) + 0x20001934) != 0)
        {
            r2_1 = (*0x20006064 - *((arg2 * 0xdc) + 0x20001938));
            if (r2_1 >= 0)
            {
                *((arg2 * 0xdc) + 0x20001934) = 0;
                if (*((arg2 * 0xdc) + 0x20001974) > 2)
                {
                    goto label_dc00;
                }
            label_dc02:
                r1_4 = 0xa;
            }
        }
        if ((*((arg2 * 0xdc) + 0x20001934) == 0 || (*((arg2 * 0xdc) + 0x20001934) != 0 && r2_1 < 0)))
        {
            if (*((arg2 * 0xdc) + 0x20001924) == 0)
            {
            label_dc00:
                return;
            }
            if ((*0x20006064 - *((arg2 * 0xdc) + 0x20001928)) < 0)
            {
                goto label_dc00;
            }
            *((arg2 * 0xdc) + 0x20001924) = 0;
            r2_1 = *((arg2 * 0xdc) + 0x20001974);
            if ((lr_1 << 0x1f) != 0)
            {
                if (r2_1 < 3)
                {
                    goto label_dc02;
                }
                arg1 = *(*(0x20001acc + (arg2 << 2)) + 4);
                if (arg1 != 0)
                {
                    /* jump -> arg1 */
                }
                goto label_dc00;
            }
            if (r2_1 <= 2)
            {
                goto label_dc02;
            }
            r1_4 = 0xc;
        }
    }
    /* tailcall */
    return sub_1958a(arg1, r1_4, r2_1);
}

int32_t sub_dc10(int32_t arg1, int32_t arg2)
{
    int32_t r0 = 0;
    char lr = *((arg2 * 0xdc) + 0x20001977);
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x20001924) = 0;
    *((arg2 * 0xdc) + 0x20001974) = 0;
    *((arg2 * 0xdc) + 0x2000197a) = 1;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x20001977) = (lr | 1);
    int32_t r2_2 = *(*(0x20001acc + (arg2 << 2)) + 0x50);
    if (r2_2 != 0)
    {
        r0 = r2_2(((arg2 * 0xdc) + 0x20001984), *((arg2 * 0xdc) + 0x20001980));
    }
    *((arg2 * 0xdc) + 0x200019c4) = r0;
    return r0;
}

int32_t j_sub_1958a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_1958a(arg1, 5, r2);
}

char* sub_dc6e(void* arg1, int32_t arg2)
{
    int32_t r0_2;
    uint32_t r2;
    r0_2 = sub_1e41a(arg2, 1, 2, ((arg2 * 0xdc) + 0x200019c4), 4);
    void* r0_4;
    char r1_1;
    if (r0_2 == 0xfffffffd)
    {
        r0_4 = arg1;
        r1_1 = 0xb;
    }
    if (r0_2 == 0xfffffffe)
    {
        r0_4 = arg1;
        r1_1 = 3;
    }
    if ((r0_2 == 0xfffffffd || r0_2 == 0xfffffffe))
    {
        sub_1959c(r0_4, r1_1, r2);
    }
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000197a) = 2;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_2 + 0x1b);
    return ((arg2 * 0xdc) + 0x2000197a);
}

void sub_dce4(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t lr_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    int32_t r2_2 = ((lr_2 >> 5) & 3);
    if ((r2_2 - 2) < 2)
    {
        uint32_t r2_3 = (lr_2 << 0x1e);
        if (r2_3 < 0)
        {
            *((arg2 * 0xdc) + 0x2000197a) = 4;
            *((arg2 * 0xdc) + 0x2000197d) = 0;
            *((arg2 * 0xdc) + 0x2000197c) = 0;
            *((arg2 * 0xdc) + 0x2000197b) = 0;
            /* tailcall */
            return sub_1958a(arg1, 7, 0);
        }
        /* tailcall */
        return sub_1958a(arg1, 3, r2_3);
    }
    if (r2_2 == 1)
    {
        *((arg2 * 0xdc) + 0x20001978) = (lr_2 >> 8);
        *((arg2 * 0xdc) + 0x20001977) = (0x9f & lr_2);
        *((arg2 * 0xdc) + 0x20001979) = (lr_2 >> 0x10);
        /* tailcall */
        return sub_1958a(arg1, 6, r2_2);
    }
    if ((*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        /* tailcall */
        return sub_1958a(arg1, 0xa, 0);
    }
}

char* sub_dd96(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000197a) = 3;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x2000193c) = 1;
    *((arg2 * 0xdc) + 0x20001940) = (r1 + 0x1f4);
    return ((arg2 * 0xdc) + 0x2000197a);
}

void sub_ddcc(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r4_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r4_2 & 0x80) != 0)
    {
        *((arg2 * 0xdc) + 0x2000193c) = 0;
        *((arg2 * 0xdc) + 0x20001979) = (r4_2 >> 0x10);
        *((arg2 * 0xdc) + 0x20001978) = (r4_2 >> 8);
        *((arg2 * 0xdc) + 0x20001977) = ((r4_2 & 0x7d) | 2);
        *((arg2 * 0xdc) + 0x2000197a) = 5;
        *((arg2 * 0xdc) + 0x2000197d) = 0;
        *((arg2 * 0xdc) + 0x2000197c) = 0;
        *((arg2 * 0xdc) + 0x2000197b) = 0;
        /* tailcall */
        return sub_1958a(arg1, 7, 5);
    }
    if (*((arg2 * 0xdc) + 0x2000193c) != 0)
    {
        int32_t r2_3 = *0x20006064;
        if ((r2_3 - *((arg2 * 0xdc) + 0x20001940)) >= 0)
        {
            *((arg2 * 0xdc) + 0x2000193c) = 0;
            /* tailcall */
            return sub_1958a(arg1, 0xa, r2_3);
        }
    }
}

uint32_t sub_de58(int32_t arg1, int32_t arg2)
{
    uint32_t r0_4 = ((*((arg2 * 0xdc) + 0x2000197a) | (*((arg2 * 0xdc) + 0x2000197b) << 8)) | ((*((arg2 * 0xdc) + 0x2000197c) | (*((arg2 * 0xdc) + 0x2000197d) << 8)) << 0x10));
    if (r0_4 != 5)
    {
        return r0_4;
    }
    int32_t r0_6 = *(*(0x20001acc + (arg2 << 2)) + 0x54);
    if (r0_6 == 0)
    {
        return r0_6;
    }
    /* jump -> r0_6 */
}

uint32_t sub_deee(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2 = (0x20001914 + (arg2 * 0xdc));
    char* r5_1 = (r2 + 0x63);
    uint32_t r1_1 = (*r5_1 | (r5_1[1] << 8));
    /* unimplemented  {sbfx r1, r3, #0, #0x18} */;
    char r1_6;
    if (((r1_1 | (r5_1[2] << 0x10)) & 0x200) != 0)
    {
        *r5_1 = r1_1;
        r5_1[2] = (r1_1 >> 0x10);
        r5_1[1] = ((r1_1 & 0xfffdff) >> 8);
        *(r2 + 0x20) = 0;
        r1_6 = 4;
    }
    else
    {
        if (((r1_1 << 0x11) < 0 || (((r1_1 << 0x11) >= 0 && *(r2 + 0x20) != 0) && (*0x20006064 - *((arg2 * 0xdc) + 0x20001938)) >= 0)))
        {
            *(r2 + 0x20) = 0;
            r5_1[2] = (r1_1 >> 0x10);
            *r5_1 = r1_1;
            r2 = &*(nullptr + 1);
            r5_1[1] = ((r1_1 & 0xbf00) >> 8);
            *((arg2 * 0xdc) + 0x2000197a) = 1;
            *((arg2 * 0xdc) + 0x2000197d) = 0;
            *((arg2 * 0xdc) + 0x2000197c) = 0;
            *((arg2 * 0xdc) + 0x2000197b) = 0;
            r1_6 = 5;
        }
        if (((*(r2 + 0x20) == 0 || (*(r2 + 0x20) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001938)) < 0)) && (r1_1 << 0x11) >= 0))
        {
            if ((r1_1 << 0x17) < 0)
            {
                *r5_1 = r1_1;
                r5_1[2] = (r1_1 >> 0x10);
                r2 = 0xfffeff;
                r5_1[1] = ((r1_1 & 0xfffeff) >> 8);
                r1_6 = 6;
            }
            else if ((r1_1 << 0x13) < 0)
            {
                *r5_1 = r1_1;
                r5_1[2] = (r1_1 >> 0x10);
                r2 = 0xffefff;
                r5_1[1] = ((r1_1 & 0xffefff) >> 8);
                r1_6 = 0x26;
            }
            else if ((r1_1 << 0x14) < 0)
            {
                *r5_1 = r1_1;
                r5_1[2] = (r1_1 >> 0x10);
                r2 = 0xfff7ff;
                r5_1[1] = ((r1_1 & 0xfff7ff) >> 8);
                r1_6 = 8;
            }
            else if ((r1_1 << 0xe) < 0)
            {
                *r5_1 = r1_1;
                r2 = (r1_1 >> 8);
                r5_1[1] = r2;
                r5_1[2] = ((r1_1 & 0xfd0000) >> 0x10);
                r1_6 = 9;
            }
            else if ((r1_1 << 0xb) < 0)
            {
                *r5_1 = r1_1;
                r2 = (r1_1 >> 8);
                r5_1[1] = r2;
                r5_1[2] = ((r1_1 & 0xef0000) >> 0x10);
                r1_6 = 0x25;
            }
            else if ((r1_1 << 0xa) < 0)
            {
                *r5_1 = r1_1;
                r2 = (r1_1 >> 8);
                r5_1[1] = r2;
                r5_1[2] = ((r1_1 & 0xdf0000) >> 0x10);
                r1_6 = 0x1e;
            }
            else
            {
                uint32_t r2_9 = (r1_1 << 9);
                if (r2_9 < 0)
                {
                    *r5_1 = r1_1;
                    r2 = (r1_1 >> 8);
                    r5_1[1] = r2;
                    r5_1[2] = ((r1_1 & 0xbf0000) >> 0x10);
                    r1_6 = 0x1a;
                }
                else
                {
                    /* unimplemented  {sbfx r2, r1, #0, #0x18} */;
                    if (r2_9 > 0xffffffff)
                    {
                        uint32_t r0 = (r1_1 << 0x1c);
                        if (r0 < 0)
                        {
                            r5_1[1] = (r1_1 >> 8);
                            *r5_1 = (0xf7 & r1_1);
                            r5_1[2] = (r1_1 >> 0x10);
                            int32_t r0_7 = sub_1e3dc(arg2, *((arg2 * 0xdc) + 0x200019c8), 0xf, ((arg2 * 0xdc) + 0x200019cc), (*((arg2 * 0xdc) + 0x200019e8) << 2), 0xffffffff);
                            uint32_t r12_1;
                            if (r0_7 != 0)
                            {
                                *((arg2 * 0xdc) + 0x200019c8) = 0;
                                *((arg2 * 0xdc) + 0x2000196c) = 0;
                                *r5_1 = (*r5_1 & 0xe7);
                                r0 = *((arg2 * 0xdc) + 0x200019ec);
                                r12_1 = (*((arg2 * 0xdc) + 0x200019ea) | (r0 << 0x10));
                            }
                            if ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) == 0))
                            {
                                *((arg2 * 0xdc) + 0x200019c8);
                                *((arg2 * 0xdc) + 0x200019c8) = 0;
                                *((arg2 * 0xdc) + 0x2000196c) = 0;
                                *r5_1 = (*r5_1 & 0xe7);
                                r0 = *((arg2 * 0xdc) + 0x200019ec);
                                r12_1 = (*((arg2 * 0xdc) + 0x200019ea) | (r0 << 0x10));
                            }
                            if (((r0_7 != 0 && r12_1 != 0) || ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) == 0) && r12_1 != 0)))
                            {
                                /* jump -> r12_1 */
                            }
                            if ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) != 0))
                            {
                                int32_t r1_27 = *0x20006064;
                                *((arg2 * 0xdc) + 0x2000196c) = 1;
                                *((arg2 * 0xdc) + 0x20001970) = (r1_27 + 0x1b);
                                r0 = (*r5_1 | 0x10);
                                *r5_1 = r0;
                            }
                        }
                        return r0;
                    }
                    r2 = (r1_1 >> 8);
                    *r5_1 = r1_1;
                    r5_1[1] = r2;
                    r5_1[2] = ((r1_1 >> 0x10) & 0x7f);
                    r1_6 = 0x1b;
                }
            }
        }
    }
    /* tailcall */
    return sub_1958a(arg1, r1_6, r2);
}

void* sub_e140(void* arg1, int32_t arg2)
{
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x5c);
    int32_t r0_2;
    int32_t r0_3;
    void* r3;
    if (r1 != 0)
    {
        void var_2c;
        r0_2 = r1(&var_2c);
        if ((r0_2 & 0xff) != 0)
        {
            r3 = &var_2c;
            r0_3 = (0x3fc & (r0_2 << 2));
        }
    }
    if ((r1 == 0 || (r1 != 0 && (r0_2 & 0xff) == 0)))
    {
        r0_3 = 0;
        r3 = nullptr;
    }
    void* r0_5;
    uint32_t r2;
    r0_5 = sub_1e41a(arg2, 1, 4, r3, r0_3);
    void* r0_6;
    char r1_2;
    if (r0_5 == 0xfffffffd)
    {
        r0_6 = arg1;
        r1_2 = 0xb;
    }
    else
    {
        r0_6 = (r0_5 + 2);
    }
    if (r0_5 == 0xfffffffe)
    {
        r0_6 = arg1;
        r1_2 = 3;
    }
    if ((r0_5 == 0xfffffffd || r0_5 == 0xfffffffe))
    {
        sub_1959c(r0_6, r1_2, r2);
    }
    return r0_6;
}

int32_t j_sub_1958a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_1958a(arg1, 7, r2);
}

int32_t sub_e1a4(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1;
    int32_t r2;
    r0_1 = sub_1e41a(arg2, 1, 7, nullptr, 0);
    int32_t r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0xb;
    }
    else
    {
        if (r0_1 != 0xfffffffe)
        {
            return (r0_1 + 2);
        }
        r0_3 = arg1;
        r1_1 = 3;
    }
    /* tailcall */
    return sub_1959c(r0_3, r1_1, r2);
}

int32_t j_sub_1958a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_1958a(arg1, 7, r2);
}

char* sub_e1e2(int32_t arg1, int32_t arg2)
{
    sub_1ee0a(arg2, 1, 1);
    int32_t r0_2 = *(*(0x20001acc + (arg2 << 2)) + 8);
    if (r0_2 != 0)
    {
        r0_2();
    }
    *((arg2 * 0xdc) + 0x2000197a) = 0;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x20001974) = (*((arg2 * 0xdc) + 0x20001974) + 1);
    return ((arg2 * 0xdc) + 0x2000197a);
}

int32_t j_sub_1958a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_1958a(arg1, 0xb, r2);
}

int32_t sub_e230(int32_t arg1, int32_t arg2)
{
    void* r0 = *(0x20001acc + (arg2 << 2));
    int32_t r1 = *(r0 + 8);
    if (r1 != 0)
    {
        r1();
        r0 = *(0x20001acc + (arg2 << 2));
    }
    int32_t r0_1 = *(r0 + 0x58);
    if (r0_1 != 0)
    {
        r0_1();
    }
    /* tailcall */
    return sub_1db40(arg2, 0);
}

int32_t j_sub_1958a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_1958a(arg1, 1, r2);
}

void* sub_e264(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x20001924) = 1;
    *((arg2 * 0xdc) + 0x20001928) = (r1 + 0x1388);
    return (0x20001914 + (arg2 * 0xdc));
}

int32_t sub_e28a(int32_t arg1, int32_t arg2)
{
    int32_t r0_1 = *(*(0x20001acc + (arg2 << 2)) + 0x60);
    if (r0_1 == 0)
    {
        return r0_1;
    }
    /* jump -> r0_1 */
}

void* sub_e2a0(int32_t arg1, int32_t arg2)
{
    char r6 = 0;
    *((arg2 * 0xdc) + 0x2000197a) = 0;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x20001975) = 0;
    if (sub_1f02a(arg2) != 1)
    {
        *((arg2 * 0xdc) + 0x2000193c) = 0;
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        *((arg2 * 0xdc) + 0x20001934) = 0;
        sub_1f886(((arg2 * 0xdc) + 0x20001977), 0, 7);
        *((arg2 * 0xdc) + 0x20001980) = 0;
        *((arg2 * 0xdc) + 0x200019a0) = 0;
        *((arg2 * 0xdc) + 0x200019c0) = 0;
        *((arg2 * 0xdc) + 0x200019c4) = 0;
    }
    else
    {
        r6 = 1;
        *((arg2 * 0xdc) + 0x20001948) = (*0x20006064 + 0x14);
    }
    *((arg2 * 0xdc) + 0x20001944) = r6;
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_e31a(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    char* r0_3;
    void* r0_7;
    int32_t r2_3;
    if (sub_1f02a(arg2) != 1)
    {
        r0_3 = (0x20001914 + (arg2 * 0xdc));
        if ((r0_3[0x62] << 0x1f) == 0)
        {
            goto label_e3fe;
        }
        r0_3 = &r0_3[0x30];
        r2_3 = *0x20006064;
        if (*r0_3 == 0)
        {
            *((arg2 * 0xdc) + 0x20001948) = (r2_3 + 0x96);
            *r0_3 = 1;
        label_e3fe:
            return r0_3;
        }
        if ((r2_3 - *((arg2 * 0xdc) + 0x20001948)) < 0)
        {
            goto label_e3fe;
        }
        *r0_3 = 0;
        r0_7 = *(0x20001acc + (arg2 << 2));
    label_e3ce:
        int32_t r0_8 = *(r0_7 + 0xc);
        int32_t r0_9;
        int32_t r0_10;
        char r1_6;
        if (r0_8 != 0)
        {
            r0_9 = r0_8();
            if (r0_9 != 0)
            {
                r0_10 = arg1;
                r1_6 = 0x27;
            }
        }
        if ((r0_8 == 0 || (r0_8 != 0 && r0_9 == 0)))
        {
            r0_10 = arg1;
            r1_6 = 0xf;
        }
        /* tailcall */
        return sub_1958a(r0_10, r1_6, r2_3);
    }
    r0_3 = ((arg2 * 0xdc) + 0x20001944);
    if (*r0_3 == 0)
    {
        goto label_e3fe;
    }
    if ((*0x20006064 - *((arg2 * 0xdc) + 0x20001948)) < 0)
    {
        goto label_e3fe;
    }
    *r0_3 = 0;
    sub_1f014(arg2, 0);
    int32_t r2_2 = *(*(0x20001acc + (arg2 << 2)) + 0x20);
    if (r2_2 != 0)
    {
        r2_2(1, 1);
    }
    r2_3 = sub_1db02(arg2, 1);
    r0_7 = *(0x20001acc + (arg2 << 2));
    goto label_e3ce;
}

void* sub_e400(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x20001944) = 1;
    *((arg2 * 0xdc) + 0x20001948) = (r1 + 0x96);
    return (0x20001914 + (arg2 * 0xdc));
}

void sub_e424(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2_6;
    if ((*((arg2 * 0xdc) + 0x20001944) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001948)) >= 0))
    {
        *((arg2 * 0xdc) + 0x20001944) = 0;
        uint32_t r2_2 = *((arg2 * 0xdc) + 0x20001975);
        if (r2_2 <= 0x32)
        {
            /* tailcall */
            return sub_1958a(arg1, 0xf, r2_2);
        }
        r2_6 = *((arg2 * 0xdc) + 0x20001977);
        if ((r2_6 << 0x1f) == 0)
        {
        label_e4b4:
            /* tailcall */
            return sub_1958a(arg1, 0x19, r2_6);
        }
        goto label_e4b8;
    }
    if (*((arg2 * 0xdc) + 0x20001924) == 0)
    {
    label_e4b8:
        return;
    }
    if ((*0x20006064 - *((arg2 * 0xdc) + 0x20001928)) < 0)
    {
        goto label_e4b8;
    }
    *((arg2 * 0xdc) + 0x20001924) = 0;
    r2_6 = *((arg2 * 0xdc) + 0x20001974);
    if (((*((arg2 * 0xdc) + 0x20001977) & 1) != 0 && r2_6 >= 3))
    {
        int32_t r0_1 = *(*(0x20001acc + (arg2 << 2)) + 4);
        if (r0_1 == 0)
        {
            return;
        }
        /* jump -> r0_1 */
    }
    if ((((*((arg2 * 0xdc) + 0x20001977) & 1) == 0 && r2_6 <= 2) || (*((arg2 * 0xdc) + 0x20001977) & 1) != 0))
    {
        /* tailcall */
        return sub_1958a(arg1, 0xa, r2_6);
    }
    goto label_e4b4;
}

char* sub_e4e2(char* arg1, int32_t arg2)
{
    void* r0 = *(0x20001acc + (arg2 << 2));
    int32_t r1 = *(r0 + 0x38);
    void var_3c;
    int32_t r0_2;
    if (r1 == 0)
    {
        *((arg2 * 0xdc) + 0x20001975) = (*((arg2 * 0xdc) + 0x20001975) + 1);
    }
    else
    {
        r0_2 = r1(&var_3c);
        *((arg2 * 0xdc) + 0x20001975) = (*((arg2 * 0xdc) + 0x20001975) + 1);
        if ((r0_2 & 0xff) == 0)
        {
            r0 = *(0x20001acc + (arg2 << 2));
        }
    }
    char* r0_6;
    if ((r1 == 0 || (r1 != 0 && (r0_2 & 0xff) == 0)))
    {
        r0_6 = *(r0 + 4);
        if (r0_6 != 0)
        {
            r0_6 = r0_6();
        }
    }
    if ((r1 != 0 && (r0_2 & 0xff) != 0))
    {
        int32_t r0_3 = (0x3fc & (r0_2 << 2));
        if ((*((arg2 * 0xdc) + 0x20001977) << 0x1f) != 0)
        {
            int32_t r0_8;
            uint32_t r2_4;
            r0_8 = sub_1e41a(arg2, 1, 1, &var_3c, r0_3);
            char* r0_10;
            char r1_7;
            if (r0_8 == 0xfffffffd)
            {
                r0_10 = arg1;
                r1_7 = 0x18;
            }
            if (r0_8 == 0xfffffffe)
            {
                r0_10 = arg1;
                r1_7 = 0xf;
            }
            if ((r0_8 == 0xfffffffd || r0_8 == 0xfffffffe))
            {
                sub_1959c(r0_10, r1_7, r2_4);
            }
            r0_6 = (0x20001914 + (arg2 * 0xdc));
            int32_t r1_9 = *0x20006064;
            r0_6[0x18] = 1;
            *(r0_6 + 0x1c) = (r1_9 + 0x1b);
        }
        else
        {
            int32_t r0_5;
            uint32_t r2_1;
            r0_5 = sub_1e3dc(arg2, 1, 1, &var_3c, r0_3, 0xffffffff);
            if (r0_5 == 0)
            {
                *((arg2 * 0xdc) + 0x20001974) = 0;
                *((arg2 * 0xdc) + 0x20001924) = 0;
                *((arg2 * 0xdc) + 0x20001975) = 0;
                int32_t r2_5 = *0x20006064;
                r0_6 = ((arg2 * 0xdc) + 0x2000197a);
                *r0_6 = 1;
                r0_6[3] = 0;
                r0_6[2] = 0;
                r0_6[1] = 0;
                *(r0_6 - 0x4e) = 1;
                *(r0_6 - 0x4a) = (r2_5 + 0x1b);
            }
            else
            {
                r0_6 = arg1;
                sub_1958a(r0_6, 0xe, r2_1);
            }
        }
    }
    return r0_6;
}

void sub_e5f4(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r2_2 & 0x2000) != 0)
    {
        *((arg2 * 0xdc) + 0x20001977) = r2_2;
        *((arg2 * 0xdc) + 0x20001979) = (r2_2 >> 0x10);
        *((arg2 * 0xdc) + 0x20001978) = ((0xffdfff & r2_2) >> 8);
        /* tailcall */
        return sub_1958a(arg1, 0x10, r2_2);
    }
    if (*((arg2 * 0xdc) + 0x2000192c) != 0)
    {
        int32_t r2_6 = (*0x20006064 - *((arg2 * 0xdc) + 0x20001930));
        if (r2_6 >= 0)
        {
            *((arg2 * 0xdc) + 0x2000192c) = 0;
            /* tailcall */
            return sub_1958a(arg1, 0x16, r2_6);
        }
    }
    if ((*((arg2 * 0xdc) + 0x20001924) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001928)) >= 0))
    {
        *((arg2 * 0xdc) + 0x20001924) = 0;
        char r1_5;
        if (*((arg2 * 0xdc) + 0x20001974) <= 2)
        {
            r1_5 = 0xa;
        }
        else
        {
            r1_5 = 0x19;
        }
        /* tailcall */
        return sub_1958a(arg1, r1_5, 0xdc);
    }
}

uint32_t sub_e6aa(int32_t arg1, int32_t arg2)
{
    char r2 = *((arg2 * 0xdc) + 0x20001977);
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x2000197a) = 2;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x20001977) = (r2 | 1);
    int32_t r1_1 = *(*(0x20001acc + (arg2 << 2)) + 0x3c);
    int32_t r0_2;
    int32_t r0_3;
    if (r1_1 != 0)
    {
        r0_2 = r1_1(*((arg2 * 0xdc) + 0x200019c0));
        if (r0_2 != 0)
        {
            r0_3 = (0x18000 & (r0_2 << 0xf));
        }
    }
    if ((r1_1 == 0 || (r1_1 != 0 && r0_2 == 0)))
    {
        r0_3 = 0x10000;
    }
    int32_t r0_4 = (r0_3 | (((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10)) & 0xfe7fff));
    *((arg2 * 0xdc) + 0x20001977) = r0_4;
    uint32_t r0_5 = (r0_4 >> 8);
    *((arg2 * 0xdc) + 0x20001979) = (r0_4 >> 0x10);
    *((arg2 * 0xdc) + 0x20001978) = r0_5;
    return r0_5;
}

void sub_e726(int32_t arg1, int32_t arg2)
{
    int32_t r1_3 = ((((*((arg2 * 0xdc) + 0x20001978) << 8) | (*((arg2 * 0xdc) + 0x20001979) << 0x10)) >> 0xf) & 3);
    if ((r1_3 - 2) < 2)
    {
        /* tailcall */
        return sub_1958a(arg1, 0x12, (r1_3 - 2));
    }
    if (r1_3 != 1)
    {
        return;
    }
    /* tailcall */
    return sub_1958a(arg1, 0x11, (r1_3 - 2));
}

char* sub_e75e(void* arg1, int32_t arg2)
{
    uint32_t r1_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    int16_t r2_1;
    if ((r1_2 & 0x40000) != 0)
    {
        *((arg2 * 0xdc) + 0x20001977) = r1_2;
        *((arg2 * 0xdc) + 0x20001978) = (r1_2 >> 8);
        r2_1 = 2;
        *((arg2 * 0xdc) + 0x20001979) = ((r1_2 & 0xfb0000) >> 0x10);
    }
    else
    {
        r2_1 = 3;
    }
    int32_t r0_3;
    uint32_t r2_3;
    r0_3 = sub_1e41a(arg2, 1, r2_1, nullptr, 0);
    void* r0_5;
    char r1_6;
    if (r0_3 == 0xfffffffd)
    {
        r0_5 = arg1;
        r1_6 = 0x18;
    }
    if (r0_3 == 0xfffffffe)
    {
        r0_5 = arg1;
        r1_6 = 0xf;
    }
    if ((r0_3 == 0xfffffffd || r0_3 == 0xfffffffe))
    {
        sub_1959c(r0_5, r1_6, r2_3);
    }
    *((arg2 * 0xdc) + 0x2000197a) = 3;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    return ((arg2 * 0xdc) + 0x2000197a);
}

int32_t sub_e7e8(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1 = *(*(0x20001acc + (arg2 << 2)) + 0x40);
    int32_t r2;
    if (r0_1 != 0)
    {
        int32_t r0_2;
        r0_2 = r0_1();
        if (r0_2 == 2)
        {
            /* tailcall */
            return sub_1958a(arg1, 0x13, r2);
        }
        if (r0_2 != 0)
        {
            return r0_2;
        }
    }
    /* tailcall */
    return sub_1959c(arg1, 0x16, r2);
}

uint32_t sub_e820(void* arg1, int32_t arg2)
{
    uint32_t r0 = *(arg1 + 5);
    if (r0 != 0x16)
    {
        int32_t r0_2;
        uint32_t r2_1;
        r0_2 = sub_1e41a(arg2, 1, 6, nullptr, 0);
        void* r0_4;
        char r1_1;
        if (r0_2 == 0xfffffffd)
        {
            r0_4 = arg1;
            r1_1 = 0x18;
        }
        if (r0_2 == 0xfffffffe)
        {
            r0_4 = arg1;
            r1_1 = 0xf;
        }
        if ((r0_2 == 0xfffffffd || r0_2 == 0xfffffffe))
        {
            sub_1959c(r0_4, r1_1, r2_1);
        }
        uint32_t r1_2 = *((arg2 * 0xdc) + 0x20001977);
        *((arg2 * 0xdc) + 0x2000197b) = 0;
        *((arg2 * 0xdc) + 0x2000197a) = 5;
        *((arg2 * 0xdc) + 0x2000197d) = 0;
        *((arg2 * 0xdc) + 0x2000197c) = 0;
        r0 = (r1_2 | 2);
        *((arg2 * 0xdc) + 0x20001977) = r0;
    }
    return r0;
}

uint32_t sub_e882(void* arg1, int32_t arg2)
{
    int32_t r0_3 = ((((*((arg2 * 0xdc) + 0x20001978) << 8) | (*((arg2 * 0xdc) + 0x20001979) << 0x10)) >> 0xf) & 3);
    int16_t r2_1;
    if (r0_3 == 3)
    {
        r2_1 = 0xc;
    }
    if (r0_3 == 2)
    {
        r2_1 = 4;
    }
    if ((r0_3 == 3 || r0_3 == 2))
    {
        int32_t r0_5;
        uint32_t r2_2;
        r0_5 = sub_1e41a(arg2, 1, r2_1, nullptr, 0);
        void* r0_7;
        char r1_2;
        if (r0_5 == 0xfffffffd)
        {
            r0_7 = arg1;
            r1_2 = 0x18;
        }
        if (r0_5 == 0xfffffffe)
        {
            r0_7 = arg1;
            r1_2 = 0xf;
        }
        if ((r0_5 == 0xfffffffd || r0_5 == 0xfffffffe))
        {
            sub_1959c(r0_7, r1_2, r2_2);
        }
    }
    *((arg2 * 0xdc) + 0x2000197a) = 4;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    int32_t r0_13 = (((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10)) & 0xfe7fff);
    uint32_t r0_14 = (r0_13 >> 8);
    *((arg2 * 0xdc) + 0x20001979) = (r0_13 >> 0x10);
    *((arg2 * 0xdc) + 0x20001978) = r0_14;
    return r0_14;
}

int32_t sub_e926(void* arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2 = *((arg2 * 0xdc) + 0x20001977);
    if ((r2 << 0x1e) < 0)
    {
        /* tailcall */
        return sub_1958a(arg1, 0x13, r2);
    }
    sub_1958a(arg1, 0x14, r2);
    int32_t r0_1 = *(*(0x20001acc + (arg2 << 2)) + 0x4c);
    if (r0_1 == 0)
    {
        return r0_1;
    }
    /* jump -> r0_1 */
}

uint32_t sub_e96c(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r1_1 = (*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8));
    uint32_t r2_1 = (r1_1 | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    /* unimplemented  {sbfx r1, r2, #0, #0x18} */;
    char r1_2;
    if ((r2_1 & 0x40000) != 0)
    {
        r1_2 = 0x11;
    }
    else if ((r1_1 << 0x12) < 0)
    {
        *((arg2 * 0xdc) + 0x20001977) = r1_1;
        *((arg2 * 0xdc) + 0x20001979) = (r1_1 >> 0x10);
        r2_1 = 0xffdfff;
        *((arg2 * 0xdc) + 0x20001978) = ((r1_1 & 0xffdfff) >> 8);
        r1_2 = 0x10;
    }
    else
    {
        int32_t r2_4 = 0xf7ffff;
        if (((r1_1 << 0xc) >= 0 && (r1_1 << 0x13) < 0))
        {
            r2_4 = 0xffefff;
        }
        if ((((r1_1 << 0xc) >= 0 && (r1_1 << 0x13) < 0) || (r1_1 << 0xc) < 0))
        {
            int32_t r1_5 = (r1_1 & r2_4);
            *((arg2 * 0xdc) + 0x20001977) = r1_5;
            r2_1 = (r1_5 >> 8);
            *((arg2 * 0xdc) + 0x20001978) = r2_1;
            *((arg2 * 0xdc) + 0x20001979) = (r1_5 >> 0x10);
            r1_2 = 0xf;
        }
        if (((r1_1 << 0xc) >= 0 && (r1_1 << 0x13) >= 0))
        {
            if ((r1_1 << 0x14) < 0)
            {
                *((arg2 * 0xdc) + 0x20001977) = r1_1;
                *((arg2 * 0xdc) + 0x20001979) = (r1_1 >> 0x10);
                r2_1 = 0xfff7ff;
                *((arg2 * 0xdc) + 0x20001978) = ((r1_1 & 0xfff7ff) >> 8);
                r1_2 = 0x24;
            }
            else if ((r1_1 << 0xb) < 0)
            {
                *((arg2 * 0xdc) + 0x20001977) = r1_1;
                r2_1 = (r1_1 >> 8);
                *((arg2 * 0xdc) + 0x20001978) = r2_1;
                *((arg2 * 0xdc) + 0x20001979) = ((r1_1 & 0xef0000) >> 0x10);
                r1_2 = 0x15;
            }
            else if ((r1_1 << 0xe) < 0)
            {
                *((arg2 * 0xdc) + 0x20001977) = r1_1;
                r2_1 = (r1_1 >> 8);
                *((arg2 * 0xdc) + 0x20001978) = r2_1;
                *((arg2 * 0xdc) + 0x20001979) = ((r1_1 & 0xfd0000) >> 0x10);
                r1_2 = 0x23;
            }
            else if ((r1_1 << 0xa) < 0)
            {
                *((arg2 * 0xdc) + 0x20001977) = r1_1;
                r2_1 = (r1_1 >> 8);
                *((arg2 * 0xdc) + 0x20001978) = r2_1;
                *((arg2 * 0xdc) + 0x20001979) = ((r1_1 & 0xdf0000) >> 0x10);
                r1_2 = 0x1e;
            }
            else
            {
                uint32_t r2_9 = (r1_1 << 9);
                if (r2_9 < 0)
                {
                    *((arg2 * 0xdc) + 0x20001977) = r1_1;
                    r2_1 = (r1_1 >> 8);
                    *((arg2 * 0xdc) + 0x20001978) = r2_1;
                    *((arg2 * 0xdc) + 0x20001979) = ((r1_1 & 0xbf0000) >> 0x10);
                    r1_2 = 0x1a;
                }
                else
                {
                    /* unimplemented  {sbfx r2, r1, #0, #0x18} */;
                    if (r2_9 > 0xffffffff)
                    {
                        uint32_t r0 = (r1_1 << 0x1c);
                        if (r0 < 0)
                        {
                            *((arg2 * 0xdc) + 0x20001978) = (r1_1 >> 8);
                            *((arg2 * 0xdc) + 0x20001977) = (0xf7 & r1_1);
                            *((arg2 * 0xdc) + 0x20001979) = (r1_1 >> 0x10);
                            int32_t r0_7 = sub_1e3dc(arg2, *((arg2 * 0xdc) + 0x200019c8), 0xf, ((arg2 * 0xdc) + 0x200019cc), (*((arg2 * 0xdc) + 0x200019e8) << 2), 0xffffffff);
                            uint32_t r12_1;
                            if (r0_7 != 0)
                            {
                                *((arg2 * 0xdc) + 0x200019c8) = 0;
                                *((arg2 * 0xdc) + 0x2000196c) = 0;
                                *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0xe7);
                                r0 = *((arg2 * 0xdc) + 0x200019ec);
                                r12_1 = (*((arg2 * 0xdc) + 0x200019ea) | (r0 << 0x10));
                            }
                            if ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) == 0))
                            {
                                *((arg2 * 0xdc) + 0x200019c8);
                                *((arg2 * 0xdc) + 0x200019c8) = 0;
                                *((arg2 * 0xdc) + 0x2000196c) = 0;
                                *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0xe7);
                                r0 = *((arg2 * 0xdc) + 0x200019ec);
                                r12_1 = (*((arg2 * 0xdc) + 0x200019ea) | (r0 << 0x10));
                            }
                            if (((r0_7 != 0 && r12_1 != 0) || ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) == 0) && r12_1 != 0)))
                            {
                                /* jump -> r12_1 */
                            }
                            if ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) != 0))
                            {
                                int32_t r1_21 = *0x20006064;
                                *((arg2 * 0xdc) + 0x2000196c) = 1;
                                *((arg2 * 0xdc) + 0x20001970) = (r1_21 + 0x1b);
                                r0 = (*((arg2 * 0xdc) + 0x20001977) | 0x10);
                                *((arg2 * 0xdc) + 0x20001977) = r0;
                            }
                        }
                        return r0;
                    }
                    r2_1 = (r1_1 >> 8);
                    *((arg2 * 0xdc) + 0x20001977) = r1_1;
                    *((arg2 * 0xdc) + 0x20001978) = r2_1;
                    *((arg2 * 0xdc) + 0x20001979) = ((r1_1 >> 0x10) & 0x7f);
                    r1_2 = 0x1b;
                }
            }
        }
    }
    /* tailcall */
    return sub_1958a(arg1, r1_2, r2_1);
}

void* sub_eb9c(void* arg1, int32_t arg2)
{
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_1e41a(arg2, 1, 8, nullptr, 0);
    void* r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0x18;
    }
    if (r0_1 == 0xfffffffe)
    {
        r0_3 = arg1;
        r1_1 = 0xf;
    }
    if ((r0_1 == 0xfffffffd || r0_1 == 0xfffffffe))
    {
        sub_1959c(r0_3, r1_1, r2);
    }
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_2 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

void sub_ebf0(int32_t arg1, int32_t arg2)
{
    if (((*((arg2 * 0xdc) + 0x20001978) << 0x1d) >= 0 && (*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) < 0))))
    {
        return;
    }
    *((arg2 * 0xdc) + 0x2000192c) = 0;
    /* tailcall */
    return sub_1958a(arg1, 0x13, ((arg2 * 0xdc) + 0x2000192c));
}

uint32_t sub_ec34(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = (*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8));
    uint32_t r3_1 = (r0_1 | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r3_1 & 0x400) == 0)
    {
        return r0_1;
    }
    *((arg2 * 0xdc) + 0x20001977) = r3_1;
    *((arg2 * 0xdc) + 0x20001979) = (r3_1 >> 0x10);
    *((arg2 * 0xdc) + 0x20001978) = ((0xfffbff & r3_1) >> 8);
    void* r0_5 = *(0x20001acc + (arg2 << 2));
    int32_t r2_2 = *(r0_5 + 0x48);
    if (r2_2 == 0)
    {
        return r0_5;
    }
    *((arg2 * 0xdc) + 0x200019a0);
    /* jump -> r2_2 */
}

void* sub_ec98(int32_t arg1, int32_t arg2)
{
    sub_1ee0a(arg2, 1, 1);
    *((arg2 * 0xdc) + 0x20001974) = (*((arg2 * 0xdc) + 0x20001974) + 1);
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000197a) = 0;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x2000194c) = 1;
    *((arg2 * 0xdc) + 0x20001950) = (r1_2 + 0x19);
    return ((arg2 * 0xdc) + 0x2000197a);
}

void sub_ece4(int32_t arg1, int32_t arg2)
{
    if ((*((arg2 * 0xdc) + 0x2000194c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001950)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000194c) = 0;
        /* tailcall */
        return sub_1958a(arg1, 0x17, 0);
    }
}

int32_t sub_ed18(int32_t arg1, int32_t arg2)
{
    void* r0 = *(0x20001acc + (arg2 << 2));
    int32_t r1 = *(r0 + 8);
    if (r1 != 0)
    {
        r1();
        r0 = *(0x20001acc + (arg2 << 2));
    }
    int32_t r0_1 = *(r0 + 0x44);
    if (r0_1 != 0)
    {
        r0_1();
    }
    /* tailcall */
    return sub_1db40(arg2, 1);
}

int32_t sub_ed46(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1 = *(*(0x20001acc + (arg2 << 2)) + 0x44);
    int32_t r2;
    if (r0_1 != 0)
    {
        int32_t r0_2;
        r0_2 = r0_1();
        int32_t r0_3 = (r0_2 | 2);
        if (r0_3 != 2)
        {
            return r0_3;
        }
    }
    /* tailcall */
    return sub_1958a(arg1, 0xd, r2);
}

void* sub_ed74(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x20001924) = 1;
    *((arg2 * 0xdc) + 0x20001928) = (r1 + 0x1388);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_ed9a(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000197a) = 0;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x2000194c) = 1;
    *((arg2 * 0xdc) + 0x20001950) = (r1 + 0x19);
    return ((arg2 * 0xdc) + 0x2000197a);
}

void sub_edcc(int32_t arg1, int32_t arg2)
{
    if ((*((arg2 * 0xdc) + 0x2000194c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001950)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000194c) = 0;
        /* tailcall */
        return sub_1958a(arg1, 0x17, 0);
    }
}

char* sub_ee00(int32_t arg1, int32_t arg2)
{
    *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0xfc);
    return ((arg2 * 0xdc) + 0x20001977);
}

int32_t sub_ee1a() __pure
{
    return;
}

void* sub_ee1c(void* arg1, int32_t arg2)
{
    uint32_t r0_1 = sub_1dbac(arg2);
    int32_t r0_3;
    uint32_t r2;
    r0_3 = sub_1e41a(arg2, 1, 9, nullptr, 0);
    void* r0_4;
    char r1_1;
    if (r0_1 != 0)
    {
        if (r0_3 == 0xfffffffe)
        {
            r0_4 = arg1;
            r1_1 = 0xf;
            goto label_ee6a;
        }
        if (r0_3 == 0xfffffffd)
        {
            r0_4 = arg1;
            r1_1 = 0x18;
            goto label_ee6a;
        }
    }
    else if (r0_3 == 0xfffffffe)
    {
        r0_4 = arg1;
        r1_1 = 3;
    label_ee6a:
        sub_1959c(r0_4, r1_1, r2);
    }
    else if (r0_3 == 0xfffffffd)
    {
        r0_4 = arg1;
        r1_1 = 0xb;
        goto label_ee6a;
    }
    int32_t r1_3 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_3 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_ee96(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if ((*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) < 0)))
    {
        int32_t r1_2 = ((*((arg2 * 0xdc) + 0x20001977) >> 5) & 3);
        int32_t r0_6;
        uint32_t r1_3;
        int32_t r6_1;
        if (r1_2 == 3)
        {
            *((arg2 * 0xdc) + 0x2000192c) = 0;
            r6_1 = *(*(0x20001acc + (arg2 << 2)) + 0x1c);
            if (r6_1 != 0)
            {
                r1_3 = sub_1db5c(arg2);
                r0_6 = 3;
            }
        }
        if (r1_2 == 2)
        {
            *((arg2 * 0xdc) + 0x2000192c) = 0;
            r6_1 = *(*(0x20001acc + (arg2 << 2)) + 0x1c);
            if (r6_1 != 0)
            {
                r1_3 = sub_1db5c(arg2);
                r0_6 = 2;
            }
        }
        if (((r1_2 != 3 && r1_2 != 2) && r1_2 != 1))
        {
            return ((arg2 * 0xdc) + 0x2000192c);
        }
        if (r1_2 == 1)
        {
            *((arg2 * 0xdc) + 0x2000192c) = 0;
            sub_1db72(arg2);
            r6_1 = *(*(0x20001acc + (arg2 << 2)) + 0x1c);
            if (r6_1 != 0)
            {
                r1_3 = sub_1db5c(arg2);
                r0_6 = 1;
            }
        }
        if ((((r1_2 == 3 && r6_1 != 0) || (r1_2 == 2 && r6_1 != 0)) || (r1_2 == 1 && r6_1 != 0)))
        {
            if (r1_3 != 0)
            {
                r1_3 = 1;
            }
            r6_1(r0_6, r1_3);
        }
    }
    if ((*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
    }
    char r1_4;
    if (sub_1dbac(arg2) == 0)
    {
        r1_4 = 7;
    }
    else
    {
        r1_4 = 0x13;
    }
    /* tailcall */
    return sub_1958a(arg1, r1_4, 0x47c);
}

char* sub_ef72(int32_t arg1, int32_t arg2)
{
    *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0x9f);
    return ((arg2 * 0xdc) + 0x20001977);
}

void* sub_ef8c(void* arg1, int32_t arg2)
{
    uint32_t r0_1 = sub_1dbac(arg2);
    int32_t r0_3;
    uint32_t r2;
    r0_3 = sub_1e41a(arg2, 1, 0xb, nullptr, 0);
    void* r0_4;
    char r1_1;
    if (r0_1 != 0)
    {
        if (r0_3 == 0xfffffffe)
        {
            r0_4 = arg1;
            r1_1 = 0xf;
            goto label_efda;
        }
        if (r0_3 == 0xfffffffd)
        {
            r0_4 = arg1;
            r1_1 = 0x18;
            goto label_efda;
        }
    }
    else if (r0_3 == 0xfffffffe)
    {
        r0_4 = arg1;
        r1_1 = 3;
    label_efda:
        sub_1959c(r0_4, r1_1, r2);
    }
    else if (r0_3 == 0xfffffffd)
    {
        r0_4 = arg1;
        r1_1 = 0xb;
        goto label_efda;
    }
    int32_t r1_3 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_3 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_f006(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_3;
    int32_t r1_1;
    if ((*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        r1_1 = *(*(0x20001acc + (arg2 << 2)) + 0x24);
        if (r1_1 == 0)
        {
            goto label_f0c2;
        }
        r0_3 = 4;
    label_f0ba:
        r1_1(r0_3);
    label_f0c2:
        char r1_4;
        if (sub_1dbac(arg2) == 0)
        {
            r1_4 = 7;
        }
        else
        {
            r1_4 = 0x13;
        }
        /* tailcall */
        return sub_1958a(arg1, r1_4, 0x47c);
    }
    uint32_t r2_3 = *((arg2 * 0xdc) + 0x20001977);
    int32_t r1_3 = ((r2_3 >> 5) & 3);
    if (r1_3 == 3)
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        r1_1 = *(*(0x20001acc + (arg2 << 2)) + 0x24);
        if (r1_1 == 0)
        {
            goto label_f0c2;
        }
        r0_3 = 3;
        goto label_f0ba;
    }
    if (r1_3 != 2)
    {
        if (r1_3 != 1)
        {
            return ((arg2 * 0xdc) + 0x2000192c);
        }
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        int32_t r0_5 = *(*(0x20001acc + (arg2 << 2)) + 0x18);
        if (r0_5 != 0)
        {
            int32_t r0_6;
            r0_6 = r0_5();
            if ((r0_6 & 0x80) != 0)
            {
                /* tailcall */
                return sub_1958a(arg1, 0x1c, r2_3);
            }
        }
        /* tailcall */
        return sub_1958a(arg1, 0x1d, r2_3);
    }
    *((arg2 * 0xdc) + 0x2000192c) = 0;
    r1_1 = *(*(0x20001acc + (arg2 << 2)) + 0x24);
    if (r1_1 == 0)
    {
        goto label_f0c2;
    }
    r0_3 = 2;
    goto label_f0ba;
}

char* sub_f0e0(int32_t arg1, int32_t arg2)
{
    *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0x9f);
    return ((arg2 * 0xdc) + 0x20001977);
}

void* sub_f0fa(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x20001954) = 1;
    *((arg2 * 0xdc) + 0x20001958) = (r1 + 0x64);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_f11e(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r3_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r3_2 & 0x80) != 0)
    {
        *((arg2 * 0xdc) + 0x20001978) = (r3_2 >> 8);
        *((arg2 * 0xdc) + 0x20001977) = (0x7f & r3_2);
        *((arg2 * 0xdc) + 0x20001979) = (r3_2 >> 0x10);
        void* r0_9 = *(0x20001acc + (arg2 << 2));
        int32_t r1_6 = *(r0_9 + 0x28);
        if (r1_6 != 0)
        {
            r1_6(0);
            r0_9 = *(0x20001acc + (arg2 << 2));
        }
        int32_t r1_7 = *(r0_9 + 0x24);
        if (r1_7 != 0)
        {
            r1_7(1);
        }
        char r1_8;
        if (sub_1dbac(arg2) == 0)
        {
            r1_8 = 7;
        }
        else
        {
            r1_8 = 0x13;
        }
        /* tailcall */
        return sub_1958a(arg1, r1_8, 0x47c);
    }
    if ((*((arg2 * 0xdc) + 0x20001954) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001958)) >= 0))
    {
        *((arg2 * 0xdc) + 0x20001954) = 0;
        int32_t r1_3 = *(*(0x20001acc + (arg2 << 2)) + 0x24);
        if (r1_3 != 0)
        {
            r1_3(4);
        }
        char r1_4;
        if (sub_1dbac(arg2) == 0)
        {
            r1_4 = 0xa;
        }
        else
        {
            r1_4 = 0x16;
        }
        /* tailcall */
        return sub_1959c(arg1, r1_4, 0x47c);
    }
    return ((arg2 * 0xdc) + 0x20001954);
}

int32_t sub_f1fa(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x28);
    if (r1 != 0)
    {
        r1(1);
    }
    uint32_t r0_2 = sub_1dbac(arg2);
    int32_t r0_4;
    int32_t r2;
    r0_4 = sub_1e41a(arg2, 1, 6, nullptr, 0);
    int32_t r0_6;
    int32_t r0_5;
    char r1_2;
    if (r0_2 == 0)
    {
        if (r0_4 == 0xfffffffe)
        {
            r0_5 = arg1;
            r1_2 = 3;
        label_f266:
            /* tailcall */
            return sub_1959c(r0_5, r1_2, r2);
        }
        r0_6 = (r0_4 + 3);
        if (r0_4 == 0xfffffffd)
        {
            r0_5 = arg1;
            r1_2 = 0xb;
            goto label_f266;
        }
    }
    else
    {
        if (r0_4 == 0xfffffffe)
        {
            r0_5 = arg1;
            r1_2 = 0xf;
            goto label_f266;
        }
        r0_6 = (r0_4 + 3);
        if (r0_4 == 0xfffffffd)
        {
            r0_5 = arg1;
            r1_2 = 0x18;
            goto label_f266;
        }
    }
    return r0_6;
}

int32_t sub_f272(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x24);
    if (r1 != 0)
    {
        r1(1);
    }
    char r1_1;
    if (sub_1dbac(arg2) != 0)
    {
        r1_1 = 0x13;
    }
    else
    {
        r1_1 = 7;
    }
    /* tailcall */
    return sub_1958a(arg1, r1_1, 0x47c);
}

void* sub_f2a6(void* arg1, int32_t arg2)
{
    uint32_t r0_1 = sub_1dbac(arg2);
    int32_t r0_3;
    uint32_t r2;
    r0_3 = sub_1e41a(arg2, 1, 0xa, nullptr, 0);
    void* r0_4;
    char r1_1;
    if (r0_1 != 0)
    {
        if (r0_3 == 0xfffffffe)
        {
            r0_4 = arg1;
            r1_1 = 0xf;
            goto label_f2f4;
        }
        if (r0_3 == 0xfffffffd)
        {
            r0_4 = arg1;
            r1_1 = 0x18;
            goto label_f2f4;
        }
    }
    else if (r0_3 == 0xfffffffe)
    {
        r0_4 = arg1;
        r1_1 = 3;
    label_f2f4:
        sub_1959c(r0_4, r1_1, r2);
    }
    else if (r0_3 == 0xfffffffd)
    {
        r0_4 = arg1;
        r1_1 = 0xb;
        goto label_f2f4;
    }
    int32_t r1_3 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_3 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_f320(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r2_3;
    if ((*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        uint32_t r0_3;
        r0_3 = sub_1dbac(arg2);
        if (r0_3 != 0)
        {
            goto label_f3e8;
        }
        goto label_f402;
    }
    int32_t r1_2 = ((*((arg2 * 0xdc) + 0x20001977) >> 5) & 3);
    int32_t r0_10;
    int32_t r0_14;
    bool cond:0_1;
    if (r1_2 == 3)
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        cond:0_1 = sub_1dbac(arg2) == 0;
        r2_3 = *(*(0x20001acc + (arg2 << 2)) + 0x20);
        if (cond:0_1)
        {
            if (r2_3 == 0)
            {
                goto label_f402;
            }
            r0_14 = 3;
        }
        else
        {
            if (r2_3 == 0)
            {
                goto label_f3e8;
            }
            r0_10 = 3;
        }
    }
    bool cond:1_1;
    if (r1_2 == 2)
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        cond:1_1 = sub_1dbac(arg2) == 0;
        r2_3 = *(*(0x20001acc + (arg2 << 2)) + 0x20);
        if (cond:1_1)
        {
            if (r2_3 == 0)
            {
                goto label_f402;
            }
            r0_14 = 2;
        }
    }
    if (((r1_2 == 3 && cond:0_1) || (r1_2 == 2 && cond:1_1)))
    {
        r2_3 = r2_3(r0_14, 0);
    label_f402:
        /* tailcall */
        return sub_1958a(arg1, 7, r2_3);
    }
    if ((r1_2 == 2 && (!cond:1_1)))
    {
        if (r2_3 == 0)
        {
            goto label_f3e8;
        }
        r0_10 = 2;
    }
    if (((r1_2 == 3 && (!cond:0_1)) || (r1_2 == 2 && (!cond:1_1))))
    {
        r2_3 = r2_3(r0_10, 1);
    label_f3e8:
        /* tailcall */
        return sub_1958a(arg1, 0x13, r2_3);
    }
    if ((r1_2 != 3 && r1_2 != 2))
    {
        if (r1_2 != 1)
        {
            return ((arg2 * 0xdc) + 0x2000192c);
        }
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        sub_1f014(arg2, 1);
        char r1_3;
        if (sub_1dbac(arg2) == 0)
        {
            r1_3 = 0x20;
        }
        else
        {
            r1_3 = 0x21;
        }
        /* tailcall */
        return sub_1958a(arg1, r1_3, 0x47c);
    }
}

char* sub_f406(int32_t arg1, int32_t arg2)
{
    *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0x9f);
    return ((arg2 * 0xdc) + 0x20001977);
}

void* sub_f420(void* arg1, int32_t arg2)
{
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_1e41a(arg2, 1, 6, nullptr, 0);
    void* r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0xb;
    }
    if (r0_1 == 0xfffffffe)
    {
        r0_3 = arg1;
        r1_1 = 3;
    }
    if ((r0_1 == 0xfffffffd || r0_1 == 0xfffffffe))
    {
        sub_1959c(r0_3, r1_1, r2);
    }
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000195c) = 1;
    *((arg2 * 0xdc) + 0x20001960) = (r1_2 + 0x1a4);
    return (0x20001914 + (arg2 * 0xdc));
}

void* sub_f478(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    void* r0_2;
    if ((*((arg2 * 0xdc) + 0x2000195c) == 0 || (*((arg2 * 0xdc) + 0x2000195c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001960)) < 0)))
    {
        r0_2 = ((arg2 * 0xdc) + 0x20001977);
        uint32_t r1_4 = ((*r0_2 | (*(r0_2 + 1) << 8)) | (*(r0_2 + 2) << 0x10));
        if ((r1_4 & 0x80) != 0)
        {
            *(r0_2 + 1) = (r1_4 >> 8);
            *r0_2 = (0x7f & r1_4);
            *(r0_2 + 2) = (r1_4 >> 0x10);
            int32_t r2_7 = *(*(0x20001acc + (arg2 << 2)) + 0x20);
            if (r2_7 != 0)
            {
                r2_7 = r2_7(1, 0);
            }
            /* tailcall */
            return sub_1958a(arg1, 1, r2_7);
        }
    }
    if ((*((arg2 * 0xdc) + 0x2000195c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001960)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000195c) = 0;
        void* r0_1 = *(0x20001acc + (arg2 << 2));
        int32_t r2_3 = *(r0_1 + 0x20);
        if (r2_3 != 0)
        {
            r2_3(4, 1);
            r0_1 = *(0x20001acc + (arg2 << 2));
        }
        r0_2 = *(r0_1 + 4);
        if (r0_2 != 0)
        {
            /* jump -> r0_2 */
        }
    }
    return r0_2;
}

int32_t sub_f51e(int32_t arg1, int32_t arg2)
{
    sub_1f014(arg2, 0);
    /* tailcall */
    return sub_1db02(arg2, 1);
}

void* sub_f538(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000195c) = 1;
    *((arg2 * 0xdc) + 0x20001960) = (r1 + 0x2ee);
    return (0x20001914 + (arg2 * 0xdc));
}

void sub_f55e(void* arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if ((*((arg2 * 0xdc) + 0x2000195c) == 0 || (*((arg2 * 0xdc) + 0x2000195c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001960)) < 0)))
    {
        uint32_t r2_5 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
        if ((r2_5 & 0x80) != 0)
        {
            *((arg2 * 0xdc) + 0x20001978) = (r2_5 >> 8);
            uint32_t r2_6 = (r2_5 >> 0x10);
            *((arg2 * 0xdc) + 0x20001977) = (0x7f & r2_5);
            *((arg2 * 0xdc) + 0x20001979) = r2_6;
            sub_1958a(arg1, 0x22, r2_6);
            /* tailcall */
            return sub_fbe0(arg2);
        }
    }
    if ((*((arg2 * 0xdc) + 0x2000195c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001960)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000195c) = 0;
        void* r0 = *(0x20001acc + (arg2 << 2));
        int32_t r2_2 = *(r0 + 0x20);
        if (r2_2 != 0)
        {
            r2_2(4, 0);
            r0 = *(0x20001acc + (arg2 << 2));
        }
        arg1 = *(r0 + 4);
        if (arg1 != 0)
        {
            /* jump -> arg1 */
        }
    }
}

void* sub_f5f2(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x2c);
    if (r1 != 0)
    {
        r1(0);
    }
    int32_t r1_1 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000195c) = 1;
    *((arg2 * 0xdc) + 0x20001960) = (r1_1 + 0x14);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_f630(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if ((*((arg2 * 0xdc) + 0x2000195c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001960)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000195c) = 0;
        /* tailcall */
        return sub_1958a((0x20001914 + (arg2 * 0xdc)), 0x1f, sub_fbe0(arg2));
    }
    return ((arg2 * 0xdc) + 0x2000195c);
}

int32_t sub_f67a() __pure
{
    return;
}

void* sub_f67c(int32_t arg1, int32_t arg2)
{
    void* r0 = *(0x20001acc + (arg2 << 2));
    int32_t r1 = *(r0 + 0x2c);
    if (r1 == 0)
    {
        return r0;
    }
    /* jump -> r1 */
}

int32_t sub_f692(void* arg1, int32_t arg2)
{
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_1e41a(arg2, 1, 6, nullptr, 0);
    void* r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0x18;
    }
    if (r0_1 == 0xfffffffe)
    {
        r0_3 = arg1;
        r1_1 = 0xf;
    }
    if ((r0_1 == 0xfffffffd || r0_1 == 0xfffffffe))
    {
        sub_1959c(r0_3, r1_1, r2);
    }
    /* tailcall */
    return sub_1958a(arg1, 0xd, r2);
}

void* sub_f6ce(void* arg1, int32_t arg2)
{
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_1e41a(arg2, 1, 7, nullptr, 0);
    void* r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0x18;
    }
    if (r0_1 == 0xfffffffe)
    {
        r0_3 = arg1;
        r1_1 = 0xf;
    }
    if ((r0_1 == 0xfffffffd || r0_1 == 0xfffffffe))
    {
        sub_1959c(r0_3, r1_1, r2);
    }
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_2 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

void sub_f722(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r2_2 & 0x60) == 0x40)
    {
        *((arg2 * 0xdc) + 0x20001978) = (r2_2 >> 8);
        *((arg2 * 0xdc) + 0x20001977) = (0x9f & r2_2);
        *((arg2 * 0xdc) + 0x20001979) = (r2_2 >> 0x10);
        *((arg2 * 0xdc) + 0x2000192c) = 0;
    }
    else
    {
        r2_2 = (r2_2 << 0x16);
        if (r2_2 >= 0)
        {
            if (*((arg2 * 0xdc) + 0x2000192c) != 0)
            {
                r2_2 = *0x20006064;
            }
            if ((*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (r2_2 - *((arg2 * 0xdc) + 0x20001930)) < 0)))
            {
                return;
            }
        }
        *((arg2 * 0xdc) + 0x2000192c) = 0;
    }
    /* tailcall */
    return sub_1958a(arg1, 0x13, r2_2);
}

char* sub_f79e(int32_t arg1, int32_t arg2)
{
    uint32_t r1_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r1_2 & 0x200) == 0)
    {
        return ((arg2 * 0xdc) + 0x20001977);
    }
    *((arg2 * 0xdc) + 0x20001977) = r1_2;
    *((arg2 * 0xdc) + 0x20001979) = (r1_2 >> 0x10);
    *((arg2 * 0xdc) + 0x20001978) = ((r1_2 & 0xfffdff) >> 8);
    return ((arg2 * 0xdc) + 0x20001977);
}

void* sub_f7da(void* arg1, int32_t arg2)
{
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x5c);
    int32_t r0_2;
    int32_t r0_3;
    void* r3;
    if (r1 != 0)
    {
        void var_2c;
        r0_2 = r1(&var_2c);
        if ((r0_2 & 0xff) != 0)
        {
            r3 = &var_2c;
            r0_3 = (0x3fc & (r0_2 << 2));
        }
    }
    if ((r1 == 0 || (r1 != 0 && (r0_2 & 0xff) == 0)))
    {
        r0_3 = 0;
        r3 = nullptr;
    }
    void* r0_5;
    uint32_t r2;
    r0_5 = sub_1e41a(arg2, 1, 4, r3, r0_3);
    void* r0_6;
    char r1_2;
    if (r0_5 == 0xfffffffd)
    {
        r0_6 = arg1;
        r1_2 = 0x18;
    }
    else
    {
        r0_6 = (r0_5 + 2);
    }
    if (r0_5 == 0xfffffffe)
    {
        r0_6 = arg1;
        r1_2 = 0xf;
    }
    if ((r0_5 == 0xfffffffd || r0_5 == 0xfffffffe))
    {
        sub_1959c(r0_6, r1_2, r2);
    }
    return r0_6;
}

int32_t j_sub_1958a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_1958a(arg1, 0x13, r2);
}

void* sub_f83e(void* arg1, int32_t arg2)
{
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_1e41a(arg2, 1, 8, nullptr, 0);
    void* r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0xb;
    }
    if (r0_1 == 0xfffffffe)
    {
        r0_3 = arg1;
        r1_1 = 3;
    }
    if ((r0_1 == 0xfffffffd || r0_1 == 0xfffffffe))
    {
        sub_1959c(r0_3, r1_1, r2);
    }
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_2 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

void sub_f892(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r2_2 & 0x60) == 0x40)
    {
        *((arg2 * 0xdc) + 0x20001978) = (r2_2 >> 8);
        *((arg2 * 0xdc) + 0x20001977) = (0x9f & r2_2);
        *((arg2 * 0xdc) + 0x20001979) = (r2_2 >> 0x10);
        *((arg2 * 0xdc) + 0x2000192c) = 0;
    }
    else
    {
        r2_2 = (r2_2 << 0x15);
        if (r2_2 >= 0)
        {
            if (*((arg2 * 0xdc) + 0x2000192c) != 0)
            {
                r2_2 = *0x20006064;
            }
            if ((*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (r2_2 - *((arg2 * 0xdc) + 0x20001930)) < 0)))
            {
                return;
            }
        }
        *((arg2 * 0xdc) + 0x2000192c) = 0;
    }
    /* tailcall */
    return sub_1958a(arg1, 7, r2_2);
}

uint32_t sub_f90e(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = (*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8));
    uint32_t r3_1 = (r0_1 | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r3_1 & 0x400) == 0)
    {
        return r0_1;
    }
    *((arg2 * 0xdc) + 0x20001977) = r3_1;
    *((arg2 * 0xdc) + 0x20001979) = (r3_1 >> 0x10);
    *((arg2 * 0xdc) + 0x20001978) = ((0xfffbff & r3_1) >> 8);
    void* r0_5 = *(0x20001acc + (arg2 << 2));
    int32_t r2_2 = *(r0_5 + 0x48);
    if (r2_2 == 0)
    {
        return r0_5;
    }
    *((arg2 * 0xdc) + 0x200019a0);
    /* jump -> r2_2 */
}

void* sub_f972(void* arg1, int32_t arg2)
{
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x38);
    int32_t r0_2;
    int32_t r0_3;
    int16_t r2;
    void* r3;
    if (r1 != 0)
    {
        void var_2c;
        r0_2 = r1(&var_2c);
        if ((r0_2 & 0xff) != 0)
        {
            r3 = &var_2c;
            r2 = 1;
            r0_3 = (0x3fc & (r0_2 << 2));
        }
    }
    if ((r1 == 0 || (r1 != 0 && (r0_2 & 0xff) == 0)))
    {
        r0_3 = 0;
        r2 = 4;
        r3 = nullptr;
    }
    void* r0_5;
    uint32_t r2_1;
    r0_5 = sub_1e41a(arg2, 1, r2, r3, r0_3);
    void* r0_6;
    char r1_2;
    if (r0_5 == 0xfffffffd)
    {
        r0_6 = arg1;
        r1_2 = 0xb;
    }
    else
    {
        r0_6 = (r0_5 + 2);
    }
    if (r0_5 == 0xfffffffe)
    {
        r0_6 = arg1;
        r1_2 = 3;
    }
    if ((r0_5 == 0xfffffffd || r0_5 == 0xfffffffe))
    {
        sub_1959c(r0_6, r1_2, r2_1);
    }
    return r0_6;
}

int32_t j_sub_1958a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_1958a(arg1, 7, r2);
}

char* sub_f9d6(char* arg1, int32_t arg2)
{
    int32_t var_14 = 0xff008001;
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_1e3dc(arg2, 2, 0xf, &var_14, 4, 0xffffffff);
    char* r0_2;
    if (r0_1 == 0)
    {
        r0_2 = ((arg2 * 0xdc) + 0x20001977);
        *r0_2 = (*r0_2 | 0x10);
        int32_t r1_2 = *0x20006064;
        *(r0_2 - 0x4b) = 1;
        *(r0_2 - 0x47) = (r1_2 + 0x1b);
    }
    else
    {
        r0_2 = arg1;
        sub_1958a(r0_2, 0xf, r2);
    }
    return r0_2;
}

void sub_fa3e(int32_t arg1, int32_t arg2)
{
    if (((*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) <= 0xffffffff)) && (*((arg2 * 0xdc) + 0x20001977) << 0x1b) < 0))
    {
        return;
    }
    if (((*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) > 0xffffffff) || ((*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) <= 0xffffffff)) && (*((arg2 * 0xdc) + 0x20001977) << 0x1b) >= 0)))
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        /* tailcall */
        return sub_1958a(arg1, 0xf, 0);
    }
}

int32_t sub_fa80()
{
    sub_19424(0x20001ad4, "Plug USB-C", 8, 0x20000440, 0, 0);
    int32_t r0 = sub_19424(0x20001ae4, "Rcpt USB-C", 8, 0x20000440, 0, 1);
    char r1 = *0x20001af4;
    *0x20001af4 = (r1 | 2);
    if (*0x200004fc != 3)
    {
        *0x20001af4 = (r1 | 3);
    }
    return r0;
}

int32_t sub_faf8(int32_t arg1)
{
    int32_t r0_1 = ((1 << arg1) | *0x20001af4);
    *0x20001af4 = r0_1;
    return r0_1;
}

int32_t sub_fb0e()
{
    uint32_t r12;
    sub_19486(0x20001ad4, 0, 6, r12);
    uint32_t r0 = *0x20001ad8;
    *0x20001f24 = ((0x70 & (r0 << 4)) | (*0x20001f24 & 0x8f));
    sub_8746(1, (r0 & 7), *0x20006064);
    sub_19486(0x20001ae4, 1, 6, 0x20000000);
    uint32_t r0_1 = *0x20001ae8;
    *0x20001f25 = ((0x70 & (r0_1 << 4)) | (*0x20001f25 & 0x8f));
    /* tailcall */
    return sub_8746(2, (r0_1 & 7), *0x20006064);
}

void* sub_fb88(int32_t arg1)
{
    if (*((arg1 << 4) + 0x20001ad8) == 0)
    {
        return (0x20001ad4 + (arg1 << 4));
    }
    int32_t r2;
    /* tailcall */
    return sub_1959c((0x20001ad4 + (arg1 << 4)), 0, r2);
}

void* sub_fba2(int32_t arg1)
{
    if (*((arg1 << 4) + 0x20001ad8) == 7)
    {
        return (0x20001ad4 + (arg1 << 4));
    }
    int32_t r2;
    /* tailcall */
    return sub_1959c((0x20001ad4 + (arg1 << 4)), 7, r2);
}

void* sub_fbbc(int32_t arg1)
{
    int32_t r1 = *0x20006064;
    *(0x20001af8 + (arg1 << 3)) = 1;
    *((arg1 << 3) + 0x20001afc) = (r1 + 0x3e8);
    return (0x20001af8 + (arg1 << 3));
}

uint32_t sub_fbe0(int32_t arg1)
{
    uint32_t r0_1 = sub_1db5c(arg1);
    uint32_t r0_2 = *((arg1 << 4) + 0x20001ad8);
    char r1_2;
    if (r0_2 == 6)
    {
        sub_1dbe0(arg1, 0);
        sub_1db40(arg1, r0_1);
        sub_1db90(arg1, 0);
        r0_2 = (0x20001ad4 + (arg1 << 4));
        r1_2 = 3;
    }
    if (r0_2 == 3)
    {
        sub_1dbe0(arg1, 1);
        sub_1db40(arg1, r0_1);
        sub_1db90(arg1, 1);
        r0_2 = (0x20001ad4 + (arg1 << 4));
        r1_2 = 6;
    }
    if ((r0_2 == 6 || r0_2 == 3))
    {
        sub_1958a(r0_2, r1_2, 0x20008148);
    }
    *(0x20001b08 + arg1) = 1;
    return r0_2;
}

int32_t sub_fc58(int32_t arg1)
{
    int32_t r6 = (*(0x20001f24 + arg1) & 3);
    uint32_t r0_3;
    int32_t r0_10;
    int32_t r1_1;
    void* const r4_1;
    if (arg1 == 0)
    {
        r4_1 = 0x40021000;
        r0_3 = (sub_18194(0x40021000, 2) | (sub_18194(0x40021000, 1) << 1));
        if (r0_3 == 3)
        {
            r0_10 = 2;
        }
        if (r0_3 == 1)
        {
            r1_1 = 0x200;
            if (r6 == 1)
            {
                r1_1 = 0x80;
            }
        }
    }
    if (((arg1 != 1 && arg1 != 0) || (((arg1 == 0 && r0_3 != 3) && r0_3 != 2) && r0_3 != 1)))
    {
        r0_10 = 0;
    }
    if (arg1 == 1)
    {
        r1_1 = 0x200;
        if (r6 == 1)
        {
            r1_1 = 0x80;
        }
        r4_1 = 0x40020c00;
    }
    if ((arg1 == 1 || (arg1 == 0 && r0_3 == 1)))
    {
        int32_t r0_5 = sub_18194(r4_1, r1_1);
        int32_t r1_2 = 0x100;
        if (r6 == 1)
        {
            r1_2 = 0x40;
        }
        r0_10 = ((sub_18194(r4_1, r1_2) << 1) | r0_5);
    }
    if (((arg1 == 0 && r0_3 == 2) || ((arg1 == 1 || (arg1 == 0 && r0_3 == 1)) && r0_10 == 0)))
    {
        r0_10 = 1;
    }
    if ((((arg1 == 1 || (arg1 == 0 && r0_3 == 1)) && r0_10 != 0) && (r0_10 != 3 && r0_10 != 2)))
    {
        r0_10 = 0;
    }
    return r0_10;
}

int32_t sub_fcfe(int32_t arg1, int32_t arg2)
{
    /* tailcall */
    return sub_1dbe0(arg2, 8);
}

void sub_fd06(int32_t arg1, int32_t arg2)
{
    int32_t r2 = (1 << arg2);
    uint32_t r3 = *0x20001af4;
    if ((r2 & r3) == 0)
    {
        return;
    }
    int32_t r2_1 = (r3 & (!r2));
    *0x20001af4 = r2_1;
    if ((arg2 == 0 && *0x200004f0 != 0))
    {
        /* tailcall */
        return sub_1958a(arg1, 4, r2_1);
    }
    /* tailcall */
    return sub_1958a(arg1, 1, r2_1);
}

int32_t sub_fd40() __pure
{
    return;
}

uint32_t sub_fd42(uint32_t arg1, int32_t arg2)
{
    uint32_t r2 = sub_1dbe0(arg2, 0);
    *(0x20001f24 + arg2) = (*(0x20001f24 + arg2) & 0xf8);
    if (arg2 == 0)
    {
        *0x20001b0a = 0;
    }
    uint32_t r0_1 = *(0x20001b08 + arg2);
    if ((r0_1 != 0 && arg2 == 0))
    {
        r0_1 = *0x200004f0;
        if (r0_1 != 0)
        {
            r0_1 = arg1;
            sub_1958a(r0_1, 4, r2);
        }
    }
    *(0x20001b08 + arg2) = 0;
    return r0_1;
}

int32_t sub_fda4(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1;
    int32_t r2;
    r0_1 = sub_1ef8c(arg2);
    if ((arg2 == 0 && (r0_1 == 7 && (*0x20001b0a == 0 && *0x200004f8 != 1))))
    {
        r0_1 = sub_17ba2(3, "Are you using CDiags without set…", r2);
        *0x20001b0a = 1;
    label_fe1e:
        return r0_1;
    }
    if (((r0_1 & 3) - 1) <= 1)
    {
        int32_t r2_2 = (*(0x20001f24 + arg2) & 0xf8);
        *(0x20001f24 + arg2) = ((r0_1 & 7) | r2_2);
        /* tailcall */
        return sub_1958a(arg1, 2, r2_2);
    }
    goto label_fe1e;
}

int32_t sub_fe20() __pure
{
    return;
}

void sub_fe22(int32_t arg1, int32_t arg2)
{
    *(0x20001b0c + (arg2 << 3)) = 0;
}

void* sub_fe32(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r6;
    if (sub_1f02a(arg2) != 0)
    {
        r6 = 1;
    }
    else
    {
        int32_t r0_2;
        if (arg2 == 0)
        {
            r0_2 = sub_1d40a();
        }
        else
        {
            r0_2 = sub_1d42c();
        }
        r6 = r0_2;
    }
    int32_t r0_4 = sub_1ef8c(arg2);
    void* r0_6 = ((r0_4 & 3) - 1);
    int32_t r2_2 = ((*(0x20001f24 + arg2) & 0xf8) | (r0_4 & 7));
    *(0x20001f24 + arg2) = r2_2;
    int32_t r0_7;
    char r1_2;
    if (r0_6 >= 2)
    {
        r0_7 = arg1;
        r1_2 = 1;
    }
    else
    {
        int32_t r1 = *0x20006064;
        if (*(0x20001b0c + (arg2 << 3)) == 0)
        {
            *(0x20001b0c + (arg2 << 3)) = 1;
            r0_6 = (0x20001b0c + (arg2 << 3));
            *(r0_6 + 4) = (r1 + 0x96);
        }
        if ((*(0x20001b0c + (arg2 << 3)) != 0 && r6 != 0))
        {
            r2_2 = *((arg2 << 3) + 0x20001b10);
        }
        if (((*(0x20001b0c + (arg2 << 3)) == 0 || (*(0x20001b0c + (arg2 << 3)) != 0 && r6 == 0)) || ((*(0x20001b0c + (arg2 << 3)) != 0 && r6 != 0) && (r1 - r2_2) < 0)))
        {
            return r0_6;
        }
        if (((*(0x20001b0c + (arg2 << 3)) != 0 && r6 != 0) && (r1 - r2_2) >= 0))
        {
            *(0x20001b0c + (arg2 << 3)) = 0;
            r0_7 = arg1;
            r1_2 = 3;
        }
    }
    /* tailcall */
    return sub_1958a(r0_7, r1_2, r2_2);
}

int32_t sub_fed6() __pure
{
    return;
}

uint32_t sub_fed8(int32_t arg1, int32_t arg2)
{
    uint32_t r0_1 = sub_1f02a(arg2);
    if (r0_1 == 0)
    {
        r0_1 = (*(0x20001f24 + arg2) & 3);
        int32_t r0_3;
        int32_t r1;
        if (r0_1 == 2)
        {
            r0_3 = arg2;
            r1 = 2;
        }
        if (r0_1 == 1)
        {
            r0_3 = arg2;
            r1 = 1;
        }
        if ((r0_1 == 2 || r0_1 == 1))
        {
            r0_1 = sub_b0f4(r0_3, r1, 0);
        }
    }
    *(0x20001af8 + (arg2 << 3)) = 0;
    return r0_1;
}

uint32_t sub_ff1c(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = sub_1f02a(arg2);
    if (r0_1 == 0)
    {
        if (arg2 == 0)
        {
            r0_1 = sub_1d40a();
        }
        else
        {
            r0_1 = sub_1d42c();
        }
        if (r0_1 == 0)
        {
            r0_1 = sub_1f02a(arg2);
            if (r0_1 == 0)
            {
                /* tailcall */
                return sub_1958a(arg1, 1, 0x47c);
            }
        }
    }
    return r0_1;
}

uint32_t sub_ff50(int32_t arg1, int32_t arg2)
{
    uint32_t r0_1 = sub_1f02a(arg2);
    if (r0_1 == 0)
    {
        r0_1 = sub_b0f4(arg2, 0, 0);
        *(0x20001f24 + arg2) = (*(0x20001f24 + arg2) & 0xf8);
    }
    return r0_1;
}

uint32_t sub_ff7a(uint32_t arg1, int32_t arg2)
{
    uint32_t r2 = sub_1dbe0(arg2, 1);
    *(0x20001f24 + arg2) = (*(0x20001f24 + arg2) & 0xf8);
    if (arg2 == 0)
    {
        *0x20001b0a = 0;
    }
    uint32_t r0_1 = *(0x20001b08 + arg2);
    if ((r0_1 != 0 && arg2 == 0))
    {
        r0_1 = *0x200004f0;
        if (r0_1 == 0)
        {
            r0_1 = arg1;
            sub_1958a(r0_1, 1, r2);
        }
    }
    *(0x20001b08 + arg2) = 0;
    return r0_1;
}

int32_t sub_ffdc(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1 = sub_1ef8c(arg2);
    int32_t r0_3;
    if (arg2 == 0)
    {
        int32_t r2_2 = sub_137d0(0);
        if (r0_1 != 7)
        {
            goto label_fff6;
        }
        if (*0x20001b0a != 0)
        {
            goto label_fff6;
        }
        if (*0x200004f8 == 1)
        {
            goto label_fff6;
        }
        r0_3 = sub_17ba2(3, "Are you using CDiags without set…", r2_2);
        *0x20001b0a = 1;
    }
    else
    {
    label_fff6:
        r0_3 = ((r0_1 & 3) - 1);
        if (r0_3 <= 1)
        {
            int32_t r2_1 = (r0_1 & 7);
            *(0x20001f24 + arg2) = ((*(0x20001f24 + arg2) & 0xf8) | r2_1);
            /* tailcall */
            return sub_1958a(arg1, 5, r2_1);
        }
    }
    return r0_3;
}

int32_t sub_10064() __pure
{
    return;
}

void sub_10066(int32_t arg1, int32_t arg2)
{
    *(0x20001b0c + (arg2 << 3)) = 0;
}

void* sub_10076(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if (arg2 == 0)
    {
        sub_137d0(0);
    }
    int32_t r0_1 = sub_1ef8c(arg2);
    int32_t r2_2 = ((*(0x20001f24 + arg2) & 0xf8) | (r0_1 & 7));
    *(0x20001f24 + arg2) = r2_2;
    if (((r0_1 & 3) - 1) >= 2)
    {
        /* tailcall */
        return sub_1958a(arg1, 4, r2_2);
    }
    int32_t r1 = *0x20006064;
    if (*(0x20001b0c + (arg2 << 3)) == 0)
    {
        *(0x20001b0c + (arg2 << 3)) = 1;
        *((arg2 << 3) + 0x20001b10) = (r1 + 0x96);
        return (0x20001b0c + (arg2 << 3));
    }
    int32_t r2_5 = *((arg2 << 3) + 0x20001b10);
    if ((r1 - r2_5) < 0)
    {
        return ((r0_1 & 3) - 1);
    }
    *(0x20001b0c + (arg2 << 3)) = 0;
    /* tailcall */
    return sub_1958a(arg1, 6, r2_5);
}

int32_t sub_10102() __pure
{
    return;
}

uint32_t sub_10104(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = sub_1f02a(arg2);
    if (r0_1 == 0)
    {
        r0_1 = (*(0x20001f24 + arg2) & 3);
        int32_t r0_3;
        int32_t r1;
        if (r0_1 == 2)
        {
            r0_3 = arg2;
            r1 = 2;
        }
        if (r0_1 == 1)
        {
            r0_3 = arg2;
            r1 = 1;
        }
        if ((r0_1 == 2 || r0_1 == 1))
        {
            /* tailcall */
            return sub_b0f4(r0_3, r1, 1);
        }
    }
    return r0_1;
}

uint32_t sub_1013e(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    *(0x20001f24 + arg2) = ((sub_1ef8c(arg2) & 7) | (*(0x20001f24 + arg2) & 0xf8));
    uint32_t r0_5 = sub_1f02a(arg2);
    if (r0_5 == 0)
    {
        r0_5 = ((*(0x20001f24 + arg2) & 3) - 1);
        if (r0_5 >= 2)
        {
            /* tailcall */
            return sub_1958a(arg1, 4, 0x47c);
        }
    }
    return r0_5;
}

uint32_t sub_10192(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = sub_1f02a(arg2);
    if (r0_1 == 0)
    {
        /* tailcall */
        return sub_b0f4(arg2, 0, 1);
    }
    return r0_1;
}

int32_t sub_101b0(int32_t arg1, int32_t arg2)
{
    sub_1dbe0(arg2, 8);
    int32_t r0_1 = *0x20006064;
    *(0x20001af8 + (arg2 << 3)) = 1;
    *((arg2 << 3) + 0x20001afc) = (r0_1 + 0x23);
    return (r0_1 + 0x23);
}

void sub_101e0(int32_t arg1, int32_t arg2)
{
    if (*(0x20001af8 + (arg2 << 3)) != 0)
    {
        uint32_t r2_1 = *0x20006064;
        if ((r2_1 - *((arg2 << 3) + 0x20001afc)) >= 0)
        {
            sub_1958a(arg1, 0, r2_1);
            *0x20001af4 = ((1 << arg2) | *0x20001af4);
        }
    }
}

int32_t sub_10224() __pure
{
    return;
}

int32_t sub_10228(int32_t arg1, int32_t arg2, char* arg3, char arg4)
{
    uint32_t r0_1 = sub_1db5c(arg1);
    *(0x20001b1c + (arg1 << 3)) = 0;
    uint32_t r6 = ((arg2 >> 6) & 0x1f);
    int32_t r1 = ((arg2 >> 4) & 3);
    int32_t r2 = (arg2 & 0xf);
    int32_t r5_1;
    int32_t* var_4c_1;
    int32_t* var_4c_7;
    uint32_t var_48_1;
    uint32_t var_48_5;
    char var_44;
    uint8_t var_26;
    char var_25;
    int32_t r0_7;
    int32_t r0_10;
    int32_t r1_1;
    int32_t r1_14;
    void* r2_1;
    int32_t r2_6;
    int32_t r2_14;
    int32_t r3_1;
    uint32_t r3_3;
    uint32_t r3_7;
    void* r4_10;
    if (r0_1 == 0)
    {
        var_25 = r6;
        int32_t r0_4 = *(0x20001b44 + (arg1 << 2));
        if (r0_4 > 5)
        {
            goto label_10680;
        }
        if (jump_table_102ae[r0_4] == 0xc9)
        {
            r5_1 = 0;
        }
        if ((((jump_table_102ae[r0_4] == 0xb3 && r1 == 0) && r2 <= 4) && jump_table_1048a[r2] == 5))
        {
            r5_1 = 0;
        }
        if (((((jump_table_102ae[r0_4] == 0xb3 && r1 == 0) && r2 <= 4) && *(&jump_table_1048a + (r2 << 1)) == 5) || (jump_table_102ae[r0_4] == 0xc9 && (r1 | r2) == 0)))
        {
            sub_10f8c(arg1, 0, 1, 0, 0, nullptr, 0);
            *(0x20001b44 + (arg1 << 2)) = 1;
        }
        int32_t r0_15;
        if (jump_table_102ae[r0_4] == 0xb3)
        {
            if (r1 != 0)
            {
                goto label_10416;
            }
            if (r2 > 4)
            {
                goto label_10416;
            }
            switch (*(&jump_table_1048a + (r2 << 1)))
            {
                case 0x2c3:
                {
                    int32_t r4_9 = *arg3;
                    var_26 = r6;
                    if (*(0x20001c78 + arg1) == 2)
                    {
                        r4_10 = (0x20001c30 + (arg1 * 0x24));
                        uint32_t r3_10 = *(r4_10 + 5);
                        sub_10f8c(arg1, 1, 1, r3_10, 0, (r4_10 + 8), ((r3_10 + 3) & 0xfc));
                        r3_1 = *(r4_10 + 0x20);
                        if (r3_1 == 0)
                        {
                            goto label_10680;
                        }
                        goto label_10f1c;
                    }
                    int32_t r5_8 = *(0x20001b34 + (arg1 << 2));
                    int32_t r9_3;
                    if (r5_8 == 0)
                    {
                        r9_3 = 0;
                        var_26 = 0;
                    }
                    else
                    {
                        r5_8(arg1, ((r4_9 >> 0x18) & 7), r4_9, 1, &arg3[4], &var_26);
                        r9_3 = *(0x20001b34 + (arg1 << 2));
                        r4_9 = *arg3;
                        r6 = var_25;
                    }
                    uint32_t r5_13 = 0;
                    sub_1f886(&var_44, 0, 0x1c);
                    uint8_t var_27 = r6;
                    if (r9_3 == 0)
                    {
                        var_27 = 0;
                    }
                    else
                    {
                        r9_3(arg1, ((r4_9 >> 0x18) & 7), r4_9, 1, &var_44, &var_27);
                        r5_13 = var_27;
                    }
                    r1_14 = 1;
                    r2_6 = 1;
                    var_4c_7 = &var_44;
                    var_48_5 = (r5_13 >> 2);
                    int32_t var_50_36 = 0;
                    r3_7 = (r5_13 + 4);
                    goto label_10f7c;
                }
                case 0x2ee:
                {
                    int32_t r0_95 = *arg3;
                    var_44 = r6;
                    if (*(0x20001c78 + arg1) != 2)
                    {
                        int32_t r6_17 = *(0x20001b34 + (arg1 << 2));
                        if (r6_17 != 0)
                        {
                            r6_17(arg1, ((r0_95 >> 0x18) & 7), r0_95, 0, &arg3[4], &var_44);
                        }
                    }
                    else if (*((arg1 * 0x24) + 0x20001c50) != 0)
                    {
                        *((arg1 * 0x24) + 0x20001c35) = r6;
                        sub_1ff48(((arg1 * 0x24) + 0x20001c38), arg3, r6);
                        *((arg1 * 0x24) + 0x20001c50)(arg1, 1, (0x20001c30 + (arg1 * 0x24)));
                    }
                    r5_1 = 0;
                    r1_1 = 2;
                    r2_14 = 1;
                    var_48_1 = 1;
                    int32_t var_50_25 = 0;
                    var_4c_1 = nullptr;
                    r0_7 = arg1;
                    goto label_10c84;
                }
                case 0x318:
                {
                    int32_t r12_3;
                    if (*(0x20001c2c + arg1) == 0)
                    {
                        int32_t r1_34 = *arg3;
                        int32_t r0_135 = (arg1 * 5);
                        *(0x20001bdc + (r0_135 << 3)) = ((r1_34 >> 0x1c) & 7);
                        *((r0_135 << 3) + 0x20001bdd) = ((r1_34 >> 0x18) & 7);
                        *((r0_135 << 3) + 0x20001be0) = ((r1_34 >> 0x17) & 1);
                        *((r0_135 << 3) + 0x20001be4) = ((r1_34 >> 0x10) & 0xf);
                        *((r0_135 << 3) + 0x20001be6) = r1_34;
                        *((r0_135 << 3) + 0x20001bfc) = (arg4 - 1);
                        sub_1ff48(((r0_135 << 3) + 0x20001be8), &arg3[4], (arg4 - 1));
                        *((r0_135 << 3) + 0x20001bfe) = 0;
                        r12_3 = *(0x20001b3c + (arg1 << 2));
                        *((r0_135 << 3) + 0x20001c00) = r12_3;
                    }
                    else
                    {
                        r12_3 = *((arg1 * 0x28) + 0x20001c00);
                    }
                    r5_1 = 0;
                    *(0x20001c2c + arg1) = 0;
                    if ((r12_3 != 0 && r12_3(arg1, (0x20001bdc + (arg1 * 0x28)), 3, 0, 0) == 1))
                    {
                        r5_1 = 0;
                        sub_10f8c(arg1, 3, 1, 0, 0, nullptr, 0);
                        r0_15 = 4;
                        goto label_10438;
                    }
                    r0_7 = arg1;
                    r1_1 = 3;
                    goto label_10dba;
                }
                case 0x32c:
                {
                    r5_1 = 0;
                    r0_7 = arg1;
                    r1_1 = 4;
                    r2_14 = 1;
                    var_48_1 = 0;
                    int32_t var_50_18 = 0;
                    var_4c_1 = nullptr;
                label_10ec0:
                    r3_3 = 0;
                label_10ec2:
                    sub_10f8c(r0_7, r1_1, r2_14, r3_3, 0, var_4c_1, var_48_1);
                    break;
                }
            }
        }
        switch (jump_table_102ae[r0_4])
        {
            case 3:
            {
                if (r1 != 0)
                {
                    goto label_10416;
                }
                if (r2 != 1)
                {
                    if (r2 != 5)
                    {
                        goto label_10416;
                    }
                    r5_1 = 0;
                    sub_10f8c(arg1, 5, 1, 0, 0, nullptr, 0);
                    var_48_1 = 1;
                    *(0x20001b44 + (arg1 << 2)) = 2;
                    *(0x20001bcc + arg1) = 0;
                    *(0x20001bd4 + (arg1 << 2)) = 0;
                    var_4c_1 = (0x20001bd4 + (arg1 << 2));
                label_10302:
                    r0_7 = arg1;
                    r1_1 = 2;
                    int32_t var_50_1 = 0;
                label_10308:
                    r2_14 = 0;
                label_10c84:
                    r3_3 = 4;
                    goto label_10ec2;
                }
                int32_t r8_1 = *arg3;
                uint32_t r4_2 = 0;
                sub_1f886(&var_44, 0, 0x1c);
                var_26 = r6;
                int32_t r6_5 = *(0x20001b34 + (arg1 << 2));
                if (r6_5 == 0)
                {
                    var_26 = 0;
                }
                else
                {
                    r6_5(arg1, ((r8_1 >> 0x18) & 7), r8_1, 1, &var_44, &var_26);
                    r4_2 = var_26;
                }
                r1_1 = 1;
                r2_14 = 1;
                var_4c_1 = &var_44;
                var_48_1 = (r4_2 >> 2);
                r5_1 = 0;
                r3_3 = (r4_2 + 4);
                r0_7 = arg1;
                int32_t var_50_19 = 0;
                goto label_10ec2;
            }
            case 0x84:
            {
                if (r1 != 0)
                {
                    goto label_10416;
                }
                if (r2 == 2)
                {
                    r5_1 = 0;
                    sub_10f8c(arg1, 2, 1, 0, 0, nullptr, 0);
                    uint32_t r3_4 = *(0x20001bcc + arg1);
                    if (r3_4 <= 7)
                    {
                        uint32_t r0_40 = *(0x20001bd4 + (arg1 << 2));
                        if (r0_40 == 4)
                        {
                            r5_1 = *(arg3 + 4);
                        }
                        if (r0_40 == 0)
                        {
                            r5_1 = 0;
                            *((0x20001b4c + (arg1 << 5)) + (r3_4 << 2)) = *(arg3 + 4);
                        }
                        int32_t r0_44;
                        if ((r0_40 == 4 || (r0_40 == 0 && *arg3 == 0)))
                        {
                            *((0x20001b8c + (arg1 << 5)) + (r3_4 << 2)) = r5_1;
                            int32_t r6_20 = (0x10000000 + (r3_4 << 0x1c));
                            int32_t r3_17 = (r3_4 + 1);
                            int32_t r0_148;
                            while (((1 << r3_17) & *(0x20001b4c + (arg1 << 5))) == 0)
                            {
                                r0_148 = (r3_17 + 1);
                                bool cond:6_1 = r3_17 <= 7;
                                r6_20 = (r6_20 + 0x10000000);
                                r3_17 = r0_148;
                                if ((!cond:6_1))
                                {
                                    break;
                                }
                            }
                            if (((1 << r3_17) & *(0x20001b4c + (arg1 << 5))) == 0)
                            {
                                *(0x20001bcc + arg1) = (r0_148 - 1);
                            label_10eb2:
                                r5_1 = 0;
                                r0_7 = arg1;
                                r1_1 = 5;
                                goto label_10eb8;
                            }
                            *(0x20001bcc + arg1) = r3_17;
                            if (r3_17 > 7)
                            {
                                goto label_10eb2;
                            }
                            r0_44 = (r6_20 & 0x70000000);
                            r5_1 = 0;
                        }
                        if ((r0_40 == 0 && *arg3 != 0))
                        {
                            r0_44 = (4 | ((r3_4 & 7) << 0x1c));
                        }
                        if ((((r0_40 == 0 && *arg3 != 0) || r0_40 == 4) || (r0_40 == 0 && *arg3 == 0)))
                        {
                            *(0x20001bd4 + (arg1 << 2)) = r0_44;
                            var_4c_1 = (0x20001bd4 + (arg1 << 2));
                            var_48_1 = 1;
                            goto label_10302;
                        }
                        if ((r0_40 != 4 && r0_40 != 0))
                        {
                            goto label_10680;
                        }
                    }
                }
                else
                {
                    if (r2 != 5)
                    {
                        goto label_10416;
                    }
                    r5_1 = 0;
                    sub_10f8c(arg1, 5, 1, 0, 0, nullptr, 0);
                    *(0x20001b44 + (arg1 << 2)) = 3;
                    *(0x20001c78 + arg1) = 0;
                    r3_1 = *(0x20001b2c + (arg1 << 2));
                    if (r3_1 != 0)
                    {
                    label_10402:
                        r1 = (0x20001b4c + (arg1 << 5));
                        r2_1 = (0x20001b8c + (arg1 << 5));
                    label_1067c:
                        r0_10 = arg1;
                    label_1067e:
                        r3_1(r0_10, r1, r2_1);
                        goto label_10680;
                    }
                }
                break;
            }
            case 0xb4:
            {
                goto label_10416;
            }
            case 0xb8:
            {
                char* var_4c_6;
                int32_t var_48_4;
                int32_t r0_14;
                int32_t r1_2;
                void* r1_11;
                int32_t r6_9;
                if (r1 == 0)
                {
                    if (r2 == 2)
                    {
                        if (*((arg1 * 0x28) + 0x20001be0) != 1)
                        {
                            r5_1 = 0;
                            r0_14 = arg1;
                            r1_2 = 2;
                        }
                        else
                        {
                            *((arg1 * 0x28) + 0x20001bfe) = (*((arg1 * 0x28) + 0x20001bfe) + r6);
                            int32_t r5_3 = *((arg1 * 0x28) + 0x20001c00);
                            int32_t r0_52;
                            if (r5_3 != 0)
                            {
                                r0_52 = r5_3(arg1, (0x20001bdc + (arg1 * 0x28)), 2, arg3, &var_25);
                                if (r0_52 == 1)
                                {
                                    r5_1 = 0;
                                    var_48_4 = 0;
                                    var_4c_6 = nullptr;
                                    sub_10f8c(arg1, 2, 1, 0, 0, nullptr, 0);
                                    if (*((arg1 * 0x28) + 0x20001bfe) >= *((arg1 * 0x28) + 0x20001be6))
                                    {
                                        r6_9 = *((arg1 * 0x28) + 0x20001c00);
                                        if (r6_9 == 0)
                                        {
                                            goto label_10d12;
                                        }
                                        r1_11 = (0x20001bdc + (arg1 * 0x28));
                                        goto label_10d0e;
                                    }
                                }
                            }
                            if ((r5_3 == 0 || (r5_3 != 0 && r0_52 != 1)))
                            {
                                r5_1 = 0;
                                r0_7 = arg1;
                                r1_1 = 2;
                            label_10dba:
                                var_48_1 = 0;
                                int32_t var_50_26 = 0;
                                var_4c_1 = nullptr;
                                r2_14 = 2;
                                goto label_10ec0;
                            }
                        }
                    }
                    if (((r2 != 1 && r2 != 2) && r2 == 4))
                    {
                        int32_t r6_1 = *((arg1 * 0x28) + 0x20001c00);
                        if (r6_1 != 0)
                        {
                            int32_t var_50_3 = 0;
                            r6_1(arg1);
                        }
                        r5_1 = 0;
                        sub_10f8c(arg1, 4, 1, 0, 0, nullptr, 0);
                        r0_15 = 3;
                        goto label_10438;
                    }
                }
                if ((r1 != 0 || ((r1 == 0 && r2 != 1) && r2 != 2)))
                {
                    r5_1 = 0;
                    r0_14 = arg1;
                    r1_2 = 1;
                }
                int32_t r2_2;
                if (((r1 != 0 || ((r1 == 0 && r2 != 1) && r2 != 2)) || ((r1 == 0 && r2 == 2) && *((arg1 * 0x28) + 0x20001be0) != 1)))
                {
                    int32_t var_48_2 = 0;
                    int32_t var_50_2 = 0;
                    int32_t var_4c_2 = 0;
                    r2_2 = 3;
                    goto label_10432;
                }
                if ((r1 == 0 && r2 == 1))
                {
                    if (*((arg1 * 0x28) + 0x20001be0) == 0)
                    {
                        var_26 = r6;
                        sub_1f886(&var_44, 0, 0x18);
                        int32_t r6_14 = *((arg1 * 0x28) + 0x20001c00);
                        int32_t r0_119;
                        void* r6_16;
                        if (r6_14 != 0)
                        {
                            r0_119 = r6_14(arg1, (0x20001bdc + (arg1 * 0x28)), 1, &var_44, &var_26);
                            if (r0_119 == 1)
                            {
                                uint32_t r3_15 = var_26;
                                r6_16 = ((arg1 * 0x28) + 0x20001bfe);
                                *r6_16 = (*r6_16 + r3_15);
                                var_4c_6 = &var_44;
                                var_48_4 = (((r3_15 + 3) >> 2) & 0x3f);
                                sub_10f8c(arg1, 1, 1, r3_15, 0, var_4c_6, var_48_4);
                            }
                        }
                        if ((r6_14 == 0 || (r6_14 != 0 && r0_119 != 1)))
                        {
                            var_48_4 = 0;
                            var_4c_6 = nullptr;
                            sub_10f8c(arg1, 1, 2, 0, 0, nullptr, 0);
                            r6_16 = ((arg1 * 0x28) + 0x20001bfe);
                        }
                        if (*r6_16 < *((arg1 * 0x28) + 0x20001be6))
                        {
                            goto label_10680;
                        }
                        r6_9 = *((arg1 * 0x28) + 0x20001c00);
                        if (r6_9 == 0)
                        {
                            goto label_10d12;
                        }
                        r1_11 = (0x20001bdc + (arg1 * 0x28));
                    label_10d0e:
                        r6_9(arg1, r1_11, 4, 0, 0, var_4c_6, var_48_4);
                    label_10d12:
                        *(0x20001b44 + (arg1 << 2)) = 3;
                        goto label_10680;
                    }
                    r5_1 = 0;
                    r0_14 = arg1;
                    r1_2 = 0;
                    r2_2 = 0;
                    int32_t var_48_3 = 0;
                    int32_t var_50_8 = 0;
                    int32_t var_4c_5 = 0;
                label_10432:
                    sub_10f8c(r0_14, r1_2, r2_2, 0, 0, nullptr, 0);
                    r0_15 = 5;
                label_10438:
                    *(0x20001b44 + (arg1 << 2)) = r0_15;
                }
                break;
            }
        }
    }
    else if (r0_1 != 1)
    {
    label_10416:
        r5_1 = 0xffffffff;
    }
    else
    {
        var_25 = r6;
        int32_t r3 = *(0x20001b44 + (arg1 << 2));
        if (r3 > 5)
        {
            goto label_10680;
        }
        uint32_t r0_2 = (arg2 >> 4);
        void var_40;
        bool cond:3_1;
        bool cond:4_1;
        bool cond:5_1;
        if (jump_table_10280[r3] == 0x47)
        {
            cond:3_1 = r2 == 5;
            if (r2 == 5)
            {
                cond:3_1 = r1 == 0;
            }
            if (cond:3_1)
            {
                goto label_10eb2;
            }
            cond:4_1 = r2 != 5;
            if (r2 == 5)
            {
                cond:4_1 = r1 != 1;
            }
            if ((!cond:4_1))
            {
                *(0x20001b44 + (arg1 << 2)) = 3;
                r3_1 = *(0x20001b2c + (arg1 << 2));
                if (r3_1 == 0)
                {
                    goto label_10680;
                }
                goto label_10402;
            }
            cond:5_1 = r2 != 2;
            if (r2 == 2)
            {
                cond:5_1 = r1 != 0;
            }
            if (cond:5_1)
            {
                r5_1 = 0;
                if (r1 != 1)
                {
                    r5_1 = 0xffffffff;
                }
            }
            else
            {
                int32_t r9_1 = *arg3;
                r5_1 = 0;
                sub_1f886(&var_44, 0, 0x1c);
                var_26 = r6;
                int32_t r4_1 = *(0x20001b34 + (arg1 << 2));
                if (r4_1 != 0)
                {
                    r4_1(arg1, ((r9_1 >> 0x1c) & 7), r9_1, 1, &var_40, &var_26);
                    r6 = var_26;
                }
                var_44 = (0x7700ffff & r9_1);
                uint32_t r0_32 = r6;
                var_48_1 = (1 + (r0_32 >> 2));
                r3_3 = (r0_32 + 4);
                r0_7 = arg1;
                r1_1 = 2;
                int32_t var_50_5 = 0;
                var_4c_1 = &var_44;
            }
        }
        int32_t r0_3;
        int32_t r0_79;
        if (jump_table_10280[r3] == 0x5d)
        {
            char* var_50_6;
            char* var_4c;
            void* r1_7;
            uint32_t r2_4;
            int32_t r6_4;
            if ((r1 != 0 && r1 != 1))
            {
                if (r2 == 3)
                {
                    r1_7 = (0x20001bdc + (arg1 * 0x28));
                    r6_4 = *(r1_7 + 0x24);
                    if (r6_4 == 0)
                    {
                        goto label_10680;
                    }
                    r5_1 = 0;
                    r2_4 = 4;
                    var_50_6 = &var_25;
                label_10b24:
                    r6_4(arg1, r1_7, r2_4, 0, var_50_6, var_4c);
                }
                if (((r2 != 2 && r2 != 3) && r2 != 1))
                {
                    goto label_10680;
                }
                if ((r2 == 2 && *(0x20001c78 + arg1) != 2))
                {
                    goto label_10680;
                }
                if (((r2 != 2 && r2 != 3) || r2 == 2))
                {
                    r2_1 = (0x20001c30 + (arg1 * 0x24));
                    r3_1 = *(r2_1 + 0x20);
                    if (r3_1 == 0)
                    {
                        goto label_10680;
                    }
                    goto label_1067c;
                }
            }
            if (r1 == 1)
            {
                if (r2 == 2)
                {
                    if (*(0x20001c78 + arg1) != 2)
                    {
                        goto label_10680;
                    }
                    r2_1 = (0x20001c30 + (arg1 * 0x24));
                    r3_1 = *(r2_1 + 0x20);
                    if (r3_1 == 0)
                    {
                        goto label_10680;
                    }
                    r0_10 = arg1;
                    r1 = 1;
                    goto label_1067e;
                }
                if (r2 != 0)
                {
                    if (r2 != 3)
                    {
                        if (r2 != 1)
                        {
                            goto label_10416;
                        }
                        uint32_t r0_34 = *(0x20001c78 + arg1);
                        if (r0_34 == 2)
                        {
                            r4_10 = (0x20001c30 + (arg1 * 0x24));
                            if (*(r4_10 + 0x20) == 0)
                            {
                                goto label_10680;
                            }
                            *(r4_10 + 5) = r6;
                            sub_1ff48((r4_10 + 8), arg3, r6);
                            r3_1 = *(r4_10 + 0x20);
                        label_10f1c:
                            r0_10 = arg1;
                            r1 = 1;
                            r2_1 = r4_10;
                            goto label_1067e;
                        }
                        if (r0_34 != 0)
                        {
                            goto label_10680;
                        }
                        r6_4 = *(0x20001b34 + (arg1 << 2));
                        if (r6_4 == 0)
                        {
                            goto label_10680;
                        }
                        r5_1 = 0;
                        int32_t r0_35 = *(0x20001bd4 + (arg1 << 2));
                        var_50_6 = arg3;
                        var_4c = &var_25;
                        r1_7 = ((r0_35 >> 0x1c) & 7);
                        r2_4 = r0_35;
                        goto label_10b24;
                    }
                    char* var_4c_10;
                    int32_t var_48_7;
                    int32_t r0_116;
                    int32_t r1_28;
                    uint32_t r3_13;
                    if (*((arg1 * 0x28) + 0x20001be0) != 1)
                    {
                        int32_t r6_21 = *((arg1 * 0x28) + 0x20001c00);
                        var_44 = 0;
                        int32_t r0_151;
                        if (r6_21 != 0)
                        {
                            r0_151 = r6_21(arg1, (0x20001bdc + (arg1 * 0x28)), 3, 0, &var_44);
                            if (r0_151 == 1)
                            {
                                r3_13 = var_44;
                                var_48_7 = 0;
                                int32_t var_50_29 = 0;
                                var_4c_10 = nullptr;
                                r0_116 = arg1;
                                r1_28 = 1;
                            }
                        }
                        if ((r6_21 == 0 || (r6_21 != 0 && r0_151 != 1)))
                        {
                            var_48_7 = 0;
                            int32_t var_50_34 = 0;
                            var_4c_10 = nullptr;
                        label_10ede:
                            r0_116 = arg1;
                            r1_28 = 4;
                            r3_13 = 0;
                        }
                    }
                    else
                    {
                        sub_1f886(&var_44, 0, 0x18);
                        int32_t r4_12 = *((arg1 * 0x28) + 0x20001c00);
                        var_26 = 0;
                        int32_t r0_111;
                        if (r4_12 != 0)
                        {
                            r0_111 = r4_12(arg1, (0x20001bdc + (arg1 * 0x28)), 3, &var_44, &var_26);
                            if (r0_111 == 1)
                            {
                                r3_13 = var_26;
                                r1_28 = 2;
                                *((arg1 * 0x28) + 0x20001bfe) = (*((arg1 * 0x28) + 0x20001bfe) + r3_13);
                                var_4c_10 = &var_44;
                                var_48_7 = (((r3_13 + 3) >> 2) & 0x3f);
                                int32_t var_50_21 = 0;
                                r0_116 = arg1;
                            }
                        }
                        if ((r4_12 == 0 || (r4_12 != 0 && r0_111 != 1)))
                        {
                            var_48_7 = 0;
                            int32_t var_50_33 = 0;
                            var_4c_10 = nullptr;
                            goto label_10ede;
                        }
                    }
                    sub_10f8c(r0_116, r1_28, 0, r3_13, 0, var_4c_10, var_48_7);
                    r0_3 = 4;
                    goto label_10658;
                }
            }
            if (r1 == 0)
            {
                if (r2 > 3)
                {
                    goto label_10416;
                }
                switch (jump_table_10470[r2])
                {
                    case 4:
                    {
                    label_10478:
                        r5_1 = 0;
                        r0_7 = arg1;
                        r1_1 = 0;
                        goto label_10eb8;
                    }
                    case 0x22b:
                    {
                        int32_t r4_6 = *arg3;
                        r5_1 = 0;
                        sub_1f886(&var_40, 0, 0x18);
                        r3_3 = r6;
                        *(0x20001c78 + arg1) = 0;
                        int32_t r0_74 = (0x7700ffff & r4_6);
                        var_44 = r0_74;
                        *(0x20001bd4 + (arg1 << 2)) = r0_74;
                        r1_1 = 1;
                        var_48_1 = 1;
                        int32_t var_50_14 = 0;
                        var_4c_1 = &var_44;
                        break;
                    }
                    case 0x24f:
                    {
                        int32_t r4_7 = *arg3;
                        sub_1f886(&var_44, 0, 0x1c);
                        var_26 = r6;
                        *(0x20001c78 + arg1) = 1;
                        int32_t r6_13 = *(0x20001b34 + (arg1 << 2));
                        if (r6_13 == 0)
                        {
                            var_26 = 0;
                            goto label_10680;
                        }
                        r6_13(arg1, ((r4_7 >> 0x1c) & 7), r4_7, 1, &var_40, &var_26);
                        uint32_t r0_77 = var_26;
                        if (r0_77 == 0)
                        {
                            goto label_10680;
                        }
                        int32_t r1_18 = (0x7700ffff & r4_7);
                        var_44 = r1_18;
                        *(0x20001bd4 + (arg1 << 2)) = r1_18;
                        var_4c_7 = &var_44;
                        var_48_5 = (1 + (r0_77 >> 2));
                        r3_7 = (r0_77 + 4);
                        int32_t var_50_16 = 0;
                    label_10992:
                        r0_79 = arg1;
                        r1_14 = 2;
                        r2_6 = 0;
                    label_10f7e:
                        sub_10f8c(r0_79, r1_14, r2_6, r3_7, 0, var_4c_7, var_48_5);
                        goto label_10680;
                    }
                    case 0x295:
                    {
                        int32_t r0_80 = (arg1 * 5);
                        int32_t r2_8 = *arg3;
                        *(0x20001bdc + (r0_80 << 3)) = ((r2_8 >> 0x1c) & 7);
                        *((r0_80 << 3) + 0x20001bdd) = ((r2_8 >> 0x18) & 7);
                        *((r0_80 << 3) + 0x20001be0) = ((r2_8 >> 0x17) & 1);
                        *((r0_80 << 3) + 0x20001be4) = ((r2_8 >> 0x10) & 0xf);
                        *((r0_80 << 3) + 0x20001be6) = r2_8;
                        *((r0_80 << 3) + 0x20001bfc) = (arg4 - 1);
                        sub_1ff48(((r0_80 << 3) + 0x20001be8), &arg3[4], (arg4 - 1));
                        r5_1 = 0;
                        *((r0_80 << 3) + 0x20001bfe) = 0;
                        *((r0_80 << 3) + 0x20001c00) = *(0x20001b3c + (arg1 << 2));
                        uint32_t r0_87 = *((r0_80 << 3) + 0x20001bfc);
                        var_48_1 = (r0_87 + 1);
                        int32_t var_50_17 = 0;
                        var_4c_1 = arg3;
                        r1_1 = 3;
                        r3_3 = (4 + (r0_87 << 2));
                        break;
                    }
                }
                if ((*(&jump_table_10470 + (r2 << 1)) == 0x22b || *(&jump_table_10470 + (r2 << 1)) == 0x295))
                {
                    r0_7 = arg1;
                }
            }
        }
        if (((((jump_table_10280[r3] == 0x47 && (!cond:3_1)) && cond:4_1) && (!cond:5_1)) || (jump_table_10280[r3] == 0x5d && r1 == 0)))
        {
            r2_14 = 0;
            goto label_10ec2;
        }
        switch (jump_table_10280[r3])
        {
            case 3:
            {
                bool cond:2_1 = r2 != 5;
                if (r2 == 5)
                {
                    cond:2_1 = r1 != 1;
                }
                if (cond:2_1)
                {
                    r5_1 = 0xffffffff;
                    if ((r2 == 1 && r1 != 0))
                    {
                        uint32_t r3_2 = *(0x20001bcc + arg1);
                        if (r3_2 > 7)
                        {
                            goto label_10680;
                        }
                        uint32_t r0_21 = *(0x20001bd4 + (arg1 << 2));
                        if (r0_21 == 4)
                        {
                            r5_1 = *arg3;
                        }
                        if (r0_21 == 0)
                        {
                            r5_1 = 0;
                            *((0x20001b4c + (arg1 << 5)) + (r3_2 << 2)) = *arg3;
                        }
                        int32_t r0_25;
                        if ((r0_21 == 4 || (r0_21 == 0 && *arg3 == 0)))
                        {
                            *((0x20001b8c + (arg1 << 5)) + (r3_2 << 2)) = r5_1;
                            int32_t r6_18 = (0x1000000 + (r3_2 << 0x18));
                            int32_t r3_16 = (r3_2 + 1);
                            int32_t r0_130;
                            while (((1 << r3_16) & *(0x20001b4c + (arg1 << 5))) == 0)
                            {
                                r0_130 = (r3_16 + 1);
                                bool cond:9_1 = r3_16 <= 7;
                                r6_18 = (r6_18 + 0x1000000);
                                r3_16 = r0_130;
                                if ((!cond:9_1))
                                {
                                    break;
                                }
                            }
                            if (((1 << r3_16) & *(0x20001b4c + (arg1 << 5))) == 0)
                            {
                                *(0x20001bcc + arg1) = (r0_130 - 1);
                                goto label_10eb2;
                            }
                            *(0x20001bcc + arg1) = r3_16;
                            if (r3_16 > 7)
                            {
                                goto label_10eb2;
                            }
                            r0_25 = (r6_18 & 0x7000000);
                            r5_1 = 0;
                        }
                        if ((r0_21 == 0 && *arg3 != 0))
                        {
                            r0_25 = (4 | ((r3_2 & 7) << 0x18));
                        }
                        if ((((r0_21 == 0 && *arg3 != 0) || r0_21 == 4) || (r0_21 == 0 && *arg3 == 0)))
                        {
                            *(0x20001bd4 + (arg1 << 2)) = r0_25;
                            var_4c_1 = (0x20001bd4 + (arg1 << 2));
                            var_48_1 = 1;
                            int32_t var_50_30 = 0;
                            r0_7 = arg1;
                            r1_1 = 1;
                            goto label_10308;
                        }
                        if ((r0_21 != 4 && r0_21 != 0))
                        {
                            goto label_10680;
                        }
                    }
                }
                else
                {
                    r0_3 = 2;
                label_10658:
                    *(0x20001b44 + (arg1 << 2)) = r0_3;
                label_10680:
                    r5_1 = 0;
                }
                break;
            }
            case 0x7e:
            {
                int32_t r0_11 = (r0_2 & 3);
                if ((r0_11 != 2 && r0_11 != 1))
                {
                label_108aa:
                    r5_1 = 0;
                    sub_10f8c(arg1, 0, 0, 0, 0, nullptr, 0);
                    *(0x20001b44 + (arg1 << 2)) = 5;
                }
                void* r1_4;
                int32_t r6_3;
                if (r0_11 == 1)
                {
                    void* r5_4;
                    if (r2 == 2)
                    {
                        r5_4 = (0x20001bdc + (arg1 * 0x28));
                        if (*(r5_4 + 4) != 1)
                        {
                            goto label_108aa;
                        }
                        if (*(r5_4 + 0x22) < *(r5_4 + 0xa))
                        {
                            sub_1f886(&var_44, 0, 0x18);
                            int32_t r4_5 = *(r5_4 + 0x24);
                            var_26 = 0;
                            if ((r4_5 != 0 && r4_5(arg1, r5_4, 2, &var_44, &var_26) == 1))
                            {
                                r3_7 = var_26;
                                *(r5_4 + 0x22) = (*(r5_4 + 0x22) + r3_7);
                                var_4c_7 = &var_44;
                                var_48_5 = (((r3_7 + 3) >> 2) & 0x3f);
                                int32_t var_50_13 = 0;
                                goto label_10992;
                            }
                            var_48_5 = 0;
                            int32_t var_50_31 = 0;
                            var_4c_7 = nullptr;
                            goto label_10e8a;
                        }
                        r6_3 = *(r5_4 + 0x24);
                    }
                    if (((r2 != 1 && r2 != 2) && r2 != 4))
                    {
                        goto label_108aa;
                    }
                    if (r2 == 1)
                    {
                        r5_4 = (0x20001bdc + (arg1 * 0x28));
                        if (*(r5_4 + 4) != 0)
                        {
                            goto label_108aa;
                        }
                        var_44 = r6;
                        *(r5_4 + 0x22) = (*(r5_4 + 0x22) + r6);
                        int32_t r6_10 = *(r5_4 + 0x24);
                        int32_t r0_60;
                        if (r6_10 != 0)
                        {
                            r0_60 = r6_10(arg1, r5_4, 1, arg3, &var_44);
                            if (r0_60 == 1)
                            {
                                if (*(r5_4 + 0x22) < *(r5_4 + 0xa))
                                {
                                    r3_7 = var_44;
                                    r1_14 = 1;
                                    r2_6 = 0;
                                    var_48_5 = 0;
                                    int32_t var_50_11 = 0;
                                    var_4c_7 = nullptr;
                                label_10f7c:
                                    r0_79 = arg1;
                                    goto label_10f7e;
                                }
                                r6_3 = *(r5_4 + 0x24);
                            }
                        }
                        if ((r6_10 == 0 || (r6_10 != 0 && r0_60 != 1)))
                        {
                            var_48_5 = 0;
                            int32_t var_50_27 = 0;
                            var_4c_7 = nullptr;
                        label_10e8a:
                            r0_79 = arg1;
                            r1_14 = 4;
                            r2_6 = 0;
                            r3_7 = 0;
                            goto label_10f7e;
                        }
                    }
                    if ((r2 == 1 || r2 == 2))
                    {
                        if (r6_3 == 0)
                        {
                            goto label_10570;
                        }
                        r1_4 = r5_4;
                    label_1056e:
                        r6_3(arg1, r1_4, 4, 0, 0);
                    label_10570:
                        r0_3 = 3;
                        goto label_10658;
                    }
                }
                if ((r0_11 == 2 && r2 != 4))
                {
                    r5_1 = 0;
                    r0_7 = arg1;
                    r1_1 = 4;
                label_10eb8:
                    var_48_1 = 0;
                    int32_t var_50_32 = 0;
                    var_4c_1 = nullptr;
                    r2_14 = 0;
                    goto label_10ec0;
                }
                if ((r0_11 == 2 || r0_11 == 1))
                {
                    r1_4 = (0x20001bdc + (arg1 * 0x28));
                    r6_3 = *(r1_4 + 0x24);
                    if (r6_3 == 0)
                    {
                        goto label_10570;
                    }
                    goto label_1056e;
                }
                break;
            }
            case 0x90:
            {
                if (r2 != 0)
                {
                    goto label_10680;
                }
                int32_t r0_12 = (r0_2 & 3);
                if (r0_12 != 1)
                {
                    if (r0_12 != 0)
                    {
                        goto label_10680;
                    }
                    goto label_10478;
                }
                break;
            }
            case 0xcb:
            {
                goto label_10416;
            }
        }
        if (((jump_table_10280[r3] == 0x5d && r1 == 1) || jump_table_10280[r3] == 0x90))
        {
            r0_3 = 1;
            goto label_10658;
        }
    }
    return r5_1;
}

int32_t sub_10f8c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t* arg6, int32_t arg7)
{
    int32_t var_40;
    int32_t r11;
    if ((sub_1db5c(arg1) | arg3) == 0)
    {
        r11 = 2;
        var_40 = 0x5ac8106;
    }
    else
    {
        r11 = 1;
    }
    void* r6 = &&var_40[r11];
    sub_1ff48(r6, arg6, (arg7 << 2));
    *(r6 - 4) = ((((((0x30 & (arg3 << 4)) | (arg2 & 0xf)) | ((arg4 & 0x1f) << 6)) | ((arg5 & 0xf) << 0xb)) | 0x4000000) | 0x1ac0000);
    sub_cbca(arg1, 1, 0xf, &var_40, (r11 + arg7));
    if (arg3 == 0)
    {
        int32_t r0_12 = *0x20006064;
        *(0x20001b1c + (arg1 << 3)) = 1;
        *((arg1 << 3) + 0x20001b20) = (r0_12 + 0x1e);
    }
    return 0;
}

int32_t sub_1103a(int32_t* arg1, int32_t* arg2, int32_t* arg3)
{
    *0x20001b48 = 0;
    *0x20001b44 = 0;
    *0x20001bd8 = 0;
    *0x20001bd4 = 0;
    *0x20001bcc = 0;
    sub_1f886(0x20001b4c, 0, 0x40);
    sub_1f886(0x20001b8c, 0, 0x40);
    int32_t r0 = *arg1;
    *0x20001b30 = arg1[1];
    *0x20001b2c = r0;
    int32_t r0_1 = *arg2;
    *0x20001b38 = arg2[1];
    *0x20001b34 = r0_1;
    int32_t r0_2 = *arg3;
    *0x20001b40 = arg3[1];
    *0x20001b3c = r0_2;
    return r0_2;
}

void sub_110c2(int32_t arg1)
{
    if ((*(0x20001b1c + (arg1 << 3)) != 0 && (*0x20006064 - *((arg1 << 3) + 0x20001b20)) >= 0))
    {
        *(0x20001b1c + (arg1 << 3)) = 0;
        /* tailcall */
        return sub_17ba2(4, "UVDM Timeout\n", 0);
    }
}

int32_t sub_110fc()
{
    *0x20001b48 = 0;
    *0x20001b44 = 0;
    *0x20001bd8 = 0;
    *0x20001bd4 = 0;
    *0x20001bcc = 0;
    sub_1f886(0x20001b4c, 0, 0x40);
    sub_1f886(0x20001b8c, 0, 0x40);
    return 0x20001b8c;
}

int32_t sub_11146(int32_t arg1)
{
    return *(0x20001b44 + (arg1 << 2));
}

int32_t sub_11154(int32_t arg1)
{
    int32_t r4;
    if (*(0x20001b44 + (arg1 << 2)) != 0)
    {
        r4 = 0xffffffff;
    }
    else
    {
        *(0x20001b44 + (arg1 << 2)) = 1;
        r4 = 0;
        if (sub_1db5c(arg1) == 1)
        {
            *(0x20001bcc + arg1) = 0;
            *(0x20001bd4 + (arg1 << 2)) = 0;
            sub_10f8c(arg1, 1, 0, 4, 0, (0x20001bd4 + (arg1 << 2)), 1);
        }
    }
    return r4;
}

int32_t sub_111bc(int32_t arg1, char* arg2)
{
    int32_t r0_17;
    if (*(0x20001b44 + (arg1 << 2)) != 3)
    {
        r0_17 = 0xffffffff;
    }
    else
    {
        int32_t* r1 = arg2;
        int32_t r3_1 = r1[1];
        int32_t r4_1 = r1[2];
        int32_t r5_1 = r1[3];
        int32_t r6_1 = r1[4];
        *(0x20001bdc + (arg1 * 0x28)) = *r1;
        *((arg1 * 0x28) + 0x20001be0) = r3_1;
        *((arg1 * 0x28) + 0x20001be4) = r4_1;
        *((arg1 * 0x28) + 0x20001be8) = r5_1;
        *((arg1 * 0x28) + 0x20001bec) = r6_1;
        int32_t r3_2 = r1[6];
        int32_t r4_2 = r1[7];
        int32_t r5_2 = r1[8];
        int32_t r6_2 = r1[9];
        *((arg1 * 0x28) + 0x20001bf0) = r1[5];
        *((arg1 * 0x28) + 0x20001bf4) = r3_2;
        *((arg1 * 0x28) + 0x20001bf8) = r4_2;
        *((arg1 * 0x28) + 0x20001bfc) = r5_2;
        *((arg1 * 0x28) + 0x20001c00) = r6_2;
        *((arg1 * 0x28) + 0x20001bfe) = 0;
        void var_38;
        sub_1f886(&var_38, 0, 0x14);
        int32_t r0_9 = ((((0x800000 & (*(arg2 + 4) << 0x17)) | (((arg2[1] & 7) << 0x18) | ((*arg2 & 7) << 0x1c))) | *(arg2 + 0xa)) | ((arg2[8] & 0xf) << 0x10));
        int32_t var_3c = r0_9;
        uint32_t r6_3 = arg2[0x20];
        if (r6_3 >= 6)
        {
            r6_3 = 5;
            arg2[0x20] = 5;
        }
        sub_1ff48(&var_38, &arg2[0xc], (r6_3 << 2));
        sub_10f8c(arg1, 3, 0, (4 + (r6_3 << 2)), 0, &var_3c, (r6_3 + 1));
        if (sub_1db5c(arg1) == 0)
        {
            *(0x20001c2c + arg1) = 1;
        }
        r0_17 = 0;
    }
    return r0_17;
}

int32_t sub_112a4()
{
    *0x20001c80 = 0;
    *0x20001f26 = 0;
    *0x20001c7c = 0;
    *0x20001c84 = 0;
    *0x20001c88 = 0;
    *0x20001c8c = 0;
    *0x20001c90 = 0;
    *0x20001d00 = 0;
    *0x20001d08 = 0;
    *0x20001c94 = 0;
    *0x20001c95 = 0;
    *0x20001c96 = 0;
    *0x20001c97 = 0;
    *0x20001c98 = 0;
    *0x200004e0 = 3;
    sub_8746(7, 0, *0x20006064);
    *0x20001f27 = 0;
    sub_8746(8, 0, *0x20006064);
    *0x20001f28 = 0;
    sub_8746(9, 0, *0x20006064);
    *0x20001f29 = 0;
    sub_8746(0xa, 0, *0x20006064);
    return 0;
}

int32_t sub_11384(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r4;
    if (arg1 == 0)
    {
        r4 = 0xffffffff;
    }
    else
    {
        if (*0x20001c7c != 0)
        {
            /* jump -> arg1 */
        }
        r4 = 0;
        *0x20001c7c = 0;
        *0x20001c80 = arg1;
        sub_cc40(0, sub_120f4(), 0x5ac, 0, 0x10, nullptr, 0, sub_113de);  {  // {"@FIF"}}
    }
    return r4;
}

int32_t sub_113de(int32_t arg1, int32_t arg2, int16_t* arg3, int32_t arg4)
{
    char* r0;
    int32_t r0_2;
    if (arg1 == 0)
    {
        *0x200004e0 = 3;
        r0_2 = ((*arg3 >> 6) & 3);
        if ((r0_2 == 2 && *0x20001c7c == 0))
        {
            r0 = 0x20001c97;
        }
        uint32_t r6_1;
        if ((r0_2 == 1 && arg4 >= 2))
        {
            void* r0_3 = &arg3[2];
            int32_t r1_2 = 1;
            uint32_t r2 = *0x20001c7c;
            do
            {
                r6_1 = r2;
                if (r6_1 > 0x17)
                {
                    break;
                }
                int32_t r5_1 = *r0_3;
                if (0 == (r5_1 >> 0x10))
                {
                    break;
                }
                *(0x20001c9e + (r6_1 << 1)) = (r5_1 >> 0x10);
                uint32_t r6_2 = (r2 + 1);
                *0x20001c7c = (r2 + 1);
                if (r6_2 > 0x17)
                {
                    break;
                }
                if (r5_1 == 0)
                {
                    break;
                }
                r1_2 = (r1_2 + 1);
                r2 = (r2 + 2);
                r0_3 = (r0_3 + 4);
                *(0x20001c9e + (r6_2 << 1)) = r5_1;
                *0x20001c7c = r2;
            } while (r1_2 < arg4);
        }
        if (((r0_2 == 2 && *0x20001c7c != 0) || ((r0_2 == 1 && arg4 >= 2) && r6_1 > 0x17)))
        {
            int32_t r0_7 = *0x20001c80;
            if (r0_7 != 0)
            {
                r0_7();
            }
        }
        if ((r0_2 == 1 && (arg4 < 2 || (arg4 >= 2 && r6_1 <= 0x17))))
        {
            sub_cc40(0, sub_120f4(), 0x5ac, 0, 0x10, nullptr, 0, sub_113de);  {  // {"@FIF"}}
        }
    }
    if ((arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd))
    {
        r0 = 0x20001c96;
    }
    if (((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe))
    {
        r0 = 0x20001c95;
    }
    if ((((arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd) || ((arg1 == 0 && r0_2 == 2) && *0x20001c7c == 0)) || ((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe)))
    {
        *r0 = 1;
    }
    return 0;
}

int32_t sub_114d6(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r4_2;
    if (arg2 == 0)
    {
        r4_2 = 0xffffffff;
    }
    else
    {
        if ((*0x20001c8c == arg1 && *0x20001c84 != 0))
        {
            /* jump -> arg2 */
        }
        *0x20001c8c = arg1;
        int32_t var_14 = arg1;
        *0x20001c88 = arg2;
        r4_2 = 0;
        *0x20001c84 = 0;
        sub_cc40(0, sub_120f4(), 0x5ac, 0, 0x11, &var_14, 1, sub_11546);  {  // {"@FIF"}}
    }
    return r4_2;
}

int32_t sub_11546(int32_t arg1, int32_t arg2, int16_t* arg3, int32_t arg4)
{
    char* r0;
    int32_t r0_2;
    if (arg1 == 0)
    {
        *0x200004e0 = 3;
        r0_2 = ((*arg3 >> 6) & 3);
        if ((r0_2 == 2 && *0x20001c84 == 0))
        {
            r0 = 0x20001c97;
        }
        uint32_t r6_1;
        if ((r0_2 == 1 && arg4 >= 2))
        {
            void* r0_3 = &arg3[2];
            int32_t r1_2 = 1;
            uint32_t r2 = *0x20001c84;
            do
            {
                r6_1 = r2;
                if (r6_1 > 0x17)
                {
                    break;
                }
                int32_t r5_1 = *r0_3;
                if (0 == (r5_1 >> 0x10))
                {
                    break;
                }
                *(0x20001cce + (r6_1 << 1)) = (r5_1 >> 0x10);
                uint32_t r6_2 = (r2 + 1);
                *0x20001c84 = (r2 + 1);
                if (r6_2 > 0x17)
                {
                    break;
                }
                if (r5_1 == 0)
                {
                    break;
                }
                r1_2 = (r1_2 + 1);
                r2 = (r2 + 2);
                r0_3 = (r0_3 + 4);
                *(0x20001cce + (r6_2 << 1)) = r5_1;
                *0x20001c84 = r2;
            } while (r1_2 < arg4);
        }
        if (((r0_2 == 2 && *0x20001c84 != 0) || ((r0_2 == 1 && arg4 >= 2) && r6_1 > 0x17)))
        {
            int32_t r0_8 = *0x20001c88;
            if (r0_8 != 0)
            {
                r0_8();
            }
        }
        if ((r0_2 == 1 && (arg4 < 2 || (arg4 >= 2 && r6_1 <= 0x17))))
        {
            uint32_t var_1c = *0x20001c8c;
            sub_cc40(0, sub_120f4(), 0x5ac, 0, 0x11, &var_1c, 1, sub_11546);  {  // {"@FIF"}}
        }
    }
    if ((arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd))
    {
        r0 = 0x20001c96;
    }
    if (((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe))
    {
        r0 = 0x20001c95;
    }
    if ((((arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd) || ((arg1 == 0 && r0_2 == 2) && *0x20001c84 == 0)) || ((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe)))
    {
        *r0 = 1;
    }
    return 0;
}

int32_t sub_1164c(int32_t arg1, int32_t arg2, int32_t arg3)
{
    int32_t r4;
    if (arg3 == 0)
    {
        r4 = 0xffffffff;
    }
    else
    {
        int32_t var_14 = (arg1 | arg2);
        *0x20001c90 = arg3;
        r4 = 0;
        sub_cc40(0, sub_120f4(), 0x5ac, 0, 0x12, &var_14, 1, sub_11698);  {  // {"@FIF"}}
    }
    return r4;
}

int32_t sub_11698(int32_t arg1, int32_t arg2, int16_t* arg3)
{
    char* r0;
    int32_t r0_2;
    if (arg1 == 0)
    {
        r0_2 = ((*arg3 >> 6) & 3);
        if (r0_2 == 2)
        {
            r0 = 0x20001c97;
        }
        else if (r0_2 == 1)
        {
            int32_t r0_3 = *(arg3 + 0xc);
            int32_t r1_2 = *(arg3 + 0x10);
            *(arg3 + 8);
            sub_17ba2(3, "Got EnterDC response: 0x%08X 0x%…", *(arg3 + 4));
            int32_t r12_1 = *0x20001c90;
            if (r12_1 != 0)
            {
                r12_1(*(arg3 + 4), *(arg3 + 8), *(arg3 + 0xc), *(arg3 + 0x10), r0_3, r1_2);
            }
        }
    }
    if ((arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd))
    {
        r0 = 0x20001c96;
    }
    if (((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe))
    {
        r0 = 0x20001c95;
    }
    if ((((arg1 == 0 && r0_2 == 2) || (arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd)) || ((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe)))
    {
        *r0 = 1;
    }
    return 0;
}

int32_t sub_1171a(int32_t arg1, int32_t arg2, int32_t* arg3, int32_t arg4, int32_t arg5)
{
    int32_t r4_1;
    if (arg5 == 0)
    {
        r4_1 = 0xffffffff;
    }
    else
    {
        int32_t var_28 = (arg1 | arg2);
        *0x20001c90 = arg5;
        int32_t r3 = (arg4 << 2);
        if (arg4 > 5)
        {
            r3 = 0x14;
        }
        void var_24;
        sub_1ff48(&var_24, arg3, r3);
        r4_1 = 0;
        sub_cc40(0, sub_120f4(), 0x5ac, 0, 0x12, &var_28, (arg4 + 1), sub_11698);  {  // {"@FIF"}}
    }
    return r4_1;
}

int32_t sub_1178a()
{
    if (*0x20001f26 >= 4)
    {
        *0x20001f26 = 1;
        sub_8746(7, 1, *0x20006064);
        *0x200004e0 = 3;
        *0x20001c94 = 1;
        sub_11384(sub_12122, 3);
    }
    return 0;
}

int32_t sub_117dc()
{
    if (*0x20001f28 < 4)
    {
        return 0xffffffff;
    }
    if (*0x20001f27 != 7)
    {
        return 0xffffffff;
    }
    /* tailcall */
    return sub_117f6(0xffffffff, 0x20001f26);
}

int32_t sub_117f6(int32_t arg1, void* arg2)
{
    *(arg2 + 2) = 1;
    sub_8746(9, 1, *0x20006064);
    *0x200004e0 = 3;
    *0x20001c94 = 3;
    sub_11384(sub_127d8, 3);
    return 0;
}

int32_t sub_1183a()
{
    if (*0x20001f29 < 4)
    {
        return 0xffffffff;
    }
    /* tailcall */
    return sub_1184e(0x20001f26);
}

int32_t sub_1184e(void* arg1)
{
    *(arg1 + 3) = 1;
    sub_8746(0xa, 1, *0x20006064);
    *0x200004e0 = 3;
    *0x20001c94 = 4;
    sub_11384(sub_129ae, 4);
    return 0;
}

int32_t sub_11890()
{
    if (*0x20001f27 >= 4)
    {
        *0x20001f27 = 1;
        sub_8746(8, 1, *0x20006064);
        *0x20001c94 = 2;
        sub_11384(sub_12b72, 2);
    }
    return 0;
}

int32_t sub_118d8()
{
    int32_t r4 = 0;
    int32_t var_30 = 0;
    *0x20001c90 = sub_11a3e;
    *0x20001c94 = 0xff;
    sub_cc40(0, sub_120f4(), 0x5ac, 0, 0x12, &var_30, 1, sub_11698);  {  // {"@FIF"}}
    *0x20001c99 = 0;
    if (*0x20001c99 <= 1)
    {
        int32_t r9_1 = 3;
        while (true)
        {
            int32_t r2_1 = sub_16930(1);
            if (((*0x20001c96 | *0x20001c95) << 0x18) != 0)
            {
                r9_1 = (r9_1 - 1);
                *0x20001c96 = 0;
                *0x20001c95 = 0;
                if ((r9_1 & 0xff) == 0)
                {
                    r4 = 0xffffffff;
                    break;
                }
                sub_17ba2(4, "Retry Stopping USB\n", r2_1);
                char const* const* r0_7;
                int32_t r1_2;
                if (*0x20001c99 == 0)
                {
                    char* var_2c = nullptr;
                    *0x20001c90 = sub_11a3e;
                    r1_2 = sub_120f4();
                    int32_t var_38_2 = 1;
                    void* const var_34_2 = sub_11698;
                    r0_7 = &var_2c;
                }
                else
                {
                    *0x20001c90 = sub_11abe;
                    char const* const var_28 = "%u %u %u\n";
                    r1_2 = sub_120f4();
                    int32_t var_38_1 = 1;
                    void* const var_34_1 = sub_11698;
                    r0_7 = &var_28;
                }
                sub_cc40(0, r1_2, 0x5ac, 0, 0x12, r0_7, 1, sub_11698);  {  // {"@FIF"}}
            }
            else if (*0x20001c97 == 1)
            {
                sub_17ba2(4, "Stopping USB NAKed\n", r2_1);
                r4 = 0xfffffff2;
                *0x20001c97 = 0;
                break;
            }
            if (*0x20001c99 >= 2)
            {
                r4 = 0;
                break;
            }
        }
    }
    return r4;
}

int32_t sub_11a3e(int32_t arg1, int32_t arg2)
{
    *0x20001c99 = 1;
    if (arg2 < 0x10000)
    {
        *0x20001c99 = 2;
        *0x20001f27 = 4;
        sub_8746(8, 4, *0x20006064);
    }
    else
    {
        *0x20001c90 = sub_11abe;
        char const* const var_14 = "%u %u %u\n";
        sub_cc40(0, sub_120f4(), 0x5ac, 0, 0x12, &var_14, 1, sub_11698);  {  // {"@FIF"}}
    }
    return 0;
}

int32_t sub_11abe()
{
    *0x20001c99 = 2;
    *0x20001f27 = 4;
    sub_8746(8, 4, *0x20006064);
    return 0;
}

int32_t sub_11af0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r0 = 0xffffffff;
    if ((*0x20001f26 >= 4 && (*0x20001f27 >= 4 && (*0x20001f28 >= 4 && *0x20001f29 >= 4))))
    {
        *0x20001c9a = arg1;
        *0x20001c94 = 0xff;
        *0x20001c9b = arg2;
        if (arg3 == 0)
        {
            sub_11384(sub_12d5e);
        }
        else
        {
            int32_t var_24 = (0x80000000 | (arg1 << 0x10));
            sub_1171a((arg2 | 0x100), 0, &var_24, 1, sub_11c0e);
        }
        *0x20001c9c = 0;
        int32_t r4_1 = (arg4 + *0x20006064);
        if ((*0x20006064 - r4_1) <= 0xffffffff)
        {
            int32_t i = 0;
            do
            {
                if ((i << 0x18) != 0)
                {
                    return 0;
                }
                sub_16930(1);
                if (((*0x20001c96 | *0x20001c95) << 0x18) != 0)
                {
                    *0x20001c96 = 0;
                    *0x20001c95 = 0;
                    break;
                }
                if (*0x20001c97 == 1)
                {
                    *0x20001c97 = 0;
                    return 0xfffffff2;
                }
                if ((*0x20006064 - r4_1) > 0xffffffff)
                {
                    break;
                }
                i = *0x20001c9c;
            } while (i >= 0);
        }
        r0 = 0xffffffff;
    }
    return r0;
}

int32_t sub_11c0e()
{
    *0x20001c9c = 1;
    return 0;
}

int32_t sub_11c1e()
{
    int32_t r0 = 0;
    if (*0x20001f26 == 5)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_11c32()
{
    int32_t r0 = 0;
    if (*0x20001f26 == 6)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_11c46()
{
    int32_t r0 = 0;
    if (*0x20001f27 == 7)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_11c5a()
{
    int32_t r0 = 0;
    if (*0x20001f28 == 8)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_11c6e()
{
    int32_t r0 = 0;
    if (*0x20001f29 == 0xa)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_11c82()
{
    int32_t r0 = 0;
    int32_t r2_1 = 0;
    if (*0x20001f27 > 3)
    {
        r2_1 = 1;
    }
    int32_t r1_1 = 0;
    if (*0x20001f26 > 3)
    {
        r1_1 = 1;
    }
    int32_t r2_2 = 0;
    if (*0x20001f28 > 3)
    {
        r2_2 = 1;
    }
    if (*0x20001f29 > 3)
    {
        r0 = 1;
    }
    return (r0 & ((r1_1 & r2_1) & r2_2));
}

int32_t sub_11cc8()
{
    if (*0x20001f26 != 0)
    {
        goto label_11da0;
    }
    uint32_t r0_2;
    int32_t r2;
    if ((*0x200004f4 << 0x1f) == 0)
    {
        *0x20001f26 = 4;
        r2 = sub_8746(7, 4, *0x20006064);
    label_11da0:
        r0_2 = *0x20001f27;
    }
    else
    {
        int32_t r1_4;
        if (*0x20001d00 != 1)
        {
            *0x20001d00 = 1;
            r1_4 = (*0x20006064 + *0x2000052c);
            *0x20001d04 = r1_4;
        }
        else
        {
            r1_4 = *0x20001d04;
        }
        r2 = *0x20006064;
        if ((r2 - r1_4) < 0)
        {
            goto label_11da0;
        }
        if (*0x2000052c > *0x20000530)
        {
            r0_2 = *0x20001f27;
        }
        if ((*0x2000052c <= *0x20000530 || (*0x2000052c > *0x20000530 && r0_2 >= 4)))
        {
            int32_t r0_3;
            r0_3 = sub_1edd8(0);
            if (r0_3 >= 0x65)
            {
                *0x20001d00 = 0;
                *0x20001f26 = 1;
                sub_8746(7, 1, *0x20006064);
                *0x200004e0 = 3;
                *0x20001c94 = 1;
                r2 = sub_11384(sub_12122, 3);
            }
            goto label_11da0;
        }
    }
    if (r0_2 == 0)
    {
        if (*0x20000510 == 0)
        {
            *0x20001f27 = 4;
            r2 = sub_8746(8, 4, *0x20006064);
        }
        else
        {
            int32_t r1_10;
            if (*0x20001d08 != 1)
            {
                *0x20001d08 = 1;
                r1_10 = (*0x20006064 + *0x20000530);
                *0x20001d0c = r1_10;
            }
            else
            {
                r1_10 = *0x20001d0c;
            }
            r2 = *0x20006064;
            if (((r2 - r1_10) >= 0 && (*0x2000052c > *0x20000530 || (*0x2000052c <= *0x20000530 && *0x20001f26 >= 4))))
            {
                int32_t r0_17;
                r0_17 = sub_1edd8(0);
                if (r0_17 >= 0x65)
                {
                    *0x20001d08 = 0;
                    *0x20001f27 = 1;
                    sub_8746(8, 1, *0x20006064);
                    *0x200004e0 = 3;
                    *0x20001c94 = 2;
                    r2 = sub_11384(sub_12b72, 2);
                }
            }
        }
    }
    if (*0x20001f28 == 0)
    {
        uint32_t r0_9 = *0x20001f27;
        if ((r0_9 >= 4 && *0x20001f26 >= 4))
        {
            if ((r0_9 != 7 || (r0_9 == 7 && *0x20000510 != 2)))
            {
                *0x20001f28 = 4;
                r2 = sub_8746(9, 4, *0x20006064);
            }
            if ((r0_9 == 7 && *0x20000510 == 2))
            {
                int32_t r0_11;
                r0_11 = sub_1edd8(0);
                if (r0_11 >= 0x65)
                {
                    *0x20001f28 = 1;
                    sub_8746(9, 1, *0x20006064);
                    *0x200004e0 = 3;
                    *0x20001c94 = 3;
                    r2 = sub_11384(sub_127d8, 3);
                }
            }
        }
    }
    if ((*0x20001f29 == 0 && *0x20001f28 == 4))
    {
        if ((*0x200004f4 << 0x1e) >= 0)
        {
            *0x20001f29 = 4;
            r2 = sub_8746(0xa, 4, *0x20006064);
        }
        else
        {
            int32_t r0_12;
            r0_12 = sub_1edd8(0);
            if (r0_12 >= 0x65)
            {
                *0x20001f29 = 1;
                sub_8746(0xa, 1, *0x20006064);
                *0x200004e0 = 3;
                *0x20001c94 = 4;
                r2 = sub_11384(sub_129ae, 4);
            }
        }
    }
    if (*0x20001c96 != 0)
    {
        int32_t r0_14;
        r0_14 = sub_1edd8(0);
        if (r0_14 >= 0x65)
        {
            *0x20001c96 = 0;
            char r1_13 = (*0x200004e0 - 1);
            *0x200004e0 = r1_13;
            if (r1_13 != 0)
            {
                r2 = sub_12e68();
            }
            else
            {
                sub_17ba2(3, "AVDM Timeout\n", r2);
                int32_t r0_19 = (*0x20001c94 - 1);
                if (r0_19 <= 3)
                {
                    int32_t r0_20;
                    int32_t r2_10;
                    switch (jump_table_11fac[r0_19])
                    {
                        case 2:
                        {
                            *0x20001f26 = 9;
                            r2_10 = *0x20006064;
                            r0_20 = 7;
                            break;
                        }
                        case 0x17:
                        {
                            *0x20001f27 = 9;
                            r2_10 = *0x20006064;
                            r0_20 = 8;
                            break;
                        }
                        case 0x20:
                        {
                            *0x20001f28 = 9;
                            r2_10 = *0x20006064;
                            r0_20 = 9;
                            break;
                        }
                        case 0x29:
                        {
                            *0x20001f29 = 9;
                            r2_10 = *0x20006064;
                            r0_20 = 0xa;
                            break;
                        }
                    }
                    sub_8746(r0_20, 9, r2_10);
                }
                sub_1671e(2);
                r2 = sub_1681c(0x50000003);
            }
        }
    }
    if (*0x20001c95 != 0)
    {
        int32_t r0_22;
        r0_22 = sub_1edd8(0);
        if (r0_22 >= 0x65)
        {
            *0x20001c95 = 0;
            sub_17ba2(3, "AVDM Collision Detected\n", r2);
            r2 = sub_12e68();
        }
    }
    if ((*0x20001c94 != 0xff && *0x20001c97 != 0))
    {
        *0x20001c97 = 0;
        sub_17ba2(3, "AVDM NAKed\n", r2);
        int32_t r0_25 = (*0x20001c94 - 1);
        if (r0_25 <= 3)
        {
            int32_t r0_26;
            int32_t r2_12;
            switch (jump_table_1208a[r0_25])
            {
                case 2:
                {
                    *0x20001f26 = 9;
                    r2_12 = *0x20006064;
                    r0_26 = 7;
                    break;
                }
                case 0xb:
                {
                    *0x20001f27 = 9;
                    r2_12 = *0x20006064;
                    r0_26 = 8;
                    break;
                }
                case 0x14:
                {
                    *0x20001f28 = 9;
                    r2_12 = *0x20006064;
                    r0_26 = 9;
                    break;
                }
                case 0x1d:
                {
                    *0x20001f29 = 9;
                    r2_12 = *0x20006064;
                    r0_26 = 0xa;
                    break;
                }
            }
            sub_8746(r0_26, 9, r2_12);
        }
        sub_1671e(2);
        sub_1681c(0x50000004);
    }
    return 0;
}

int32_t sub_120f4()
{
    int32_t r0 = sub_1dd12(0);
    int32_t r5 = 8;
    if (sub_1dbac(0) == 1)
    {
        r5 = 0x10;
    }
    sub_1dcfc(0, (r5 | (r0 & 0xffffffe7)));
    return r5;
}

int32_t sub_12122()
{
    uint32_t r0 = *0x20001c7c;
    int32_t r0_1;
    int32_t r1_1;
    int32_t r2;
    if (r0 != 0)
    {
        r1_1 = 0;
        r2 = *0x20000508;
        while (*(0x20001c9e + (r1_1 << 1)) != r2)
        {
            r1_1 = (r1_1 + 1);
            if (r1_1 >= r0)
            {
                break;
            }
        }
        if (*(0x20001c9e + (r1_1 << 1)) == r2)
        {
            sub_17ba2(4, "Found target DC (0x%04X)\n", r2);
            *0x20001f26 = 2;
            sub_8746(7, 2, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 1;
            sub_114d6(*0x20000508, sub_121f6);
            r0_1 = 0;
        }
    }
    if ((r0 == 0 || (r0 != 0 && *(0x20001c9e + (r1_1 << 1)) != r2)))
    {
        sub_17ba2(3, "Didn't find target DC\n", r2);
        *0x20001f26 = 9;
        sub_8746(7, 9, *0x20006064);
        sub_1671e(2);
        sub_1681c(0x50000002);
        r0_1 = 0xffffffff;
    }
    return r0_1;
}

int32_t sub_121f6()
{
    if (sub_17b96() >= 4)
    {
        sub_123fc(*0x20000509, *0x20001c84);
    }
    uint32_t r0_2 = *0x20001c84;
    if (r0_2 == 0)
    {
    label_123ce:
        *0x20001f26 = 9;
        sub_8746(7, 9, *0x20006064);
        sub_1671e(2);
        sub_1681c(0x50000001);
    }
    else
    {
        int32_t r1_2 = 0;
        int32_t r2_1 = 0x212;
        while (*(0x20001cce + (r1_2 << 1)) != 0x212)
        {
            r1_2 = (r1_2 + 1);
            if (r1_2 >= r0_2)
            {
                break;
            }
        }
        if (*(0x20001cce + (r1_2 << 1)) != 0x212)
        {
            int32_t r1_3 = 0;
            r2_1 = 0x221;
            while (*(0x20001cce + (r1_3 << 1)) != 0x221)
            {
                r1_3 = (r1_3 + 1);
                if (r1_3 >= r0_2)
                {
                    break;
                }
            }
            if (*(0x20001cce + (r1_3 << 1)) != 0x221)
            {
                goto label_123ce;
            }
        }
        int32_t r2_2 = sub_17ba2(4, "Valid Voltage\n", r2_1);
        uint32_t r0_5;
        if (*0x20000528 != 1)
        {
            r0_5 = *0x20001c84;
            if (r0_5 != 0)
            {
                int32_t r1_7 = 0;
                do
                {
                    r2_2 = (*(0x20001cce + (r1_7 << 1)) & 0xffffff04);
                    if (r2_2 == 0x104)
                    {
                        break;
                    }
                    r1_7 = (r1_7 + 1);
                } while (r1_7 < r0_5);
                char r0_7;
                if (r2_2 == 0x104)
                {
                label_122fc:
                    r0_7 = 4;
                label_1230a:
                    *0x20001c98 = r0_7;
                label_12316:
                    uint32_t r2_5 = sub_17ba2(4, "Valid Pin Assignment\n", r2_2);
                    uint32_t r0_8 = *0x20000509;
                    char const* const r1_11;
                    if (r0_8 == 3)
                    {
                        int32_t r0_11;
                        r0_11 = sub_12786();
                        if (r0_11 == 0)
                        {
                            goto label_123ce;
                        }
                        r1_11 = "Valid UART Connection possible\n";
                    label_1236c:
                        sub_17ba2(3, r1_11, r2_5);
                        *0x20001f26 = 3;
                        sub_8746(7, 3, *0x20006064);
                        *0x200004e0 = 3;
                        *0x20001c94 = 1;
                        sub_1164c(*0x20000508, (0x800000 | (*0x20001c98 << 0x10)), sub_124f0);
                    }
                    else if (r0_8 == 2)
                    {
                        uint32_t r0_9 = *0x20001c84;
                        int32_t r0_10;
                        if (r0_9 != 0)
                        {
                            int32_t r1_10 = 0;
                            do
                            {
                                r2_5 = *(0x20001cce + (r1_10 << 1));
                                if ((r2_5 & 0xffffff00) == 0x8000)
                                {
                                    r2_5 = r2_5;
                                    if (r2_5 != 0)
                                    {
                                        break;
                                    }
                                }
                                r1_10 = (r1_10 + 1);
                            } while (r1_10 < r0_9);
                            if (((r2_5 & 0xffffff00) == 0x8000 && r2_5 != 0))
                            {
                                r0_10 = 1;
                            }
                        }
                        if ((r0_9 == 0 || (r0_9 != 0 && (!((r2_5 & 0xffffff00) == 0x8000 && r2_5 != 0)))))
                        {
                            r0_10 = 0;
                        }
                        if ((r0_10 | *0x2000053c) == 0)
                        {
                            goto label_123ce;
                        }
                        r1_11 = "Valid SWD Connection possible\n";
                        goto label_1236c;
                    }
                }
                else if ((r0_5 != 0 && *0x200004f8 != 0))
                {
                    int32_t r1_9 = 0;
                    r2_2 = 0x101;
                    while ((*(0x20001cce + (r1_9 << 1)) & 0xffffff01) != 0x101)
                    {
                        r1_9 = (r1_9 + 1);
                        if (r1_9 >= r0_5)
                        {
                            break;
                        }
                    }
                    if ((*(0x20001cce + (r1_9 << 1)) & 0xffffff01) == 0x101)
                    {
                    label_12300:
                        r0_7 = 1;
                        goto label_1230a;
                    }
                }
            }
        }
        else
        {
            uint32_t r0_4 = *0x20001c84;
            if ((*0x200004f8 != 0 && r0_4 != 0))
            {
                int32_t r1_5 = 0;
                r2_2 = 0x101;
                while ((*(0x20001cce + (r1_5 << 1)) & 0xffffff01) != 0x101)
                {
                    r1_5 = (r1_5 + 1);
                    if (r1_5 >= r0_4)
                    {
                        break;
                    }
                }
                if ((*(0x20001cce + (r1_5 << 1)) & 0xffffff01) == 0x101)
                {
                    goto label_12300;
                }
            }
            if (((*0x200004f8 == 0 || (*0x200004f8 != 0 && r0_4 != 0)) && r0_4 != 0))
            {
                int32_t r1_6 = 0;
                do
                {
                    r2_2 = (*(0x20001cce + (r1_6 << 1)) & 0xffffff04);
                    if (r2_2 == 0x104)
                    {
                        break;
                    }
                    r1_6 = (r1_6 + 1);
                } while (r1_6 < r0_4);
                if (r2_2 == 0x104)
                {
                    goto label_122fc;
                }
            }
        }
        if ((((*0x20000528 != 1 && r0_5 == 0) || ((*0x20000528 != 1 && r0_5 != 0) && r2_2 != 0x104)) || *0x20000528 == 1))
        {
            if (*0x20001c98 == 0)
            {
                goto label_123ce;
            }
            goto label_12316;
        }
    }
    return 0;
}

void sub_123fc(uint32_t arg1, int32_t arg2)
{
    int32_t i_1 = arg2;
    uint32_t r5 = arg1;
    if (i_1 != 0)
    {
        int16_t* r11_1 = 0x20001cce;
        int32_t i;
        do
        {
            uint32_t r10_1 = *r11_1;
            int32_t r2;
            if ((0xffffffff + (r10_1 >> 8)) <= 4)
            {
                char const* const r1;
                uint32_t r2_1;
                switch (*((r10_1 >> 8) + 0x12439))
                {
                    case 3:
                    {
                        r2_1 = r10_1;
                        r1 = "Found Pairs EDC (0x%02X)\n";
                        break;
                    }
                    case 0xb:
                    {
                        r2 = sub_17ba2(4, "Found Voltage EDC %d (0x%02X)\n", r10_1);
                        break;
                    }
                    case 0x16:
                    {
                        r2_1 = r10_1;
                        r1 = "Found Clock EDC (0x%02X)\n";
                        break;
                    }
                    case 0x1e:
                    {
                        r2_1 = r10_1;
                        r1 = "Found Multiplier EDC (0x%02X)\n";
                        break;
                    }
                    case 0x26:
                    {
                        r2_1 = r10_1;
                        r1 = "Found Orientation EDC (0x%02X)\n";
                        break;
                    }
                }
                if ((((*((r10_1 >> 8) + 0x12439) == 3 || *((r10_1 >> 8) + 0x12439) == 0x16) || *((r10_1 >> 8) + 0x12439) == 0x1e) || *((r10_1 >> 8) + 0x12439) == 0x26))
                {
                    r2 = sub_17ba2(4, r1, r2_1);
                }
            }
            arg1 = (r10_1 >> 8);
            bool cond:0_1 = r5 != 3;
            if (r5 == 3)
            {
                cond:0_1 = arg1 != 0x80;
            }
            if (cond:0_1)
            {
                bool cond:1_1 = r5 != 2;
                if (r5 == 2)
                {
                    cond:1_1 = arg1 != 0x80;
                }
                if ((!cond:1_1))
                {
                    arg1 = sub_17ba2(4, "Found SWD Dock Channels availabl…", r2);
                }
            }
            else
            {
                uint32_t r3_2 = r10_1;
                int32_t r2_3;
                if (r3_2 > 0x80)
                {
                    r2_3 = (0xff9e5800 + (r3_2 * 0xc350));
                }
                else
                {
                    r2_3 = (r3_2 * &data_2580);
                }
                arg1 = sub_17ba2(4, "Found UART Baud Rate EDC %d (0x%…", r2_3);
            }
            i = i_1;
            i_1 = (i_1 - 1);
            r11_1 = &r11_1[1];
        } while (i != 1);
    }
}

int32_t sub_124f0()
{
    uint32_t r2 = *0x20001c84;
    uint32_t r0_1;
    int32_t r4_2;
    if (r2 != 0)
    {
        int32_t r3_1 = 0;
        do
        {
            r0_1 = *(0x20001cce + (r3_1 << 1));
            if ((r0_1 & 0xffffff00) == 0x500)
            {
                break;
            }
            r3_1 = (r3_1 + 1);
        } while (r3_1 < r2);
        if (((r0_1 & 0xffffff00) == 0x500 && (3 & (r0_1 >> 2)) != 0))
        {
            int32_t r1_2 = (*0x20001f24 & 3);
            r4_2 = 1;
            if (r1_2 == 2)
            {
                r4_2 = (1 & (!(r0_1 >> 2)));
            }
            else if (r1_2 == 1)
            {
                r4_2 = (1 & (!(r0_1 >> 3)));
            }
        }
    }
    if (((r2 == 0 || ((r2 != 0 && (r0_1 & 0xffffff00) == 0x500) && (3 & (r0_1 >> 2)) == 0)) || (r2 != 0 && (r0_1 & 0xffffff00) != 0x500)))
    {
        r4_2 = 1;
    }
    uint32_t r0_2 = *0x20000509;
    if (r0_2 == 3)
    {
        int32_t r0_7 = *0x2000050c;
        if (r0_7 == 0xffffffff)
        {
            r0_7 = sub_12786();
        }
        int32_t r2_2 = sub_9ea6(r0_7);
        uint32_t r0_8 = *0x20001c98;
        int32_t r1_9;
        int32_t r2_3;
        int32_t r3_3;
        if (r0_8 == 4)
        {
            sub_17ba2(3, "Connecting on SBU\n", r2_2);
            uint32_t r0_9 = *0x20001c84;
            int32_t r1_6;
            if (r0_9 != 0)
            {
                r1_6 = 0;
                while (*(0x20001cce + (r1_6 << 1)) != 0x221)
                {
                    r1_6 = (r1_6 + 1);
                    if (r1_6 >= r0_9)
                    {
                        break;
                    }
                }
                if (*(0x20001cce + (r1_6 << 1)) == 0x221)
                {
                    r3_3 = 1;
                }
            }
            if ((r0_9 == 0 || (r0_9 != 0 && *(0x20001cce + (r1_6 << 1)) != 0x221)))
            {
                r3_3 = 0;
            }
            r1_9 = 3;
            r2_3 = r4_2;
        }
        if (r0_8 == 1)
        {
            sub_17ba2(3, "Connecting on Debug USB\n", r2_2);
            uint32_t r0_10 = *0x20001c84;
            r2_3 = (r4_2 ^ 1);
            int32_t r1_7;
            if (r0_10 != 0)
            {
                r1_7 = 0;
                while (*(0x20001cce + (r1_7 << 1)) != 0x221)
                {
                    r1_7 = (r1_7 + 1);
                    if (r1_7 >= r0_10)
                    {
                        break;
                    }
                }
                if (*(0x20001cce + (r1_7 << 1)) == 0x221)
                {
                    r3_3 = 1;
                }
            }
            if ((r0_10 == 0 || (r0_10 != 0 && *(0x20001cce + (r1_7 << 1)) != 0x221)))
            {
                r3_3 = 0;
            }
            r1_9 = 7;
        }
        if ((r0_8 == 1 || r0_8 == 4))
        {
            sub_1387c(0, r1_9, r2_3, r3_3);
            *0x20001f26 = 6;
            sub_8746(7, 6, *0x20006064);
        }
        int32_t r0_14;
        if (sub_16756() != 5)
        {
            r0_14 = 4;
        }
        else
        {
            r0_14 = 6;
        }
        sub_166ee(r0_14);
    }
    else if (r0_2 == 2)
    {
        if (*0x2000053c == 0)
        {
            sub_9e38();
            int32_t r0_4 = *0x2000050c;
            if (r0_4 == 0xffffffff)
            {
                r0_4 = sub_1271c();
            }
            int32_t r2_1 = sub_a0ce(r0_4);
            uint32_t r0_5 = *0x20001c98;
            int32_t r1_10;
            int32_t r2_4;
            int32_t r3_2;
            if (r0_5 == 4)
            {
                sub_17ba2(3, "Connecting on SBU\n", r2_1);
                uint32_t r0_6 = *0x20001c84;
                int32_t r1_4;
                if (r0_6 != 0)
                {
                    r1_4 = 0;
                    while (*(0x20001cce + (r1_4 << 1)) != 0x221)
                    {
                        r1_4 = (r1_4 + 1);
                        if (r1_4 >= r0_6)
                        {
                            break;
                        }
                    }
                    if (*(0x20001cce + (r1_4 << 1)) == 0x221)
                    {
                        r3_2 = 1;
                    }
                }
                if ((r0_6 == 0 || (r0_6 != 0 && *(0x20001cce + (r1_4 << 1)) != 0x221)))
                {
                    r3_2 = 0;
                }
                r1_10 = 3;
                r2_4 = r4_2;
            }
            if (r0_5 == 1)
            {
                sub_17ba2(3, "Connecting on Debug USB\n", r2_1);
                uint32_t r0_12 = *0x20001c84;
                r2_4 = (r4_2 ^ 1);
                int32_t r1_8;
                if (r0_12 != 0)
                {
                    r1_8 = 0;
                    while (*(0x20001cce + (r1_8 << 1)) != 0x221)
                    {
                        r1_8 = (r1_8 + 1);
                        if (r1_8 >= r0_12)
                        {
                            break;
                        }
                    }
                    if (*(0x20001cce + (r1_8 << 1)) == 0x221)
                    {
                        r3_2 = 1;
                    }
                }
                if ((r0_12 == 0 || (r0_12 != 0 && *(0x20001cce + (r1_8 << 1)) != 0x221)))
                {
                    r3_2 = 0;
                }
                r1_10 = 7;
            }
            if ((r0_5 == 1 || r0_5 == 4))
            {
                sub_1387c(0, r1_10, r2_4, r3_2);
            }
            sub_16930(0x64);
            j_sub_1c900(1);
            sub_1c7ba(0xffffffff);
        }
        *0x20001f26 = 5;
        sub_8746(7, 5, *0x20006064);
    }
    return 0;
}

void sub_1271c()
{
    uint32_t r1 = *0x20001c84;
    if (r1 == 0)
    {
        return;
    }
    int32_t r2 = 0;
    int32_t r0 = 0;
    int32_t r3 = 0xf4240;
    do
    {
        uint32_t r4_3 = *(0x20001cce + (r2 << 1));
        if (4 == (r4_3 >> 8))
        {
            if ((r4_3 << 0x18) == 0)
            {
                r3 = 1;
            }
            else
            {
                r3 = 1;
                do
                {
                    r4_3 = (r4_3 - 1);
                    r3 = (r3 * 0xa);
                } while ((r4_3 & 0xff) != 0);
            }
        }
        else if ((r4_3 >> 8) == 3)
        {
            int32_t r4_2 = (r3 * r4_3);
            if (r4_2 > r0)
            {
                r0 = r4_2;
            }
        }
        r2 = (r2 + 1);
    } while (r2 < r1);
}

int32_t sub_12786()
{
    uint32_t i = *0x20001c84;
    if (i != 0)
    {
        int32_t r1_1 = 0;
        do
        {
            uint32_t r3_2 = *(0x20001cce + (r1_1 << 1));
            if ((r3_2 & 0xffffff00) == 0x8000)
            {
                uint32_t r0_1 = r3_2;
                if (r0_1 <= 0x80)
                {
                    return (&data_2580 * r0_1);
                }
                return (0xff9e5800 + (r0_1 * 0xc350));
            }
            r1_1 = (r1_1 + 1);
        } while (r1_1 < i);
    }
    /* tailcall */
    return sub_1271c();
}

int32_t sub_127d8()
{
    int32_t r2 = *0x20000508;
    int32_t r0 = *0x20000540;
    if ((r0 & 0xff) != 0)
    {
        r2 = r0;
    }
    uint32_t r0_1 = *0x20001c7c;
    int32_t r1_1;
    uint32_t i;
    if (r0_1 != 0)
    {
        r2 = ((r2 & 0xff) | 0x100);
        r1_1 = 0;
        i = r2;
        while (*(0x20001c9e + (r1_1 << 1)) != i)
        {
            r1_1 = (r1_1 + 1);
            if (r1_1 >= r0_1)
            {
                break;
            }
        }
        if (*(0x20001c9e + (r1_1 << 1)) == i)
        {
            sub_17ba2(4, "Found Force DFU DC (0x%04X)\n", r2);
            *0x20001f28 = 2;
            sub_8746(9, 2, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 3;
            sub_114d6(i, sub_1289e);
        }
    }
    if ((r0_1 == 0 || (r0_1 != 0 && *(0x20001c9e + (r1_1 << 1)) != i)))
    {
        sub_17ba2(3, "Didn't find Force DFU DC\n", r2);
        *0x20001f28 = 9;
        sub_8746(9, 9, *0x20006064);
    }
    return 0;
}

int32_t sub_1289e()
{
    uint32_t r0 = *0x20001c84;
    int32_t r1_1;
    if (r0 != 0)
    {
        r1_1 = 0;
        while (*(0x20001cce + (r1_1 << 1)) != &data_8001)
        {
            r1_1 = (r1_1 + 1);
            if (r1_1 >= r0)
            {
                break;
            }
        }
        if (*(0x20001cce + (r1_1 << 1)) == &data_8001)
        {
            char r4_1 = *0x20000508;
            char r5_2 = *0x20000540;
            sub_17ba2(4, "Force DFU action available\n", 0x20001cce);
            *0x20001f28 = 3;
            sub_8746(9, 3, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 3;
            int32_t var_1c = 0x80010000;
            if (r5_2 != 0)
            {
                r4_1 = r5_2;
            }
            sub_1171a((r4_1 | 0x100), 0, &var_1c, 1, sub_12988);
        }
    }
    if ((r0 == 0 || (r0 != 0 && *(0x20001cce + (r1_1 << 1)) != &data_8001)))
    {
        *0x20001f28 = 9;
        sub_8746(9, 9, *0x20006064);
        sub_1671e(2);
        sub_1681c(0x50000001);
    }
    return 0;
}

int32_t sub_12988()
{
    *0x20001f28 = 8;
    sub_8746(9, 8, *0x20006064);
    return 0;
}

int32_t sub_129ae()
{
    uint32_t r0 = *0x20001c7c;
    int32_t r1_1;
    int32_t r2;
    if (r0 != 0)
    {
        r2 = (*0x20000508 | 0x100);
        r1_1 = 0;
        while (*(0x20001c9e + (r1_1 << 1)) != r2)
        {
            r1_1 = (r1_1 + 1);
            if (r1_1 >= r0)
            {
                break;
            }
        }
        if (*(0x20001c9e + (r1_1 << 1)) == r2)
        {
            sub_17ba2(4, "Found Force Diags DC (0x%04X)\n", r2);
            *0x20001f29 = 2;
            sub_8746(0xa, 2, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 4;
            sub_114d6((*0x20000508 | 0x100), sub_12a7a);
        }
    }
    if ((r0 == 0 || (r0 != 0 && *(0x20001c9e + (r1_1 << 1)) != r2)))
    {
        sub_17ba2(3, "Didn't find Force Diags DC\n", r2);
        *0x20001f29 = 9;
        sub_8746(0xa, 9, *0x20006064);
    }
    return 0;
}

int32_t sub_12a7a()
{
    uint32_t r0 = *0x20001c84;
    uint32_t r2_1;
    if (r0 != 0)
    {
        int32_t r1_1 = 0;
        do
        {
            r2_1 = *(0x20001cce + (r1_1 << 1));
            if (r2_1 == 0x8002)
            {
                break;
            }
            r1_1 = (r1_1 + 1);
        } while (r1_1 < r0);
        if (r2_1 == 0x8002)
        {
            sub_17ba2(4, "Force Diags action available\n", r2_1);
            *0x20001f29 = 3;
            sub_8746(0xa, 3, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 4;
            int32_t var_14 = 0x80020000;
            sub_1171a((*0x20000508 | 0x100), 0, &var_14, 1, sub_12b4c);
        }
    }
    if ((r0 == 0 || (r0 != 0 && r2_1 != 0x8002)))
    {
        *0x20001f29 = 9;
        sub_8746(0xa, 9, *0x20006064);
        sub_1671e(2);
        sub_1681c(0x50000001);
    }
    return 0;
}

int32_t sub_12b4c()
{
    *0x20001f29 = 0xa;
    sub_8746(0xa, 0xa, *0x20006064);
    return 0;
}

int32_t sub_12b72()
{
    int32_t r2 = *0x20000508;
    int32_t r0 = *0x20000540;
    if ((r0 & 0xff) != 0)
    {
        r2 = r0;
    }
    uint32_t r0_1 = *0x20001c7c;
    int32_t r1_1;
    uint32_t i;
    if (r0_1 != 0)
    {
        r2 = ((r2 & 0xff) | 0x600);
        r1_1 = 0;
        i = r2;
        while (*(0x20001c9e + (r1_1 << 1)) != i)
        {
            r1_1 = (r1_1 + 1);
            if (r1_1 >= r0_1)
            {
                break;
            }
        }
        if (*(0x20001c9e + (r1_1 << 1)) == i)
        {
            sub_17ba2(4, "Found target USB DC (0x%04X)\n", r2);
            *0x20001f27 = 2;
            sub_8746(8, 2, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 2;
            sub_114d6(i, sub_12c38);
        }
    }
    if ((r0_1 == 0 || (r0_1 != 0 && *(0x20001c9e + (r1_1 << 1)) != i)))
    {
        sub_17ba2(3, "Didn't find USB DC\n", r2);
        *0x20001f27 = 9;
        sub_8746(8, 9, *0x20006064);
    }
    return 0;
}

int32_t sub_12c38()
{
    if (sub_17b96() >= 4)
    {
        sub_123fc(6, *0x20001c84);
    }
    uint32_t r0_1 = *0x20001c84;
    int32_t r1_2;
    if (r0_1 != 0)
    {
        r1_2 = 0;
        while ((*(0x20001cce + (r1_2 << 1)) & 0xffffff02) != 0x102)
        {
            r1_2 = (r1_2 + 1);
            if (r1_2 >= r0_1)
            {
                break;
            }
        }
        if ((*(0x20001cce + (r1_2 << 1)) & 0xffffff02) == 0x102)
        {
            char r4_1 = *0x20000508;
            char r5_1 = *0x20000540;
            sub_17ba2(4, "USB on Mission Pair available\n", 0x20001cce);
            *0x20001f27 = 3;
            sub_8746(8, 3, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 2;
            if (r5_1 != 0)
            {
                r4_1 = r5_1;
            }
            sub_1164c((r4_1 | 0x600), 0x820000, sub_12d28);
        }
    }
    if ((r0_1 == 0 || (r0_1 != 0 && (*(0x20001cce + (r1_2 << 1)) & 0xffffff02) != 0x102)))
    {
        *0x20001f27 = 9;
        sub_8746(8, 9, *0x20006064);
        sub_1671e(2);
        sub_1681c(0x50000001);
    }
    return 0;
}

int32_t sub_12d28()
{
    int32_t r0_1;
    if (sub_16756() != 4)
    {
        r0_1 = 5;
    }
    else
    {
        r0_1 = 6;
    }
    sub_166ee(r0_1);
    *0x20001f27 = 7;
    sub_8746(8, 7, *0x20006064);
    return 0;
}

int32_t sub_12d5e()
{
    uint32_t r0 = *0x20001c7c;
    int32_t r1_2;
    int32_t r2_1;
    if (r0 != 0)
    {
        r2_1 = (*0x20001c9b | 0x100);
        r1_2 = 0;
        while (*(0x20001c9e + (r1_2 << 1)) != r2_1)
        {
            r1_2 = (r1_2 + 1);
            if (r1_2 >= r0)
            {
                break;
            }
        }
        if (*(0x20001c9e + (r1_2 << 1)) == r2_1)
        {
            sub_17ba2(4, "Found target Action DC (0x%04X)\n", r2_1);
            sub_114d6((*0x20001c9b | 0x100), sub_12dd0);
        }
    }
    if ((r0 == 0 || (r0 != 0 && *(0x20001c9e + (r1_2 << 1)) != r2_1)))
    {
        *0x20001c9c = 0xff;
    }
    return 0;
}

int32_t sub_12dd0()
{
    uint32_t r0 = *0x20001c84;
    uint32_t r4_1;
    if (r0 != 0)
    {
        int32_t r2_1 = 0;
        do
        {
            r4_1 = *(0x20001cce + (r2_1 << 1));
            if (((r4_1 & 0xffffff00) == 0x8000 && *0x20001c9a == r4_1))
            {
                break;
            }
            r2_1 = (r2_1 + 1);
        } while (r2_1 < r0);
        if (((r4_1 & 0xffffff00) == 0x8000 && *0x20001c9a == r4_1))
        {
            sub_17ba2(4, "Requested action available\n", r2_1);
            int32_t var_1c = (0x80000000 | (*0x20001c9a << 0x10));
            sub_1171a((*0x20001c9b | 0x100), 0, &var_1c, 1, sub_11c0e);
        }
    }
    if ((r0 == 0 || (r0 != 0 && (!((r4_1 & 0xffffff00) == 0x8000 && *0x20001c9a == r4_1)))))
    {
        *0x20001c9c = 0xff;
    }
    return 0;
}

uint32_t sub_12e68()
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = (*0x20001c94 - 1);
    if (r0_1 <= 3)
    {
        void* const r0_2;
        uint32_t r0_5;
        uint32_t r0_6;
        uint32_t r1;
        int32_t r1_2;
        void* const r1_3;
        uint32_t r2;
        void* const r2_2;
        if (jump_table_12e84[r0_1] == 2)
        {
            r0_1 = *0x20001f26;
            if (r0_1 == 3)
            {
                r2_2 = sub_124f0;
                r1_2 = (0x800000 | (*0x20001c98 << 0x10));
                r0_5 = *0x20000508;
            }
            if (r0_1 == 2)
            {
                r1_3 = sub_121f6;
                r0_6 = *0x20000508;
            }
            if (((r0_1 != 3 && r0_1 != 2) && r0_1 == 1))
            {
                r0_2 = sub_12122;
            label_12f38:
                /* tailcall */
                return sub_11384(r0_2, r1, r2);
            }
        }
        if (jump_table_12e84[r0_1] == 0x13)
        {
            r1 = *0x20001f27;
            r0_1 = *0x20000508;
            r2 = *0x20000540;
            if ((r2 & 0xff) != 0)
            {
                r0_1 = r2;
            }
            if (r1 == 3)
            {
                r0_5 = ((r0_1 & 0xff) | 0x600);
                r2_2 = sub_12d28;
                r1_2 = 0x820000;
            }
        }
        if (((jump_table_12e84[r0_1] == 2 && r0_1 == 3) || (jump_table_12e84[r0_1] == 0x13 && r1 == 3)))
        {
            /* tailcall */
            return sub_1164c(r0_5, r1_2, r2_2);
        }
        if (jump_table_12e84[r0_1] == 0x13)
        {
            if (r1 == 2)
            {
                r0_6 = ((r0_1 & 0xff) | 0x600);
                r1_3 = sub_12c38;
            }
            if (((r1 != 3 && r1 != 2) && r1 == 1))
            {
                r0_2 = sub_12b72;
                goto label_12f38;
            }
        }
        void* const r1_5;
        int32_t* r2_4;
        if (jump_table_12e84[r0_1] == 0x2e)
        {
            r1 = *0x20001f28;
            r0_1 = *0x20000508;
            r2 = *0x20000540;
            if ((r2 & 0xff) != 0)
            {
                r0_1 = r2;
            }
            if (r1 == 3)
            {
                int32_t var_c;
                r2_4 = &var_c;
                var_c = 0x80010000;
                r1_5 = sub_12988;
            }
            if (r1 == 2)
            {
                r0_6 = ((r0_1 & 0xff) | 0x100);
                r1_3 = sub_1289e;
            }
            if (((r1 != 3 && r1 != 2) && r1 == 1))
            {
                r0_2 = sub_127d8;
                goto label_12f38;
            }
        }
        if (jump_table_12e84[r0_1] == 0x48)
        {
            r0_1 = *0x20001f29;
            if (r0_1 == 3)
            {
                int32_t var_10;
                r2_4 = &var_10;
                r1_5 = sub_12b4c;
                var_10 = 0x80020000;
                r0_1 = *0x20000508;
            }
        }
        if (((jump_table_12e84[r0_1] == 0x48 && r0_1 == 3) || (jump_table_12e84[r0_1] == 0x2e && r1 == 3)))
        {
            r0_1 = sub_1171a(((r0_1 & 0xff) | 0x100), 0, r2_4, 1, r1_5);
        }
        if ((jump_table_12e84[r0_1] == 0x48 && r0_1 == 2))
        {
            r0_6 = (*0x20000508 | 0x100);
            r1_3 = sub_12a7a;
        }
        if (((((jump_table_12e84[r0_1] == 2 && r0_1 == 2) || (jump_table_12e84[r0_1] == 0x48 && r0_1 == 2)) || (jump_table_12e84[r0_1] == 0x13 && r1 == 2)) || (jump_table_12e84[r0_1] == 0x2e && r1 == 2)))
        {
            /* tailcall */
            return sub_114d6(r0_6, r1_3, r2);
        }
        if ((((jump_table_12e84[r0_1] == 0x48 && r0_1 != 3) && r0_1 != 2) && r0_1 == 1))
        {
            r0_2 = sub_129ae;
            goto label_12f38;
        }
    }
    return r0_1;
}

int32_t sub_1301c()
{
    void* const var_10 = sub_13060;
    int32_t var_c = 0;
    void* const var_18 = sub_130a6;
    int32_t var_14 = 0;
    void* const var_20 = sub_130f8;
    int32_t var_1c = 0;
    return sub_1103a(&var_10, &var_18, &var_20);
}

int32_t sub_13060(int32_t arg1, int32_t arg2)
{
    int32_t i = 1;
    *0x20001d11 = 1;
    do
    {
        if (*(arg2 + (i << 2)) == 4)
        {
            int32_t r2 = sub_17ba2(4, "IECS Protocol available over UVD…", r2);
            *0x20001d10 = i;
        }
        i = (i + 1);
    } while (i != 8);
    return 0;
}

int32_t sub_130a6(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t* arg5, char* arg6)
{
    int32_t r0_1;
    void* const r1_1;
    char r1_3;
    uint32_t r3;
    if (arg2 == 1)
    {
        if (arg4 == 0)
        {
        label_130d2:
            r0_1 = 0xffffffff;
            r1_3 = 0;
        }
        else
        {
            r3 = *arg6;
            if ((r3 + arg3) > 8)
            {
                goto label_130d2;
            }
            r1_1 = &data_21d30;
        }
    }
    else
    {
        if (arg2 != 0)
        {
            goto label_130d2;
        }
        if (arg4 == 0)
        {
            goto label_130d2;
        }
        r3 = *arg6;
        if ((r3 + arg3) > 8)
        {
            goto label_130d2;
        }
        r1_1 = &data_21d28;
    }
    if (((arg2 == 1 && arg4 != 0) || arg2 != 1))
    {
        sub_1ff48(arg5, (r1_1 + arg3), r3);
        r1_3 = ((*arg6 + 3) & 0xfc);
        r0_1 = 0;
    }
    *arg6 = r1_3;
    return r0_1;
}

int32_t sub_130f8(int32_t arg1, char* arg2, int32_t arg3, int32_t* arg4, uint8_t* arg5)
{
    int32_t* r1_3;
    uint32_t r5_1;
    uint32_t r6_2;
    if ((sub_1db5c(arg1) == 1 && *arg2 == 1))
    {
        if ((arg3 - 1) > 3)
        {
            goto label_1328a;
        }
        uint32_t r0_7;
        int32_t r0_30;
        switch (arg3)
        {
            case 1:
            {
                uint32_t r0_3 = *arg5;
                uint32_t r2 = *(arg2 + 0xa);
                uint32_t r6_1 = *0x20001d54;
                if ((r0_3 + r6_1) >= r2)
                {
                    r0_3 = (r2 - r6_1);
                }
                uint32_t r4_1 = r0_3;
                sub_1ff48((0x20001d14 + r6_1), arg4, r4_1);
                int16_t r0_5 = (r4_1 + r6_1);
                *0x20001d54 = r0_5;
                r0_7 = (*(arg2 + 0xa) - r0_5);
                if (r0_7 >= 0x18)
                {
                    r0_7 = 0x18;
                }
                break;
            }
            case 2:
            {
                uint32_t r0_13 = *(arg2 + 0xa);
                uint32_t r1_4 = *0x20001d58;
                if (r1_4 > r0_13)
                {
                    r1_4 = r0_13;
                }
                r6_2 = *0x20001d54;
                uint32_t r0_14 = r1_4;
                if (r0_14 <= r6_2)
                {
                    goto label_1328a;
                }
                r5_1 = (r0_14 - r6_2);
                r1_3 = (0x20001d14 + r6_2);
                if (r5_1 >= 0x18)
                {
                    r5_1 = 0x18;
                }
                goto label_131ee;
            }
            case 3:
            {
                *0x20001d54 = 0;
                if (*(arg2 + 4) != 0)
                {
                    *0x20001d58 = 0x40;
                    sub_18b7a(*(arg2 + 0xc), 0x20001d14, 0x20001d58);
                    uint32_t r0_19 = *(arg2 + 0xa);
                    uint32_t r2_3 = *0x20001d58;
                    uint32_t r6_3 = *0x20001d54;
                    if (r2_3 > r0_19)
                    {
                        r2_3 = r0_19;
                    }
                    uint32_t r4_3 = r2_3;
                    if (r4_3 >= 0x18)
                    {
                        r4_3 = 0x18;
                    }
                    sub_1ff48(arg4, (0x20001d14 + r6_3), r4_3);
                    *0x20001d54 = (r4_3 + r6_3);
                    *arg5 = r4_3;
                    goto label_13300;
                }
                r0_7 = *(arg2 + 0xa);
                if (r0_7 >= 0x18)
                {
                    r0_7 = 0x18;
                }
                break;
            }
            case 4:
            {
                if (*(arg2 + 4) != 0)
                {
                    goto label_1328a;
                }
            label_13282:
                *0x20001d58 = *0x20001d54;
                sub_18bc6(*(arg2 + 0xc), 0x20001d14, 0x20001d58);
            label_1328a:
                r0_30 = 0;
                break;
            }
        }
        if (((arg3 == 1 || arg3 == 3) || arg3 == 4))
        {
            return r0_30;
        }
        if ((arg3 == 1 || arg3 == 3))
        {
            *arg5 = r0_7;
        label_13300:
        }
    }
    if (sub_1db5c(arg1) != 0)
    {
        goto label_1328a;
    }
    if (arg2[1] != 1)
    {
        goto label_1328a;
    }
    if ((arg3 - 1) > 3)
    {
        goto label_1328a;
    }
    switch (*(arg3 + 0x1318d))
    {
        case 2:
        {
            r5_1 = *arg5;
            r6_2 = *0x20001d54;
            r1_3 = (0x20001d14 + r6_2);
            if ((r5_1 + r6_2) >= 0x40)
            {
                r5_1 = (0x40 - r6_2);
            }
        label_131ee:
            uint32_t r4_2 = r5_1;
            sub_1ff48(arg4, r1_3, r4_2);
            *0x20001d54 = (r4_2 + r6_2);
            *arg5 = r5_1;
            goto label_13300;
        }
        case 0x80:
        {
            uint32_t r1_6 = *arg5;
            uint32_t r6_4 = *0x20001d54;
            if ((r1_6 + r6_4) >= 0x40)
            {
                r1_6 = (0x40 - r6_4);
            }
            uint32_t r4_4 = r1_6;
            sub_1ff48((0x20001d14 + r6_4), arg4, r4_4);
            *0x20001d54 = (r4_4 + r6_4);
            goto label_13300;
        }
        case 0x99:
        {
            *0x20001d54 = 0;
            if (*(arg2 + 4) == 0)
            {
                *0x20001d58 = 0x40;
                sub_18b7a(*(arg2 + 0xc), 0x20001d14, 0x20001d58);
            }
            goto label_13300;
        }
        case 0xaf:
        {
            if (*(arg2 + 4) != 1)
            {
                goto label_1328a;
            }
            goto label_13282;
        }
    }
}

void sub_1330a()
{
    *0x20001d10 = 0;
}

int32_t sub_13318()
{
    sub_cc40(0, 1, 0x5ac, 0, 3, nullptr, 0, 0xb085);  {  // {"@FIF"}}
    int32_t r5 = (0xfffff830 - *0x20006064);
    uint32_t r0_3;
    if ((*0x20006064 + r5) <= 0xffffffff)
    {
        do
        {
            r0_3 = sub_b922();
            if (r0_3 != 0)
            {
                break;
            }
            sub_16930(1);
        } while ((*0x20006064 + r5) < 0);
    }
    int32_t r0_6;
    if (((*0x20006064 + r5) > 0xffffffff || ((*0x20006064 + r5) <= 0xffffffff && r0_3 == 0)))
    {
        r0_6 = 0xffffffff;
    }
    if (((*0x20006064 + r5) <= 0xffffffff && r0_3 != 0))
    {
        r0_6 = 0;
    }
    return r0_6;
}

int32_t sub_1337e()
{
    sub_11154(0);
    *0x20001d11 = 0;
    int32_t r6 = (0xfffff830 - *0x20006064);
    if ((*0x20006064 + r6) <= 0xffffffff)
    {
        while (*0x20001d11 == 0)
        {
            sub_16930(1);
            if ((*0x20006064 + r6) >= 0)
            {
                break;
            }
        }
    }
    int32_t r0_6;
    if (((*0x20006064 + r6) > 0xffffffff || ((*0x20006064 + r6) <= 0xffffffff && *0x20001d11 == 0)))
    {
        r0_6 = 0xffffffff;
    }
    if (((*0x20006064 + r6) <= 0xffffffff && *0x20001d11 != 0))
    {
        r0_6 = 0;
    }
    return r0_6;
}

int32_t sub_133d6(int32_t arg1, int32_t* arg2, uint8_t* arg3)
{
    int32_t r0_3;
    if (*0x20001d10 == 0)
    {
        r0_3 = 0xffffffff;
    }
    else
    {
        char var_48;
        if (sub_1db5c(0) != 1)
        {
            *0x20001d12 = 0;
            char var_47_2 = 1;
            int32_t var_44_2 = 1;
            char var_40_2 = 0;
            int16_t var_3e_2 = 0x40;
            int32_t var_2c_2 = 0;
            int32_t var_34_2 = 0;
            int32_t var_30_2 = 0;
            int32_t var_3c_2 = arg1;
            int32_t var_38_2 = 0;
            char var_28_2 = 1;
            int16_t var_26_2 = 0;
            void* const var_24_2 = sub_134f0;
            var_48 = *0x20001d10;
        }
        else
        {
            *0x20001d12 = 0;
            var_48 = 1;
            int32_t var_44_1 = 0;
            char var_40_1 = 0;
            int16_t var_3e_1 = 0x40;
            int32_t var_3c_1 = arg1;
            int32_t var_38_1 = 0;
            int32_t var_2c_1 = 0;
            int32_t var_34_1 = 0;
            int32_t var_30_1 = 0;
            char var_28_1 = 1;
            int16_t var_26_1 = 0;
            void* const var_24_1 = sub_134f0;
            char var_47_1 = *0x20001d10;
        }
        sub_111bc(0, &var_48);
        int32_t r5_1 = (0xfffff830 - *0x20006064);
        if ((*0x20006064 + r5_1) <= 0xffffffff)
        {
            while (*0x20001d12 == 0)
            {
                sub_16930(1);
                if ((*0x20006064 + r5_1) >= 0)
                {
                    break;
                }
            }
        }
        if (((*0x20006064 + r5_1) > 0xffffffff || ((*0x20006064 + r5_1) <= 0xffffffff && *0x20001d12 == 0)))
        {
            r0_3 = 0xfffffffe;
        }
        if (((*0x20006064 + r5_1) <= 0xffffffff && *0x20001d12 != 0))
        {
            uint32_t r2 = *0x20001d13;
            *arg3 = r2;
            sub_1ff48(arg2, 0x20001d14, r2);
            r0_3 = 0;
        }
    }
    return r0_3;
}

int32_t sub_134f0(int32_t arg1, char* arg2, int32_t arg3, int32_t* arg4, uint8_t* arg5)
{
    uint32_t r0 = sub_1db5c(arg1);
    int32_t r0_2;
    int32_t* r0_3;
    uint32_t r1;
    uint32_t r2;
    uint32_t r4_1;
    uint32_t r6_1;
    if ((r0 != 1 || (r0 == 1 && *arg2 != 1)))
    {
        if (sub_1db5c(arg1) != 0)
        {
            goto label_13690;
        }
        if (arg2[1] != 1)
        {
            goto label_13690;
        }
        if ((arg3 - 1) > 3)
        {
            goto label_13690;
        }
        switch (*(arg3 + 0x1355d))
        {
            case 2:
            {
                r4_1 = *arg5;
                uint32_t r1_1 = *(arg2 + 0xa);
                uint32_t r6_2 = *0x20001d5c;
                if ((r4_1 + r6_2) >= r1_1)
                {
                    r4_1 = (r1_1 - r6_2);
                }
                uint32_t r5_1 = r4_1;
                sub_1ff48(arg4, (0x20001d14 + r6_2), r5_1);
                *0x20001d5c = (r5_1 + r6_2);
            label_135fa:
                *arg5 = r4_1;
                goto label_1369a;
            }
            case 0x62:
            {
                r1 = *arg5;
                if (r1 == 0)
                {
                    goto label_13690;
                }
                r6_1 = *0x20001d5c;
                r0_3 = (0x20001d14 + r6_1);
                r2 = (r6_1 + r1);
                break;
            }
            case 0x82:
            {
                *0x20001d5c = 0;
            label_1369a:
                r0_2 = 1;
                goto label_136a0;
            }
            case 0x89:
            {
                *0x20001d12 = 1;
                *0x20001d13 = *0x20001d5c;
            label_13690:
                r0_2 = 0;
                goto label_136a0;
            }
        }
    }
    int32_t r0_18;
    if ((r0 == 1 && *arg2 == 1))
    {
        r0_2 = (arg3 - 1);
        if (r0_2 > 3)
        {
            goto label_13690;
        }
        switch (jump_table_1351e[r0_2])
        {
            case 2:
            {
                r1 = *arg5;
                r6_1 = *0x20001d5c;
                r0_3 = (0x20001d14 + r6_1);
                r2 = (r1 + r6_1);
                break;
            }
            case 0x3d:
            {
                uint32_t r6_3 = *0x20001d5c;
                uint32_t r5_2 = (*(arg2 + 0xa) - r6_3);
                if (r5_2 >= 0x18)
                {
                    r5_2 = 0x18;
                }
                uint32_t r4_2 = r5_2;
                sub_1ff48(arg4, (0x20001d14 + r6_3), r4_2);
                *0x20001d5c = (r4_2 + r6_3);
                *arg5 = r5_2;
                goto label_1369a;
            }
            case 0x58:
            {
                *0x20001d5c = 0;
                if (*(arg2 + 4) == 0)
                {
                    r0_18 = 0x18;
                label_13696:
                    *arg5 = r0_18;
                    goto label_1369a;
                }
                r4_1 = *(arg2 + 0xa);
                if (r4_1 >= 0x18)
                {
                    r4_1 = 0x18;
                }
                sub_1ff48(arg4, 0x20001d14, r4_1);
                *0x20001d5c = r4_1;
                goto label_135fa;
            }
            case 0x71:
            {
                *0x20001d12 = 1;
                *0x20001d13 = *0x20001d5c;
            label_136a0:
                return r0_2;
                break;
            }
        }
    }
    if (r2 < 0x40)
    {
        goto label_13646;
    }
    r1 = (0x40 - r6_1);
label_13646:
    uint32_t r4_3 = r1;
    sub_1ff48(r0_3, arg4, r4_3);
    int16_t r0_16 = (r4_3 + r6_1);
    *0x20001d5c = r0_16;
    r0_18 = (0x40 - r0_16);
    if (r0_18 >= 0x18)
    {
        r0_18 = 0x18;
    }
    goto label_13696;
}

int32_t sub_136a2(int32_t arg1, int32_t* arg2, int32_t arg3)
{
    int32_t r4 = arg3;
    int32_t r0_3;
    if (*0x20001d10 == 0)
    {
        r0_3 = 0xffffffff;
    }
    else
    {
        if (r4 >= 0x40)
        {
            r4 = 0x40;
        }
        char var_48;
        if (sub_1db5c(0) != 1)
        {
            *0x20001d12 = 0;
            *0x20001d13 = r4;
            char var_47_2 = 1;
            int32_t var_44_2 = 0;
            char var_40_2 = 0;
            int16_t var_3e_2 = r4;
            int32_t var_2c_2 = 0;
            int32_t var_34_2 = 0;
            int32_t var_30_2 = 0;
            int32_t var_3c_2 = arg1;
            int32_t var_38_2 = 0;
            char var_28_2 = 1;
            int16_t var_26_2 = 0;
            void* const var_24_2 = sub_134f0;
            var_48 = *0x20001d10;
        }
        else
        {
            char var_47_1 = *0x20001d10;
            *0x20001d12 = 0;
            *0x20001d13 = r4;
            var_48 = 1;
            int32_t var_44_1 = 1;
            char var_40_1 = 0;
            int16_t var_3e_1 = r4;
            int32_t var_3c_1 = arg1;
            int32_t var_38_1 = 0;
            int32_t var_2c_1 = 0;
            int32_t var_34_1 = 0;
            int32_t var_30_1 = 0;
            char var_28_1 = 1;
            int16_t var_26_1 = 0;
            void* const var_24_1 = sub_134f0;
        }
        sub_1ff48(0x20001d14, arg2, r4);
        sub_111bc(0, &var_48);
        int32_t r5_1 = (0xfffff830 - *0x20006064);
        if ((*0x20006064 + r5_1) <= 0xffffffff)
        {
            while (*0x20001d12 == 0)
            {
                sub_16930(1);
                if ((*0x20006064 + r5_1) >= 0)
                {
                    break;
                }
            }
        }
        if (((*0x20006064 + r5_1) > 0xffffffff || ((*0x20006064 + r5_1) <= 0xffffffff && *0x20001d12 == 0)))
        {
            r0_3 = 0xfffffffe;
        }
        if (((*0x20006064 + r5_1) <= 0xffffffff && *0x20001d12 != 0))
        {
            r0_3 = 0;
        }
    }
    return r0_3;
}

int32_t sub_137d0(int32_t arg1)
{
    int32_t r2;
    if (arg1 == 2)
    {
        sub_1818c(0x40020c00, 0x1000);
        sub_18190(0x40020c00, 0x800);
        sub_17ba2(4, "Switching to Chargethru path\n", r2);
    }
    else
    {
        int16_t r1_1;
        if (arg1 != 1)
        {
            sub_18190(0x40020c00, 0x1000);
            r1_1 = 0x800;
        }
        else
        {
            sub_1818c(0x40020c00, 0x800);
            sub_17ba2(4, "Switching to 5V path\n", r2);
            r1_1 = 0x1000;
        }
        sub_18190(0x40020c00, r1_1);
    }
    *0x20001d9a = ((sub_18194(0x40020c00, 0x800) & 3) | (*0x20001d9a & 0xfc));
    int32_t r0_3 = sub_18194(0x40020c00, 0x1000);
    char r1_4 = *0x20001d9a;
    *0x20001d9a = (((r1_4 | (r0_3 << 1)) & 3) | (r1_4 & 0xfc));
    return 0;
}

int32_t sub_1387c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r5 = arg1;
    int32_t r4_4;
    if (*0x20001ee8 > 4)
    {
        sub_1818c(0x40021000, 0x800);
        sub_1818c(0x40021000, 0x2000);
        sub_1818c(0x40021000, 0x8000);
        if (r5 != 0)
        {
            if (r5 != 1)
            {
                r5 = 0;
            }
            sub_18182(0x40021000, 0x1000, r5);
        }
        if (arg4 != 2)
        {
            sub_18182(0x40020800, 2, arg4);
            sub_196cc(0xa);
        }
        if (arg3 != 2)
        {
            int32_t r2_8 = 0;
            if (arg3 != 1)
            {
                r2_8 = 1;
            }
            sub_18182(0x40020c00, 0x8000, r2_8);
            sub_18190(0x40021000, 0x8000);
        }
        if (arg2 != 0)
        {
            sub_18182(0x40021000, sub_4000, (arg2 & 4));
            sub_18182(0x40021000, 0x2000, (1 & (!(arg2 >> 1))));
            sub_18182(0x40021000, 0x800, (1 & (!arg2)));
        }
        int32_t r1_7 = 0;
        if (sub_18194(0x40021000, 0x1000) == 0)
        {
            r1_7 = 1;
        }
        *0x20001d9a = ((*0x20001d9a & 0xfb) | (r1_7 << 2));
        *0x20001d9a = ((8 & (sub_18194(0x40020800, 2) << 3)) | (*0x20001d9a & 0xf7));
        int32_t r0_21 = sub_18194(0x40021000, 0x8000);
        int32_t r5_1 = (r0_21 << 1);
        if (sub_18194(0x40020c00, 0x8000) == 0)
        {
            r5_1 = (1 | (r0_21 << 1));
        }
        *0x20001d9a = (((*0x20001d9a & 0xcf) & 0xcf) | ((r5_1 & 3) << 4));
        int32_t r0_26 = sub_18194(0x40021000, sub_4000);
        r4_4 = ((sub_18194(0x40021000, 0x2000) << 1) | (r0_26 << 2));
        if (sub_18194(0x40021000, 0x800) == 0)
        {
            r4_4 = (r4_4 | 1);
        }
    }
    else
    {
        sub_18190(0x40021000, 0x800);
        sub_1818c(0x40021000, 0x2000);
        sub_1818c(0x40021000, 0x8000);
        if (r5 != 0)
        {
            int32_t r2 = 0;
            if (r5 != 1)
            {
                r2 = 1;
            }
            sub_18182(0x40021000, 0x1000, r2);
        }
        if (arg4 != 2)
        {
            sub_18182(0x40020800, 2, arg4);
            sub_196cc(0xa);
        }
        if (arg3 != 2)
        {
            sub_18182(0x40020c00, 0x8000, arg3);
            sub_18190(0x40021000, 0x8000);
        }
        if (arg2 != 0)
        {
            sub_18182(0x40021000, sub_4000, (arg2 & 4));
            sub_18182(0x40021000, 0x2000, (1 & (!(arg2 >> 1))));
            sub_18182(0x40021000, 0x800, (arg2 & 1));
        }
        *0x20001d9a = ((4 & (sub_18194(0x40021000, 0x1000) << 2)) | (*0x20001d9a & 0xfb));
        *0x20001d9a = ((8 & (sub_18194(0x40020800, 2) << 3)) | (*0x20001d9a & 0xf7));
        int32_t r0_7 = sub_18194(0x40021000, 0x8000);
        int32_t r0_8 = sub_18194(0x40020c00, 0x8000);
        *0x20001d9a = (((*0x20001d9a & 0xcf) & 0xcf) | (((r0_8 | (r0_7 << 1)) & 3) << 4));
        int32_t r0_10 = sub_18194(0x40021000, sub_4000);
        r4_4 = (((sub_18194(0x40021000, 0x2000) << 1) | (r0_10 << 2)) | sub_18194(0x40021000, 0x800));
    }
    *0x20001d9b = ((r4_4 & 7) | (*0x20001d9b & 0xf8));
    return 0;
}

int32_t sub_13b32(int32_t arg1)
{
    if (arg1 != 1)
    {
        sub_1818c(0x40021000, 8);
    }
    else
    {
        sub_18190(0x40021000, 8);
    }
    int32_t r0 = sub_18194(0x40021000, 8);
    int32_t r0_2 = (sub_18194(0x40021000, 0x10) | (r0 << 1));
    *0x20001d9b = (((*0x20001d9b & 0xe7) & 0xe7) | ((r0_2 & 3) << 3));
    return 0;
}

int32_t sub_13b82(int32_t arg1)
{
    if (arg1 != 1)
    {
        sub_1818c(0x40020c00, 8);
    }
    else
    {
        sub_18190(0x40020c00, 8);
    }
    int32_t r0 = sub_18194(0x40020c00, 8);
    int32_t r0_2 = (sub_18194(0x40020c00, 0x10) | (r0 << 1));
    *0x20001d9b = (((*0x20001d9b & 0x9f) & 0x9f) | ((r0_2 & 3) << 5));
    return 0;
}

int32_t sub_13bd2(int32_t arg1)
{
    if (arg1 == 0)
    {
        sub_18190(0x40021000, 0x10);
    }
    else
    {
        sub_1818c(0x40021000, 0x10);
    }
    int32_t r0 = sub_18194(0x40021000, 8);
    int32_t r0_2 = (sub_18194(0x40021000, 0x10) | (r0 << 1));
    *0x20001d9b = (((*0x20001d9b & 0xe7) & 0xe7) | ((r0_2 & 3) << 3));
    return 0;
}

int32_t sub_13c22(int32_t arg1)
{
    if (arg1 == 0)
    {
        sub_18190(0x40020c00, 0x10);
    }
    else
    {
        sub_1818c(0x40020c00, 0x10);
    }
    int32_t r0 = sub_18194(0x40020c00, 8);
    int32_t r0_2 = (sub_18194(0x40020c00, 0x10) | (r0 << 1));
    *0x20001d9b = (((*0x20001d9b & 0x9f) & 0x9f) | ((r0_2 & 3) << 5));
    return 0;
}

int32_t sub_13c74()
{
    sub_18b3c(0x20000544, 0x79);
    sub_18c56(0x2000090c, 0x39);
    int32_t r4 = *0x20004fd8;
    int32_t r5 = *0x20004fdc;
    int32_t r6 = *0x20004fe0;
    *0x20001da0 = *0x20004fd4;
    *0x20001da4 = r4;
    *0x20001da8 = r5;
    *0x20001dac = r6;
    int32_t r1 = *0x20004fe8;
    int32_t r3_1 = *0x20004fec;
    int32_t r4_1 = *0x20004ff0;
    int32_t r5_1 = *0x20004ff4;
    int32_t r6_1 = *0x20004ff8;
    *0x20001eb0 = *0x20004fe4;
    *0x20001eb4 = r1;
    *0x20001eb8 = r3_1;
    *0x20001ebc = r4_1;
    *0x20001ec0 = r5_1;
    *0x20001ec4 = r6_1;
    sub_1ff48(0x20001ec8, 0x20004ffc, 6);
    int32_t r6_2 = 0;
    sub_17d58(0, 0x20001d70, 4);
    sub_17d58(4, 0x20001ece, 1);
    sub_17d58(8, 0x20001ecf, 4);
    while (*(0x20001ece + r6_2) == 0xff)
    {
        r6_2 = (r6_2 + 1);
        if (r6_2 > 4)
        {
            sub_1f886(0x20001ece, 0, 5);
            sub_17e1c(4, 0x20001ece, 1);
            sub_17e1c(8, 0x20001ecf, 4);
            break;
        }
    }
    int32_t i = 0;
    sub_1f886(0x20001ed3, 0, 6);
    *0x20001edc = 0;
    *0x20001ee0 = 0;
    *0x20001ee4 = 0;
    *0x20001ee8 = sub_84c4();
    int32_t r2 = *0x20001eb4;
    int32_t r3_2 = *0x20001eb8;
    int32_t r4_2 = *0x20001ebc;
    int32_t r5_2 = *0x20001ec0;
    int32_t r6_3 = *0x20001ec4;
    *0x20001eec = *0x20001eb0;
    *0x20001ef0 = r2;
    *0x20001ef4 = r3_2;
    *0x20001ef8 = r4_2;
    *0x20001efc = r5_2;
    *0x20001f00 = r6_3;
    sub_882e();
    sub_87c0(0x20001f04, 0x20001f3d);
    void var_74;
    int32_t r0_5 = sub_885c(&var_74);
    do
    {
        int32_t r1_2 = *(&var_74 + (i << 2));
        if (r1_2 != 0xffffffff)
        {
            *(0x200004f0 + (i << 2)) = r1_2;
        }
        i = (i + 1);
    } while (i != 0x15);
    *0x20001d7c = 1;
    return r0_5;
}

int32_t sub_13df0()
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1 = sub_18c2e(*0x20001d60);
    if (r0_1 == 0)
    {
        return r0_1;
    }
    *0x20001d64 = 0;
    *0x20001d60;
    uint32_t var_14 = (*0x20001d60 >> 0x18);
    int32_t var_18 = ((*0x20001d60 >> 0x10) & 0xff);
    sub_17ba2(1, "Execute Command: %c%c%c%c\n", *0x20001d60);
    int32_t r0_4;
    int32_t r2_3;
    r0_4 = sub_18c6c(*0x20001d60, *0x20001d68, 0x20001db0);
    *0x20001d60 = r0_4;
    char const* const r1_3;
    if (*0x20001d60 == 0)
    {
        r1_3 = "Command Successful\n";
    }
    else
    {
        if (*0x20001d60 == 0x52524521)
        {
            /* tailcall */
            return sub_17ba2(1, "Command Failed: 0x%08X\n", *0x20001d78);
        }
        r1_3 = "Unknown Command\n";
    }
    /* tailcall */
    return sub_17ba2(1, r1_3, r2_3);
}

int32_t sub_13ea4() __noreturn
{
    *0x40023840 = (*0x40023840 | 0x10000000);
    *0x40007000 = (*0x40007000 | 0x100);
    *0x40023840 = (*0x40023840 & 0xefffffff);
    *0x40002854 = 0;
    sub_163e0(*0x20000500, 0);
    sub_196cc(0x64);
    __dsb_SY();
    *0xe000ed0c = ((*0xe000ed0c & 0x700) | 0x5fa0004);
    __dsb_SY();
    while (true)
    {
        /* nop */
    }
}

int32_t sub_13f12(int32_t arg1) __noreturn
{
    sub_163e0(*0x20000500);
    sub_196cc(0x64);
    if (arg1 == 1)
    {
        sub_178a0();
        /* no return */
    }
    *0x40023840 = (*0x40023840 | 0x10000000);
    *0x40007000 = (*0x40007000 | 0x100);
    *0x40023840 = (*0x40023840 & 0xefffffff);
    *0x40002850 = 1;
    __dsb_SY();
    *0xe000ed0c = ((*0xe000ed0c & 0x700) | 0x5fa0004);
    __dsb_SY();
    while (true)
    {
        /* nop */
    }
}

int32_t sub_13f8e()
{
    if (*0x20001d6c != *0x20001da8)
    {
        return 0;
    }
    /* no return */
}

int32_t sub_13faa() __noreturn
{
    char var_9 = 0x5a;
    sub_196cc(0x64);
    sub_17e1c(7, &var_9, 1);
    __dsb_SY();
    *0xe000ed0c = ((*0xe000ed0c & 0x700) | 0x5fa0004);
    __dsb_SY();
    while (true)
    {
        /* nop */
    }
}

int32_t sub_13fee()
{
    int32_t var_28 = 0;
    int32_t r2;
    sub_17ba2(2, "Checking I2C comms to USB Hub...…", sub_17ba2(2, "Starting Self Test\n", r2));
    int32_t r0;
    int32_t r2_3;
    r0 = sub_182b6(0x40005400, 0x2c, &var_28, 1, nullptr, 0);
    int32_t r2_4;
    int32_t r9;
    if (r0 == 0)
    {
        r2_4 = sub_17c48(2, "Passed\n", r2_3);
        r9 = 0;
    }
    else
    {
        r2_4 = sub_17c48(2, "Failed\n", r2_3);
        r9 = 1;
    }
    sub_17ba2(2, "Checking I2C comms to EEPROM... ", r2_4);
    int32_t r0_1;
    int32_t r2_5;
    r0_1 = sub_182b6(0x40005400, 0x50, nullptr, 0, nullptr, 0);
    int32_t r2_6;
    if (r0_1 == 0)
    {
        r2_6 = sub_17c48(2, "Passed\n", r2_5);
    }
    else
    {
        r2_6 = sub_17c48(2, "Failed\n", r2_5);
        r9 = (r9 | 2);
    }
    sub_17ba2(2, "Checking SPI connections to PD P…", r2_6);
    sub_fba2(0);
    sub_fb0e();
    *0x20001f3f = 1;
    int32_t r5 = *0x20006064;
    int32_t r2_7 = sub_16930(1);
    int32_t r0_4;
    if ((*0x20006064 + (0xfffff63c - r5)) <= 0xffffffff)
    {
        do
        {
            r0_4 = sub_b8e4();
            if (r0_4 != 0)
            {
                break;
            }
            r2_7 = sub_16930(1);
        } while ((*0x20006064 + (0xfffff63c - r5)) < 0);
    }
    if (((*0x20006064 + (0xfffff63c - r5)) > 0xffffffff || ((*0x20006064 + (0xfffff63c - r5)) <= 0xffffffff && r0_4 == 0)))
    {
        sub_17c48(2, "Failed\n", r2_7);
        r9 = (r9 | 4);
    }
    if (((*0x20006064 + (0xfffff63c - r5)) <= 0xffffffff && r0_4 != 0))
    {
        sub_17c48(2, "Passed\n", 0x5ac);  {  // {"@FIF"}}
    }
    *0x20001f3f = 0;
    int32_t r0_7;
    int32_t r2_8;
    r0_7 = sub_b8e4();
    if (r0_7 != 0)
    {
        sub_17ba2(2, "Checking VBus Power Output and M…", 0x5ac);  {  // {"@FIF"}}
        int32_t r0_8 = sub_17798(0x40012000, 0xe, 0xa);
        int32_t r0_9;
        int32_t r2_9;
        r0_9 = sub_17798(0x40012000, 0xf, 0xa);
        char const* const r1_5;
        uint32_t r2_11;
        int32_t r2_12;
        if ((r0_9 | r0_8) <= 0xffffffff)
        {
            sub_17c48(2, "Failed\n", r2_9);
            r2_11 = r0_8;
            r1_5 = "Target Result: %08X, Charge Resu…";
        }
        else
        {
            int32_t r0_13;
            int32_t r1_1;
            r0_13 = sub_1f41c(sub_1f518(r0_8));
            int32_t r0_14;
            int32_t r1_2;
            r0_14 = sub_1f5e0(r0_13, r1_1, 0xa3d70a3d, 0x40183d70);
            uint32_t r0_15 = sub_1f490(r0_14, r1_2);
            int32_t r0_18;
            int32_t r1_3;
            r0_18 = sub_1f41c(sub_1f518(r0_9));
            int32_t r0_19;
            int32_t r1_4;
            r0_19 = sub_1f5e0(r0_18, r1_3, 0xa3d70a3d, 0x40183d70);
            uint32_t r0_20;
            int32_t r2_10;
            r0_20 = sub_1f490(r0_19, r1_4);
            if ((r0_15 < 0xfa0 || (r0_15 >= 0xfa0 && (r0_20 >> 5) <= 0x7c)))
            {
                sub_17c48(2, "Failed\n", r2_10);
                r2_12 = sub_17ba2(2, "Target Voltage: %d, Charge Volta…", r0_15);
                goto label_1421a;
            }
            if ((r0_15 >= 0xfa0 && (r0_20 >> 5) > 0x7c))
            {
                int32_t r0_22;
                if (r0_15 > r0_20)
                {
                    r0_22 = (r0_15 - r0_20);
                }
                else
                {
                    r0_22 = (r0_20 - r0_15);
                }
                if (r0_22 <= 0x1f4)
                {
                    r2_12 = sub_17c48(2, "Passed\n", r2_10);
                    goto label_14228;
                }
                sub_17c48(2, "Failed\n", r2_10);
                r2_11 = r0_15;
                r1_5 = "Target Voltage: %d, Charge Volta…";
            }
        }
        r2_12 = sub_17ba2(2, r1_5, r2_11);
    label_1421a:
        r9 = (r9 | 8);
    label_14228:
        sub_17ba2(2, "Checking SWD Digital levels... ", r2_12);
        sub_9e38();
        int32_t r5_3 = 0;
        sub_1387c(0, 3, 1, 1);
        sub_1810a(0x40020000, 4);
        sub_18190(0x40020000, 0x40);
        int32_t r0_25;
        while (true)
        {
            int32_t r4_2 = (r5_3 & 1);
            sub_18182(0x40020000, 2, r4_2);
            sub_16930(1);
            int32_t r0_23;
            int32_t r2_15;
            r0_23 = sub_1819e(0x40020000, 4);
            bool cond:2_1 = r0_23 != 1;
            if (r0_23 != 1)
            {
                cond:2_1 = r4_2 != 0;
            }
            int32_t r2_16;
            if (cond:2_1)
            {
                sub_17c48(2, "Failed\n", r2_15);
                r2_16 = r0_23;
            }
            else
            {
                if ((r4_2 != 0 || (r4_2 == 0 && r0_23 == 0)))
                {
                    r5_3 = (r5_3 + 1);
                    if (r5_3 > 9)
                    {
                        r0_25 = 0;
                        break;
                    }
                    continue;
                }
                if ((r4_2 == 0 && r0_23 != 0))
                {
                    sub_17c48(2, "Failed\n", r2_15);
                    r2_16 = r0_23;
                }
            }
            sub_17ba2(2, "Read %d, expected %d\n", r2_16);
            r9 = (r9 | 0x10);
            r0_25 = 1;
            break;
        }
        sub_1810a(0x40020000, 2);
        sub_18190(0x40020000, 0x10);
        sub_1818c(0x40020000, 0x40);
        sub_1812e(0x40020000, 4);
        int32_t r5_4 = 0;
        int32_t r4_4;
        while (true)
        {
            int32_t r4_3 = (r5_4 & 1);
            sub_18182(0x40020000, 4, r4_3);
            sub_16930(1);
            int32_t r0_26;
            int32_t r2_18;
            r0_26 = sub_1819e(0x40020000, 2);
            bool cond:3_1 = r0_26 != 1;
            if (r0_26 != 1)
            {
                cond:3_1 = r4_3 != 0;
            }
            int32_t r2_19;
            if (cond:3_1)
            {
                sub_17c48(2, "Failed\n", r2_18);
                r2_19 = r0_26;
            }
            else
            {
                if ((r4_3 != 0 || (r4_3 == 0 && r0_26 == 0)))
                {
                    r5_4 = (r5_4 + 1);
                    if (r5_4 > 9)
                    {
                        r4_4 = r0_25;
                        break;
                    }
                    continue;
                }
                if ((r4_3 == 0 && r0_26 != 0))
                {
                    sub_17c48(2, "Failed\n", r2_18);
                    r2_19 = r0_26;
                }
            }
            sub_17ba2(2, "Read %d, expected %d\n", r2_19);
            r9 = (r9 | 0x10);
            r4_4 = 1;
            break;
        }
        uint32_t r9_1 = 0;
        sub_1387c(0, 0, 2, 2);
        int32_t r2_20 = sub_a040();
        if (r4_4 == 0)
        {
            r2_20 = sub_17c48(2, "Passed\n", r2_20);
        }
        sub_17ba2(2, "Checking SWD toggle... ", r2_20);
        void var_50;
        sub_1f886(&var_50, 0, 0x28);
        sub_1387c(0, 3, 1, 1);
        sub_18190(0x40021000, 0x8000);
        sub_1807c(&data_21d58, 2);
        sub_18190(0x40020000, 0x40);
        sub_1818c(0x40020000, 0x10);
        sub_1a000(8, 1);
        int32_t var_5c;
        sub_1a0f4(&var_5c);
        int32_t var_58_1 = 0xffffffff;
        int16_t var_54_1 = 0;
        var_5c = 3;
        sub_1a060(0x40000c00, &var_5c);
        *0x40000c20 = (*0x40000c20 & 0xfeff);
        int16_t r1_7 = *0x40000c20;
        *0x40000c1c = ((*0x40000c1c & 0xff0c) | 1);
        *0x40000c20 = ((r1_7 & 0xf4ff) | 0x100);
        sub_1a128(0x40000c00, 1);
        sub_1a000(1, 1);
        sub_1a0f4(&var_5c);
        int32_t var_58_2 = 9;
        int16_t var_54_2 = 0;
        var_5c = 3;
        sub_1a060(0x40000000, &var_5c);
        int32_t var_70;
        sub_1a1b2(&var_70);
        int32_t var_68_1 = 5;
        var_70 = 0x10030;
        int16_t var_64_1 = 0;
        sub_1a13a(0x40000000, &var_70);
        int32_t r2_21 = sub_1a128(0x40000000, 1);
        int32_t r4_5 = *0x20006064;
        sub_1a1d0(0x40000c00, 0x800);
        sub_1a1d0(0x40000c00, 8);
        int32_t r5_5 = 0;
        while ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff)
        {
            int32_t r0_41;
            do
            {
                r0_41 = sub_1a1c6(0x40000c00, 8);
                if (r0_41 != 0)
                {
                    break;
                }
                r9_1 = r5_5;
            } while ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff);
            if (r0_41 == 0)
            {
                break;
            }
            *(&var_50 + (r9_1 << 2)) = sub_1a1c2(0x40000c00);
            sub_1a1d0(0x40000c00, 0x800);
            sub_1a1d0(0x40000c00, 8);
            r5_5 = (r5_5 + 1);
            r9_1 = r5_5;
            if (r9_1 >= 0xa)
            {
                break;
            }
        }
        int32_t r4_7;
        if ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff)
        {
            int32_t r1_10 = 2;
            void var_4c;
            void* r0_47 = &var_4c;
            uint32_t i;
            do
            {
                r4_7 = (*(r0_47 + 4) - *r0_47);
                if ((r4_7 - 0x13) >= 3)
                {
                    break;
                }
                r1_10 = (r1_10 + 1);
                r0_47 = (r0_47 + 4);
                i = r1_10;
            } while (i <= 9);
            if ((r4_7 - 0x13) >= 3)
            {
                sub_17c48(2, "Failed\n", (r4_7 - 0x13));
                sub_17ba2(2, "Diff %d\n", r4_7);
            }
            else
            {
                sub_17c48(2, "Passed\n", i);
            }
        }
        else
        {
            sub_17ba2(2, "Timout occurred\n", sub_17c48(2, "Failed\n", r2_21));
        }
        if (((*0x20006064 - (r4_5 + 5)) > 0xffffffff || ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff && (r4_7 - 0x13) >= 3)))
        {
            r9 = (r9 | 0x20);
        }
        if ((((*0x20006064 - (r4_5 + 5)) > 0xffffffff || ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff && (r4_7 - 0x13) >= 3)) || ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff && (r4_7 - 0x13) < 3)))
        {
            sub_1a128(0x40000000, 0);
            sub_1a128(0x40000c00, 0);
            sub_1a000(8, 0);
            sub_1a000(1, 0);
            sub_1387c(0, 0, 2, 2);
            r2_8 = sub_a040();
        }
    }
    *0x20001d78 = (r9 | 0x53000000);
    if (r9 == 0)
    {
        sub_17ba2(2, "Self Test: Passed\n", r2_8);
    }
    else
    {
        sub_17ba2(2, "Self Test: Failed\n", r2_8);
        *0x20006064;
        *0x20001d70;
        sub_17e42(*0x20001d78);
    }
    *0x20001d64 = 0;
    return 0;
}

int32_t sub_1461c(int32_t arg1, char* arg2)
{
    sub_1f886(arg2, 0, 5);
    sub_178d0(0x10400, arg2, 0);
    sub_17ba2(2, "STM: 0x%08X\n", *arg2);
    uint32_t r2_1 = *0x20001ee8;
    arg2[4] = r2_1;
    sub_17ba2(2, "HW: 0x%02X\n", r2_1);
    *0x20001d64 = 5;
    return 0;
}

int32_t sub_14678(char arg1)
{
    uint32_t r0 = arg1;
    int32_t r0_1;
    if (r0 == 2)
    {
        sub_1818c(0x40020c00, sub_4000);
        sub_16930(5);
        sub_18190(0x40020c00, sub_4000);
        sub_16930(0x32);
        sub_8422();
        r0_1 = sub_1b08a(0x20005620, 0, 0x224b4, 0x20000b5c);
    }
    else
    {
        if (r0 != 1)
        {
            sub_1681c(0x43000001);
            return 0x52524521;
        }
        sub_8334(0x64);
        sub_1adb0(0x40005400, 0x2c, 0x20005074);
        r0_1 = sub_1ae14(0x40005400, 0x2c);
    }
    *0x20001d64 = 0;
    return r0_1;
}

int32_t sub_14726(int32_t arg1, uint8_t* arg2)
{
    sub_17ba2(2, "Attempt I2C transaction to devic…", ((arg1 >> 0x10) & 0xff));
    uint8_t r1 = (arg1 >> 0x10);
    uint8_t* var_20_1;
    uint32_t var_1c_1;
    int16_t* r0_1;
    int32_t r0_4;
    uint32_t r1_1;
    uint32_t r3_1;
    uint32_t r6_1;
    if (2 == (arg1 >> 0x1c))
    {
        r6_1 = arg1;
        r1_1 = r1;
        var_20_1 = arg2;
        var_1c_1 = r6_1;
        r3_1 = ((arg1 >> 8) & 0xff);
        r0_1 = 0x40005c00;
    }
    else if ((arg1 >> 0x1c) != 1)
    {
        r0_4 = 0x43000008;
    }
    else
    {
        r6_1 = arg1;
        r1_1 = r1;
        var_20_1 = arg2;
        var_1c_1 = r6_1;
        r3_1 = ((arg1 >> 8) & 0xff);
        r0_1 = 0x40005400;
    }
    int32_t r0_2;
    int32_t r0_5;
    if ((2 == (arg1 >> 0x1c) || (2 != (arg1 >> 0x1c) && (arg1 >> 0x1c) == 1)))
    {
        r0_2 = sub_182b6(r0_1, r1_1, arg2, r3_1, var_20_1, var_1c_1);
        if (r0_2 == 0)
        {
            *0x20001d64 = r6_1;
            r0_5 = 0;
        }
        else
        {
            if (r0_2 >= 1)
            {
                *0x20001d64 = (r6_1 - r0_2);
            }
            r0_4 = 0x43000002;
        }
    }
    if (((2 != (arg1 >> 0x1c) && (arg1 >> 0x1c) != 1) || ((2 == (arg1 >> 0x1c) || (2 != (arg1 >> 0x1c) && (arg1 >> 0x1c) == 1)) && r0_2 != 0)))
    {
        sub_1681c(r0_4);
        r0_5 = 0x52524521;
    }
    return r0_5;
}

int32_t sub_147ce() __pure
{
    return 0x444d4321;
}

int32_t sub_147d8() __pure
{
    return 0x444d4321;
}

int32_t sub_147e2() __pure
{
    return 0x444d4321;
}

int32_t sub_147ec() __pure
{
    return 0x444d4321;
}

int32_t sub_147f6(int32_t arg1, int32_t* arg2, int32_t arg3)
{
    if (*0x20001d6c != 0x12345678)
    {
        sub_1681c(0x43000007);
        return 0x52524521;
    }
    sub_17ba2(2, "Preparing UUID for write\n", arg3);
    int32_t r0_1 = sub_1ff48(0x20004fd4, arg2, 0x10);
    *0x20001d6c = 0;
    return r0_1;
}

int32_t sub_1484a(int32_t arg1, char* arg2)
{
    int32_t r0_3;
    int32_t r0_5;
    if (*0x20001d6c != 0x12345678)
    {
        r0_5 = 0x43000007;
    }
    else
    {
        int32_t r2;
        sub_17ba2(2, "Preparing Serial Number for writ…", r2);
        void var_21;
        void* r0_1 = &var_21;
        int32_t i = 0x17;
        do
        {
            char r2_1 = arg2[i];
            i = (i - 1);
            *r0_1 = r2_1;
            r0_1 = (r0_1 + 1);
        } while (i != 6);
        r0_3 = sub_17854(&var_21);
        if (r0_3 == 0)
        {
            r0_5 = 0x4300001a;
        }
    }
    int32_t r0_4;
    if ((*0x20001d6c != 0x12345678 || (*0x20001d6c == 0x12345678 && r0_3 == 0)))
    {
        sub_1681c(r0_5);
        r0_4 = 0x52524521;
    }
    if ((*0x20001d6c == 0x12345678 && r0_3 != 0))
    {
        r0_4 = sub_1ff48(0x20004fe4, arg2, 0x18);
        *0x20001d6c = 0;
    }
    return r0_4;
}

int32_t sub_148ca(int32_t arg1, int32_t* arg2, int32_t arg3)
{
    if (*0x20001d6c != 0x12345678)
    {
        sub_1681c(0x43000007);
        return 0x52524521;
    }
    sub_17ba2(2, "Preparing Build Date for write\n", arg3);
    int32_t r0_1 = sub_1ff48(0x20004ffc, arg2, 6);
    *0x20001d6c = 0;
    return r0_1;
}

int32_t sub_14920()
{
    int32_t r0_2;
    if (*0x20001d6c != 0x12345678)
    {
        sub_1681c(0x43000007);
        r0_2 = 0x52524521;
    }
    else
    {
        int32_t r2;
        sub_17ba2(2, "Writing to ID page\n", r2);
        *0x20005012 = sub_17d7e(0x20004fd4);
        sub_17dc0(0x20004fd4);
        int32_t r3_1 = *0x20004fd8;
        int32_t r5_1 = *0x20004fdc;
        int32_t r6_1 = *0x20004fe0;
        *0x20001da0 = *0x20004fd4;
        *0x20001da4 = r3_1;
        *0x20001da8 = r5_1;
        *0x20001dac = r6_1;
        sub_1ff48(0x20001eb0, 0x20004fe4, 0x18);
        r0_2 = sub_1ff48(0x20001ec8, 0x20004ffc, 6);
        *0x20001d6c = 0;
    }
    return r0_2;
}

int32_t sub_149b8()
{
    int32_t r2;
    sub_17ba2(2, "Setting ICT Pass Bit\n", r2);
    *0x20001ece = (*0x20001ece | 0x80);
    sub_17e1c(4, 0x20001ece, 1);
    return 0;
}

int32_t sub_149e6(int32_t arg1, char* arg2)
{
    sub_17ba2(2, "Incrementing FCT Pass Count to %…", ((*0x20001ece + 1) & 0x7f));
    uint32_t r0_2 = *0x20001ece;
    if ((r0_2 & 0x7f) != 0x7f)
    {
        *0x20001ece = (r0_2 + 1);
    }
    char r0_4 = *arg2;
    char r2_1 = arg2[2];
    char r3 = arg2[3];
    *0x20001ed0 = arg2[1];
    *0x20001ecf = r0_4;
    *0x20001ed2 = r3;
    *0x20001ed1 = r2_1;
    sub_17e1c(4, 0x20001ece, 1);
    sub_17e1c(8, 0x20001ecf, 4);
    return 0;
}

int32_t sub_14a44() __pure
{
    return 0x444d4321;
}

int32_t sub_14a4e() __pure
{
    return 0x444d4321;
}

int32_t sub_14a58() __pure
{
    return 0x444d4321;
}

int32_t sub_14a62(char arg1, int32_t arg2)
{
    uint32_t r5 = arg1;
    sub_17ba2(2, "Read Status Log Entry %d\n", r5);
    sub_17d58(0x100, arg2, 1);
    sub_17d58((0x101 + (r5 * 0xc)), (arg2 + 1), 0xc);
    *0x20001d64 = 0xd;
    return 0;
}

int32_t sub_14aaa(int32_t arg1, int32_t arg2)
{
    int32_t r5 = (arg1 & 3);
    if (r5 != 3)
    {
        sub_17ba2(2, "Dump Status Log Page %d\n", r5);
        sub_17d58((0x101 + (r5 << 8)), arg2, 0x100);
        *0x20001d64 = 0x100;
    }
    return 0;
}

int32_t sub_14aee(int32_t arg1, int32_t arg2)
{
    sub_17ba2(2, "Write %d bytes to User Page at 0…", (arg1 + 1));
    sub_17efe((arg1 >> 0x10), arg2, (arg1 + 1));
    return 0;
}

int32_t sub_14b22(int32_t arg1, int32_t arg2)
{
    uint32_t r4 = arg1;
    sub_17ba2(2, "Read %d bytes from User Page at …", (r4 + 1));
    sub_17f24((arg1 >> 0x10), arg2, (r4 + 1));
    *0x20001d64 = r4;
    return 0;
}

int32_t sub_14b60(int32_t arg1, char* arg2)
{
    uint32_t r0 = *arg2;
    if (r0 >= 8)
    {
        r0 = 7;
        *arg2 = 7;
    }
    sub_17b8a(r0);
    int32_t r1;
    if (*arg2 == 0)
    {
        r1 = 0;
    }
    else
    {
        r1 = 1;
    }
    sub_8bd4(0xa, r1);
    if ((arg1 << 0x1f) != 0)
    {
        sub_17eb2(0, arg2, 1);
    }
    return 0;
}

int32_t sub_14b9a(int32_t arg1, char* arg2)
{
    int32_t r0_1;
    int32_t r0_2;
    int32_t r0_3;
    if (*0x20001f3e == 0)
    {
        int32_t r8_1 = (arg1 & 0xf);
        if ((arg1 & 0x80) != 0)
        {
            int32_t r2;
            sub_17ba2(2, "Turn off all LEDs\n", r2);
            sub_18e5a(0x20004f44);
            sub_18e5a(0x20004f74);
            sub_18e5a(0x20004fa4);
        }
        r0_3 = ((arg1 >> 8) & 0xf);
        if (((r0_3 != 2 && r0_3 != 1) && r0_3 != 0))
        {
            r0_1 = 0x43000004;
        }
        if (r0_3 == 0)
        {
            sub_17ba2(2, "Turn off LEDs: %d\n", r8_1);
            if ((arg1 << 0x1f) != 0)
            {
                sub_18e5a(0x20004f44);
            }
            if ((arg1 << 0x1e) < 0)
            {
                sub_18e5a(0x20004f74);
            }
            if ((arg1 << 0x1d) < 0)
            {
                sub_18e5a(0x20004fa4);
            }
        }
        if (r0_3 == 1)
        {
            sub_17ba2(2, "Turn on LEDs: %d\n", r8_1);
            if ((arg1 << 0x1f) != 0)
            {
                sub_18e6a(0x20004f44);
            }
            if ((arg1 << 0x1e) < 0)
            {
                sub_18e6a(0x20004f74);
            }
            if ((arg1 << 0x1d) < 0)
            {
                sub_18e6a(0x20004fa4);
            }
        }
        if (r0_3 == 2)
        {
            int32_t var_1c;
            sub_178f6(arg2, &var_1c, 0);
            sub_17ba2(2, "Turn blink LEDs: %d (period: %d)…", r8_1);
            if ((arg1 << 0x1f) != 0)
            {
                sub_18e8c(0x20004f44, var_1c);
            }
            if ((arg1 << 0x1e) < 0)
            {
                sub_18e8c(0x20004f74, var_1c);
            }
            if ((arg1 << 0x1d) < 0)
            {
                sub_18e8c(0x20004fa4, var_1c);
            }
        }
        if (((r0_3 == 2 || r0_3 == 1) || r0_3 == 0))
        {
            r0_2 = 0;
        }
    }
    else
    {
        r0_1 = 0x4300000a;
    }
    if ((*0x20001f3e != 0 || (((*0x20001f3e == 0 && r0_3 != 2) && r0_3 != 1) && r0_3 != 0)))
    {
        sub_1681c(r0_1);
        r0_2 = 0x52524521;
    }
    return r0_2;
}

int32_t sub_14d00(int16_t arg1, char* arg2)
{
    uint32_t r4 = arg1;
    int32_t r0 = sub_17798(0x40012000, 0xe, r4);
    int32_t r0_1 = sub_17798(0x40012000, 0xf, r4);
    int32_t r0_16;
    if (r0 <= 0xffffffff)
    {
        r0_16 = 0x43000005;
    }
    if ((r0 > 0xffffffff && r0_1 <= 0xffffffff))
    {
        r0_16 = 0x43000006;
    }
    int32_t r4_1;
    if ((r0 <= 0xffffffff || (r0 > 0xffffffff && r0_1 <= 0xffffffff)))
    {
        sub_1681c(r0_16);
        r4_1 = 0x52524521;
    }
    if ((r0 > 0xffffffff && r0_1 > 0xffffffff))
    {
        int32_t r0_4;
        int32_t r1;
        r0_4 = sub_1f41c(sub_1f518(r0));
        int32_t r0_5;
        int32_t r1_1;
        r0_5 = sub_1f5e0(r0_4, r1, 0xa3d70a3d, 0x40183d70);
        uint32_t r0_6 = sub_1f490(r0_5, r1_1);
        int32_t r0_9;
        int32_t r1_2;
        r0_9 = sub_1f41c(sub_1f518(r0_1));
        int32_t r0_10;
        int32_t r1_3;
        r0_10 = sub_1f5e0(r0_9, r1_2, 0xa3d70a3d, 0x40183d70);
        uint32_t r0_11 = sub_1f490(r0_10, r1_3);
        sub_17ba2(2, "Target VBus: %dmV, Charge VBus: …", r0_6);
        r4_1 = 0;
        sub_178d0(r0_6, arg2, 0);
        sub_178d0(r0_11, &arg2[4], 0);
        sub_178d0(r0, &arg2[8], 0);
        sub_178d0(r0_1, &arg2[0xc], 0);
        *0x20001d64 = 0x10;
    }
    return r4_1;
}

int32_t sub_14df0(char arg1, int32_t arg2)
{
    uint32_t r2 = arg1;
    char var_9 = arg1;
    if (r2 <= 0x20)
    {
        sub_17eb2(2, arg2, r2);
    }
    sub_17eb2(1, &var_9, 1);
    return 0;
}

int32_t sub_14e16()
{
    int32_t r2;
    sub_17ba2(2, "Save current environment\n", r2);
    sub_8868(0x200004f0);
    return 0;
}

int32_t sub_14e38(char arg1)
{
    int32_t r11;
    int32_t var_18 = r11;
    int32_t r4 = 0x52524521;
    if (sub_163e0(*0x20000500) >= 0)
    {
        uint32_t r5_1 = arg1;
        int32_t r9;
        int32_t pc;
        if (sub_163a4(r5_1, 0x52524521, 0x200004f0, r9, r11, pc) >= 0)
        {
            r4 = 0;
            *0x20000500 = r5_1;
        }
    }
    return r4;
}

int32_t sub_14e74(int32_t arg1, int32_t arg2)
{
    int32_t r4 = 0x52524521;
    int32_t r0 = *0x20000500;
    if (r0 == 0)
    {
        sub_1681c(0x43000009);
    }
    else
    {
        r4 = (0x52524521 & (sub_1641e(r0, arg1, arg2) >> 0x1f));
    }
    return r4;
}

int32_t sub_14ea8()
{
    int32_t r2;
    sub_17ba2(2, "Start AVDM process\n", r2);
    sub_1178a();
    int32_t r5 = (0xfffff830 - *0x20006064);
    int32_t r0_3;
    if ((*0x20006064 + r5) <= 0xffffffff)
    {
        do
        {
            r0_3 = sub_11c82();
            if (r0_3 != 0)
            {
                break;
            }
            sub_16930(1);
        } while ((*0x20006064 + r5) < 0);
    }
    int32_t r0_10;
    if (((*0x20006064 + r5) > 0xffffffff || ((*0x20006064 + r5) <= 0xffffffff && r0_3 == 0)))
    {
        r0_10 = 0x4300001f;
    }
    if (((*0x20006064 + r5) <= 0xffffffff && r0_3 != 0))
    {
        int32_t r0_7 = sub_11c1e();
        int32_t r0_8;
        if (r0_7 == 0)
        {
            r0_8 = sub_11c32();
            if (r0_8 == 0)
            {
                r0_10 = 0x43000020;
            }
        }
        if ((r0_7 != 0 || (r0_7 == 0 && r0_8 != 0)))
        {
            return 0;
        }
    }
    sub_1681c(r0_10);
    return 0x52524521;
}

int32_t sub_14f1e()
{
    int32_t r2;
    sub_17ba2(2, "Start AVDM USB process\n", r2);
    sub_11890();
    int32_t r5 = (0xfffff830 - *0x20006064);
    int32_t r0_3;
    if ((*0x20006064 + r5) <= 0xffffffff)
    {
        do
        {
            r0_3 = sub_11c82();
            if (r0_3 != 0)
            {
                break;
            }
            sub_16930(1);
        } while ((*0x20006064 + r5) < 0);
    }
    int32_t r0_9;
    if (((*0x20006064 + r5) > 0xffffffff || ((*0x20006064 + r5) <= 0xffffffff && r0_3 == 0)))
    {
        r0_9 = 0x43000021;
    }
    if (((*0x20006064 + r5) <= 0xffffffff && r0_3 != 0))
    {
        if (sub_11c46() != 0)
        {
            return 0;
        }
        r0_9 = 0x43000022;
    }
    sub_1681c(r0_9);
    return 0x52524521;
}

int32_t sub_14f8e()
{
    int32_t r2;
    sub_17ba2(2, "Stop AVDM USB\n", r2);
    if (sub_118d8() > 0xffffffff)
    {
        return 0;
    }
    sub_1681c(0x43000024);
    return 0x52524521;
}

int32_t sub_14fc2()
{
    int32_t r2;
    sub_17ba2(2, "Send force DFU\n", r2);
    int32_t r0 = sub_117dc();
    int32_t r0_4;
    int32_t r0_7;
    int32_t r5_1;
    if (r0 > 0xffffffff)
    {
        r5_1 = (0xfffff830 - *0x20006064);
        if ((*0x20006064 + r5_1) <= 0xffffffff)
        {
            do
            {
                r0_4 = sub_11c82();
                if (r0_4 != 0)
                {
                    break;
                }
                sub_16930(1);
            } while ((*0x20006064 + r5_1) < 0);
        }
        if (((*0x20006064 + r5_1) > 0xffffffff || ((*0x20006064 + r5_1) <= 0xffffffff && r0_4 == 0)))
        {
            r0_7 = 0x43000023;
        }
        if ((((*0x20006064 + r5_1) <= 0xffffffff && r0_4 != 0) && sub_11c5a() != 0))
        {
            return 0;
        }
    }
    if ((r0 <= 0xffffffff || ((r0 > 0xffffffff && (*0x20006064 + r5_1) <= 0xffffffff) && r0_4 != 0)))
    {
        r0_7 = 0x43000012;
    }
    sub_1681c(r0_7);
    return 0x52524521;
}

int32_t sub_15038(int32_t arg1)
{
    if (*0x20001f3e != 0)
    {
        *0x20001f3e = 0;
    }
    int32_t r0 = *0x20000ad4;
    int32_t r2;
    if (r0 >= 0)
    {
        r2 = sub_1961e(r0);
        *0x20000ad4 = 0xffffffff;
    }
    int32_t r4_1;
    if ((arg1 << 0x1f) != 0)
    {
        r4_1 = 0;
    }
    else
    {
        sub_17ba2(2, "Heartbeat Tick\n", r2);
        r4_1 = 0;
        int32_t r0_3 = j_sub_195ba(sub_167a4, 0, *0x20000514);
        *0x20000ad4 = r0_3;
        if (r0_3 <= 0xffffffff)
        {
            sub_1681c(0x4300000b);
            r4_1 = 0x52524521;
        }
    }
    return r4_1;
}

int32_t sub_150b6(int32_t arg1, int32_t* arg2)
{
    *arg2 = sub_1ca3c(*arg2);
    *0x20001d64 = 4;
    return 0;
}

int32_t sub_150d4(int32_t arg1)
{
    uint32_t r4 = (arg1 >> 0x1c);
    if (0 != (arg1 >> 0x1c))
    {
        r4 = 1;
    }
    sub_17ba2(2, "USB-C disconnect port %d for %dm…", r4);
    if (((*(0x20001f24 + r4) & 0x70) != 0 || ((*(0x20001f24 + r4) & 0x70) == 0 && *(0x20001f40 + r4) != 0)))
    {
        sub_fb88(r4);
        *(0x20001f40 + r4) = 1;
        if ((arg1 << 0x10) != 0)
        {
            sub_16930(arg1);
            sub_faf8(r4);
            *(0x20001f40 + r4) = 0;
        }
    }
    return 0;
}

int32_t sub_15150(int32_t arg1, int32_t arg2)
{
    int32_t i = 0;
    do
    {
        int32_t* r0 = *(0x21d90 + (i << 2));
        int32_t r1 = 0;
        int32_t j = 0;
        int16_t r4_1 = 0;
        int32_t r2_1 = 0;
        do
        {
            uint32_t r5_2 = (*r0 >> r1);
            r1 = (r1 + 2);
            int32_t r5_4 = (1 << j);
            j = (j + 1);
            int32_t r6_1;
            if ((r5_2 & 3) != 1)
            {
                r6_1 = r0[4];
            }
            else
            {
                r2_1 = (r2_1 | r5_4);
                r6_1 = r0[5];
            }
            if ((r6_1 & r5_4) != 0)
            {
                r4_1 = (r5_4 | r4_1);
            }
        } while (j != 0x10);
        sub_178d0((r4_1 | (r2_1 << 0x10)), (arg2 + (i << 2)), 0);
        i = (i + 1);
    } while (i != 5);
    *0x20001d64 = 0x14;
    return 0;
}

int32_t sub_151d4(int32_t arg1)
{
    int32_t r4 = (arg1 & 0xf0);
    int32_t r5 = 0;
    if (r4 != 0)
    {
        r4 = 1;
    }
    if (sub_1dbac(0) != r4)
    {
        sub_cb4c(0, r4);
        int32_t r2_1 = sub_16930(5);
        int32_t r6_1 = (0xfffffc18 - *0x20006064);
        while (true)
        {
            int32_t r0_6;
            if ((*0x20006064 + r6_1) > 0xffffffff)
            {
                sub_17ba2(2, "PR_Swap timeout\n", r2_1);
                r0_6 = 0x43000014;
            }
            else
            {
                sub_16930(1);
                int32_t r0_4;
                r0_4 = sub_c9b6(0);
                if (r0_4 == 0)
                {
                    continue;
                }
                else
                {
                    if (sub_1dbac(0) == r4)
                    {
                        sub_17ba2(2, "PR_Swap complete\n", 0x47c);
                        r5 = 0;
                        break;
                    }
                    sub_17ba2(2, "PR_Swap failed\n", 0x47c);
                    r0_6 = 0x43000013;
                }
            }
            sub_1681c(r0_6);
            r5 = 0x52524521;
            break;
        }
    }
    return r5;
}

int32_t sub_1528c(int32_t arg1)
{
    int32_t r0_11;
    int32_t r0_3;
    if (*0x20001d90 != 0x13)
    {
        r0_3 = 0x43000017;
    label_15320:
        sub_1681c(r0_3);
        r0_11 = 0x52524521;
    }
    else
    {
        if (sub_b93a(arg1) != 0)
        {
            goto label_152ae;
        }
        int32_t r2_1 = sub_16930(5);
        int32_t r6_1 = (0xfffffc18 - *0x20006064);
        int32_t r0_7;
        if ((*0x20006064 + r6_1) <= 0xffffffff)
        {
            do
            {
                sub_16930(1);
                r0_7 = sub_c9b6(0);
                if ((r0_7 != 0 && *0x20001d99 == 4))
                {
                    break;
                }
            } while ((*0x20006064 + r6_1) <= 0xffffffff);
        }
        if (((*0x20006064 + r6_1) > 0xffffffff || ((*0x20006064 + r6_1) <= 0xffffffff && (!(r0_7 != 0 && *0x20001d99 == 4)))))
        {
            sub_17ba2(2, "Renegotiate timeout\n", r2_1);
            r0_3 = 0x43000016;
            goto label_15320;
        }
        if ((((*0x20006064 + r6_1) <= 0xffffffff && r0_7 != 0) && *0x20001d99 == 4))
        {
            int32_t r2_2 = (arg1 << 0x18);
            int32_t r1_1 = *0x20001d84;
            int32_t r0_12 = ((r1_1 >> 0x1c) & 7);
            if (r2_2 != 0)
            {
                r2_2 = 0xff800;
                if ((r1_1 & 0xff800) > 0x6400)
                {
                label_15370:
                    sub_17ba2(2, "Renegotiate complete\n", r2_2);
                    r0_11 = 0;
                }
                else if (r0_12 == 2)
                {
                    goto label_15370;
                }
            }
            else if ((((r1_1 >> 0xb) & 0x1ff) <= 0xc && r0_12 == 1))
            {
                goto label_15370;
            }
            if (((r2_2 != 0 && (r1_1 & 0xff800) <= 0x6400) || r2_2 == 0))
            {
                sub_17ba2(2, "Renegotiate failed\n", r2_2);
            label_152ae:
                r0_3 = 0x43000015;
                goto label_15320;
            }
        }
    }
    return r0_11;
}

int32_t sub_15388(int32_t arg1)
{
    int32_t r0_13;
    int32_t r0_14;
    if (*0x20001d90 != 7)
    {
        r0_13 = 0x43000019;
    }
    else
    {
        *0x200004e8 = arg1;
        *0x200004ea = (arg1 >> 0x10);
        sub_b9f6();
        sub_ca8a(0);
        int32_t r2_1 = sub_16930(0xa);
        int32_t r6_1 = (0xfffffc18 - *0x20006064);
        if ((*0x20006064 + r6_1) <= 0xffffffff)
        {
            do
            {
                sub_16930(1);
                int32_t r0_4;
                r0_4 = sub_c9b6(0);
                if ((r0_4 != 0 && *0x200004ea == (((*0x20001d84 >> 0xa) & 0x3ff) * 0xa)))
                {
                    int32_t r0_6 = *0x20001d80;
                    uint32_t r1_4;
                    if (2 != (r0_6 >> 0x1e))
                    {
                        r1_4 = (r0_6 >> 0x1e);
                        if ((r1_4 != 1 && (r1_4 == 0 && (((r0_6 >> 0xa) & 0x3ff) * 0x32) == *0x200004e8)))
                        {
                            goto label_15490;
                        }
                    }
                    if ((2 == (r0_6 >> 0x1e) || (2 != (r0_6 >> 0x1e) && r1_4 == 1)))
                    {
                        r2_1 = (((r0_6 >> 0x14) & 0x3ff) * 0x32);
                        uint32_t r1_7 = *0x200004e8;
                        if ((r2_1 >= r1_7 && (((r0_6 >> 0xa) & 0x3ff) * 0x32) <= r1_7))
                        {
                        label_15490:
                            sub_17ba2(2, "Request complete\n", r2_1);
                            r0_14 = 0;
                            goto label_15484;
                        }
                    }
                }
            } while ((*0x20006064 + r6_1) < 0);
        }
        sub_17ba2(2, "Request timeout\n", r2_1);
        r0_13 = 0x43000018;
    }
    sub_1681c(r0_13);
    r0_14 = 0x52524521;
label_15484:
    return r0_14;
}

int32_t sub_15498(int32_t arg1)
{
    int32_t r0_10;
    int32_t r0_5;
    if (*0x200004f8 != 3)
    {
        r0_5 = 0x4300001b;
    label_15594:
        sub_1681c(r0_5);
        r0_10 = 0x52524521;
    }
    else
    {
        int32_t r6;
        int32_t r9;
        if ((arg1 << 0x1f) != 0)
        {
            if (sub_118d8() <= 0xffffffff)
            {
                r0_5 = 0x4300001c;
                goto label_15594;
            }
            if ((sub_1db5c(0) == 1 && sub_ba04(0, 0x1f4, r6, r9) <= 0xffffffff))
            {
            label_1557a:
                r0_5 = 0x4300001d;
                goto label_15594;
            }
            uint32_t r3_1 = (arg1 >> 0x10);
            char var_11 = 1;
            int32_t r0_9 = sub_17938(0x40005c00, 0x1c, 0x664e4f43, r3_1, &var_11, 1, 0, (r3_1 + 0x3e8));
            if (r0_9 > 0xffffffff)
            {
                goto label_15566;
            }
            sub_17ba2(2, "Banana transaction failed (0x%08…", r0_9);
        label_15592:
            r0_5 = 0x4300001e;
            goto label_15594;
        }
        char var_12 = 0;
        if (sub_17938(0x40005c00, 0x1c, 0x664e4f43, 0, &var_12, 1, 0, 0x3e8) <= 0xffffffff)
        {
            goto label_15592;
        }
        if (sub_1db5c(0) == 0)
        {
            if (sub_ba04(1, 0x1f4, r6, r9) > 0xffffffff)
            {
                goto label_15566;
            }
            goto label_1557a;
        }
    label_15566:
        r0_10 = 0;
    }
    return r0_10;
}

int32_t sub_155a4()
{
    int32_t r0_12;
    int32_t r0_2;
    if (*0x20001d90 != 0x13)
    {
        r0_2 = 0x43000025;
    label_15658:
        sub_1681c(r0_2);
        r0_12 = 0x52524521;
    }
    else
    {
        if (sub_baac() != 0)
        {
            r0_2 = 0x43000026;
            goto label_15658;
        }
        int32_t r2_1 = sub_16930(5);
        int32_t r5_1 = (0xfffffc18 - *0x20006064);
        int32_t r0_6;
        int32_t r0_8;
        if ((*0x20006064 + r5_1) <= 0xffffffff)
        {
            do
            {
                sub_16930(1);
                r0_6 = sub_c9b6(0);
                if ((r0_6 != 0 && *0x20001d99 == 4))
                {
                    r0_8 = *0x20001d84;
                    if ((r0_8 & 0x70000000) == 0x20000000)
                    {
                        break;
                    }
                    if (((r0_8 & 0x70000000) != 0x20000000 && (r0_8 & 0xff800) > 0x6400))
                    {
                        break;
                    }
                }
            } while ((*0x20006064 + r5_1) < 0);
        }
        if (((*0x20006064 + r5_1) > 0xffffffff || ((*0x20006064 + r5_1) <= 0xffffffff && (!((r0_6 != 0 && *0x20001d99 == 4) && (r0_8 & 0x70000000) == 0x20000000)))))
        {
            sub_17ba2(2, "Low-to-high switch timeout\n", r2_1);
            r0_2 = 0x43000027;
            goto label_15658;
        }
        if (((((*0x20006064 + r5_1) <= 0xffffffff && r0_6 != 0) && *0x20001d99 == 4) && (r0_8 & 0x70000000) == 0x20000000))
        {
            sub_17ba2(2, "Low-to-high switch complete\n", r2_1);
            r0_12 = 0;
        }
    }
    return r0_12;
}

int32_t sub_1567c(char arg1, int32_t* arg2)
{
    uint32_t r0 = sub_b922();
    int32_t r0_3;
    int32_t r0_4;
    int32_t r0_6;
    if (r0 == 0)
    {
        int32_t r2_3;
        r0_4 = sub_13318();
        if (r0_4 <= 0xffffffff)
        {
            sub_17ba2(2, "Failed to enter UVDM mode\n", r2_3);
            r0_6 = 0x43000028;
        label_15708:
            sub_1681c(r0_6);
            r0_3 = 0x52524521;
        }
        else
        {
            int32_t r0_5;
            int32_t r2_4;
            r0_5 = sub_1337e();
            if (r0_5 <= 0xffffffff)
            {
                sub_17ba2(2, "Failed to enumerate UVDM mode\n", r2_4);
                r0_6 = 0x43000029;
                goto label_15708;
            }
        }
    }
    if ((r0 != 0 || (r0 == 0 && r0_4 > 0xffffffff)))
    {
        uint8_t var_11;
        int32_t r0_2;
        int32_t r2_2;
        r0_2 = sub_133d6(arg1, arg2, &var_11);
        if (r0_2 <= 0xffffffff)
        {
            sub_17ba2(2, "Failed to read IECS register\n", r2_2);
            r0_6 = 0x4300002a;
            goto label_15708;
        }
        *0x20001d64 = var_11;
        r0_3 = 0;
    }
    return r0_3;
}

int32_t sub_15718(int32_t arg1, int32_t* arg2)
{
    uint32_t r0 = sub_b922();
    int32_t r0_4;
    int32_t r0_5;
    int32_t r0_7;
    if (r0 == 0)
    {
        int32_t r2_3;
        r0_5 = sub_13318();
        if (r0_5 <= 0xffffffff)
        {
            sub_17ba2(2, "Failed to enter UVDM mode\n", r2_3);
            r0_7 = 0x4300002b;
        label_157aa:
            sub_1681c(r0_7);
            r0_4 = 0x52524521;
        }
        else
        {
            int32_t r0_6;
            int32_t r2_4;
            r0_6 = sub_1337e();
            if (r0_6 <= 0xffffffff)
            {
                sub_17ba2(2, "Failed to enumerate UVDM mode\n", r2_4);
                r0_7 = 0x4300002c;
                goto label_157aa;
            }
        }
    }
    if ((r0 != 0 || (r0 == 0 && r0_5 > 0xffffffff)))
    {
        uint32_t r6_1 = (arg1 >> 8);
        uint32_t r2_1 = r6_1;
        if (r6_1 >= 0x40)
        {
            r2_1 = 0x40;
        }
        int32_t r0_3;
        int32_t r2_2;
        r0_3 = sub_136a2(arg1, arg2, r2_1);
        if (r0_3 <= 0xffffffff)
        {
            sub_17ba2(2, "Failed to write IECS register\n", r2_2);
            r0_7 = 0x4300002d;
            goto label_157aa;
        }
        *0x20001d64 = r6_1;
        r0_4 = 0;
    }
    return r0_4;
}

int32_t sub_157bc(int32_t arg1, char* arg2)
{
    int32_t r0_1;
    int32_t r2_1;
    r0_1 = sub_11af0(*arg2, arg2[1], (arg1 & 1), (arg1 >> 0x10));
    if (r0_1 > 0xffffffff)
    {
        return 0;
    }
    sub_17ba2(2, "Failed to send action\n", r2_1);
    sub_1681c(0x4300002e);
    return 0x52524521;
}

int32_t sub_157fe(int32_t arg1)
{
    int32_t r2 = *0x200004e4;
    int32_t r0_1 = 0x6b62704c;
    char const* const r1;
    if ((arg1 << 0x1f) == 0)
    {
        r0_1 = 0x20505041;
        if (r2 != 0x6b62704c)
        {
            r1 = "Not in loopback mode\n";
        }
    }
    if (((arg1 << 0x1f) != 0 && r2 != 0x20505041))
    {
        r1 = "Cannot enter Loopback mode while…";
    }
    if ((((arg1 << 0x1f) != 0 && r2 != 0x20505041) || ((arg1 << 0x1f) == 0 && r2 != 0x6b62704c)))
    {
        sub_17ba2(2, r1, r2);
        sub_1681c(0x4300002f);
        return 0x52524521;
    }
    if ((((arg1 << 0x1f) != 0 && r2 == 0x20505041) || ((arg1 << 0x1f) == 0 && r2 == 0x6b62704c)))
    {
        *0x200004e4 = r0_1;
        return 0;
    }
}

int32_t sub_1585c(int32_t arg1, char* arg2)
{
    int32_t r11 = 0x52524521;
    if (sub_1db5c(0) == 1)
    {
        uint32_t r0_1 = arg1;
        int32_t r0_6;
        if (r0_1 > 7)
        {
            r0_6 = 0x43000034;
        label_15aac:
            sub_1681c(r0_6);
        }
        else
        {
            int32_t r0_33;
            uint32_t r1_5;
            switch (jump_table_15888[r0_1])
            {
                case 8:
                {
                    int32_t r0_2 = *0x200004f8;
                    if (r0_2 != 2)
                    {
                        if (r0_2 != 0)
                        {
                            goto label_15a9e;
                        }
                        if (sub_b92e() != 0)
                        {
                            goto label_15a9e;
                        }
                    }
                    if (sub_bb2e(arg2) == 0)
                    {
                        goto label_15aaa;
                    }
                    *0x20001d64 = 0x10;
                label_15a96:
                    r11 = 0;
                    break;
                }
                case 0x29:
                {
                    int32_t r0_7 = *0x200004f8;
                    if (r0_7 != 2)
                    {
                        if (r0_7 != 0)
                        {
                            goto label_15a9e;
                        }
                        if (sub_b92e() != 0)
                        {
                            goto label_15a9e;
                        }
                    }
                    if (sub_bc3c(0x5ac) != 0)  {  // {"@FIF"}}
                    {
                        char r0_10 = sub_bcd4(0x5ac, 5, 0xffffffff, nullptr);  {  // {"@FIF"}}
                        if (r0_10 != 0)
                        {
                            uint32_t r10_1 = r0_10;
                            if (sub_bd7c(0x5ac, r10_1) == 0)  {  // {"@FIF"}}
                            {
                                goto label_15aaa;
                            }
                            uint32_t r6_1 = *arg2;
                            char r4_1 = 0;
                            int32_t r0_14;
                            uint32_t i;
                            do
                            {
                                uint32_t r4_2 = r4_1;
                                void* r8_1 = &arg2[r4_2];
                                char i_1;
                                char var_25;
                                r0_14 = sub_be48(r10_1, r6_1, &var_25, &i_1, (r8_1 + 2));
                                if (r0_14 == 0)
                                {
                                    break;
                                }
                                r6_1 = (r6_1 + 1);
                                arg2[r4_2] = var_25;
                                i = i_1;
                                *(r8_1 + 1) = i;
                                r4_1 = ((r4_2 + i) + 2);
                            } while (i != 0);
                            if (r0_14 == 0)
                            {
                                sub_1681c(0x43000033);
                                r1_5 = r10_1;
                                goto label_15aea;
                            }
                            sub_bde2(0x5ac, r10_1);  {  // {"@FIF"}}
                            *0x20001d64 = r4_1;
                            goto label_15a96;
                        }
                    }
                    r0_6 = 0x43000032;
                    goto label_15aac;
                }
                case 0x82:
                {
                    if (*0x200004f8 == 2)
                    {
                        if (sub_bd7c(0x5ac, 2) == 0)  {  // {"@FIF"}}
                        {
                        label_15aaa:
                            r0_6 = 0x43000031;
                            goto label_15aac;
                        }
                        *arg2;
                        if (sub_beea() == 0)
                        {
                            sub_1681c(0x43000031);
                        }
                        else
                        {
                            r11 = 0;
                        }
                        r1_5 = 2;
                        goto label_15aea;
                    }
                label_15a9e:
                    r0_6 = 0x43000030;
                    goto label_15aac;
                }
                case 0x9a:
                {
                    if (*0x200004f8 != 2)
                    {
                        goto label_15a9e;
                    }
                    if (sub_bd7c(0x5ac, 3) == 0)  {  // {"@FIF"}}
                    {
                        goto label_15aaa;
                    }
                    if (sub_bf50(arg2) != 0)
                    {
                        *0x20001d64 = 4;
                    label_15a14:
                        r11 = 0;
                        goto label_15ad4;
                    }
                    break;
                }
                case 0xb4:
                {
                    if (*0x200004f8 != 2)
                    {
                        goto label_15a9e;
                    }
                    if (sub_bd7c(0x5ac, 3) == 0)  {  // {"@FIF"}}
                    {
                        goto label_15aaa;
                    }
                    if (sub_c010() != 0)
                    {
                        goto label_15a14;
                    }
                    break;
                }
                case 0xc9:
                {
                    if (*0x200004f8 != 2)
                    {
                        goto label_15a9e;
                    }
                    if (sub_bd7c(0x4b4, 1) == 0)
                    {
                        goto label_15aaa;
                    }
                    uint32_t r0_30 = sub_c0d0();
                    if (r0_30 <= 0xffffffff)
                    {
                        goto label_15aaa;
                    }
                    if (r0_30 == 0)
                    {
                        goto label_15a96;
                    }
                    sub_c1a8();
                    sub_16930(0x3e8);
                    if (sub_c0d0() <= 0xffffffff)
                    {
                        goto label_15aaa;
                    }
                    if (sub_c0d0() != 0)
                    {
                        goto label_15aaa;
                    }
                    r0_33 = sub_c1cc();
                    break;
                }
                case 0xed:
                {
                    if (*0x200004f8 != 2)
                    {
                        goto label_15a9e;
                    }
                    r0_33 = sub_c212((arg1 >> 0x10), ((arg1 >> 8) & 0xff), arg2);
                    break;
                }
                case 0xfb:
                {
                    if (*0x200004f8 != 2)
                    {
                        goto label_15a9e;
                    }
                    r0_33 = sub_c2aa(*arg2);
                    break;
                }
            }
            if ((*(&jump_table_15888 + (r0_1 << 1)) == 0x9a || *(&jump_table_15888 + (r0_1 << 1)) == 0xb4))
            {
                sub_1681c(0x43000031);
            label_15ad4:
                r1_5 = 3;
            label_15aea:
                sub_bde2(0x5ac, r1_5);  {  // {"@FIF"}}
            }
            if (((*(&jump_table_15888 + (r0_1 << 1)) == 0xc9 || *(&jump_table_15888 + (r0_1 << 1)) == 0xed) || *(&jump_table_15888 + (r0_1 << 1)) == 0xfb))
            {
                if (r0_33 != 1)
                {
                    goto label_15aaa;
                }
                goto label_15a96;
            }
        }
    }
    return r11;
}

int32_t sub_15b04()
{
    int32_t r2;
    sub_17ba2(2, "Send force Diags\n", r2);
    int32_t r0 = sub_1183a();
    int32_t r0_4;
    int32_t r0_7;
    int32_t r5_1;
    if (r0 > 0xffffffff)
    {
        r5_1 = (0xfffff830 - *0x20006064);
        if ((*0x20006064 + r5_1) <= 0xffffffff)
        {
            do
            {
                r0_4 = sub_11c82();
                if (r0_4 != 0)
                {
                    break;
                }
                sub_16930(1);
            } while ((*0x20006064 + r5_1) < 0);
        }
        if (((*0x20006064 + r5_1) > 0xffffffff || ((*0x20006064 + r5_1) <= 0xffffffff && r0_4 == 0)))
        {
            r0_7 = 0x43000036;
        }
        if ((((*0x20006064 + r5_1) <= 0xffffffff && r0_4 != 0) && sub_11c6e() != 0))
        {
            return 0;
        }
    }
    if ((r0 <= 0xffffffff || ((r0 > 0xffffffff && (*0x20006064 + r5_1) <= 0xffffffff) && r0_4 != 0)))
    {
        r0_7 = 0x43000035;
    }
    sub_1681c(r0_7);
    return 0x52524521;
}

int32_t sub_15b7a(int32_t arg1, int32_t* arg2)
{
    int32_t r0_5;
    int32_t r0_6;
    if (*0x200004f8 != 3)
    {
        r0_6 = 0x43000037;
    label_15c28:
        sub_1681c(r0_6);
        r0_5 = 0x52524521;
    }
    else
    {
        int32_t var_24;
        if (sub_17938(0x40005c00, 0x1c, 0x72504555, 0x1000003, &var_24, 0, 4, 0x64) != 4)
        {
            r0_6 = 0x43000038;
            goto label_15c28;
        }
        int32_t r0_2 = var_24;
        if (r0_2 == 0xffffffff)
        {
            r0_2 = 0;
            var_24 = 0;
        }
        if ((arg1 << 0x1f) != 0)
        {
            var_24 = (r0_2 + 1);
            if (sub_17938(0x40005c00, 0x1c, 0x77504555, 0x1000003, &var_24, 4, 0, 0x64) < 0)
            {
                r0_6 = 0x43000039;
                goto label_15c28;
            }
            r0_2 = var_24;
        }
        *arg2 = r0_2;
        *0x20001d64 = 4;
        r0_5 = 0;
    }
    return r0_5;
}

int32_t sub_15c46(int32_t arg1, int32_t* arg2)
{
    int32_t r5 = (arg1 & 3);
    if (r5 != 3)
    {
        sub_17ba2(2, "Dump State Info Page %d\n", r5);
        sub_1ff48(arg2, (0x20000c76 + (r5 << 8)), 0x100);
        *0x20001d64 = 0x100;
    }
    return 0;
}

int32_t sub_15c8c(int32_t arg1, char* arg2)
{
    char* r4 = arg2;
    int16_t r1_30;
    if (arg1 != 0)
    {
        if (arg1 > 0x19)
        {
            r1_30 = 0;
        }
        else
        {
            int32_t* var_30 = nullptr;
            int32_t* r0;
            int32_t r0_62;
            if ((arg1 - 1) > 4)
            {
                uint32_t r3_1 = ((arg1 - 6) >> 1);
                uint32_t r0_61;
                int32_t* r1_34;
                int32_t** r2_5;
                if ((arg1 & 1) != 0)
                {
                    r1_34 = &var_30;
                    r0_61 = r3_1;
                    r2_5 = nullptr;
                }
                else
                {
                    r2_5 = &var_30;
                    r0_61 = r3_1;
                    r1_34 = nullptr;
                }
                r0_62 = sub_1c8c6(r0_61, r1_34, r2_5);
                if (r0_62 == 0)
                {
                    *0x20001d64 = 0;
                    var_30[2];
                }
                else
                {
                    r0 = var_30;
                }
            }
            else
            {
                switch (jump_table_15cb0[(arg1 - 1)])
                {
                    case 5:
                    {
                        r0 = 0x20000b00;
                        break;
                    }
                    case 0x112:
                    {
                        r0 = 0x20000aec;
                        break;
                    }
                    case 0x117:
                    {
                        r0 = 0x20000b28;
                        break;
                    }
                    case 0x11c:
                    {
                        r0 = 0x20000b14;
                        break;
                    }
                    case 0x121:
                    {
                        r0 = 0x20000b3c;
                        break;
                    }
                }
                var_30 = r0;
            }
            if ((((arg1 - 1) > 4 && r0_62 != 0) || (arg1 - 1) <= 4))
            {
                int32_t r0_59 = sub_17f62(r0);
                int32_t* r1_32;
                int32_t r2_3;
                if (r0_59 >= 0x100)
                {
                    r0_59 = 0x100;
                    *0x20001d64 = 0x100;
                    r1_32 = var_30;
                    r2_3 = r1_32[2];
                }
                else
                {
                    *0x20001d64 = r0_59;
                    r1_32 = var_30;
                    r2_3 = r1_32[2];
                }
                if ((r0_59 >= 0x100 || (r0_59 < 0x100 && (r0_59 & 0xffff) != 0)))
                {
                    do
                    {
                        r0_59 = (r0_59 - 1);
                        *r4 = r1_32[4][r2_3];
                        r4 = &r4[1];
                        r2_3 = ((r2_3 + 1) & *r1_32);
                    } while ((r0_59 & 0xffff) != 0);
                }
            }
        }
    }
    else
    {
        int32_t r0_1 = sub_17f62(0x20000b00);
        *r4 = r0_1;
        r4[1] = (r0_1 >> 8);
        int32_t r0_3 = *0x20000b08;
        r4[2] = r0_3;
        r4[3] = (r0_3 >> 8);
        int32_t r0_5 = *0x20000b04;
        r4[4] = r0_5;
        r4[5] = (r0_5 >> 8);
        uint32_t r0_7 = *0x20000b0d;
        uint32_t r1_1 = *0x20000b0c;
        r4[7] = 0;
        r4[6] = ((((4 & (r1_1 << 2)) & 0xfd) | ((r0_7 & 1) << 1)) | 1);
        int32_t r0_9 = sub_17f62(0x20000aec);
        r4[8] = r0_9;
        r4[9] = (r0_9 >> 8);
        int32_t r0_11 = *0x20000af4;
        r4[0xa] = r0_11;
        r4[0xb] = (r0_11 >> 8);
        int32_t r0_13 = *0x20000af0;
        r4[0xc] = r0_13;
        r4[0xd] = (r0_13 >> 8);
        uint32_t r0_15 = *0x20000af9;
        uint32_t r1_4 = *0x20000af8;
        r4[0xf] = 0;
        r4[0xe] = ((((4 & (r1_4 << 2)) & 0xfd) | ((r0_15 & 1) << 1)) | 1);
        int32_t r0_17 = sub_17f62(0x20000b28);
        r4[0x10] = r0_17;
        r4[0x11] = (r0_17 >> 8);
        int32_t r0_19 = *0x20000b30;
        r4[0x12] = r0_19;
        r4[0x13] = (r0_19 >> 8);
        int32_t r0_21 = *0x20000b2c;
        r4[0x14] = r0_21;
        r4[0x15] = (r0_21 >> 8);
        uint32_t r0_23 = *0x20000b35;
        uint32_t r1_7 = *0x20000b34;
        r4[0x17] = 0;
        r4[0x16] = ((((4 & (r1_7 << 2)) & 0xfd) | ((r0_23 & 1) << 1)) | 1);
        int32_t r0_25 = sub_17f62(0x20000b14);
        r4[0x18] = r0_25;
        r4[0x19] = (r0_25 >> 8);
        int32_t r0_27 = *0x20000b1c;
        r4[0x1a] = r0_27;
        r4[0x1b] = (r0_27 >> 8);
        int32_t r0_29 = *0x20000b18;
        r4[0x1c] = r0_29;
        r4[0x1d] = (r0_29 >> 8);
        uint32_t r0_31 = *0x20000b21;
        uint32_t r1_10 = *0x20000b20;
        r4[0x1f] = 0;
        r4[0x1e] = ((((4 & (r1_10 << 2)) & 0xfd) | ((r0_31 & 1) << 1)) | 1);
        int32_t r0_33 = sub_17f62(0x20000b3c);
        r4[0x20] = r0_33;
        int32_t i = 0;
        r4[0x21] = (r0_33 >> 8);
        int32_t r0_35 = *0x20000b44;
        r4[0x22] = r0_35;
        r4[0x23] = (r0_35 >> 8);
        int32_t r0_37 = *0x20000b40;
        r4[0x24] = r0_37;
        r4[0x25] = (r0_37 >> 8);
        uint32_t r0_39 = *0x20000b49;
        uint32_t r1_13 = *0x20000b48;
        r4[0x27] = 0;
        int32_t r5_1 = 0;
        r4[0x26] = ((((4 & (r1_13 << 2)) & 0xfd) | ((r0_39 & 1) << 1)) | 1);
        do
        {
            int32_t* var_2c;
            int32_t* var_28;
            int32_t r0_58;
            int32_t r1_27;
            if (sub_1c8c6(r5_1, &var_28, &var_2c) == 0)
            {
                void* r1_28 = &r4[(i << 3)];
                r0_58 = 0;
                *(r1_28 + 0x2f) = 0;
                *(r1_28 + 0x2e) = 0;
                r1_27 = (6 + (r5_1 << 1));
            }
            else
            {
                void* r9_1 = &r4[(i << 3)];
                int32_t r0_44 = sub_17f62(var_2c);
                *(r9_1 + 0x28) = r0_44;
                *(r9_1 + 0x29) = (r0_44 >> 8);
                int32_t* r0_46 = var_2c;
                int32_t r1_17 = r0_46[2];
                *(r9_1 + 0x2a) = r1_17;
                *(r9_1 + 0x2b) = (r1_17 >> 8);
                int32_t r1_19 = r0_46[1];
                *(r9_1 + 0x2c) = r1_19;
                *(r9_1 + 0x2d) = (r1_19 >> 8);
                uint32_t r1_21 = *(r0_46 + 0xd);
                uint32_t r0_47 = r0_46[3];
                *(r9_1 + 0x2f) = 0;
                *(r9_1 + 0x2e) = ((((4 & (r0_47 << 2)) & 0xfd) | ((r1_21 & 1) << 1)) | 1);
                int32_t r0_52 = sub_17f62(var_28);
                *(r9_1 + 0x30) = r0_52;
                *(r9_1 + 0x31) = (r0_52 >> 8);
                int32_t* r0_54 = var_28;
                int32_t r1_22 = r0_54[2];
                *(r9_1 + 0x32) = r1_22;
                *(r9_1 + 0x33) = (r1_22 >> 8);
                int32_t r1_24 = r0_54[1];
                *(r9_1 + 0x34) = r1_24;
                *(r9_1 + 0x35) = (r1_24 >> 8);
                r1_27 = (i + 6);
                r0_58 = ((((4 & (r0_54[3] << 2)) & 0xfffffffd) | ((*(r0_54 + 0xd) & 1) << 1)) | 1);
            }
            i = (i + 2);
            void* r1_29 = &r4[(r1_27 << 3)];
            r5_1 = (r5_1 + 1);
            *(r1_29 + 7) = (r0_58 >> 8);
            *(r1_29 + 6) = r0_58;
        } while (i != 0x14);
        r1_30 = 0xc8;
    }
    if (((arg1 != 0 && arg1 > 0x19) || arg1 == 0))
    {
        *0x20001d64 = r1_30;
    }
    return 0;
}

int32_t sub_15f90()
{
    __builtin_strncpy(0x200004e4, "boot", 4);
    int32_t r1 = 0x8000;
    if (*0x20001d7c == 1)
    {
        r1 = 0x80000;
    }
    *0x20001f2c = r1;
    return 0;
}

int32_t sub_15fc6(int32_t arg1, int32_t* arg2)
{
    int32_t r0_5;
    int32_t r0_4;
    if (*0x200004e4 != 0x746f6f62)
    {
        r0_4 = 0x4300000c;
    label_16052:
        sub_1681c(r0_4);
        r0_5 = 0x52524521;
    }
    else
    {
        sub_19b06();
        sub_19c0c(0xf3);
        int32_t var_24;
        int32_t r0_2 = sub_86f6(*0x20001f2c, &var_24);
        int32_t r0_3 = var_24;
        if ((r0_3 | 8) == 8)
        {
        label_1603e:
            __builtin_strncpy(0x200004e4, "APP ", 4);
            r0_4 = 0x4300000f;
            goto label_16052;
        }
        uint32_t r2_2 = *0x20001d7c;
        if (((r0_3 - 0x10) <= 0x28 && r2_2 == 1))
        {
            goto label_1603e;
        }
        if (((r0_3 - 0x40) <= 0x18 && r2_2 == 2))
        {
            goto label_1603e;
        }
        if (r0_2 != 0)
        {
            if (sub_19b40(r0_3, 2) != 8)
            {
                sub_19b2e();
                __builtin_strncpy(0x200004e4, "APP ", 4);
                r0_4 = 0x43000010;
                goto label_16052;
            }
            sub_196cc(0xa);
        }
        int32_t r5_1 = (arg1 & 0x1ff);
        if (r5_1 != 0)
        {
            void* r0_7 = *0x20001f2c;
            int32_t r6_1 = 0;
            int32_t r0_9;
            do
            {
                r0_9 = sub_19bc4((r0_7 + 0x8000000), *(arg2 + r6_1));
                if (r0_9 != 8)
                {
                    break;
                }
                r6_1 = (r6_1 + 4);
                r0_7 = (*0x20001f2c + 4);
                *0x20001f2c = r0_7;
            } while (r6_1 < r5_1);
            if (r0_9 != 8)
            {
                sub_19b2e();
                __builtin_strncpy(0x200004e4, "APP ", 4);
                r0_4 = 0x43000011;
                goto label_16052;
            }
        }
        sub_19b2e();
        r0_5 = 0;
    }
    return r0_5;
}

int32_t sub_160e0()
{
    int32_t r0_1;
    int32_t r0_5;
    if (*0x200004e4 != 0x746f6f62)
    {
        r0_5 = 0x4300000d;
    }
    else
    {
        __builtin_strncpy(0x200004e4, "APP ", 4);
        int32_t* r0 = &data_8000;
        if (*0x20001d7c == 1)
        {
            r0 = &data_80000;
        }
        r0_1 = sub_8688(r0, 0x78000);
        if (r0_1 == 0)
        {
            r0_5 = 0x4300000e;
        }
    }
    int32_t r0_4;
    if ((*0x200004e4 != 0x746f6f62 || (*0x200004e4 == 0x746f6f62 && r0_1 == 0)))
    {
        sub_1681c(r0_5);
        r0_4 = 0x52524521;
    }
    if ((*0x200004e4 == 0x746f6f62 && r0_1 != 0))
    {
        char r0_3 = 1;
        if (*0x20001d7c == 1)
        {
            r0_3 = 2;
        }
        char var_11 = r0_3;
        sub_17e1c(5, &var_11, 1);
        r0_4 = 0;
    }
    return r0_4;
}

int32_t sub_163a4(int32_t arg1, void* arg2 @ r4, int32_t* arg3 @ r6, int32_t arg4 @ r9, int32_t arg5 @ r11, int32_t arg6 @ pc)
{
    if (arg1 > 4)
    {
        return 0xffffffff;
    }
    void* r2_1;
    int32_t r12;
    r2_1 = sub_17ba2(2, "Enabling driver: %d\n", arg1);
    if (arg1 == 0)
    {
        return 0;
    }
    void* r0_2 = *(0x21dac + (arg1 * 0xc));
    int32_t r5;
    int32_t r7;
    int32_t r8;
    switch (r0_2)
    {
        case sub_4000:
        {
            /* tailcall */
            return sub_4000(r0_2, &jump_table_21dac, r2_1, arg2, arg3, arg4, arg5, r12, arg6);
        }
        case 0x16168:
        {
            int32_t var_8_1 = r7;
            int32_t* var_c_1 = arg3;
            void* var_10_1 = arg2;
            if (sub_1a418(0x40005c00, 0x70, 1) < 0)
            {
                return 0xffffffff;
            }
            if (sub_1a468(0x40005c00, 0x70, 0) < 0)
            {
                return 0xfffffffe;
            }
            if (sub_1a488(0x40005c00, 0x70, 8) < 0)
            {
                return 0xfffffffd;
            }
            return (0xfffffffc & (sub_1a440(0x40005c00, 0x70, 1, 0) >> 0x1f));
            break;
        }
        case 0x161c6:
        {
            int32_t var_8_2 = r7;
            int32_t* var_c_2 = arg3;
            void* var_10_2 = arg2;
            if (sub_1a488(0x40005c00, 0x70, 0) < 0)
            {
                return 0xffffffff;
            }
            if (sub_1a440(0x40005c00, 0x70, 0, 0) < 0)
            {
                return 0xfffffffe;
            }
            return (0xfffffffd & (sub_1a418(0x40005c00, 0x70, 0) >> 0x1f));
            break;
        }
        case 0x16210:
        {
            int32_t var_8_3 = r7;
            int32_t* var_c_3 = arg3;
            int32_t var_10_3 = r5;
            void* var_14 = arg2;
            int32_t var_18 = r8;
            int32_t r6_10 = 0;
            int32_t r0_19;
            while (true)
            {
                uint32_t r3_1 = *(0x21dac + r6_10);
                uint32_t r2_2 = *(0x21da4 + r6_10);
                int32_t r0_18;
                if (r3_1 > 0xf)
                {
                    r0_18 = sub_1a4aa(0x40005c00, 0x70, r2_2, 0);
                }
                else
                {
                    r0_18 = sub_1a4d8(0x40005c00, 0x70, r2_2, r3_1);
                }
                if (r0_18 < 0)
                {
                    r0_19 = 0xffffffff;
                    break;
                }
                r6_10 = (r6_10 + 1);
                if (r6_10 >= 4)
                {
                    r0_19 = 0;
                    break;
                }
            }
            return r0_19;
            break;
        }
        case 0x1625c:
        {
            int32_t var_8_4 = r7;
            int32_t* var_c_4 = arg3;
            int32_t var_10_4 = r5;
            void* var_14_1 = arg2;
            int32_t var_18_1 = r8;
            int32_t r6_12 = 0;
            int32_t r0_21;
            while (true)
            {
                if (sub_1a518(0x40005c00, 0x70, *(0x21da8 + r6_12), *(0x21dac + r6_12)) <= 0xffffffff)
                {
                    r0_21 = 0xffffffff;
                    break;
                }
                r6_12 = (r6_12 + 1);
                if (r6_12 > 3)
                {
                    r0_21 = 0;
                    break;
                }
            }
            return r0_21;
            break;
        }
        case 0x162a0:
        {
            int32_t var_8_5 = r7;
            int32_t* var_c_5 = arg3;
            void* var_10_5 = arg2;
            if (sub_16470(0x40005c00, 0x20) < 0)
            {
                return 0xffffffff;
            }
            return (0xfffffffe & (sub_165cc(0x40005c00, 0x20) >> 0x1f));
            break;
        }
        case 0x162d0:
        {
            return 0;
            break;
        }
        case 0x162d4:
        {
            int32_t var_8_6 = r7;
            return (sub_165dc(0x40005c00, 0x20, (r0_2 & 1), &jump_table_21dac) >> 0x1f);
            break;
        }
        case 0x162f0:
        {
            int32_t var_8_7 = r7;
            int32_t* var_c_6 = arg3;
            void* var_10_6 = arg2;
            sub_18820(0x40005c00);
            sub_1822c(0x40005c00, 0x61a80, 0);
            return 0;
            break;
        }
        case 0x16316:
        {
            int32_t var_8_8 = r7;
            int32_t* var_c_7 = arg3;
            void* var_10_7 = arg2;
            sub_18820(0x40005c00);
            sub_1822c(0x40005c00, 0x186a0, 0);
            return 0;
            break;
        }
        case 0x1633c:
        {
            int32_t var_8_9 = r7;
            int32_t var_c_8 = r5;
            void* var_10_8 = arg2;
            uint32_t r3_3 = r0_2;
            int32_t r4_17 = 0;
            int32_t r0_32 = sub_17938(0x40005c00, 0x1c, 0x7359454b, r3_3, &jump_table_21dac, 7, 0, (r3_3 + 0x5dc));
            if (r0_32 <= 0xffffffff)
            {
                if (r0_32 != 0xfffffffc)
                {
                    *0x20001d78 = 0;
                }
                else
                {
                    sub_18d08(0x40005c00, 0x1c, 0x1c, 4, 0x20001d78);
                }
                r4_17 = 0xffffffff;
            }
            return r4_17;
            break;
        }
    }
}

int32_t sub_163e0(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    if (arg1 > 4)
    {
        return 0xffffffff;
    }
    sub_17ba2(2, "Disabling driver: %d\n", arg1);
    if (arg1 == 0)
    {
        return 0;
    }
    /* jump -> *((arg1 * 0xc) + 0x21db0) */
}

int32_t sub_1641e(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0;
    if (arg1 > 4)
    {
        r0 = 0xffffffff;
    }
    else
    {
        sub_17ba2(2, "Writing to driver: %d\n", arg1);
        if (arg1 != 0)
        {
            /* jump -> *((arg1 * 0xc) + 0x21db4) */
        }
        r0 = 0;
    }
    return r0;
}

int32_t sub_16470(int16_t* arg1, int32_t arg2)
{
    sub_1a5ae(arg1, arg2);
    sub_1a5da(arg1, arg2, 7);
    sub_1a640(arg1, arg2, 1);
    sub_1a640(arg1, arg2, 2);
    if (sub_16532(arg1, arg2, 0, 3) >= 0)
    {
        sub_19756(0x1388);
        if (sub_16532(arg1, arg2, 0, 3) >= 0)
        {
            sub_19756(0x1388);
            if (((((sub_16532(arg1, arg2, 0, 3) >= 0 && sub_16532(arg1, arg2, 0, 2) >= 0) && sub_16596(arg1, arg2, 0, 0x28) >= 0) && sub_16596(arg1, arg2, 0, 0xc) >= 0) && sub_16596(arg1, arg2, 0, 1) >= 0))
            {
                return (sub_16596(arg1, arg2, 0, 6) >> 0x1f);
            }
        }
    }
    return 0xffffffff;
}

int32_t sub_16532(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r0 = sub_1a5d0(arg1, arg2, 1, arg3);
    if (r0 >= 0)
    {
        r0 = sub_1a6a8(arg1, arg2, ((sub_1a6d6(arg1, arg2) & 0x83) | (0x78 & (arg4 << 3))));
        if (r0 >= 0)
        {
            r0 = sub_1a5da(arg1, arg2, 2);
            if (r0 >= 0)
            {
                sub_19756(1);
                uint32_t r0_7 = sub_1a640(arg1, arg2, 2);
                r0 = (r0_7 & (r0_7 >> 0x1f));
            }
        }
    }
    return r0;
}

int32_t sub_16596(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0 = sub_16532(arg1, arg2, arg3, (arg4 >> 4));
    if (r0 < 0)
    {
        return r0;
    }
    /* tailcall */
    return sub_16532(arg1, arg2, arg3, (arg4 & 0xf));
}

int32_t sub_165cc(int16_t* arg1, int32_t arg2)
{
    return (sub_16596(arg1, arg2, 0, 2) >> 0x1f);
}

int32_t sub_165dc(int16_t* arg1, int32_t arg2, int32_t arg3, char* arg4)
{
    char* r0 = &jump_table_21dac[0xf];
    if (arg3 != 0)
    {
        r0 = &*jump_table_21dac[0xf][1];
    }
    int32_t r9 = (*r0 | 0x80);
    int32_t r4 = sub_1fedc(arg4);
    int32_t r0_6 = (sub_16596(arg1, arg2, 0, r9) >> 0x1f);
    if (r4 >= 0x10)
    {
        r4 = 0x10;
    }
    if (r0_6 >= 0)
    {
        if (r4 != 0)
        {
            uint32_t r0_7 = 0;
            int32_t r5_1 = 0;
            do
            {
                r0_6 = (sub_16596(arg1, arg2, 1, arg4[r0_7]) >> 0x1f);
                if (r0_6 <= 0xffffffff)
                {
                    return r0_6;
                }
                r5_1 = (r5_1 + 1);
                r0_7 = r5_1;
            } while (r4 > r0_7);
        }
        r0_6 = 0;
    }
    return r0_6;
}

int32_t sub_1664c()
{
    sub_18e20(0x20005044, 0x40020000, 0x800, 0);
    /* tailcall */
    return sub_18e20(0x20005014, 0x40020000, 0x1000, 0);
}

int32_t sub_16682()
{
    sub_18ee8(0x20005044);
    /* tailcall */
    return sub_18ee8(0x20005014);
}

int32_t sub_166a2()
{
    if ((*0x20001f34 != 0 || (*0x20001f34 == 0 && *0x20001f30 == 0)))
    {
        sub_18ebc(0x20005044, *0x20000ad8, 0x3e8);
        *0x20001f30 = 1;
    }
    int32_t r0_2 = sub_18e5a(0x20005014);
    *0x20001f34 = 0;
    return r0_2;
}

void sub_166ee(int32_t arg1)
{
    if (*0x20000ad8 == arg1)
    {
        return;
    }
    *0x20000ad8 = arg1;
    *0x20001f30 = 0;
    if (*0x20001f34 == 0)
    {
        /* tailcall */
        return sub_166a2();
    }
}

int32_t sub_1671e(int32_t arg1)
{
    int32_t r0 = *0x20001f34;
    if (r0 == arg1)
    {
        return r0;
    }
    sub_18ebc(0x20005014, arg1, 0x3e8);
    int32_t r0_1 = sub_18e5a(0x20005044);
    *0x20001f34 = arg1;
    return r0_1;
}

int32_t sub_16756()
{
    return *0x20000ad8;
}

int32_t sub_16764()
{
    *0x20001d70 = (*0x20001d70 + 1);
    sub_17e1c(0, 0x20001d70, 4);
    *0x20001ee8;
    /* tailcall */
    return sub_17ba2(1, "Potassium FW 0x%08X HW %d - Minu…", 0x10400);
}

uint32_t sub_167a4()
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0 = *0x20001f3e;
    if (r0 == 0)
    {
        sub_18e8c(0x20004f44, 0x1f4);
        sub_18e5a(0x20004f74);
        sub_18e5a(0x20004fa4);
        *0x20001d78 = 0x45000002;
        *0x20006064;
        *0x20001d70;
        int32_t r2_1 = sub_17e42(0x45000002);
        *0x20001f3e = 1;
        /* tailcall */
        return sub_17ba2(1, "Heartbeat timeout!\n", r2_1);
    }
    return r0;
}

int32_t sub_1681c(int32_t arg1)
{
    *0x20001d78 = arg1;
    *0x20006064;
    *0x20001d70;
    /* tailcall */
    return sub_17e42(arg1);
}

int32_t sub_1683e()
{
    sub_18ee8(0x20004fa4);
    sub_18ee8(0x20004f74);
    sub_18ee8(0x20004f44);
    /* tailcall */
    return sub_16682();
}

int32_t sub_1686e()
{
    int32_t r0;
    int32_t r1;
    uint32_t r2;
    r0 = sub_17f62(0x20000b14);
    if (r0 != 0)
    {
        int32_t i;
        do
        {
            if (sub_18d5c(0x20005174, 0, sub_17ff6(0x20000b14, r1, r2), 0x20005178, 0x200051f8) != 0)
            {
                sub_85cc(0x20000b28, 0x20005178, *0x200051f8);
                break;
            }
            i = sub_17f62(0x20000b14);
        } while (i != 0);
    }
    return 0;
}

int32_t sub_168ec()
{
    sub_fb0e();
    char r0 = sub_cdd2(0);
    *0x20001d90 = r0;
    sub_8746(3, r0, *0x20006064);
    char r0_1 = sub_cdd2(1);
    *0x20001d91 = r0_1;
    sub_8746(4, r0_1, *0x20006064);
    /* tailcall */
    return sub_b384();
}

int32_t sub_16930(int32_t arg1)
{
    int32_t r5 = (*0x20006064 + arg1);
    int32_t i = (*0x20006064 - r5);
    if (i <= 0xffffffff)
    {
        do
        {
            if (*0x200004e4 != 0x54494e49)
            {
                sub_1cb5c();
                sub_1686e();
                sub_17286();
                sub_8cf2();
                sub_168ec();
                sub_1683e();
            }
            i = (*0x20006064 - r5);
        } while (i < 0);
    }
    return i;
}

int32_t sub_1698c()
{
    int32_t r4 = sub_c9b6(0);
    if (r4 != 0)
    {
        r4 = 1;
    }
    if (j_sub_11c1e() != 0)
    {
        r4 = 2;
    }
    return r4;
}

int32_t sub_169ac(char* arg1, int32_t arg2)
{
    if (sub_8cd8(0xa) != 0)
    {
        sub_17fd0(0x20000b3c, arg1, arg2);
        sub_169d4();
    }
    return 0;
}

uint32_t sub_169d4()
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r4 = *0x20006064;
    uint32_t i = sub_17f92(0x20000b3c);
    if (i == 0)
    {
        do
        {
            if ((*0x20006064 + (0xfffffffe - r4)) >= 0)
            {
                /* tailcall */
                return sub_1806e(0x20000b3c);
            }
            sub_8cf2();
            sub_17286();
            i = sub_17f92(0x20000b3c);
        } while (i == 0);
    }
    return i;
}

int32_t sub_16a36() __noreturn
{
    sub_19952();
    int32_t r0_1;
    int32_t r1;
    r1 = HIGHD((*0x20000ba0 * 0x10624dd3));
    r0_1 = LOWD((*0x20000ba0 * 0x10624dd3));
    if (0 == ((0xffffffff + (r1 >> 6)) >> 0x18))
    {
        *0xe000e014 = (0xffffffff + (r1 >> 6));
        *0xe000ed23 = 0xf0;
        *0xe000e018 = 0;
        *0xe000e010 = 7;
    }
    *0xe000ed23 = 0x50;
    *0xe000ed1f = 0x40;
    sub_196f0();
    sub_18820(0x40005400);
    sub_1807c(&data_21dec, 0x3e);
    sub_19fe8(0x1e0, 0);
    sub_18e20(0x20004fa4, 0x40020400, 0x8000, 1);
    sub_18e20(0x20004f74, 0x40020000, 0x200, 1);
    sub_18e20(0x20004f44, 0x40020000, 0x400, 1);
    sub_1664c();
    sub_1822c(0x40005400, 0x186a0, 0);
    sub_1822c(0x40005c00, 0x186a0, 0);
    int32_t r0_3 = sub_17cc4(0x20004fd4);
    if (r0_3 <= 0xffffffff)
    {
        sub_1671e(1);
        while (true)
        {
            sub_18ee8(0x20005014);
        }
    }
    else
    {
        sub_13c74();
        uint32_t r0_4 = *0x20001ee8;
        char var_8c;
        if (r0_4 <= 3)
        {
            int32_t* r0_5 = &data_8000;
            if (*0x20001d7c == 1)
            {
                r0_5 = &data_80000;
            }
            if (sub_8688(r0_5, 0x78000) != 0)
            {
                char r0_8 = 1;
                if (*0x20001d7c == 1)
                {
                    r0_8 = 2;
                }
                var_8c = r0_8;
                sub_17e1c(5, &var_8c, 1);
                sub_13ea4();
                /* no return */
            }
            sub_1671e(5);
            while (true)
            {
                sub_18ee8(0x20005014);
            }
        }
        else
        {
            if (r0_4 > 4)
            {
                sub_1818c(0x40021000, 0x800);
            }
            else
            {
                sub_18190(0x40021000, 0x800);
            }
            sub_1812e(0x40021000, 0x800);
            if (r0_3 == 0)
            {
                int32_t i = 0x17;
                char* r1_4 = &var_8c;
                do
                {
                    char r3_1 = *(0x20001eec + i);
                    i = (i - 1);
                    *r1_4 = r3_1;
                    r1_4 = &r1_4[1];
                } while (i != 6);
                if (sub_17854(&var_8c) == 0)
                {
                    sub_1671e(4);
                    while (true)
                    {
                        sub_18ee8(0x20005014);
                    }
                }
            }
            j_sub_195ba(sub_16764, 0, 0xea60);
            sub_8422();
            sub_1b08a(0x20005620, 0, 0x224b4, 0x20000b5c);
            sub_8334(0);
            sub_196cc(1);
            sub_8362();
            sub_1adb0(0x40005400, 0x2c, 0x20005074);
            sub_1ae14(0x40005400, 0x2c);
            sub_17718(0x40012000);
            sub_17b7c(sub_169ac);
            sub_1806e(0x20000aec);
            sub_1806e(0x20000b00);
            sub_1c83a(0x20000b00, 0x20000aec);
            sub_1ca3c(*0x20000518);
            sub_1806e(0x20000b14);
            sub_1806e(0x20000b28);
            sub_1806e(0x20000b3c);
            sub_8b7e(0xa, 0x20000b3c, 0, &data_115d);
            if (sub_17b96() != 0)
            {
                sub_8bd4(0xa, 1);
            }
            sub_8c64(1);
            if (*0x20001f3c != 0)
            {
                while (true)
                {
                    if (sub_8cd8(0xa) != 0)
                    {
                        break;
                    }
                    sub_8cf2();
                    sub_17286();
                }
            }
            int32_t pc;
            sub_163a4(*0x20000500, 0x20000b3c, 0x20000b00, 0xe000ed1f, 0x200004f0, pc);
            int32_t r1_5 = *0x20000500;
            bool cond:3 = r1_5 != 4;
            if (r1_5 == 4)
            {
                cond:3 = *0x200004f8 != 3;
            }
            int32_t var_f4;
            void var_d4;
            void var_bc;
            void var_b6;
            void var_b1;
            int32_t* r0_28;
            int32_t r1_7;
            if (cond:3)
            {
                int32_t var_f0_1 = 0xa27;
                var_f4 = 1;
                int32_t var_ec_1 = 0xd0020003;
                int32_t var_e8_1 = *0x20001da0;
                int32_t var_e4_1 = *0x20001da4;
                int32_t var_e0_1 = *0x20001da8;
                int32_t var_dc_1 = *0x20001dac;
                int32_t var_d8_1 = 0x10400;
                sub_1ff48(&var_d4, 0x20001eb0, 0x18);
                sub_1ff48(&var_bc, 0x20001ec8, 6);
                sub_1ff48(&var_b6, 0x20001ece, 5);
                sub_1ff48(&var_b1, 0x20001ed3, 6);
                char var_ab_1 = *0x20001ee8;
                sub_1aa56();
                uint32_t r0_35 = sub_1a704(&var_8c, 0x4a);
                int32_t r0_37;
                if (r0_35 == 0x4a)
                {
                    r0_37 = sub_1f894(&var_8c, &var_f4, 0x4a);
                }
                if ((r0_35 != 0x4a || (r0_35 == 0x4a && r0_37 != 0)))
                {
                    r0_28 = &var_f4;
                    r1_7 = 0x4a;
                label_16eb8:
                    sub_1a8d0(r0_28, r1_7);
                }
            }
            else
            {
                int32_t var_f0 = 0xa27;
                var_f4 = 3;
                int32_t var_ec = 0xd0020003;
                int32_t var_e8 = *0x20001da0;
                int32_t var_e4 = *0x20001da4;
                int32_t var_e0 = *0x20001da8;
                int32_t var_dc = *0x20001dac;
                int32_t var_d8 = 0x10400;
                sub_1ff48(&var_d4, 0x20001eb0, 0x18);
                sub_1ff48(&var_bc, 0x20001ec8, 6);
                sub_1ff48(&var_b6, 0x20001ece, 5);
                sub_1ff48(&var_b1, 0x20001ed3, 6);
                char var_ab = *0x20001ee8;
                void var_aa;
                sub_1f886(&var_aa, 0, 0x1c);
                sub_18d08(0x40005c00, 0x1c, 0xf, 4, &var_aa);
                void var_a6;
                sub_18d08(0x40005c00, 0x1c, 0x17, 0x18, &var_a6);
                sub_1aa56();
                uint32_t r0_25 = sub_1a704(&var_8c, 0x66);
                int32_t r0_27;
                if (r0_25 == 0x66)
                {
                    r0_27 = sub_1f894(&var_8c, &var_f4, 0x66);
                }
                if ((r0_25 != 0x66 || (r0_25 == 0x66 && r0_27 != 0)))
                {
                    r0_28 = &var_f4;
                    r1_7 = 0x66;
                    goto label_16eb8;
                }
            }
            sub_1aaa0();
            if ((*0x200004f8 - 1) > 1)
            {
                sub_18190(0x40021000, 4);
            }
            else
            {
                sub_1818c(0x40021000, 4);
            }
            *0xe000e423 = 0x20;
            *0xe000e433 = 0x30;
            *0xe000ed22 = 0x40;
            sub_1da98();
            sub_fa80();
            sub_cd7c(0x20000adc, 0x20000ae4);
            sub_b318();
            if (*0x200004f8 == 1)
            {
                sub_1dbc4(0, 1);
                sub_1dcfc(0, (sub_1dd12(0) | 2));
            }
            int32_t r2_2 = sub_166a2();
            __builtin_strncpy(0x200004e4, "APP ", 4);
            sub_17ba2(1, "Potassium Entered App\n", r2_2);
            while (true)
            {
                sub_1cb5c();
                if (j_sub_11c32() != 0)
                {
                    sub_a004();
                }
                sub_1686e();
                sub_17286();
                sub_8cf2();
                sub_168ec();
                sub_13df0();
                sub_1683e();
                sub_19640();
                __wfi();
            }
        }
    }
}

int32_t sub_16fb0()
{
    if (*0x2000562a != 0)
    {
        *0xe000ed10 = (*0xe000ed10 & 0xfffffff9);
        sub_19838(1);
        sub_1bd84(0x20005620);
    }
    /* tailcall */
    return sub_19afa(0x100000);
}

int32_t sub_16fee()
{
    /* tailcall */
    return sub_1bda0(0x20005620);
}

int32_t sub_17004()
{
    int32_t var_2c = 0;
    int32_t var_28 = 0;
    sub_19fe8(7, 1);
    sub_19cee(0x40020000, 3, 0xa);
    sub_19cee(0x40020000, 5, 0xa);
    sub_19cee(0x40020400, 0, 0xa);
    sub_19cee(0x40020400, 1, 0xa);
    sub_19cee(0x40020400, 5, 0xa);
    sub_19cee(0x40020400, 0xa, 0xa);
    sub_19cee(0x40020400, 0xb, 0xa);
    sub_19cee(0x40020400, 0xc, 0xa);
    sub_19cee(0x40020400, 0xd, 0xa);
    sub_19cee(0x40020800, 3, 0xa);
    sub_19cee(0x40020800, 2, 0xa);
    sub_19cee(0x40020800, 0, 0xa);
    int32_t var_30 = 3;
    int32_t var_38 = 0x20;
    int32_t var_34 = 2;
    sub_19c50(0x40020000, &var_38);
    int32_t var_30_1 = 3;
    var_38 = 8;
    int32_t var_34_1 = 2;
    int32_t var_2c_1 = 0;
    int32_t var_28_1 = 0;
    sub_19c50(0x40020000, &var_38);
    int32_t var_30_2 = 3;
    var_38 = 0x3c23;
    int32_t var_34_2 = 2;
    int32_t var_2c_2 = 0;
    int32_t var_28_2 = 0;
    sub_19c50(0x40020400, &var_38);
    int32_t var_30_3 = 3;
    var_38 = 1;
    int32_t var_34_3 = 2;
    sub_19c50(0x40020800, &var_38);
    int32_t var_30_4 = 3;
    var_38 = 8;
    int32_t var_34_4 = 2;
    sub_19c50(0x40020800, &var_38);
    int32_t var_30_5 = 3;
    var_38 = 4;
    int32_t var_34_5 = 2;
    sub_19c50(0x40020800, &var_38);
    return sub_19fe8(0x60000000, 1);
}

void sub_17140()
{
    *0xe000e44d = 0x50;
    *0xe000e44a = 0x50;
    *0xe000e44b = 0x50;
    *0xe000e108 = 0x2000;
    *0xe000e108 = 0x400;
    *0xe000e108 = 0x800;
}

int32_t sub_1716e(int32_t arg1, char* arg2)
{
    if (arg1 == 0x21)
    {
        int32_t r0_5 = *0x20000b54;
        *arg2 = r0_5;
        arg2[1] = (r0_5 >> 8);
        arg2[2] = (r0_5 >> 0x10);
        arg2[3] = (r0_5 >> 0x18);
        arg2[4] = *0x20005200;
        arg2[5] = *0x20005204;
        arg2[6] = *0x20000b58;
    }
    else if (arg1 == 0x20)
    {
        *0x20000b54 = (((*arg2 | (arg2[1] << 8)) | (arg2[2] << 0x10)) | (arg2[3] << 0x18));
        *0x20005200 = arg2[4];
        *0x20005204 = arg2[5];
        *0x20000b58 = arg2[6];
    }
    return 0;
}

int32_t sub_171fc(char* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r5;
    uint32_t r12;
    if ((*0x200004e4 != 0x6b62704c && arg2 != 0))
    {
        r5 = 0;
        do
        {
            if (sub_17f8e(0x20000b00) != 0)
            {
                break;
            }
            uint32_t r6_1 = arg1[r5];
            int32_t r0_4;
            if (arg3 == 1)
            {
                r0_4 = sub_8874(r6_1);
            }
            if ((arg3 != 1 || (arg3 == 1 && r0_4 == 0)))
            {
                sub_17f96(0x20000b00, r6_1, r12);
            }
            r5 = (r5 + 1);
        } while (arg2 != r5);
    }
    if (((*0x200004e4 != 0x6b62704c && arg2 == 0) || (*0x200004e4 == 0x6b62704c && arg2 == 0)))
    {
        r5 = 0;
    }
    if ((*0x200004e4 == 0x6b62704c && arg2 != 0))
    {
        r5 = 0;
        do
        {
            if (sub_17f8e(0x20000aec) != 0)
            {
                break;
            }
            sub_17f96(0x20000aec, arg1[r5], r12);
            r5 = (r5 + 1);
        } while (arg2 != r5);
    }
    return r5;
}

uint32_t sub_17286()
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0 = *0x2000521c;
    if (r0 != 0)
    {
        int32_t r0_1 = sub_17f62(0x20000aec);
        uint32_t r2_1;
        r0 = sub_17f62(0x2000002c);
        if (r0 != (-r0_1))
        {
            int32_t i = 0;
            char* r5_1 = 0x2000521e;
            int32_t r0_3;
            int32_t i_2;
            if (*0x200004e4 == 0x6b62704c)
            {
                i_2 = 0x200;
            }
            else
            {
                do
                {
                    r0_3 = sub_1802e(0x2000002c, (0x2000521e + i), r2_1);
                    if (r0_3 != 0)
                    {
                        break;
                    }
                    i = (i + 1);
                } while (i != 0x200);
                if (r0_3 != 0)
                {
                    i_2 = (0x200 - i);
                    r5_1 = (0x2000521e + i);
                }
            }
            if ((*0x200004e4 == 0x6b62704c || (*0x200004e4 != 0x6b62704c && r0_3 != 0)))
            {
                int32_t i_1;
                do
                {
                    if (sub_1802e(0x20000aec, r5_1, r2_1) != 0)
                    {
                        break;
                    }
                    i_1 = i_2;
                    i_2 = (i_2 - 1);
                    r5_1 = &r5_1[1];
                    i = (i + 1);
                } while (i_1 != 1);
            }
            *0x2000521c = 0;
            sub_1c394(0x20005620, 0x82, 0x2000521e, i);
            int32_t r0_5 = sub_17f62(0x20000aec);
            r0 = sub_17f62(0x2000002c);
            if ((i == 0x200 && r0 == (0 - r0_5)))
            {
                *0x2000521d = 1;
            }
        }
    }
    *0x200051fc = 0;
    int32_t r1_4 = *0x20005208;
    if (r1_4 != 0)
    {
        int32_t r0_7 = sub_171fc(*0x20000b50, r1_4, 1);
        *0x20000b50 = (*0x20000b50 + r0_7);
        int32_t r1_7 = *0x20005208;
        r0 = (r1_7 - r0_7);
        *0x20005208 = r0;
        if (r1_7 == r0_7)
        {
            *0x20000b50 = 0x2000541e;
            /* tailcall */
            return sub_1c34a(0x20005620, 2, 0x2000541e, 0x200);
        }
    }
    return r0;
}

int32_t sub_173d8(void* arg1)
{
    if (*0x20005c84 == 1)
    {
        sub_17454(arg1);
    }
    sub_1c2d2(arg1, 0x82, 0x200, 2);
    sub_1c2d2(arg1, 2, 0x200, 2);
    sub_1c2d2(arg1, 0x83, 0x10, 3);
    *0x2000521c = 1;
    *0x2000521d = 0;
    sub_1c34a(arg1, 2, 0x2000541e, 0x200);
    *0x20005c84 = 1;
    return 0;
}

int32_t sub_17454(void* arg1)
{
    sub_1c462(arg1, 0x82);
    sub_1c462(arg1, 0x83);
    *0x2000521d = 0;
    *0x2000521c = 0;
    sub_1c31a(arg1, 0x82);
    sub_1c31a(arg1, 2);
    sub_1c31a(arg1, 0x83);
    *0x20005c84 = 0;
    return 0;
}

uint32_t sub_174a4(void* arg1, char* arg2)
{
    uint32_t r1 = *arg2;
    int32_t r0 = (r1 & 0x60);
    char r6;
    int32_t r1_2;
    uint32_t r2_1;
    if (r0 == 0x40)
    {
        uint32_t r0_3 = arg2[1];
        if (r0_3 != 0x40)
        {
            if (r0_3 != 0xa0)
            {
                goto label_175ca;
            }
            uint32_t r0_4 = *(arg2 + 2);
            if (r0_4 == 3)
            {
                uint32_t r2_5 = *(arg2 + 6);
                if ((r2_5 - 1) >= 4)
                {
                    goto label_175ca;
                }
                sub_1b0f4(arg1, 0x20005c8c, r2_5);
                uint32_t r0_12 = *0x20005c8c;
                if ((r0_12 == 8 || r0_12 == 4))
                {
                    *0x20005cd4 = 1;
                }
                goto label_17574;
            }
            if (r0_4 == 2)
            {
                *0x20005c8c = 2;
                uint32_t r1_5 = *(arg2 + 6);
                *0x20005c8e = r1_5;
                uint32_t r0_13 = *(arg2 + 4);
                *0x20005c8f = r0_13;
                if ((r1_5 - 1) >= 0x40)
                {
                    goto label_175ca;
                }
                *0x20005cd0 = r1_5;
                sub_18b7a(r0_13, 0x20005c90, 0x20005cd0);
                int32_t r0_16 = *0x20005cd0;
                uint32_t r2_8 = *(arg2 + 6);
                if (r0_16 < r2_8)
                {
                    r2_8 = r0_16;
                }
                sub_1b0f4(arg1, 0x20005c90, r2_8);
                *0x20005c8c = 4;
                *0x20005c8d = *0x20005cd0;
                goto label_17574;
            }
            if (r0_4 != 1)
            {
                goto label_175ca;
            }
            *0x20005c8c = 1;
            r2_1 = *(arg2 + 6);
            *0x20005c8e = r2_1;
            *0x20005c8f = arg2[4];
            if (r2_1 >= 0x41)
            {
                goto label_175ca;
            }
            r1_2 = 0x20005c90;
        label_174ee:
            sub_1b126(arg1, r1_2, r2_1);
            goto label_17574;
        }
        *(arg2 + 2);
        sub_17ba2(4, "Got AEPP Message: U0EP: %dmA U3E…", *(arg2 + 4));
        sub_1b158(arg1);
    label_17574:
        r6 = 0;
    }
    else if (r0 != 0x20)
    {
    label_175ca:
        sub_1b3de(arg1);
        r6 = 2;
    }
    else
    {
        r2_1 = *(arg2 + 6);
        if (r2_1 != 0)
        {
            uint32_t r0_1 = arg2[1];
            if ((r1 << 0x18) < 0)
            {
                sub_1716e(r0_1, 0x2000520c);
                sub_1b0f4(arg1, 0x2000520c, *(arg2 + 6));
                goto label_17574;
            }
            *0x20000b78 = r0_1;
            if (r2_1 >= 0x10)
            {
                r2_1 = 0x10;
            }
            r1_2 = 0x2000520c;
            *0x20005c88 = r2_1;
            goto label_174ee;
        }
        r6 = 0;
        sub_1716e(arg2[1], arg2);
        sub_1b158(arg1);
    }
    return r6;
}

int32_t sub_17618()
{
    if (*0x20005cd4 == 1)
    {
        *0x20005c8c = 0;
    }
    *0x20005cd4 = 0;
    return 0;
}

int32_t sub_1763a()
{
    int32_t r0 = *0x20000b78;
    if (r0 != 0xff)
    {
        *0x20005c88;
        sub_1716e(r0, 0x2000520c);
        *0x20000b78 = 0xff;
    }
    else
    {
        uint32_t r0_1 = *0x20005c8f;
        *0x20005cd0 = *0x20005c8e;
        uint32_t r0_2 = sub_18bc6(r0_1, 0x20005c90, 0x20005cd0);
        char r2 = 8;
        *0x20005c8d = *0x20005cd0;
        if (r0_2 == *0x20005c8e)
        {
            r2 = 4;
        }
        *0x20005c8c = r2;
    }
    return 0;
}

int32_t sub_176a0(void* arg1, int32_t arg2)
{
    if (arg2 == 2)
    {
        if (*0x2000521d == 0)
        {
            *0x2000521c = 1;
        }
        else
        {
            sub_1c394(arg1, 2, 0, 0);
            *0x2000521d = 0;
        }
    }
    return 0;
}

int32_t sub_176d4(void* arg1, int32_t arg2)
{
    if (arg2 == 2)
    {
        int32_t r1 = *(arg1 + 0x424);
        *0x20005208 = r1;
        if (r1 == 0)
        {
            sub_1c34a(arg1, 2, 0x2000541e, 0x200);
        }
    }
    return 0;
}

int32_t sub_17708() __pure
{
    return;
}

int32_t sub_1770a() __pure
{
    return;
}

int32_t sub_1770c() __pure
{
    return;
}

int32_t sub_1770e() __pure
{
    return;
}

int32_t sub_17710() __pure
{
    return;
}

int32_t sub_17712() __pure
{
    return;
}

int32_t sub_17714() __pure
{
    return;
}

void* sub_17718(void* arg1)
{
    int32_t r0;
    if (arg1 == 0x40012200)
    {
        r0 = 0x400;
    }
    if (arg1 == 0x40012100)
    {
        r0 = 0x200;
    }
    if (arg1 == 0x40012000)
    {
        r0 = 0x100;
    }
    if (((arg1 == 0x40012200 || arg1 == 0x40012100) || arg1 == 0x40012000))
    {
        sub_1a018(r0, 1);
    }
    void var_34;
    sub_1f886(&var_34, 0, 0x18);
    char var_1c = 1;
    int32_t var_3c = 0;
    int32_t var_38 = 0;
    int32_t var_44 = 0;
    int32_t var_40 = 0;
    sub_19a2a(&var_44);
    sub_199d0(arg1, &var_34);
    sub_19a5e(arg1, 1);
    return arg1;
}

int32_t sub_17798(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    sub_19a70(arg1, arg2, 1, 5);
    int32_t r11 = 0;
    int32_t r0_2;
    int32_t r0_10;
    int32_t r6_1;
    if (arg3 != 0)
    {
        int32_t r4_1 = 0;
        do
        {
            sub_19ada(arg1);
            r6_1 = *0x20006064;
            r0_2 = sub_19aee(arg1, 2);
            if (r0_2 == 0)
            {
                while ((*0x20006064 + (0xffffff9c - r6_1)) <= 0xffffffff)
                {
                    if (sub_19aee(arg1, 2) != 0)
                    {
                        break;
                    }
                }
                if ((*0x20006064 + (0xffffff9c - r6_1)) > 0xffffffff)
                {
                    break;
                }
            }
            r4_1 = (r4_1 + 1);
            r11 = (r11 + sub_19ae6(arg1));
        } while (r4_1 < arg3);
        if ((r0_2 == 0 && (*0x20006064 + (0xffffff9c - r6_1)) > 0xffffffff))
        {
            r0_10 = 0xffffffff;
        }
    }
    if ((arg3 == 0 || (arg3 != 0 && (!(r0_2 == 0 && (*0x20006064 + (0xffffff9c - r6_1)) > 0xffffffff)))))
    {
        r0_10 = (r11 / arg3);
    }
    return r0_10;
}

uint32_t sub_17818(char arg1) __pure
{
    char r0;
    if ((arg1 - 0x30) <= 9)
    {
        r0 = (arg1 - 0x30);
    }
    else if ((arg1 - 0x41) <= 7)
    {
        r0 = (arg1 - 0x37);
    }
    else if ((arg1 - 0x4a) <= 4)
    {
        r0 = (arg1 - 0x38);
    }
    else if ((arg1 - 0x50) <= 0xa)
    {
        r0 = (arg1 - 0x39);
    }
    else
    {
        r0 = 0;
    }
    return r0;
}

int32_t sub_17854(char* arg1)
{
    int32_t i = 0;
    int32_t r5 = 0;
    do
    {
        uint32_t r0_1 = sub_17818(arg1[i]);
        bool cond:0_1 = (i & 1) != 0;
        i = (i + 1);
        if (cond:0_1)
        {
            r0_1 = (r0_1 * 3);
        }
        r5 = (r5 + r0_1);
    } while (i != 0x11);
    int32_t r0_5 = 0;
    if ((r5 % 0x22) == 0)
    {
        r0_5 = 1;
    }
    return r0_5;
}

int32_t sub_178a0() __noreturn
{
    uint32_t r4 = *0x1fff0000;
    int32_t r5 = *0x1fff0004;
    sub_19f08();
    *0xe000e010 = 0;
    *0xe000e014 = 0;
    *0xe000e018 = 0;
    __msr(1);
    __msr(r4);
    r5(1, 0);
    while (true)
    {
        /* nop */
    }
}

uint32_t sub_178d0(int32_t arg1, char* arg2, int32_t arg3)
{
    if (arg3 == 0)
    {
        *arg2 = arg1;
        uint32_t r0 = (arg1 >> 0x18);
        arg2[1] = (arg1 >> 8);
        arg2[2] = (arg1 >> 0x10);
        arg2[3] = r0;
        return r0;
    }
    /* tailcall */
    return sub_178d2(arg1, arg2);
}

uint32_t sub_178d2(int32_t arg1, char* arg2)
{
    arg2[3] = arg1;
    uint32_t r0 = (arg1 >> 0x18);
    arg2[1] = (arg1 >> 0x10);
    arg2[2] = (arg1 >> 8);
    *arg2 = r0;
    return r0;
}

uint32_t sub_178f6(char* arg1, uint32_t* arg2, int32_t arg3)
{
    if (arg3 == 0)
    {
        uint32_t r0_2 = (((*arg1 | (arg1[1] << 8)) | (arg1[2] << 0x10)) | (arg1[3] << 0x18));
        *arg2 = r0_2;
        return r0_2;
    }
    /* tailcall */
    return sub_178f8(arg1, arg2);
}

uint32_t sub_178f8(char* arg1, uint32_t* arg2)
{
    uint32_t r0_1 = (((arg1[3] | (arg1[2] << 8)) | (arg1[1] << 0x10)) | (*arg1 << 0x18));
    *arg2 = r0_1;
    return r0_1;
}

int32_t sub_17928()
{
    return syscall();
}

int32_t sub_1792c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    /* jump -> arg4 */
}

int32_t sub_17938(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t* arg5, int32_t arg6, int32_t arg7, int32_t arg8)
{
    int32_t var_2c = arg4;
    int32_t var_28 = arg3;
    int32_t r9_2;
    if (sub_18cb8(arg1, arg2, 0x11, 4, &var_2c) < 0)
    {
    label_17aa8:
        r9_2 = 0xfffffffd;
    }
    else
    {
        int32_t r0_2 = arg6;
        int32_t r6_1;
        int32_t r9_1;
        int32_t r10_1;
        if (r0_2 >= 0xc1)
        {
            r9_1 = (r0_2 + 0x40);
            r10_1 = 0x40;
            r6_1 = 0x40;
        }
        if ((r0_2 < 0xc1 && r0_2 >= 0x81))
        {
            r10_1 = (r0_2 + 0x80);
            r6_1 = 0x40;
            r9_1 = 0;
        }
        if ((r0_2 >= 0xc1 || (r0_2 < 0xc1 && r0_2 >= 0x81)))
        {
            r0_2 = 0x40;
        label_17990:
            if (sub_18cb8(arg1, arg2, 0x12, r0_2, arg5) < 0)
            {
                goto label_17aa8;
            }
            if (((r6_1 << 0x18) != 0 && sub_18cb8(arg1, arg2, 0x13, r6_1, &arg5[0x10]) < 0))
            {
                goto label_17aa8;
            }
            if (((r10_1 << 0x18) != 0 && sub_18cb8(arg1, arg2, 0x14, r10_1, &arg5[0x20]) < 0))
            {
                goto label_17aa8;
            }
            if ((r9_1 << 0x18) == 0)
            {
                goto label_17a24;
            }
            if (sub_18cb8(arg1, arg2, 0x15, r9_1, &arg5[0x30]) < 0)
            {
                goto label_17aa8;
            }
            goto label_17a24;
        }
        if ((r0_2 < 0xc1 && r0_2 < 0x81))
        {
            if (r0_2 >= 0x41)
            {
                r6_1 = (r0_2 + 0xc0);
                r0_2 = 0x40;
                r9_1 = 0;
                r10_1 = 0;
                goto label_17990;
            }
            if ((r0_2 & 0xff) != 0)
            {
                r9_1 = 0;
                r10_1 = 0;
                r6_1 = 0;
                goto label_17990;
            }
        label_17a24:
            if (sub_18cb8(arg1, arg2, 0x10, 4, &var_28) < 0)
            {
                goto label_17aa8;
            }
            int32_t r6_2 = (*0x20006064 + arg8);
            while (true)
            {
                sub_19756(0x1f4);
                if ((*0x20006064 - r6_2) > 0xffffffff)
                {
                    r9_2 = 0xffffffff;
                    break;
                }
                int32_t var_30;
                if (sub_18d08(arg1, arg2, 0x10, 4, &var_30) >= 0)
                {
                    int32_t r0_24 = var_30;
                    if (r0_24 == 0x52524521)
                    {
                        r9_2 = 0xfffffffc;
                        break;
                    }
                    if (r0_24 == 0x444d4321)
                    {
                        r9_2 = 0xfffffff8;
                        break;
                    }
                    if (r0_24 != 0)
                    {
                        continue;
                    }
                    else
                    {
                        r9_2 = arg7;
                        if (r9_2 == 0)
                        {
                            r9_2 = 0;
                            break;
                        }
                        char r0_25;
                        int32_t* r6_3;
                        int32_t r8_2;
                        int32_t r10_2;
                        int32_t r11_1;
                        if (r9_2 >= 0xc1)
                        {
                            r6_3 = arg5;
                            r8_2 = (r9_2 + 0x40);
                            r0_25 = 0x40;
                            r11_1 = 0x40;
                            r10_2 = 0x40;
                        }
                        else if (r9_2 >= 0x81)
                        {
                            r6_3 = arg5;
                            r10_2 = (r9_2 + 0x80);
                            r8_2 = 0;
                            r0_25 = 0x40;
                            r11_1 = 0x40;
                        }
                        else
                        {
                            r6_3 = arg5;
                            if (r9_2 < 0x41)
                            {
                                r11_1 = 0;
                                r0_25 = r9_2;
                                r10_2 = 0;
                            }
                            else
                            {
                                r11_1 = (r9_2 + 0xc0);
                                r10_2 = 0;
                                r0_25 = 0x40;
                            }
                            r8_2 = 0;
                        }
                        if (sub_18d08(arg1, arg2, 0x12, r0_25, r6_3) >= 0)
                        {
                            uint32_t r0_32;
                            if ((r11_1 << 0x18) != 0)
                            {
                                r0_32 = sub_18d08(arg1, arg2, 0x13, r11_1, &r6_3[0x10]);
                            }
                            if (((r11_1 << 0x18) == 0 || ((r11_1 << 0x18) != 0 && r0_32 >= 0)))
                            {
                                uint32_t r0_36;
                                if ((r10_2 << 0x18) != 0)
                                {
                                    r0_36 = sub_18d08(arg1, arg2, 0x14, r10_2, &r6_3[0x20]);
                                }
                                if (((r10_2 << 0x18) == 0 || ((r10_2 << 0x18) != 0 && r0_36 >= 0)))
                                {
                                    if ((r8_2 << 0x18) == 0)
                                    {
                                        break;
                                    }
                                    if (sub_18d08(arg1, arg2, 0x15, r8_2, &r6_3[0x30]) >= 0)
                                    {
                                        break;
                                    }
                                }
                            }
                        }
                    }
                }
                r9_2 = 0xfffffffe;
                break;
            }
        }
    }
    return r9_2;
}

int32_t sub_17b7c(int32_t arg1)
{
    *0x20005d4c = arg1;
    return 0;
}

void sub_17b8a(int32_t arg1)
{
    *0x20005d50 = arg1;
}

uint32_t sub_17b96()
{
    return *0x20005d50;
}

int32_t sub_17ba2(int32_t arg1, char* arg2, int32_t arg3)
{
    int32_t r3;
    int32_t var_4 = r3;
    int32_t var_8 = arg3;
    int32_t r2 = 0xfffffff2;
    if ((*0x20005d50 >= arg1 && *0x20005d4c != 0))
    {
        int32_t* var_14_1 = &var_8;
        r2 = sub_17be4(arg1, arg2, &var_8);
    }
    return r2;
}

int32_t sub_17be4(int32_t arg1, char* arg2, char* arg3)
{
    char var_12a = 0;
    int32_t var_130 = arg1;
    sub_1fea4(&var_12a, 0x12, "%d [%d]: ", *0x20006064);
    sub_1fe34(&&var_12a[sub_1fedc(&var_12a)], 0xff, arg2, arg3);
    return *0x20005d4c(&var_12a, sub_1fedc(&var_12a));
}

int32_t sub_17c48(int32_t arg1, char* arg2, int32_t arg3)
{
    int32_t r3;
    int32_t var_4 = r3;
    int32_t var_8 = arg3;
    int32_t r0 = 0xfffffff2;
    if ((*0x20005d50 >= arg1 && *0x20005d4c != 0))
    {
        int32_t* var_14_1 = &var_8;
        r0 = sub_17c8c(arg2, &var_8);
    }
    return r0;
}

int32_t sub_17c8c(char* arg1, char* arg2)
{
    char var_122 = 0;
    sub_1fe34(&var_122, 0xff, arg1, arg2);
    return *0x20005d4c(&var_122, sub_1fedc(&var_122));
}

int32_t sub_17cc4(char* arg1)
{
    int32_t r0_2;
    if (sub_8298(0, arg1, 0x40) < 0)
    {
        r0_2 = 0xfffffffc;
    }
    else
    {
        char var_11;
        sub_8298(0x47, &var_11, 1);
        if (var_11 == 0x5a)
        {
            r0_2 = 0xfffffff0;
        }
        else
        {
            uint32_t r12_1 = *(arg1 + 0x3e);
            if ((r12_1 != 0xffff || (r12_1 == 0xffff && *(arg1 + 0x28) != 0xffff)))
            {
                uint32_t r3_1 = 0xffff;
                int32_t i = 0;
                do
                {
                    uint32_t r4_1 = (r3_1 ^ arg1[i]);
                    int32_t j_1 = 0xfffffff8;
                    int32_t j;
                    do
                    {
                        r3_1 = ((r4_1 >> 1) & 0x7fff);
                        if ((r4_1 & 1) != 0)
                        {
                            r3_1 = (r3_1 ^ 0xa001);
                        }
                        j = j_1;
                        j_1 = (j_1 + 1);
                        r4_1 = r3_1;
                    } while (j != 0xffffffff);
                    i = (i + 1);
                } while (i != 0x3e);
                r0_2 = 0xfffffff7;
                if (r12_1 == r3_1)
                {
                    r0_2 = 0;
                }
            }
            if ((r12_1 == 0xffff && *(arg1 + 0x28) == 0xffff))
            {
                sub_1f886(arg1, 0, 0x40);
                r0_2 = 1;
            }
        }
    }
    return r0_2;
}

int32_t sub_17d58(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + 0x40) + arg3) >= 0x1000)
    {
        arg3 = 0;
        if (0 == ((arg1 + 0x40) >> 0xc))
        {
            arg3 = (0xfbf - arg1);
        }
    }
    /* tailcall */
    return sub_8298((arg1 + 0x40), arg2, arg3);
}

uint32_t sub_17d7e(void* arg1)
{
    uint32_t r1 = 0xffff;
    int32_t i = 0;
    do
    {
        uint32_t r3_1 = (r1 ^ *(arg1 + i));
        int32_t j_1 = 0xfffffff8;
        int32_t j;
        do
        {
            r1 = ((r3_1 >> 1) & 0x7fff);
            if ((r3_1 & 1) != 0)
            {
                r1 = (r1 ^ 0xa001);
            }
            j = j_1;
            j_1 = (j_1 + 1);
            r3_1 = r1;
        } while (j != 0xffffffff);
        i = (i + 1);
    } while (i != 0x3e);
    return r1;
}

int32_t sub_17dc0(void* arg1)
{
    uint32_t r3 = 0xffff;
    int32_t i = 0;
    do
    {
        uint32_t r0_1 = (*(arg1 + i) ^ r3);
        int32_t j_1 = 0xfffffff8;
        int32_t j;
        do
        {
            r3 = ((r0_1 >> 1) & 0x7fff);
            if ((r0_1 & 1) != 0)
            {
                r3 = (r3 ^ 0xa001);
            }
            j = j_1;
            j_1 = (j_1 + 1);
            r0_1 = r3;
        } while (j != 0xffffffff);
        i = (i + 1);
    } while (i != 0x3e);
    if (*(arg1 + 0x3e) != r3)
    {
        return 0xfffffff7;
    }
    int32_t r0_4 = sub_8200(0, arg1, 0x40);
    if (r0_4 != 0)
    {
        r0_4 = 0xfffffffd;
    }
    return r0_4;
}

int32_t sub_17e1c(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + 0x40) + arg3) >= 0x1000)
    {
        arg3 = 0;
        if (0 == ((arg1 + 0x40) >> 0xc))
        {
            arg3 = (0xfbf - arg1);
        }
    }
    /* tailcall */
    return sub_8200((arg1 + 0x40), arg2, arg3);
}

int32_t sub_17e42(int32_t arg1)
{
    int32_t var_18 = arg1;
    int32_t r1;
    int32_t var_14 = r1;
    int32_t r2;
    int32_t var_10 = r2;
    char var_9;
    int32_t r0_7;
    if (sub_8298(0x140, &var_9, 1) < 0)
    {
        r0_7 = 0xfffffffe;
    }
    else
    {
        uint32_t r0_1 = var_9;
        if (r0_1 >= 0x40)
        {
            r0_1 = 0;
            var_9 = 0;
        }
        if (sub_17e1c((0x101 + (r0_1 * 0xc)), &var_18, 0xc) < 0)
        {
            r0_7 = 0xfffffffd;
        }
        else
        {
            char r0_6 = (var_9 + 1);
            if (r0_6 > 0x3f)
            {
                r0_6 = 0;
            }
            var_9 = r0_6;
            r0_7 = sub_8200(0x140, &var_9, 1);
        }
    }
    return r0_7;
}

int32_t sub_17eb2(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + 0x1000) + arg3) >= sub_4000)
    {
        arg3 = 0;
        if (0 == ((arg1 + 0x1000) >> 0xe))
        {
            arg3 = (0x2fff - arg1);
        }
    }
    /* tailcall */
    return sub_8200((arg1 + 0x1000), arg2, arg3);
}

int32_t sub_17ed8(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + 0x1000) + arg3) >= sub_4000)
    {
        arg3 = 0;
        if (0 == ((arg1 + 0x1000) >> 0xe))
        {
            arg3 = (0x2fff - arg1);
        }
    }
    /* tailcall */
    return sub_8298((arg1 + 0x1000), arg2, arg3);
}

int32_t sub_17efe(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + sub_4000) + arg3) >= 0x8000)
    {
        arg3 = 0;
        if (0 == ((arg1 + sub_4000) >> 0xf))
        {
            arg3 = (0x3fff - arg1);
        }
    }
    /* tailcall */
    return sub_8200((arg1 + sub_4000), arg2, arg3);
}

int32_t sub_17f24(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + sub_4000) + arg3) >= 0x8000)
    {
        arg3 = 0;
        if (0 == ((arg1 + sub_4000) >> 0xf))
        {
            arg3 = (0x3fff - arg1);
        }
    }
    /* tailcall */
    return sub_8298((arg1 + sub_4000), arg2, arg3);
}

int32_t sub_17f4c(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    arg1[3] = 1;
    *(arg1 + 0xd) = 0;
    arg1[2] = 0;
    arg1[4] = arg2;
    *arg1 = (arg3 - 1);
    arg1[1] = 0;
    return 0;
}

int32_t sub_17f62(int32_t* arg1)
{
    if (*(arg1 + 0xd) == 0)
    {
        return (*arg1 & (arg1[1] - arg1[2]));
    }
    return (*arg1 + 1);
}

int32_t sub_17f78(int32_t* arg1)
{
    if (arg1[3] == 0)
    {
        return (*arg1 & (arg1[2] - arg1[1]));
    }
    return (*arg1 + 1);
}

uint32_t sub_17f8e(void* arg1)
{
    return *(arg1 + 0xd);
}

uint32_t sub_17f92(void* arg1)
{
    return *(arg1 + 0xc);
}

void sub_17f96(int32_t* arg1, char arg2, uint32_t arg3 @ r12)
{
    /* unimplemented  {mrs r12, primask} */;
    /* unimplemented  {cpsid I} */;
    arg1[3] = 0;
    if (*(arg1 + 0xd) != 0)
    {
        arg1[2] = ((arg1[2] + 1) & *arg1);
    }
    arg1[4][arg1[1]] = arg2;
    arg1[1] = (*arg1 & (arg1[1] + 1));
    if (arg1[1] == arg1[2])
    {
        *(arg1 + 0xd) = 1;
    }
    __msr(arg3);
}

void sub_17fd0(int32_t* arg1, char* arg2, int32_t arg3)
{
    int32_t i_1 = arg3;
    char* r5 = arg2;
    if (i_1 != 0)
    {
        int32_t i;
        do
        {
            char r1 = *r5;
            r5 = &r5[1];
            uint32_t r12;
            sub_17f96(arg1, r1, r12);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
}

void sub_17ff6(uint32_t arg1, int32_t arg2, uint32_t arg3)
{
    int32_t* r1 = arg1;
    /* unimplemented  {mrs r2, primask} */;
    /* unimplemented  {cpsid I} */;
    *(r1 + 0xd) = 0;
    if (r1[3] == 0)
    {
        *(r1[4] + r1[2]);
        r1[2] = ((r1[2] + 1) & *r1);
        if (r1[1] == r1[2])
        {
            r1[3] = 1;
        }
    }
    __msr(arg3);
}

int32_t sub_1802e(int32_t* arg1, char* arg2, uint32_t arg3)
{
    /* unimplemented  {mrs r2, primask} */;
    /* unimplemented  {cpsid I} */;
    *(arg1 + 0xd) = 0;
    int32_t r0;
    if (arg1[3] != 0)
    {
        r0 = 0xffffffff;
    }
    else
    {
        *arg2 = arg1[4][arg1[2]];
        arg1[2] = (*arg1 & (arg1[2] + 1));
        if (arg1[1] == arg1[2])
        {
            arg1[3] = 1;
        }
        r0 = 0;
    }
    __msr(arg3);
    return r0;
}

void sub_1806e(void* arg1)
{
    *(arg1 + 4) = 0;
    *(arg1 + 8) = 0;
    *(arg1 + 0xd) = 0;
    *(arg1 + 0xc) = 1;
}

void* sub_1807c(void* arg1, int32_t arg2)
{
    int32_t i_1 = arg2;
    void* r0 = sub_19fe8(0x1ff, 1);
    if (i_1 != 0)
    {
        void* r5_1 = (arg1 + 0xc);
        int32_t i;
        do
        {
            int32_t r6_1 = *(r5_1 - 4);
            uint32_t r9_1 = *(r5_1 + 0xc);
            int32_t r0_1 = *(r5_1 + 8);
            int32_t r1 = *(r5_1 + 4);
            int32_t r2_1 = *r5_1;
            int32_t* r10_1 = *(r5_1 - 0xc);
            uint32_t j_1 = *(r5_1 - 8);
            uint32_t j_2 = j_1;
            int32_t var_34_1 = r6_1;
            int32_t var_30_1 = r2_1;
            int32_t var_2c_1 = r1;
            int32_t var_28_1 = r0_1;
            if (r6_1 != 1)
            {
                r0 = sub_19c50(r10_1, &j_2);
                if (r6_1 == 2)
                {
                    int32_t temp0_1 = 0;
                    uint32_t j = j_1;
                    while (j != 0)
                    {
                        j = (j >> 1);
                        temp0_1 = (temp0_1 + 1);
                    }
                    r0 = sub_19cee(r10_1, (0x1f - (0x20 - temp0_1)), r9_1);
                }
            }
            else
            {
                int16_t j_3 = j_1;
                if (r9_1 == 0)
                {
                    sub_19ce8(r10_1, j_3);
                }
                else
                {
                    sub_19ce4(r10_1, j_3);
                }
                r0 = sub_19c50(r10_1, &j_2);
            }
            r5_1 = (r5_1 + 0x1c);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
    return r0;
}

void sub_1810a(int32_t* arg1, uint32_t arg2)
{
    int32_t temp0 = 0;
    uint32_t i = arg2;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    *arg1 = (*arg1 & (!(3 << (0xfffffffe + (((0x20 * 0) + temp0) << 1)))));
    *arg1 = *arg1;
}

void sub_1812e(int32_t* arg1, uint32_t arg2)
{
    int32_t temp0 = 0;
    uint32_t i = arg2;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    *arg1 = (*arg1 & (!(3 << (0xfffffffe + (((0x20 * 0) + temp0) << 1)))));
    *arg1 = ((1 << (0xfffffffe + (((0x20 * 0) + temp0) << 1))) | *arg1);
}

void sub_18158(int32_t* arg1, uint32_t arg2)
{
    int32_t temp0 = 0;
    uint32_t i = arg2;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    *arg1 = (*arg1 & (!(3 << (0xfffffffe + (((0x20 * 0) + temp0) << 1)))));
    *arg1 = ((2 << (0xfffffffe + (((0x20 * 0) + temp0) << 1))) | *arg1);
}

void sub_18182(void* arg1, int16_t arg2, int32_t arg3)
{
    if (arg3 == 0)
    {
        *(arg1 + 0x1a) = arg2;
    }
    else
    {
        *(arg1 + 0x18) = arg2;
    }
}

void sub_1818c(void* arg1, int16_t arg2)
{
    *(arg1 + 0x18) = arg2;
}

void sub_18190(void* arg1, int16_t arg2)
{
    *(arg1 + 0x1a) = arg2;
}

int32_t sub_18194(void* arg1, int32_t arg2)
{
    int32_t r0 = (*(arg1 + 0x10) & arg2);
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_1819e(void* arg1, uint32_t arg2)
{
    int32_t temp0 = 0;
    uint32_t i = arg2;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    int32_t r6 = (3 << (0xfffffffe + (((0x20 * 0) + temp0) << 1)));
    *(arg1 + 0xc) = (*(arg1 + 0xc) & (!r6));
    *(arg1 + 0xc) = ((1 << (0xfffffffe + (((0x20 * 0) + temp0) << 1))) | *(arg1 + 0xc));
    sub_196cc(5);
    int32_t r8 = *(arg1 + 0x10);
    *(arg1 + 0xc) = (*(arg1 + 0xc) & (!r6));
    *(arg1 + 0xc) = ((2 << (0xfffffffe + (((0x20 * 0) + temp0) << 1))) | *(arg1 + 0xc));
    sub_196cc(5);
    int32_t r0_10 = *(arg1 + 0x10);
    *(arg1 + 0xc) = (*(arg1 + 0xc) & (!r6));
    *(arg1 + 0xc) = *(arg1 + 0xc);
    if (((r0_10 | r8) & arg2) == 0)
    {
        return 0;
    }
    int32_t r0_11 = 2;
    if ((r0_10 & arg2) != 0)
    {
        r0_11 = 1;
    }
    if ((r8 & arg2) == 0)
    {
        r0_11 = 2;
    }
    return r0_11;
}

int16_t* sub_1822c(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r0;
    if (arg1 == 0x40005c00)
    {
        r0 = 0x800000;
    }
    if (arg1 == 0x40005800)
    {
        r0 = 0x400000;
    }
    if (arg1 == 0x40005400)
    {
        r0 = 0x200000;
    }
    if (((arg1 == 0x40005c00 || arg1 == 0x40005800) || arg1 == 0x40005400))
    {
        sub_1a000(r0, 1);
    }
    sub_19e50(arg1, 0);
    int32_t var_28 = arg2;
    int32_t var_24 = 0xbfff0000;
    int16_t var_20 = (arg3 << 1);
    int16_t var_1e = 0x400;
    int16_t var_1c = 0x4000;
    sub_19d7e(arg1, &var_28);
    sub_19e50(arg1, 1);
    return arg1;
}

int32_t sub_182b6(int16_t* arg1, int32_t arg2, char* arg3, uint32_t arg4, uint8_t* arg5, uint32_t arg6)
{
    int32_t lr;
    int32_t var_4 = lr;
    if (sub_18304(arg1, arg2, arg3, arg4, arg5, arg6) == 0)
    {
        return 0;
    }
    sub_184b8(arg1);
    sub_196cc(5);
    /* tailcall */
    return sub_18304(arg1, arg2, arg3, arg4, arg5, arg6);
}

uint32_t sub_18304(int16_t* arg1, int32_t arg2, char* arg3, uint32_t arg4, uint8_t* arg5, uint32_t arg6)
{
    uint32_t i_2 = arg4;
    char* r10 = arg3;
    int32_t r5 = *0x20006064;
    if (sub_19ed0(arg1, "%u %u %u\n") == 1)
    {
        int32_t i;
        do
        {
            if ((*0x20006064 + (0xfffffffb - r5)) >= 0)
            {
                sub_184b8(arg1);
                sub_196cc(2);
                break;
            }
            i = sub_19ed0(arg1, "%u %u %u\n");
        } while (i == 1);
    }
    int32_t r5_2 = *0x20006064;
    int32_t r0_6 = sub_19ed0(arg1, "%u %u %u\n");
    if (r0_6 == 1)
    {
        while ((*0x20006064 + (0xfffffffb - r5_2)) <= 0xffffffff)
        {
            if (sub_19ed0(arg1, "%u %u %u\n") != 1)
            {
                break;
            }
        }
    }
    if ((r0_6 != 1 || (r0_6 == 1 && (*0x20006064 + (0xfffffffb - r5_2)) <= 0xffffffff)))
    {
        uint32_t i_3 = arg6;
        if ((i_3 | i_2) == 0)
        {
            int32_t r0_26 = sub_18872(arg1, arg2, 1);
            sub_1893e(arg1);
            i_2 = (r0_26 >> 0x1f);
        }
        else
        {
            int32_t var_28_1;
            if (i_2 == 0)
            {
                var_28_1 = arg2;
            }
            else if (i_2 < 0)
            {
            label_18438:
                i_2 = 0xfffffff1;
            }
            else
            {
                if (sub_18872(arg1, arg2, 0) <= 0xffffffff)
                {
                    goto label_184aa;
                }
                if (sub_18988(arg1) == 0)
                {
                    goto label_184aa;
                }
                var_28_1 = arg2;
                uint32_t i_1;
                do
                {
                    sub_19eac(arg1, *r10);
                    int32_t r5_4 = *0x20006064;
                    if (sub_19ed0(arg1, 0x10000080) == 0)
                    {
                        while ((*0x20006064 + (0xfffffffb - r5_4)) < 0)
                        {
                            if (sub_19ed0(arg1, 0x10000080) != 0)
                            {
                                break;
                            }
                        }
                        if ((*0x20006064 + (0xfffffffb - r5_4)) >= 0)
                        {
                            goto label_184aa;
                        }
                    }
                    if (sub_18988(arg1) == 0)
                    {
                        goto label_184aa;
                    }
                    r10 = &r10[1];
                    i_1 = i_2;
                    i_2 = (i_2 - 1);
                } while (i_1 > 1);
            }
            if ((i_2 == 0 || (i_2 != 0 && i_2 >= 0)))
            {
                if (i_3 == 0)
                {
                label_184aa:
                    sub_1893e(arg1);
                }
                else
                {
                    int32_t r5_7 = (i_3 + 1);
                    if (i_3 == 0xffffffff)
                    {
                        i_3 = 1;
                    }
                    else if (i_3 < 1)
                    {
                        goto label_18438;
                    }
                    if ((sub_18872(arg1, var_28_1, 1) > 0xffffffff && sub_18988(arg1) != 0))
                    {
                        uint8_t* r6_1 = arg5;
                        if (r5_7 == 0)
                        {
                            sub_19e86(arg1, 1);
                            i_2 = sub_189bc(arg1);
                            *r6_1 = i_2;
                            r6_1 = &r6_1[1];
                        }
                        else
                        {
                            i_2 = i_3;
                        }
                        if ((r5_7 != 0 || (r5_7 == 0 && i_2 >= 1)))
                        {
                            do
                            {
                                uint32_t i_4 = i_2;
                                i_2 = (i_2 - 1);
                                int32_t r1_4;
                                if (i_4 == 1)
                                {
                                    r1_4 = 0;
                                }
                                else
                                {
                                    r1_4 = 1;
                                }
                                sub_19e86(arg1, r1_4);
                                *r6_1 = sub_189bc(arg1);
                                r6_1 = &r6_1[1];
                            } while ((i_2 + 1) > 1);
                        }
                        goto label_184aa;
                    }
                    sub_1893e(arg1);
                    i_2 = i_3;
                }
            }
        }
    }
    if ((r0_6 == 1 && (*0x20006064 + (0xfffffffb - r5_2)) > 0xffffffff))
    {
        i_2 = 0xfffffffb;
    }
    return i_2;
}

int32_t sub_184b8(int16_t* arg1)
{
    int16_t r0 = sub_19eb8(arg1, 0);
    int16_t r0_2 = sub_19eb8(arg1, 4);
    int16_t r0_4 = sub_19eb8(arg1, 8);
    int16_t r0_6 = sub_19eb8(arg1, 0xc);
    int16_t r0_8 = sub_19eb8(arg1, 0x1c);
    int16_t r0_10 = sub_19eb8(arg1, 0x20);
    sub_19e98(arg1, 1);
    sub_19756(0x64);
    sub_19e98(arg1, 0);
    arg1[2] = r0_2;
    arg1[4] = r0_4;
    arg1[6] = r0_6;
    arg1[0xe] = r0_8;
    arg1[0x10] = r0_10;
    *arg1 = (0xfcfe & r0);
    int32_t r0_15 = (*arg1 | 1);
    *arg1 = r0_15;
    return r0_15;
}

uint32_t sub_1853e(int32_t* arg1, int32_t arg2, char* arg3, int32_t arg4, char* arg5, int32_t arg6)
{
    int32_t r11 = arg6;
    int32_t r6 = arg4;
    char* r5 = arg3;
    uint32_t r0_28;
    if ((r11 | r6) == 0)
    {
        if (sub_18694(arg1) < 0)
        {
        label_18644:
            r0_28 = 0xfffffffb;
        }
        else
        {
            int32_t r0_25 = sub_1870e(arg1, (1 | (arg2 << 1)));
            sub_1875e(arg1);
            if (r0_25 == 1)
            {
                goto label_18640;
            }
            r0_28 = ((0xfffffff9 & (r0_25 >> 0x1f)) + 1);
        }
    }
    else
    {
        int32_t r0_2;
        int32_t r0_5;
        int32_t r4_1;
        bool cond:0_1;
        if (r6 != 0)
        {
            r0_2 = sub_18694(arg1);
            if (r0_2 < 0)
            {
                goto label_18644;
            }
            r0_5 = sub_1870e(arg1, (arg2 << 1));
            if (r0_5 != 1)
            {
                sub_1875e(arg1);
                r0_28 = r6;
                cond:0_1 = r0_5 < 0;
            }
            else if ((r6 << 0x18) != 0)
            {
                do
                {
                    r4_1 = sub_1870e(arg1, *r5);
                    if (r4_1 != 1)
                    {
                        break;
                    }
                    r6 = (r6 - 1);
                    r5 = &r5[1];
                } while ((r6 & 0xff) != 0);
                if (r4_1 != 1)
                {
                    sub_1875e(arg1);
                    r0_28 = r6;
                    goto label_18678;
                }
            }
        }
        int32_t r0_10;
        if (((r6 == 0 || ((r6 != 0 && r0_2 >= 0) && r0_5 == 1)) && r11 != 0))
        {
            r0_10 = sub_18694(arg1);
            if (r0_10 >= 0)
            {
                r4_1 = sub_1870e(arg1, (1 | (arg2 << 1)));
                if (r4_1 != 1)
                {
                    sub_1875e(arg1);
                    r0_28 = r11;
                label_18678:
                    cond:0_1 = r4_1 < 0;
                }
            }
        }
        if (((((r6 != 0 && r0_2 >= 0) && r0_5 != 1) || ((((r6 == 0 || ((r6 != 0 && r0_2 >= 0) && r0_5 == 1)) && r11 != 0) && r0_10 >= 0) && r4_1 != 1)) && cond:0_1))
        {
            r0_28 = 0xfffffffa;
        }
        if ((r6 == 0 || ((r6 != 0 && r0_2 >= 0) && r0_5 == 1)))
        {
            if (r11 != 0)
            {
                if ((r0_10 >= 0 && r4_1 == 1))
                {
                    if ((r11 << 0x18) == 0)
                    {
                        goto label_18616;
                    }
                    char* r8_1 = arg5;
                    int32_t r0_16;
                    int32_t r0_19;
                    int32_t i;
                    do
                    {
                        r11 = (r11 - 1);
                        int32_t r6_1 = 8;
                        int32_t r4_2 = 0;
                        do
                        {
                            char var_25;
                            r0_16 = sub_18a90(arg1, &var_25);
                            if (r0_16 < 0)
                            {
                                break;
                            }
                            r6_1 = (r6_1 - 1);
                            r4_2 = ((0x1fe & (r4_2 << 1)) + var_25);
                        } while ((r6_1 & 0xff) != 0);
                        if (r0_16 < 0)
                        {
                            break;
                        }
                        i = (r11 << 0x18);
                        int32_t r1_5 = 0;
                        if (i == 0)
                        {
                            r1_5 = 1;
                        }
                        r0_19 = sub_18a10(arg1, r1_5);
                        if (r0_19 <= 0xffffffff)
                        {
                            break;
                        }
                        *r8_1 = r4_2;
                        r8_1 = &r8_1[1];
                    } while (i != 0);
                    if ((!(r0_16 >= 0 && r0_19 <= 0xffffffff)))
                    {
                        goto label_18616;
                    }
                    sub_1875e(arg1);
                    r0_28 = 0xfffffffa;
                }
                if (r0_10 < 0)
                {
                    goto label_18644;
                }
            }
            else
            {
            label_18616:
                sub_1875e(arg1);
            label_18640:
                r0_28 = 0;
            }
        }
    }
    return r0_28;
}

int32_t sub_18694(int32_t* arg1)
{
    sub_19ce4(*arg1, arg1[1]);
    sub_19ce4(arg1[2], arg1[3]);
    int32_t r6 = *0x20006064;
    int32_t r0_3 = sub_19cd8(*arg1, arg1[1]);
    if (r0_3 == 0)
    {
        while ((*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)
        {
            if (sub_19cd8(*arg1, arg1[1]) != 0)
            {
                break;
            }
        }
    }
    int32_t r0_10;
    if ((r0_3 != 0 || (r0_3 == 0 && (*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)))
    {
        sub_19756(5);
        sub_19ce8(arg1[2], arg1[3]);
        sub_19756(5);
        sub_19ce8(*arg1, arg1[1]);
        sub_19756(2);
        r0_10 = 0;
    }
    if ((r0_3 == 0 && (*0x20006064 + (0xfffffffb - r6)) > 0xffffffff))
    {
        r0_10 = 0xffffffff;
    }
    return r0_10;
}

int32_t sub_1870e(int32_t* arg1, uint32_t arg2)
{
    uint32_t r5 = arg2;
    int32_t r6 = 8;
    int32_t r0_5;
    while (true)
    {
        if (sub_18a10(arg1, (r5 & 0x80)) == 0)
        {
            r6 = (r6 - 1);
            r5 = (r5 << 1);
            char var_19;
            if ((r6 & 0xff) != 0)
            {
                continue;
            }
            else if (sub_18a90(arg1, &var_19) >= 0)
            {
                r0_5 = 0;
                if (var_19 != 1)
                {
                    r0_5 = 1;
                }
                break;
            }
        }
        r0_5 = 0xfffffffa;
        break;
    }
    return r0_5;
}

int32_t sub_1875e(int32_t* arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    sub_19ce8(arg1[2], arg1[3]);
    sub_19756(3);
    sub_19ce4(*arg1, arg1[1]);
    int32_t r6 = *0x20006064;
    if (sub_19cd8(*arg1, arg1[1]) == 0)
    {
        int32_t i;
        do
        {
            int32_t r0_5 = (*0x20006064 + (0xfffffffb - r6));
            if (r0_5 > 0xffffffff)
            {
                return r0_5;
            }
            i = sub_19cd8(*arg1, arg1[1]);
        } while (i == 0);
    }
    sub_19756(5);
    /* tailcall */
    return sub_19ce4(arg1[2], arg1[3]);
}

int32_t sub_187ca(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    sub_18694(arg1);
    int32_t r0_2 = sub_1870e(arg1, (arg2 << 1));
    int32_t r0_4;
    if (r0_2 != 1)
    {
        sub_1875e(arg1);
        r0_4 = ((0xfffffff9 & (r0_2 >> 0x1f)) + 1);
    }
    else
    {
        while (((*0x20006064 * 0) - arg3) < 0)
        {
            /* nop */
        }
        sub_1875e(arg1);
        r0_4 = 0;
    }
    return r0_4;
}

int32_t sub_18820(int16_t* arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    sub_19e50(arg1, 0);
    int32_t r0_1 = sub_19d1c(arg1);
    int32_t r0_2;
    if (arg1 == 0x40005c00)
    {
        r0_2 = 0x800000;
    }
    else if (arg1 == 0x40005800)
    {
        r0_2 = 0x400000;
    }
    else
    {
        if (arg1 != 0x40005400)
        {
            return r0_1;
        }
        r0_2 = 0x200000;
    }
    /* tailcall */
    return sub_1a000(r0_2, 0);
}

int32_t sub_18872(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r9 = arg2;
    sub_19e62(arg1, 1);
    int32_t r5 = *0x20006064;
    int32_t r0_1 = sub_19ed0(arg1, 0x10000001);
    if (r0_1 == 0)
    {
        while ((*0x20006064 + (0xfffffffb - r5)) < 0)
        {
            if (sub_19ed0(arg1, 0x10000001) != 0)
            {
                break;
            }
        }
    }
    int32_t r0_14;
    if ((r0_1 != 0 || (r0_1 == 0 && (*0x20006064 + (0xfffffffb - r5)) < 0)))
    {
        if (arg3 == 0)
        {
            r9 = (r9 << 1);
        }
        else if (arg3 == 1)
        {
            r9 = (1 | (r9 << 1));
        }
        sub_19eac(arg1, r9);
        int32_t r6_1 = *0x20006064;
        if (sub_19ed0(arg1, 0x10000002) == 0)
        {
            while ((*0x20006064 + (0xfffffffb - r6_1)) < 0)
            {
                if (sub_19ed0(arg1, 0x10000002) != 0)
                {
                    break;
                }
            }
            if ((*0x20006064 + (0xfffffffb - r6_1)) >= 0)
            {
                sub_19f02(arg1, 0x10000400);
                goto label_18932;
            }
        }
        uint32_t var_28_1 = arg1[0xc];
        r0_14 = 0;
    }
    if ((r0_1 == 0 && (*0x20006064 + (0xfffffffb - r5)) >= 0))
    {
        sub_19eac(arg1, 0);
    label_18932:
        r0_14 = 0xffffffff;
    }
    return r0_14;
}

int32_t sub_1893e(int16_t* arg1)
{
    sub_19e74(arg1, 1);
    int32_t r6 = *0x20006064;
    int32_t i = sub_19ed0(arg1, "%u %u %u\n");
    if (i == 1)
    {
        do
        {
            i = (*0x20006064 + (0xfffffffb - r6));
            if (i >= 0)
            {
                break;
            }
            i = sub_19ed0(arg1, "%u %u %u\n");
        } while (i == 1);
    }
    return i;
}

int32_t sub_18988(void* arg1)
{
    int32_t r0 = sub_19ed0(arg1, 0x10000400);
    if (r0 == 1)
    {
        sub_19f02(arg1, 0x10000400);
    }
    int32_t r0_2 = 0;
    if (r0 != 1)
    {
        r0_2 = 1;
    }
    return r0_2;
}

uint32_t sub_189bc(void* arg1)
{
    int32_t r6 = *0x20006064;
    int32_t r0 = sub_19ed0(arg1, 0x10000040);
    if (r0 == 0)
    {
        while ((*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)
        {
            if (sub_19ed0(arg1, 0x10000040) != 0)
            {
                break;
            }
        }
    }
    uint32_t r0_6;
    if ((r0 != 0 || (r0 == 0 && (*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)))
    {
        r0_6 = sub_19eb0(arg1);
    }
    if ((r0 == 0 && (*0x20006064 + (0xfffffffb - r6)) > 0xffffffff))
    {
        r0_6 = 0xffffffff;
    }
    return r0_6;
}

int32_t sub_18a10(int32_t* arg1, int32_t arg2)
{
    void* r0 = arg1[2];
    int16_t r2 = arg1[3];
    if (arg2 == 0)
    {
        sub_19ce8(r0, r2);
    }
    else
    {
        sub_19ce4(r0, r2);
    }
    sub_19756(3);
    sub_19ce4(*arg1, arg1[1]);
    int32_t r6 = *0x20006064;
    int32_t r0_3 = sub_19cd8(*arg1, arg1[1]);
    if (r0_3 == 0)
    {
        while ((*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)
        {
            if (sub_19cd8(*arg1, arg1[1]) != 0)
            {
                break;
            }
        }
    }
    int32_t r0_9;
    if ((r0_3 != 0 || (r0_3 == 0 && (*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)))
    {
        sub_19756(5);
        sub_19ce8(*arg1, arg1[1]);
        sub_19756(2);
        r0_9 = 0;
    }
    if ((r0_3 == 0 && (*0x20006064 + (0xfffffffb - r6)) > 0xffffffff))
    {
        r0_9 = 0xffffffff;
    }
    return r0_9;
}

int32_t sub_18a90(int32_t* arg1, char* arg2)
{
    sub_19ce4(arg1[2], arg1[3]);
    sub_19756(3);
    sub_19ce4(*arg1, arg1[1]);
    int32_t r5 = *0x20006064;
    int32_t r0_3 = sub_19cd8(*arg1, arg1[1]);
    if (r0_3 == 0)
    {
        while ((*0x20006064 + (0xfffffffb - r5)) <= 0xffffffff)
        {
            if (sub_19cd8(*arg1, arg1[1]) != 0)
            {
                break;
            }
        }
    }
    int32_t r0_11;
    if ((r0_3 != 0 || (r0_3 == 0 && (*0x20006064 + (0xfffffffb - r5)) <= 0xffffffff)))
    {
        sub_19756(3);
        int32_t r0_9 = sub_19cd8(arg1[2], arg1[3]);
        if (r0_9 != 0)
        {
            r0_9 = 1;
        }
        *arg2 = r0_9;
        sub_19756(2);
        sub_19ce8(*arg1, arg1[1]);
        sub_19756(2);
        r0_11 = 0;
    }
    if ((r0_3 == 0 && (*0x20006064 + (0xfffffffb - r5)) > 0xffffffff))
    {
        r0_11 = 0xffffffff;
    }
    return r0_11;
}

int32_t sub_18b1c(int32_t arg1, int32_t arg2) __pure
{
    int32_t r3 = (arg2 ^ arg1);
    int32_t i_1 = 0xfffffff8;
    int32_t r0;
    int32_t i;
    do
    {
        r0 = ((r3 >> 1) & 0x7fff);
        if ((r3 & 1) != 0)
        {
            r0 = (r0 ^ 0xa001);
        }
        i = i_1;
        i_1 = (i_1 + 1);
        r3 = r0;
    } while (i != 0xffffffff);
    return r0;
}

void sub_18b3c(int32_t arg1, int32_t arg2)
{
    *0x20005d58 = arg2;
    *0x20005d54 = arg1;
}

int32_t sub_18b52(int32_t arg1)
{
    int32_t r1 = 0x20000b98;
    if (*0x20005d58 > arg1)
    {
        r1 = (*0x20005d54 + (arg1 << 3));
    }
    return r1;
}

uint32_t sub_18b7a(int32_t arg1, char* arg2, int32_t* arg3)
{
    uint32_t r6 = *arg3;
    int32_t* r0 = sub_18b52(arg1);
    uint32_t r1 = r0[1];
    *arg3 = r1;
    if (r6 > r1)
    {
        r6 = r1;
    }
    uint32_t r1_3 = 0;
    if (((*(r0 + 6) << 0x1e) >= 0 && r6 != 0))
    {
        int32_t r2 = 0;
        do
        {
            arg2[r2] = *r0[r2];
            if ((*(r0 + 6) << 0x1c) < 0)
            {
                *r0[r2] = 0;
            }
            r2 = (r2 + 1);
        } while (r2 < r6);
        r1_3 = r6;
    }
    return r1_3;
}

uint32_t sub_18bc6(int32_t arg1, char* arg2, int32_t* arg3)
{
    uint32_t r4 = *arg3;
    int32_t* r0 = sub_18b52(arg1);
    uint32_t r1 = r0[1];
    *arg3 = r1;
    if (r4 > r1)
    {
        r4 = r1;
    }
    uint32_t r1_1 = *(r0 + 6);
    if ((r1_1 & 4) == 0)
    {
        if ((r1_1 << 0x1f) != 0)
        {
            r4 = 0;
        }
        else if (r4 != 0)
        {
            int32_t r1_3 = 0;
            do
            {
                *r0[r1_3] = arg2[r1_3];
                r1_3 = (r1_3 + 1);
            } while (r1_3 < r4);
            goto label_18c20;
        }
    }
    else if (r4 != 0)
    {
        int32_t r1_4 = 0;
        do
        {
            char* r3_2 = *r0;
            r3_2[r1_4] = (r3_2[r1_4] & (!arg2[r1_4]));
            r1_4 = (r1_4 + 1);
        } while (r1_4 < r4);
        goto label_18c20;
    }
    if (((r1_1 & 4) != 0 || ((r1_1 & 4) == 0 && (r1_1 << 0x1f) == 0)))
    {
        r4 = 0;
    label_18c20:
        *(r0 + 6) = (*(r0 + 6) | 0x8000);
    }
    return r4;
}

int32_t sub_18c2e(int32_t arg1) __pure
{
    int32_t r0 = 0;
    if (arg1 != 0)
    {
        if (arg1 == 0x52524521)
        {
            return 0;
        }
        r0 = 0;
        if (arg1 != 0x444d4321)
        {
            r0 = 1;
        }
    }
    return r0;
}

void sub_18c56(int32_t arg1, int32_t arg2)
{
    *0x20005d60 = arg2;
    *0x20005d5c = arg1;
}

int32_t sub_18c6c(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r12 = *0x20005d60;
    if (r12 != 0)
    {
        int32_t lr_1 = *0x20005d5c;
        int32_t r3_1 = 0;
        do
        {
            if (*(lr_1 + (r3_1 << 3)) == arg1)
            {
                /* jump -> *((lr_1 + (r3_1 << 3)) + 4) */
            }
            r3_1 = (r3_1 + 1);
        } while (r3_1 < r12);
    }
    return 0x444d4321;
}

uint32_t sub_18cb8(int16_t* arg1, int32_t arg2, char arg3, int32_t arg4, int32_t* arg5)
{
    char var_59 = arg4;
    char var_5a = arg3;
    void var_58;
    sub_1ff48(&var_58, arg5, arg4);
    uint32_t r4_1 = (arg4 + 2);
    if (sub_182b6(arg1, arg2, &var_5a, r4_1, nullptr, 0) != 0)
    {
        r4_1 = 0xfffffffd;
    }
    return r4_1;
}

uint32_t sub_18d08(int16_t* arg1, int32_t arg2, uint8_t arg3, uint32_t arg4, int32_t* arg5)
{
    uint8_t var_59 = arg3;
    uint32_t r2 = (arg4 + 1);
    if (arg4 == 0)
    {
        r2 = 0xffffffff;
    }
    uint32_t r6;
    if (sub_182b6(arg1, arg2, &var_59, 1, &var_59, r2) != 0)
    {
        r6 = 0xfffffffe;
    }
    else
    {
        r6 = var_59;
        if (arg4 != 0)
        {
            r6 = arg4;
        }
        void var_58;
        sub_1ff48(arg5, &var_58, r6);
    }
    return r6;
}

int32_t sub_18d5c(int32_t* arg1, int32_t arg2, int32_t arg3, char* arg4, char* arg5)
{
    int32_t lr = *arg1;
    if (lr > 3)
    {
        goto label_18e0e;
    }
    int32_t r1;
    int32_t r1_1;
    switch (lr)
    {
        case 0:
        {
            r1 = 0;
            if (arg3 == 0xfe)
            {
                *arg5 = 0;
                *arg1 = 1;
            }
            break;
        }
        case 1:
        {
            *arg1 = 0;
            if (arg3 != 0xfe)
            {
                bool cond:2_1 = arg2 == 1;
                if (arg2 == 1)
                {
                    cond:2_1 = arg3 == 4;
                }
                if (cond:2_1)
                {
                label_18de0:
                    *arg4 = arg3;
                    goto label_18e06;
                }
                if ((arg2 == 0 && arg3 == 5))
                {
                    goto label_18de0;
                }
                bool cond:3_1 = arg2 != 2;
                if (arg2 == 2)
                {
                    cond:3_1 = arg3 != 1;
                }
                if ((!cond:3_1))
                {
                    goto label_18de0;
                }
                r1 = 0;
                *arg1 = 0;
            }
            else
            {
                r1_1 = 1;
            label_18e0c:
                *arg1 = r1_1;
            label_18e0e:
                r1 = 0;
            }
            break;
        }
        case 2:
        {
            if (arg3 == 0xfe)
            {
                r1_1 = 3;
                goto label_18e0c;
            }
            arg4[*arg5] = arg3;
            char r1_8 = (*arg5 + 1);
            *arg5 = r1_8;
            r1 = 0;
            if (r1_8 >= 0x46)
            {
                *arg1 = 0;
            }
            break;
        }
        case 3:
        {
            r1 = 0;
            *arg1 = 0;
            if (arg3 == 4)
            {
                *arg4 = 4;
            label_18e06:
                *arg5 = 1;
                r1_1 = 2;
                goto label_18e0c;
            }
            if (arg3 == 0x40)
            {
                r1 = 1;
            }
            else if (arg3 == 0xfe)
            {
                arg4[*arg5] = 0xfe;
                int32_t r2 = 2;
                char r1_4 = (*arg5 + 1);
                *arg5 = r1_4;
                if (r1_4 > 0x45)
                {
                    r2 = 0;
                }
                *arg1 = r2;
                goto label_18e0e;
            }
            break;
        }
    }
    return r1;
}

int32_t sub_18e20(int32_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    arg1[1] = arg3;
    *arg1 = arg2;
    arg1[2] = arg4;
    arg1[3] = 0;
    arg1[4] = 0;
    sub_1f886(&arg1[6], 0, 0x15);
    sub_18e48(arg1);
    return 0;
}

int32_t sub_18e48(int32_t* arg1)
{
    int32_t r0 = *arg1;
    int16_t r1 = arg1[1];
    if (arg1[2] == 0)
    {
        /* tailcall */
        return sub_1818c(r0, r1);
    }
    /* tailcall */
    return sub_18190(r0, r1);
}

int32_t sub_18e5a(int32_t* arg1)
{
    arg1[3] = 0;
    sub_18e48(arg1);
    return 0;
}

int32_t sub_18e6a(int32_t* arg1)
{
    arg1[3] = 1;
    sub_18e7a(arg1);
    return 0;
}

int32_t sub_18e7a(int32_t* arg1)
{
    int32_t r0 = *arg1;
    int16_t r1 = arg1[1];
    if (arg1[2] == 0)
    {
        /* tailcall */
        return sub_18190(r0, r1);
    }
    /* tailcall */
    return sub_1818c(r0, r1);
}

int32_t sub_18e8c(int32_t* arg1, int32_t arg2)
{
    arg1[3] = 2;
    arg1[0xb] = 0;
    arg1[6] = (arg2 >> 1);
    arg1[4] = 1;
    arg1[5] = (*0x20006064 + (arg2 >> 1));
    sub_18e48(arg1);
    return 0;
}

int32_t sub_18ebc(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    arg1[6] = arg2;
    arg1[3] = 4;
    arg1[7] = arg3;
    arg1[0xb] = (arg2 << 1);
    arg1[4] = 1;
    arg1[5] = (*0x20006064 + 0xc8);
    sub_18e48(arg1);
    return 0;
}

int32_t sub_18ee8(int32_t* arg1)
{
    int32_t r0 = arg1[3];
    if (r0 > 8)
    {
    label_19032:
        sub_18e48(arg1);
    }
    else
    {
        int32_t r0_59;
        int32_t r1_11;
        if (((jump_table_18efa[r0] == 5 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            if (arg1[0xb] == 0)
            {
                sub_18e7a(arg1);
            }
            else
            {
                sub_18e48(arg1);
            }
            arg1[0xb] = (arg1[0xb] ^ 1);
            r0_59 = *0x20006064;
            arg1[4] = 1;
            r1_11 = arg1[6];
        }
        int32_t r0_43;
        char r0_53;
        int32_t r0_70;
        if (((jump_table_18efa[r0] == 0x1c && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            if ((arg1[0xb] << 0x1f) != 0)
            {
                sub_18e48(arg1);
            }
            else
            {
                sub_18e7a(arg1);
            }
            char r0_42 = (arg1[0xb] - 1);
            arg1[0xb] = r0_42;
            if (r0_42 != 0)
            {
                r0_43 = *0x20006064;
            label_1906c:
                r0_70 = (r0_43 + 0xc8);
                arg1[4] = 1;
                goto label_19132;
            }
            r0_53 = 0;
            arg1[3] = 0;
        }
        char r0_67;
        if (((jump_table_18efa[r0] == 0x32 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            if ((arg1[0xb] << 0x1f) != 0)
            {
                sub_18e48(arg1);
            }
            else
            {
                sub_18e7a(arg1);
            }
            char r1_9 = (arg1[0xb] - 1);
            arg1[0xb] = r1_9;
            r0_43 = *0x20006064;
            if (r1_9 != 0)
            {
                goto label_1906c;
            }
            arg1[4] = 1;
            int32_t r1_13 = arg1[6];
            arg1[5] = (r0_43 + arg1[7]);
            r0_67 = (r1_13 << 1);
        }
        if (((jump_table_18efa[r0] == 0x48 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            void* r0_23;
            if (arg1[0xb] == 0)
            {
                sub_18e7a(arg1);
                r0_23 = &arg1[6];
            }
            else
            {
                sub_18e48(arg1);
                r0_23 = &arg1[7];
            }
            arg1[4] = 1;
            arg1[5] = (*r0_23 + *0x20006064);
            r0_67 = (arg1[0xb] ^ 1);
        }
        if ((((jump_table_18efa[r0] == 0x48 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0) || ((jump_table_18efa[r0] == 0x32 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0)))
        {
            arg1[0xb] = r0_67;
        }
        if (((jump_table_18efa[r0] == 0x61 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            if ((arg1[9] << 0x1f) != 0)
            {
                sub_18e7a(arg1);
            }
            else
            {
                sub_18e48(arg1);
            }
            char r0_48 = (arg1[0xb] - 1);
            arg1[0xb] = r0_48;
            if (r0_48 == 0)
            {
                r0_53 = 0;
            }
            else
            {
                arg1[9] = (arg1[9] >> 1);
                arg1[5] = (*0x20006064 + arg1[8]);
                r0_53 = 1;
            }
        }
        if ((((jump_table_18efa[r0] == 0x61 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0) || ((jump_table_18efa[r0] == 0x1c && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0)))
        {
            arg1[4] = r0_53;
        }
        if (((jump_table_18efa[r0] == 0x77 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            if ((arg1[0xa] << 0x1f) != 0)
            {
                sub_18e7a(arg1);
            }
            else
            {
                sub_18e48(arg1);
            }
            char r0_56 = (arg1[0xb] - 1);
            arg1[0xb] = r0_56;
            if (r0_56 == 0)
            {
                arg1[4] = 1;
                char r2_2 = arg1[7];
                r0_70 = (*0x20006064 + arg1[9]);
                arg1[0xa] = arg1[6];
                arg1[0xb] = r2_2;
                goto label_19132;
            }
            arg1[0xa] = (arg1[0xa] >> 1);
            r0_59 = *0x20006064;
            arg1[4] = 1;
            r1_11 = arg1[8];
        }
        if ((((jump_table_18efa[r0] == 5 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0) || ((jump_table_18efa[r0] == 0x77 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0)))
        {
            r0_70 = (r0_59 + r1_11);
        label_19132:
            arg1[5] = r0_70;
        }
        if (jump_table_18efa[r0] == 0x9b)
        {
            goto label_19032;
        }
        if (jump_table_18efa[r0] == 0x8d)
        {
            int32_t r0_37 = sub_18194(arg1[6], arg1[7]);
            int32_t r1_8 = arg1[8];
            if (r0_37 == 0)
            {
                if (r1_8 != 0)
                {
                    goto label_19032;
                }
            }
            else if (r1_8 != 1)
            {
                goto label_19032;
            }
        }
        if ((jump_table_18efa[r0] == 0x95 || jump_table_18efa[r0] == 0x8d))
        {
            sub_18e7a(arg1);
        }
    }
    return 0;
}

int32_t sub_1913a(int32_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6)
{
    int32_t r12;
    if (arg2 == 0)
    {
        r12 = 0;
    }
    else
    {
        r12 = 0;
        int32_t r11_1 = ((arg4 / 0xa) & 0x3ff);
        int32_t r6_3 = 0x10000000;
        int32_t i;
        do
        {
            int32_t r8_1 = *arg1;
            if ((0 == (r8_1 >> 0x1e) && (((r8_1 >> 0xa) & 0x3ff) * 0x32) == arg3))
            {
                int32_t r8_2 = (r8_1 & 0x3ff);
                int32_t r12_1 = ((r12 & 0x8fffffff) | (((r6_3 >> 0x1c) & 7) << 0x1c));
                if ((r8_2 * 0xa) < arg4)
                {
                    r12 = ((((0xfbf00000 & r12_1) | r11_1) | (r8_2 << 0xa)) | 0x4000000);
                }
                else
                {
                    int32_t r5_13 = ((0xf3f00000 & r12_1) | (r11_1 << 0xa));
                    if (arg5 == 0)
                    {
                        r12 = (r5_13 | r11_1);
                    }
                    else
                    {
                        r12 = ((r5_13 | ((arg5 / 0xa) & 0x3ff)) | 0x8000000);
                    }
                }
            }
            i = arg2;
            arg2 = (arg2 - 1);
            arg1 = &arg1[1];
            r6_3 = (r6_3 + 0x10000000);
        } while (i != 1);
    }
    if ((r12 & 0x70000000) == 0)
    {
        r12 = ((r12 & 0x8bf00000) | 0x1400280a);
    }
    return (arg6 | r12);
}

int32_t sub_1921e(int32_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7)
{
    int32_t r11;
    if (arg2 == 0)
    {
        r11 = 0;
    }
    else
    {
        r11 = 0;
        int32_t r5_4 = (arg5 * arg4);
        int32_t r6_5 = ((arg5 / 0xa) & 0x3ff);
        int32_t r8_1 = 0x10000000;
        int32_t r5_6 = ((r5_4 / 0x3d090) & 0x3ff);
        int32_t i;
        do
        {
            int32_t r12_1 = *arg1;
            uint32_t r4_9;
            int32_t r4_11;
            int32_t r4_19;
            int32_t r4_28;
            int32_t r5_15;
            int32_t r12_2;
            if (2 != (r12_1 >> 0x1e))
            {
                r4_9 = (r12_1 >> 0x1e);
                if (r4_9 == 0)
                {
                    r4_11 = (((r12_1 >> 0xa) & 0x3ff) * 0x32);
                }
                if ((r4_9 == 1 && ((((r12_1 >> 0x14) & 0x3ff) * 0x32) <= arg4 && (((r12_1 >> 0xa) & 0x3ff) * 0x32) >= arg3)))
                {
                    r12_2 = (r12_1 & 0x3ff);
                    int32_t r11_2 = ((r11 & 0x8fffffff) | (((r8_1 >> 0x1c) & 7) << 0x1c));
                    if ((r12_2 * 0xfa) < (r5_4 / 0x3e8))
                    {
                        r4_19 = ((0xfbf00000 & r11_2) | r5_6);
                        goto label_19350;
                    }
                    r4_28 = ((r5_6 << 0xa) | (0xf3f00000 & r11_2));
                    if (arg6 != 0)
                    {
                        r5_15 = (((arg6 * arg3) / 0x3d090) & 0x3ff);
                        goto label_19388;
                    }
                    r11 = (r4_28 | r5_6);
                }
            }
            if ((2 == (r12_1 >> 0x1e) && (((r12_1 >> 0x14) & 0x3ff) * 0x32) <= arg4))
            {
                r4_11 = (((r12_1 >> 0xa) & 0x3ff) * 0x32);
            }
            if ((((2 == (r12_1 >> 0x1e) && (((r12_1 >> 0x14) & 0x3ff) * 0x32) <= arg4) || ((2 != (r12_1 >> 0x1e) && r4_9 == 0) && r4_11 <= arg4)) && r4_11 >= arg3))
            {
                r12_2 = (r12_1 & 0x3ff);
                int32_t r11_1 = ((r11 & 0x8fffffff) | (((r8_1 >> 0x1c) & 7) << 0x1c));
                if ((r12_2 * 0xa) >= arg5)
                {
                    r4_28 = ((r6_5 << 0xa) | (0xf3f00000 & r11_1));
                    if (arg6 == 0)
                    {
                        r11 = (r4_28 | r6_5);
                    }
                    else
                    {
                        r5_15 = ((arg6 / 0xa) & 0x3ff);
                    label_19388:
                        r11 = ((r5_15 | r4_28) | 0x8000000);
                    }
                }
                else
                {
                    r4_19 = ((0xfbf00000 & r11_1) | r6_5);
                label_19350:
                    r11 = ((r4_19 | (r12_2 << 0xa)) | 0x4000000);
                }
            }
            i = arg2;
            arg2 = (arg2 - 1);
            arg1 = &arg1[1];
            r8_1 = (r8_1 + 0x10000000);
        } while (i != 1);
    }
    if ((r11 & 0x70000000) == 0)
    {
        r11 = ((r11 & 0x8bf00000) | 0x1400280a);
    }
    return (arg7 | r11);
}

int32_t sub_193c0() __pure
{
    return 0;
}

int32_t sub_193c4() __noreturn
{
    sub_1ff48(0x20000000, &data_22b64, 0xc74);
    sub_1f886(0x20000c74, 0, 0x8370);
    sub_16a36();
    /* no return */
}

int32_t sub_19424(int32_t* arg1, int32_t arg2, int32_t arg3, char* arg4, int32_t arg5, int32_t arg6)
{
    int32_t r5 = 0;
    arg1[1] = arg5;
    *arg1 = arg2;
    *(arg1 + 5) = arg5;
    arg1[2] = arg4;
    *(arg1 + 6) = arg3;
    if (arg3 != 0)
    {
        char* r6_1 = arg4;
        while (*r6_1 != arg5)
        {
            r5 = (r5 + 1);
            r6_1 = &r6_1[0x14];
            if (r5 >= arg3)
            {
                r5 = arg3;
                break;
            }
        }
    }
    int32_t r0_5 = *((arg4 + (r5 * 0x14)) + 8)(arg1, arg6);
    arg1[3] = 0;
    return r0_5;
}

int32_t sub_19486(int32_t* arg1, int32_t arg2, int32_t arg3, uint32_t arg4 @ r12)
{
    /* unimplemented  {mrs r12, primask} */;
    /* unimplemented  {cpsid I} */;
    int32_t r9 = 0;
    uint32_t r6 = 0;
    uint32_t i = arg1[1];
    uint32_t i_1 = *(arg1 + 5);
    uint32_t r4 = *(arg1 + 6);
    if (i != i_1)
    {
        r9 = 1;
    }
    uint32_t r5_2;
    if (r4 == 0)
    {
        r5_2 = 0;
    }
    else
    {
        char* r0 = arg1[2];
        r6 = 0;
        char* r3_1 = r0;
        while (*r3_1 != i)
        {
            r6 = (r6 + 1);
            r3_1 = &r3_1[0x14];
            if (r6 >= r4)
            {
                r6 = r4;
                break;
            }
        }
        r5_2 = 0;
        while (*r0 != i_1)
        {
            r5_2 = (r5_2 + 1);
            r0 = &r0[0x14];
            if (r5_2 >= r4)
            {
                r5_2 = r4;
                break;
            }
        }
    }
    __msr(arg4);
    uint32_t r6_1 = r6;
    uint32_t r0_1 = *(arg1 + 6);
    if (r6_1 != r0_1)
    {
        uint32_t r5_3 = r5_2;
        if (r5_3 != r0_1)
        {
            if (i == i_1)
            {
                *((arg1[2] + (r6_1 * 0x14)) + 0xc)(arg1, arg2);
            }
            else
            {
                if (arg3 != 0)
                {
                    int32_t r1 = arg1[2];
                    *((r1 + (r6_1 * 0x14)) + 4);
                    int32_t var_28_1 = *((r1 + (r5_3 * 0x14)) + 4);
                    sub_17ba2(arg3, "%s: %s -> %s\n", *arg1);
                }
                arg1[1] = *(arg1 + 5);
                int32_t r0_9 = arg1[2];
                int32_t r2_1 = *((r0_9 + (r6_1 * 0x14)) + 0x10);
                if (r2_1 != 0)
                {
                    r2_1(arg1, arg2);
                    r0_9 = arg1[2];
                }
                int32_t r2_2 = *((r0_9 + (r5_3 * 0x14)) + 8);
                if (r2_2 != 0)
                {
                    r2_2(arg1, arg2);
                }
                arg1[3] = 0;
            }
            return r9;
        }
    }
    while (true)
    {
        /* nop */
    }
}

void sub_1958a(void* arg1, char arg2, uint32_t arg3)
{
    /* unimplemented  {mrs r2, primask} */;
    /* unimplemented  {cpsid I} */;
    if (*(arg1 + 0xc) == 0)
    {
        *(arg1 + 5) = arg2;
    }
    __msr(arg3);
}

void sub_1959c(void* arg1, char arg2, uint32_t arg3)
{
    /* unimplemented  {mrs r2, primask} */;
    /* unimplemented  {cpsid I} */;
    if (*(arg1 + 0xc) == 0)
    {
        *(arg1 + 5) = arg2;
    }
    *(arg1 + 0xc) = 1;
    __msr(arg3);
}

int32_t j_sub_195ba(int32_t arg1, int32_t arg2, int32_t arg3)
{
    /* tailcall */
    return sub_195ba(arg1, arg2, arg3, 0);
}

int32_t sub_195ba(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t* lr = 0x20005d78;
    int32_t r0 = 0;
    while (*(lr - 0x14) != 0)
    {
        bool cond:0_1 = r0 >= 0x1f;
        lr = &lr[6];
        r0 = (r0 + 1);
        if (cond:0_1)
        {
            return 0xfffffffb;
        }
    }
    *(lr - 0x10) = arg2;
    *(lr - 0x14) = arg1;
    *(lr - 0xc) = arg3;
    int32_t r1 = *0x20006064;
    *(lr - 8) = 1;
    if (arg4 <= 0)
    {
        arg4 = 0;
    }
    if (arg4 >= 0x64)
    {
        arg4 = 0x64;
    }
    *lr = arg4;
    *(lr - 4) = (r1 + arg3);
    return r0;
}

int32_t sub_1961e(int32_t arg1)
{
    int32_t r0 = (arg1 * 3);
    *(0x20005d64 + (r0 << 3)) = 0;
    *((r0 << 3) + 0x20005d70) = 0;
    *((r0 << 3) + 0x20005d6c) = 0;
    *((r0 << 3) + 0x20005d68) = 0;
    *((r0 << 3) + 0x20005d78) = 0;
    return 0;
}

int32_t sub_19640()
{
    /* tailcall */
    return sub_19648(0xffffffff);
}

int32_t sub_19648(int32_t arg1)
{
    int32_t i = 0;
    int32_t r4 = 0;
    int32_t r8 = 0;
    do
    {
        int32_t r1_1 = *(0x20005d64 + i);
        if ((r1_1 != 0 && (*(i + 0x20005d78) >= arg1 && (*(i + 0x20005d70) != 0 && (*0x20006064 - *(i + 0x20005d74)) >= 0))))
        {
            *(i + 0x20005d74) = (*0x20006064 + *(i + 0x20005d6c));
            *(i + 0x20005d70) = 1;
            r1_1(*(i + 0x20005d68));
            r8 = (r8 | (1 << r4));
        }
        i = (i + 0x18);
        r4 = (r4 + 1);
    } while (i != 0x300);
    return r8;
}

void sub_196bc()
{
    *0x20006064 = (*0x20006064 + 1);
}

int32_t sub_196cc(int32_t arg1)
{
    int32_t r0 = (arg1 + *0x20006064);
    if ((*0x20006064 - r0) > 0xffffffff)
    {
        return r0;
    }
    do
    {
        __wfi();
    } while ((*0x20006064 - r0) < 0);
    return r0;
}

int32_t sub_196f0()
{
    void var_20;
    sub_19f40(&var_20);
    sub_1a000(0x10, 1);
    int32_t var_18;
    sub_1a104(0x40001000, (-1 + ((var_18 / 0xf4240) << 1)), 1);
    sub_1a10e(0x40001000, 0xffff);
    sub_1a116(0x40001000, 1);
    sub_1a1d0(0x40001000, 1);
    sub_1a128(0x40001000, 1);
    return 0x40001000;
}

int32_t sub_19756(int32_t arg1)
{
    sub_1a10a(0x40001000, 0);
    int32_t r0;
    do
    {
        r0 = sub_1a112(0x40001000);
    } while (r0 < arg1);
    return r0;
}

void sub_19778(int32_t* arg1)
{
    *0xe000e010 = 5;
    int32_t r2 = *0xe000e018;
    int32_t r12 = *0x20006064;
    int32_t lr = *0xe000ed04;
    *0xe000e010 = 7;
    int32_t r1 = *0xe000e014;
    *arg1 = (r1 - r2);
    int32_t r3_1 = 0;
    if (r2 > (r1 >> 1))
    {
        r3_1 = 1;
    }
    arg1[1] = ((r3_1 & (lr >> 0x1a)) + r12);
}

int32_t sub_197c2(int16_t* arg1, int16_t arg2)
{
    int32_t r5 = *0x20006064;
    if (sub_1a3ca(arg1, 0x80) == 0)
    {
        while ((*0x20006064 + (0xffffffec - r5)) <= 0xffffffff)
        {
            if (sub_1a3ca(arg1, 0x80) != 0)
            {
                break;
            }
        }
        if ((*0x20006064 + (0xffffffec - r5)) > 0xffffffff)
        {
            goto label_1982e;
        }
    }
    sub_1a388(arg1, arg2);
    int32_t r5_2 = *0x20006064;
    int32_t r0_7 = sub_1a3ca(arg1, 0x80);
    if (r0_7 == 0)
    {
        while ((*0x20006064 + (0xffffffec - r5_2)) < 0)
        {
            if (sub_1a3ca(arg1, 0x80) != 0)
            {
                break;
            }
        }
    }
    int32_t r0_12;
    if ((r0_7 != 0 || (r0_7 == 0 && (*0x20006064 + (0xffffffec - r5_2)) < 0)))
    {
        r0_12 = 1;
    }
    if ((r0_7 == 0 && (*0x20006064 + (0xffffffec - r5_2)) >= 0))
    {
    label_1982e:
        r0_12 = 0xffffffff;
    }
    return r0_12;
}

int32_t sub_19838(int32_t arg1)
{
    *0x40023800 = (*0x40023800 | 1);
    *0x40023808 = 0;
    *0x40023800 = (0xfef6ffff & *0x40023800);
    *0x40023804 = 0x24003010;
    *0x40023800 = (*0x40023800 & 0xfffbffff);
    *0x4002380c = 0;
    if (arg1 == 0)
    {
        *0x40023800 = (*0x40023800 | 0x40000);
    }
    int32_t i = 0;
    int32_t var_10 = 0;
    *0x40023800 = (*0x40023800 | 0x10000);
    do
    {
        i = (i + 1);
        if ((*0x40023800 & "%u %u %u\n") != 0)
        {
            break;
        }
    } while (i != 0x5000);
    int32_t r0_11;
    if ((*0x40023800 & "%u %u %u\n") == 0)
    {
        r0_11 = 0;
    }
    else
    {
        r0_11 = 1;
    }
    int32_t r0_12 = r0_11;
    if (r0_12 == 1)
    {
        *0x40023840 = (*0x40023840 | 0x10000000);
        *0x40007000 = (*0x40007000 | sub_4000);
        *0x40023808 = *0x40023808;
        *0x40023808 = (*0x40023808 | 0x8000);
        *0x40023808 = (*0x40023808 | 0x1400);
        *0x40023804 = 0x7405418;
        *0x40023800 = (*0x40023800 | 0x1000000);
        while ((*0x40023800 & 0x2000000) == 0)
        {
            /* nop */
        }
        *0x40023c00 = 0x605;
        *0x40023808 = (*0x40023808 & 0xfffffffc);
        *0x40023808 = (*0x40023808 | 2);
        while ((*0x40023808 & 0xc) != 8)
        {
            /* nop */
        }
        r0_12 = (*0x40023800 & 0xfffffffe);
        *0x40023800 = r0_12;
    }
    *0xe000ed08 = 0x8000000;
    return r0_12;
}

uint32_t sub_19952()
{
    int32_t r2 = (*0x40023808 & 0xc);
    uint32_t r1_1 = 0xf42400;
    if (r2 == 8)
    {
        int32_t r3_1 = 0x16e3600;
        if ((*0x40023804 & 0x400000) == 0)
        {
            r3_1 = 0xf42400;
        }
        r1_1 = ((((*0x40023804 >> 6) & 0x1ff) * (r3_1 / (*0x40023804 & 0x3f))) / (2 + (((*0x40023804 >> 0x10) & 3) << 1)));
    }
    else if (r2 == 4)
    {
        r1_1 = 0x16e3600;
    }
    *0x20000ba0 = r1_1;
    uint32_t r0_3 = (r1_1 >> *(0x22584 + ((*0x40023808 >> 4) & 0xf)));
    *0x20000ba0 = r0_3;
    return r0_3;
}

void sub_199d0(void* arg1, int32_t* arg2)
{
    *(arg1 + 4) = ((*arg2 | (*(arg1 + 4) & 0xfcfffeff)) | (arg2[1] << 8));
    *(arg1 + 8) = (((arg2[4] | (arg2[5] | (*(arg1 + 8) & 0xc0fff7fd))) | arg2[3]) | (arg2[2] << 1));
    *(arg1 + 0x2c) = ((*(arg1 + 0x2c) & 0xff0fffff) | ((arg2[6] - 1) << 0x14));
}

int32_t sub_19a2a(int32_t* arg1)
{
    int32_t r0_1 = (arg1[3] | ((arg1[1] | (*arg1 | (*0x40012304 & 0xfffc30e0))) | arg1[2]));
    *0x40012304 = r0_1;
    return r0_1;
}

void sub_19a5e(void* arg1, int32_t arg2)
{
    int32_t r2 = *(arg1 + 8);
    int32_t r3 = (r2 | 1);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfffffffe);
    }
    *(arg1 + 8) = r3;
}

void* sub_19a70(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r12 = (arg2 * 3);
    int32_t* r4 = (arg1 + 0x10);
    if (arg2 > 9)
    {
        r12 = (r12 - 0x1e);
    }
    if (arg2 > 9)
    {
        r4 = (arg1 + 0xc);
    }
    *r4 = ((arg4 << r12) | (*r4 & (!(7 << r12))));
    void* r0;
    int32_t r3_2;
    if (arg3 <= 6)
    {
        r0 = (arg1 + 0x34);
        r3_2 = 0xfffffffb;
    }
    else if (arg3 > 0xc)
    {
        r0 = (arg1 + 0x2c);
        r3_2 = 0xffffffbf;
    }
    else
    {
        r0 = (arg1 + 0x30);
        r3_2 = 0xffffffdd;
    }
    int32_t r2_1 = ((arg3 * 5) + r3_2);
    *r0 = ((arg2 << r2_1) | (*r0 & (!(0x1f << r2_1))));
    return r0;
}

void sub_19ada(void* arg1)
{
    *(arg1 + 8) = (*(arg1 + 8) | 0x40000000);
}

uint32_t sub_19ae6(void* arg1)
{
    return *(arg1 + 0x4c);
}

int32_t sub_19aee(int32_t* arg1, int32_t arg2)
{
    int32_t r0 = (*arg1 & arg2);
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

void sub_19afa(int32_t arg1)
{
    *0x40013c14 = arg1;
}

void sub_19b06()
{
    if (*0x40023c10 > 0xffffffff)
    {
        return;
    }
    *0x40023c04 = 0x45670123;
    *0x40023c04 = 0xcdef89ab;
}

void sub_19b2e()
{
    *0x40023c10 = (*0x40023c10 | 0x80000000);
}

int32_t sub_19b40(int32_t arg1, int32_t arg2)
{
    int32_t r0 = sub_19ba8();
    if (r0 == 8)
    {
        *0x40023c10 = (*0x40023c10 & 0xfffffcff);
        int32_t r0_3 = 0x300;
        if (arg2 < 3)
        {
            r0_3 = (arg2 << 8);
        }
        *0x40023c10 = (r0_3 | *0x40023c10);
        *0x40023c10 = (*0x40023c10 & 0xffffff07);
        *0x40023c10 = ((*0x40023c10 | arg1) | 2);
        *0x40023c10 = (*0x40023c10 | 0x10000);
        r0 = sub_19ba8();
        *0x40023c10 = (*0x40023c10 & 0xfffffffd);
        *0x40023c10 = (*0x40023c10 & 0xffffff07);
    }
    return r0;
}

int32_t sub_19ba8()
{
    int32_t var_c = 8;
    int32_t i;
    do
    {
        i = sub_19c18();
    } while (i == 1);
    return i;
}

int32_t sub_19bc4(int32_t* arg1, int32_t arg2)
{
    int32_t r0 = sub_19ba8();
    if (r0 == 8)
    {
        *0x40023c10 = (*0x40023c10 & 0xfffffcff);
        *0x40023c10 = (*0x40023c10 | 0x200);
        *0x40023c10 = (*0x40023c10 | 1);
        *arg1 = arg2;
        r0 = sub_19ba8();
        *0x40023c10 = (*0x40023c10 & 0xfffffffe);
    }
    return r0;
}

void sub_19c0c(int32_t arg1)
{
    *0x40023c0c = arg1;
}

int32_t sub_19c18()
{
    if ((*0x40023c0c & 0x10000) != 0)
    {
        return 1;
    }
    if ((*0x40023c0c & 0x10) != 0)
    {
        return 5;
    }
    int32_t r0_2;
    if ((*0x40023c0c & 0xef) != 0)
    {
        r0_2 = 6;
    }
    else
    {
        r0_2 = (8 - ((*0x40023c0c >> 1) & 1));
    }
    return r0_2;
}

void sub_19c50(int32_t* arg1, int32_t* arg2)
{
    int32_t r8 = *arg2;
    int32_t r3 = 0;
    int32_t i = 0;
    do
    {
        int32_t r10_1 = (1 << i);
        if ((r8 & r10_1) != 0)
        {
            int32_t r6_1 = (3 << r3);
            int32_t r6_2 = (!r6_1);
            *arg1 = (*arg1 & (!r6_1));
            int32_t r2_3 = arg2[1];
            *arg1 = (*arg1 | (r2_3 << r3));
            if ((r2_3 - 1) <= 1)
            {
                arg1[2] = (arg1[2] & r6_2);
                arg1[2] = ((arg2[2] << r3) | arg1[2]);
                arg1[1] = (arg1[1] & (!r10_1));
                arg1[1] = ((arg2[3] << i) | arg1[1]);
            }
            arg1[3] = (arg1[3] & r6_2);
            arg1[3] = ((arg2[4] << r3) | arg1[3]);
        }
        i = (i + 1);
        r3 = (r3 + 2);
    } while (i != 0x10);
}

int32_t sub_19cd8(void* arg1, int32_t arg2)
{
    int32_t r0 = (*(arg1 + 0x10) & arg2);
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

void sub_19ce4(void* arg1, int16_t arg2)
{
    *(arg1 + 0x18) = arg2;
}

void sub_19ce8(void* arg1, int16_t arg2)
{
    *(arg1 + 0x1a) = arg2;
}

void* sub_19cee(void* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r12 = (0x1c & (arg2 << 2));
    void* r0 = (arg1 + (0x7ffc & (arg2 >> 1)));
    *(r0 + 0x20) = (*(r0 + 0x20) & (!(0xf << r12)));
    *(r0 + 0x20) = ((arg3 << r12) | *(r0 + 0x20));
    return r0;
}

void sub_19d1c(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0;
    if (arg1 == 0x40005c00)
    {
        sub_1a030(0x800000, 1);
        r0 = 0x800000;
    }
    else if (arg1 == 0x40005800)
    {
        sub_1a030(0x400000, 1);
        r0 = 0x400000;
    }
    else
    {
        if (arg1 != 0x40005400)
        {
            return;
        }
        sub_1a030(0x200000, 1);
        r0 = 0x200000;
    }
    /* tailcall */
    return sub_1a030(r0, 0);
}

uint32_t sub_19d7e(int16_t* arg1, int32_t* arg2)
{
    int16_t r6 = arg1[2];
    void var_28;
    sub_19f40(&var_28);
    int32_t var_20;
    arg1[2] = ((r6 & 0xffc0) | (var_20 / 0xf4240));
    *arg1 = (*arg1 & 0xfffe);
    uint32_t r0_6 = (var_20 / 0xf4240);
    int32_t r2_1 = *arg2;
    uint32_t r1_1;
    if (r2_1 <= 0x186a0)
    {
        r1_1 = (var_20 / (r2_1 << 1));
        if ((0xfffc & r1_1) < 4)
        {
            r1_1 = 4;
        }
    }
    else
    {
        uint32_t r1_2;
        if (*(arg2 + 6) != 0xbfff)
        {
            r1_2 = ((var_20 / (0x19 * r2_1)) | sub_4000);
        }
        else
        {
            r1_2 = (var_20 / (r2_1 * 3));
        }
        if ((r1_2 & 0xfff) == 0)
        {
            r1_2 = (r1_2 | 1);
        }
        r1_1 = (r1_2 | 0x8000);
        r0_6 = ((0x12c * r0_6) / 0x3e8);
    }
    arg1[0x10] = (r0_6 + 1);
    arg1[0xe] = r1_1;
    *arg1 = (*arg1 | 1);
    *arg1 = (((*arg1 & 0xfbf5) | arg2[1]) | *(arg2 + 0xa));
    uint32_t r0_17 = (arg2[3] | arg2[2]);
    arg1[4] = r0_17;
    return r0_17;
}

void sub_19e50(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 1);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfffe);
    }
    *arg1 = r3;
}

void sub_19e62(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 0x100);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfeff);
    }
    *arg1 = r3;
}

void sub_19e74(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 0x200);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfdff);
    }
    *arg1 = r3;
}

void sub_19e86(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 0x400);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfbff);
    }
    *arg1 = r3;
}

void sub_19e98(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3_1 = (r2 & 0x7fff);
    if (arg2 != 0)
    {
        r3_1 = (r2 | 0x8000);
    }
    *arg1 = r3_1;
}

void sub_19eac(void* arg1, int16_t arg2)
{
    *(arg1 + 0x10) = arg2;
}

uint32_t sub_19eb0(void* arg1)
{
    return *(arg1 + 0x10);
}

uint32_t sub_19eb8(void* arg1, int32_t arg2)
{
    int32_t var_4 = 0;
    return *(arg1 + arg2);
}

int32_t sub_19ed0(void* arg1, int32_t arg2)
{
    int32_t var_4 = 0;
    int32_t var_8 = 0;
    uint32_t r0_1 = (arg2 & 0xffffff);
    int32_t* r1_2;
    if ((arg2 >> 0x1c) == 0)
    {
        r0_1 = (r0_1 >> 0x10);
        r1_2 = (arg1 + 0x18);
    }
    else
    {
        r1_2 = (arg1 + 0x14);
    }
    int32_t r0_2 = (r0_1 & *r1_2);
    if (r0_2 != 0)
    {
        r0_2 = 1;
    }
    return r0_2;
}

void sub_19f02(void* arg1, int32_t arg2)
{
    *(arg1 + 0x14) = (!arg2);
}

void sub_19f08()
{
    *0x40023800 = (*0x40023800 | 1);
    *0x40023808 = 0;
    *0x40023800 = (*0x40023800 & 0xfef6ffff);
    *0x40023804 = 0x24003010;
    *0x40023800 = (*0x40023800 & 0xfffbffff);
    *0x4002380c = 0;
}

void sub_19f40(int32_t* arg1)
{
    int32_t r3 = (*0x40023808 & 0xc);
    uint32_t r2_1 = 0xf42400;
    if (r3 == 8)
    {
        int32_t r3_1 = 0x16e3600;
        if ((*0x40023804 & 0x400000) == 0)
        {
            r3_1 = 0xf42400;
        }
        r2_1 = ((((*0x40023804 >> 6) & 0x1ff) * (r3_1 / (*0x40023804 & 0x3f))) / (2 + (((*0x40023804 >> 0x10) & 3) << 1)));
    }
    else if (r3 == 4)
    {
        r2_1 = 0x16e3600;
    }
    *arg1 = r2_1;
    uint32_t r2_6 = (r2_1 >> *(0x22594 + ((*0x40023808 >> 4) & 0xf)));
    arg1[1] = r2_6;
    arg1[2] = (r2_6 >> *(0x22594 + ((*0x40023808 >> 0xa) & 7)));
    arg1[3] = (r2_6 >> *(0x22594 + ((*0x40023808 >> 0xd) & 7)));
}

int32_t sub_19fe8(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023830;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023830 = r0;
    return r0;
}

int32_t sub_1a000(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023840;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023840 = r0;
    return r0;
}

int32_t sub_1a018(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023844;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023844 = r0;
    return r0;
}

int32_t sub_1a030(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023820;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023820 = r0;
    return r0;
}

int32_t sub_1a048(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023824;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023824 = r0;
    return r0;
}

void sub_1a060(int16_t* arg1, int16_t* arg2)
{
    uint32_t r12 = *arg1;
    if (arg1 == 0x40000c00)
    {
    label_1a0b4:
        r12 = (arg2[1] | (r12 & 0xffffff8f));
    }
    int32_t r3_1;
    if ((arg1 > 0x40000bff && arg1 != 0x40000c00))
    {
        if (arg1 == 0x40010400)
        {
            goto label_1a0b4;
        }
        r3_1 = 0x40010000;
    }
    if (arg1 <= 0x40000bff)
    {
        if (arg1 == 0x40000000)
        {
            goto label_1a0b4;
        }
        if (arg1 == 0x40000400)
        {
            goto label_1a0b4;
        }
        r3_1 = 0x40000800;
    }
    if ((arg1 == 0x40000c00 || (((arg1 > 0x40000bff && arg1 != 0x40000c00) || arg1 <= 0x40000bff) && arg1 != r3_1)))
    {
        int32_t r3_3 = (arg1 | 0x400);
        if (r3_3 != 0x40001400)
        {
            r12 = ((r12 & 0xfffffcff) | arg2[4]);
        }
        *arg1 = r12;
        *(arg1 + 0x2c) = *(arg2 + 4);
        arg1[0x14] = *arg2;
        if (r3_3 == 0x40010400)
        {
            arg1[0x18] = arg2[5];
        }
        arg1[0xa] = 1;
        return;
    }
    if ((((arg1 > 0x40000bff && arg1 != 0x40000c00) || arg1 <= 0x40000bff) && arg1 == r3_1))
    {
        goto label_1a0b4;
    }
}

void sub_1a0f4(int32_t* arg1)
{
    arg1[1] = 0xffffffff;
    arg1[2] = 0;
    *arg1 = 0;
    *(arg1 + 0xa) = 0;
}

void sub_1a104(void* arg1, int16_t arg2, int16_t arg3)
{
    *(arg1 + 0x28) = arg2;
    *(arg1 + 0x14) = arg3;
}

void sub_1a10a(void* arg1, int32_t arg2)
{
    *(arg1 + 0x24) = arg2;
}

void sub_1a10e(void* arg1, int32_t arg2)
{
    *(arg1 + 0x2c) = arg2;
}

int32_t sub_1a112(void* arg1)
{
    return *(arg1 + 0x24);
}

void sub_1a116(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 2);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfffd);
    }
    *arg1 = r3;
}

void sub_1a128(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 1);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfffe);
    }
    *arg1 = r3;
}

void sub_1a13a(void* arg1, int16_t* arg2)
{
    *(arg1 + 0x20) = (*(arg1 + 0x20) & 0xffef);
    uint32_t lr = *(arg1 + 4);
    int16_t r12 = ((*(arg1 + 0x18) & 0x8cff) | (*arg2 << 8));
    int32_t r2_5 = (((*(arg1 + 0x20) & 0xffffffdf) | (arg2[6] << 4)) | (arg2[1] << 4));
    if ((arg1 | 0x400) == 0x40010400)
    {
        r2_5 = (((r2_5 & 0xff3f) | (0xffb0 & (arg2[7] << 4))) | (arg2[2] << 4));
        lr = (((lr & 0xfffff3ff) | (arg2[8] << 2)) | (arg2[9] << 2));
    }
    *(arg1 + 4) = lr;
    *(arg1 + 0x18) = r12;
    *(arg1 + 0x38) = *(arg2 + 8);
    *(arg1 + 0x20) = r2_5;
}

void sub_1a1b2(int32_t* arg1)
{
    arg1[1] = 0;
    *arg1 = 0;
    arg1[4] = 0;
    arg1[3] = 0;
    arg1[2] = 0;
}

int32_t sub_1a1c2(void* arg1)
{
    return *(arg1 + 0x3c);
}

int32_t sub_1a1c6(void* arg1, int32_t arg2)
{
    int32_t r0 = (*(arg1 + 0x10) & arg2);
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

void sub_1a1d0(void* arg1, int32_t arg2)
{
    *(arg1 + 0x10) = (!arg2);
}

void sub_1a1d8(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    char const* const r0;
    if (arg1 > 0x40004fff)
    {
        if (arg1 != 0x40005000)
        {
            int32_t r0_1;
            if (arg1 == 0x40011400)
            {
                sub_1a048(0x20, 1);
                r0_1 = 0x20;
            }
            else
            {
                if (arg1 != 0x40011000)
                {
                    return;
                }
                sub_1a048(0x10, 1);
                r0_1 = 0x10;
            }
            /* tailcall */
            return sub_1a048(r0_1, 0);
        }
        sub_1a030(0x100000, 1);
        r0 = __builtin_memcpy;
    }
    else if (arg1 == 0x40004400)
    {
        sub_1a030("%u %u %u\n", 1);
        r0 = "%u %u %u\n";
    }
    else if (arg1 == 0x40004800)
    {
        sub_1a030(0x40000, 1);
        r0 = &data_40000;
    }
    else
    {
        if (arg1 != 0x40004c00)
        {
            return;
        }
        sub_1a030(0x80000, 1);
        r0 = &data_80000;
    }
    /* tailcall */
    return sub_1a030(r0, 0);
}

int32_t sub_1a29c(void* arg1, int32_t* arg2)
{
    *(arg1 + 0x10) = ((*(arg1 + 0x10) & 0xcfff) | *(arg2 + 6));
    *(arg1 + 0xc) = ((((*(arg1 + 0xc) & 0xe9f3) | arg2[1]) | arg2[2]) | *(arg2 + 0xa));
    *(arg1 + 0x14) = ((*(arg1 + 0x14) & 0xfcff) | arg2[3]);
    void var_28;
    sub_19f40(&var_28);
    int32_t r2 = 2;
    void* r0_13;
    void var_20;
    void var_1c;
    if ((arg1 | 0x400) != 0x40011400)
    {
        r0_13 = &var_20;
    }
    else
    {
        r0_13 = &var_1c;
    }
    int32_t r6 = 4;
    if (*(arg1 + 0xc) < 0)
    {
        r2 = 1;
    }
    uint32_t r0_16 = ((0x19 * *r0_13) / (*arg2 << r2));
    uint32_t r2_2 = (r0_16 / 0x64);
    int32_t r3_1 = *(arg1 + 0xc);
    if (r3_1 < 0)
    {
        r6 = 3;
    }
    int32_t r0_21 = 0xf;
    if (r3_1 < 0)
    {
        r0_21 = 7;
    }
    int32_t r0_23 = ((r0_21 & ((((r0_16 + (r2_2 * 0xffffff9c)) << r6) + 0x32) / 0x64)) | (r2_2 << 4));
    *(arg1 + 8) = r0_23;
    return r0_23;
}

void sub_1a360(void* arg1, int32_t arg2)
{
    int16_t r2 = *(arg1 + 0xc);
    int16_t r3 = (r2 | 0x2000);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xdfff);
    }
    *(arg1 + 0xc) = r3;
}

void sub_1a372(void* arg1, int32_t arg2)
{
    int16_t r2 = *(arg1 + 0xc);
    int16_t r3_1 = (r2 & 0x7fff);
    if (arg2 != 0)
    {
        r3_1 = (r2 | 0x8000);
    }
    *(arg1 + 0xc) = r3_1;
}

void sub_1a388(void* arg1, int16_t arg2)
{
    *(arg1 + 4) = (arg2 & 0x1ff);
}

void sub_1a390(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r12 = (arg2 & 0xe0);
    int32_t r3 = 0x14;
    if (2 == (r12 >> 5))
    {
        r3 = 0x10;
    }
    int32_t r1_1 = (1 << (arg2 & 0x1f));
    if (1 == (r12 >> 5))
    {
        r3 = 0xc;
    }
    int32_t r2 = *(arg1 + r3);
    int32_t r1_2;
    if (arg3 == 0)
    {
        r1_2 = (r2 & (!r1_1));
    }
    else
    {
        r1_2 = (r1_1 | r2);
    }
    *(arg1 + r3) = r1_2;
}

int32_t sub_1a3ca(int16_t* arg1, int32_t arg2)
{
    int32_t r0 = (*arg1 & arg2);
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_1a3d6(int16_t* arg1, int32_t arg2)
{
    int32_t r3 = ((arg2 >> 5) & 7);
    int16_t* r3_1;
    if (r3 == 2)
    {
        r3_1 = &arg1[8];
    }
    else if (r3 != 1)
    {
        r3_1 = &arg1[0xa];
    }
    else
    {
        r3_1 = &arg1[6];
    }
    int32_t r2_1 = ((1 << (arg2 & 0x1f)) & *r3_1);
    if (r2_1 != 0)
    {
        r2_1 = 1;
    }
    int32_t r0_1 = (*arg1 & (1 << (arg2 >> 8)));
    if (r0_1 != 0)
    {
        r0_1 = 1;
    }
    return (r0_1 & r2_1);
}

int32_t sub_1a418(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    char r3 = 0x20;
    if (arg3 != 0)
    {
        r3 = 0x21;
    }
    char var_9 = r3;
    return sub_182b6(arg1, arg2, &var_9, 1, nullptr, 0);
}

int32_t sub_1a440(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    if (arg3 != 0)
    {
        arg4 = (arg4 | 1);
    }
    char var_9 = (arg4 | 0x80);
    return sub_182b6(arg1, arg2, &var_9, 1, nullptr, 0);
}

int32_t sub_1a468(int16_t* arg1, int32_t arg2, char arg3)
{
    char var_9 = (arg3 | 0xa0);
    return sub_182b6(arg1, arg2, &var_9, 1, nullptr, 0);
}

int32_t sub_1a488(int16_t* arg1, int32_t arg2, char arg3)
{
    char var_9 = ((arg3 & 0xf) | 0xe0);
    return sub_182b6(arg1, arg2, &var_9, 1, nullptr, 0);
}

int32_t sub_1a4aa(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    char var_b = (0x1e & (arg3 << 1));
    char var_a = arg4;
    uint8_t var_9 = (arg4 >> 8);
    return sub_182b6(arg1, arg2, &var_b, 3, nullptr, 0);
}

int32_t sub_1a4d8(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    uint32_t r12_1 = *(0x20000ba4 + ((arg4 & 0xf) << 1));
    uint8_t var_a = r12_1;
    char var_b = (0x1e & (arg3 << 1));
    uint8_t var_9 = (r12_1 >> 8);
    return sub_182b6(arg1, arg2, &var_b, 3, nullptr, 0);
}

int32_t sub_1a518(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    uint32_t r3_1;
    uint8_t r12_5;
    if ((arg4 - 0x30) <= 9)
    {
        r3_1 = *((arg4 << 1) + 0x20000b64);
    }
    else if ((arg4 - 0x41) <= 0x19)
    {
        r3_1 = *((arg4 << 1) + 0x20000b62);
    }
    else if ((arg4 - 0x61) > 0x19)
    {
        r3_1 = 0;
        r12_5 = 0;
    }
    else
    {
        r3_1 = *((arg4 << 1) + 0x20000b22);
    }
    if ((((arg4 - 0x30) <= 9 || ((arg4 - 0x30) > 9 && (arg4 - 0x41) <= 0x19)) || (((arg4 - 0x30) > 9 && (arg4 - 0x41) > 0x19) && (arg4 - 0x61) <= 0x19)))
    {
        r12_5 = (r3_1 >> 8);
    }
    uint8_t var_a = r3_1;
    uint8_t var_9 = r12_5;
    char var_b = (0x1e & (arg3 << 1));
    return sub_182b6(arg1, arg2, &var_b, 3, nullptr, 0);
}

int32_t sub_1a5ae(int16_t* arg1, int32_t arg2)
{
    char r2;
    char var_9 = r2;
    char var_a = 0;
    return sub_182b6(arg1, arg2, &var_a, 2, nullptr, 0);
}

int32_t sub_1a5d0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    if (arg4 == 0)
    {
        /* tailcall */
        return sub_1a640(arg1, arg2, arg3);
    }
    /* tailcall */
    return sub_1a5da(arg1, arg2, arg3);
}

uint32_t sub_1a5da(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    int16_t var_1a = 0xa;
    uint32_t r0_2 = sub_182b6(arg1, arg2, &var_1a, 1, (&var_1a | 1), 1);
    if (r0_2 >= 0)
    {
        *var_1a[1] = ((1 << arg3) | *var_1a[1]);
        r0_2 = sub_182b6(arg1, arg2, &var_1a, 2, nullptr, 0);
        if (r0_2 >= 0)
        {
            r0_2 = *var_1a[1];
        }
    }
    return r0_2;
}

uint32_t sub_1a640(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    int16_t var_1a = 0xa;
    uint32_t r0_2 = sub_182b6(arg1, arg2, &var_1a, 1, (&var_1a | 1), 1);
    if (r0_2 >= 0)
    {
        *var_1a[1] = (*var_1a[1] & (!(1 << arg3)));
        r0_2 = sub_182b6(arg1, arg2, &var_1a, 2, nullptr, 0);
        if (r0_2 >= 0)
        {
            r0_2 = *var_1a[1];
        }
    }
    return r0_2;
}

uint32_t sub_1a6a8(int16_t* arg1, int32_t arg2, char arg3)
{
    char var_a = 0xa;
    uint32_t r0 = sub_182b6(arg1, arg2, &var_a, 2, nullptr, 0);
    if (r0 >= 0)
    {
        r0 = arg3;
    }
    return r0;
}

uint32_t sub_1a6d6(int16_t* arg1, int32_t arg2)
{
    int16_t var_a = 9;
    int32_t r0 = sub_182b6(arg1, arg2, &var_a, 1, (&var_a | 1), 1);
    char r1 = *var_a[1];
    if (r0 < 0)
    {
        r1 = r0;
    }
    return r1;
}

uint32_t sub_1a704(int32_t* arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t __saved_r7_1;
    int32_t __saved_r7 = __saved_r7_1;
    int32_t __saved_r6_1;
    int32_t __saved_r6 = __saved_r6_1;
    int32_t __saved_r5_1;
    int32_t __saved_r5 = __saved_r5_1;
    int32_t __saved_r4_1;
    int32_t __saved_r4 = __saved_r4_1;
    int32_t __saved_r11_1;
    int32_t __saved_r11 = __saved_r11_1;
    int32_t __saved_r10_1;
    int32_t __saved_r10 = __saved_r10_1;
    int32_t __saved_r9_1;
    int32_t __saved_r9 = __saved_r9_1;
    int32_t __saved_r8_1;
    int32_t __saved_r8 = __saved_r8_1;
    uint32_t r4;
    if (sub_1ab16() != 0)
    {
        r4 = 0;
    }
    else
    {
        r4 = 0;
        if (sub_1abf0() == 0)
        {
            int32_t var_30_1 = 2;
            int32_t var_30_2 = 0;
            int32_t var_2c_1 = 0;
            sub_1853e(0x20000c18, 0x56, 0x2000606a, sub_1a850(0xb0, 0, 0xffffffff, nullptr, 2), nullptr, 0);
            sub_196cc(0x64);
            void var_28;
            void* r5 = (&var_28 - ((arg2 + 0x10) & 0xfffffff8));
            *(r5 - 8) = r5;
            *(r5 - 4) = 7;
            sub_1853e(0x20000c18, 0x56, 0, 0);
            if (sub_1aa18(r5, 7) == 0)
            {
                if (*(r5 + 3) != 0x90)
                {
                    r4 = 0;
                }
                else
                {
                    r4 = (*(r5 + 2) | (*(r5 + 1) << 8));
                }
            }
            uint32_t r11 = 0;
            if ((arg2 + 4) == r4)
            {
                *(r5 - 8) = r4;
                int32_t r0_12 = sub_1a850(0xb0, 2, 0xffffffff, 0);
                *(r5 - 8) = 0;
                *(r5 - 4) = 0;
                sub_1853e(0x20000c18, 0x56, 0x2000606a, r0_12);
                sub_196cc(0x64);
                *(r5 - 8) = r5;
                *(r5 - 4) = (r4 + 5);
                sub_1853e(0x20000c18, 0x56, 0, 0);
                if (sub_1aa18(r5, (r4 + 5)) == 0)
                {
                    if (*((r5 + r4) + 1) != 0x90)
                    {
                        r11 = 0;
                    }
                    else
                    {
                        sub_1ff48(arg1, (r5 + 5), (r4 - 4));
                        r11 = (r4 + 0xfffc);
                    }
                }
                sub_187ca(0x20000c18, 0x56, 0x28);
            }
            r4 = r11;
        }
    }
    return r4;
}

uint32_t sub_1a850(int32_t arg1, int32_t arg2, int32_t arg3, int32_t* arg4, int32_t arg5)
{
    *0x2000606c = arg1;
    *0x2000606e = arg2;
    *0x2000606b = (arg1 >> 8);
    *0x2000606d = (arg2 >> 8);
    char r1_1 = (*0x20000c29 ^ 1);
    *0x20000c29 = r1_1;
    *0x2000606a = (r1_1 | 2);
    int32_t r6;
    if (arg3 < 0)
    {
        r6 = 5;
    }
    else
    {
        *0x2000606f = arg3;
        sub_1ff48(0x20006070, arg4, arg3);
        r6 = (arg3 + 6);
    }
    if (arg5 > 0xffffffff)
    {
        *(0x2000606a + r6) = arg5;
        r6 = (r6 + 1);
    }
    uint32_t r5_1 = r6;
    uint32_t r0_4 = sub_1aa18(0x2000606a, r5_1);
    *(0x2000606a + r5_1) = r0_4;
    *(0x2000606a + (r6 + 1)) = (r0_4 >> 8);
    return (r6 + 2);
}

int32_t sub_1a8d0(int32_t* arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t __saved_r7_1;
    int32_t __saved_r7 = __saved_r7_1;
    int32_t __saved_r6_1;
    int32_t __saved_r6 = __saved_r6_1;
    int32_t __saved_r5_1;
    int32_t __saved_r5 = __saved_r5_1;
    int32_t __saved_r4_1;
    int32_t __saved_r4 = __saved_r4_1;
    int32_t __saved_r10_1;
    int32_t __saved_r10 = __saved_r10_1;
    int32_t __saved_r9_1;
    int32_t __saved_r9 = __saved_r9_1;
    int32_t __saved_r8_1;
    int32_t __saved_r8 = __saved_r8_1;
    int32_t r0 = sub_1ab16();
    int32_t r0_1;
    int32_t r4_1;
    if (r0 == 0)
    {
        r0_1 = sub_1abf0();
        if (r0_1 == 0)
        {
            void var_30;
            void* r6 = (&var_30 - ((arg2 + 0xd) & 0xfffffff8));
            *(r6 + 1) = (arg2 + 4);
            *r6 = ((arg2 + 4) >> 8);
            *(r6 + 2) = 0xd5;
            *(r6 + 3) = 0;
            *(r6 + 4) = arg2;
            *(r6 + 5) = 0;
            sub_1ff48((r6 + 6), arg1, arg2);
            *(r6 - 8) = 0xffffffff;
            int32_t r0_10 = sub_1a850(0xd6, 0, (arg2 + 6), r6);
            *(r6 - 8) = 0;
            *(r6 - 4) = 0;
            sub_1853e(0x20000c18, 0x56, 0x2000606a, r0_10);
            sub_196cc(0x64);
            *(r6 - 4) = 5;
            char var_29;
            *(r6 - 8) = &var_29;
            sub_1853e(0x20000c18, 0x56, 0, 0);
            char var_28;
            if (var_29 >= 0xc0)
            {
                *0x2000606a = 0xf2;
                *0x2000606b = var_28;
                uint32_t r0_15 = sub_1aa18(0x2000606a, 2);
                *0x2000606c = r0_15;
                *0x2000606d = (r0_15 >> 8);
                *(r6 - 8) = 0;
                *(r6 - 4) = 0;
                sub_1853e(0x20000c18, 0x56, 0x2000606a, 4);
                sub_196cc(0x64);
                *(r6 - 8) = &var_29;
                *(r6 - 4) = 5;
                sub_1853e(0x20000c18, 0x56, 0, 0);
            }
            if (sub_1aa18(&var_29, 5) != 0)
            {
                r4_1 = 1;
            }
            else
            {
                r4_1 = 0;
                char var_27;
                if ((var_27 | (var_28 << 8)) != 0x9000)
                {
                    r4_1 = 1;
                }
            }
            sub_187ca(0x20000c18, 0x56, 0x28);
        }
    }
    if ((r0 != 0 || (r0 == 0 && r0_1 != 0)))
    {
        r4_1 = 1;
    }
    return r4_1;
}

uint32_t sub_1aa18(char* arg1, int32_t arg2)
{
    int32_t lr = 0x6363;
    int32_t i;
    do
    {
        uint32_t r12_1 = *arg1;
        arg1 = &arg1[1];
        i = arg2;
        arg2 = (arg2 - 1);
        uint32_t r3_2 = (lr ^ r12_1);
        uint32_t r2_3 = ((r3_2 << 4) ^ r3_2);
        lr = (((r2_3 >> 4) ^ (r2_3 << 3)) ^ (((lr >> 8) & 0xff) | (r2_3 << 8)));
    } while (i != 1);
    return lr;
}

int32_t sub_1aa56()
{
    int32_t var_38 = 1;
    int32_t var_34 = 1;
    int32_t var_30 = 1;
    int32_t var_2c = 1;
    char var_28 = 1;
    int32_t var_1c = 1;
    int32_t var_18 = 1;
    int32_t var_14 = 1;
    int32_t var_10 = 1;
    char var_c = 1;
    int32_t r2 = *0x20000c1c;
    int32_t r3 = *0x20000c20;
    int32_t r0 = *0x20000c24;
    int32_t var_40 = *0x20000c18;
    int32_t var_3c = r2;
    int32_t var_24 = r3;
    int32_t var_20 = r0;
    sub_1807c(&var_40, 2);
    return sub_19756(0x64);
}

int32_t sub_1aaa0()
{
    if (*0x20000c28 == 0)
    {
        int32_t var_38_1 = 0;
        int32_t var_34_1 = 1;
        int32_t var_30_1 = 0;
        int32_t var_2c_1 = 0;
        char var_28_1 = 0;
        int32_t var_1c_1 = 0;
        int32_t var_18_1 = 1;
        int32_t var_14_1 = 0;
        int32_t var_10_1 = 0;
        char var_c_1 = 0;
    }
    else
    {
        int32_t var_38 = 2;
        int32_t var_34 = 1;
        int32_t var_30 = 0;
        int32_t var_2c = 0;
        char var_28 = 0;
        int32_t var_1c = 2;
        int32_t var_18 = 1;
        int32_t var_14 = 0;
        int32_t var_10 = 0;
        char var_c = 0;
    }
    int32_t r2 = *0x20000c1c;
    int32_t r3 = *0x20000c20;
    int32_t r0_1 = *0x20000c24;
    int32_t var_40 = *0x20000c18;
    int32_t var_3c = r2;
    int32_t var_24 = r3;
    int32_t var_20 = r0_1;
    sub_1807c(&var_40, 2);
    return sub_19756(0x64);
}

int32_t sub_1ab16()
{
    char var_25 = 0x52;
    sub_1853e(0x20000c18, 0x56, &var_25, 1, nullptr, 0);
    int32_t r6 = 0x64;
    int32_t r0_8;
    while (true)
    {
        sub_19756(0xa);
        if (sub_1853e(0x20000c18, 0x56, nullptr, 0, nullptr, 0) == 0)
        {
            void var_1f;
            sub_1ff48(&var_1f, &data_225a6, 7);
            int32_t r4_1 = 0;
            sub_1853e(0x20000c18, 0x56, 0x2000606a, sub_1a850(0xa4, 0x400, 7, &var_1f, 0), nullptr, 0);
            sub_196cc(0x64);
            void var_24;
            sub_1853e(0x20000c18, 0x56, nullptr, 0, &var_24, 5);
            if (sub_1aa18(&var_24, 5) == 0)
            {
                char var_23;
                char var_22;
                if ((var_22 | (var_23 << 8)) != 0x9000)
                {
                    r4_1 = 1;
                }
                r0_8 = r4_1;
                break;
            }
        }
        else
        {
            r6 = (r6 - 1);
            if ((r6 & 0xff) != 0)
            {
                continue;
            }
        }
        r0_8 = 1;
        break;
    }
    return r0_8;
}

int32_t sub_1abf0()
{
    int16_t var_1a = 0x100;
    int32_t r4 = 0;
    sub_1853e(0x20000c18, 0x56, 0x2000606a, sub_1a850(0xa4, 0xc, 2, &var_1a, 0xffffffff), nullptr, 0);
    sub_196cc(0x64);
    void var_1f;
    sub_1853e(0x20000c18, 0x56, nullptr, 0, &var_1f, 5);
    char var_1e;
    char var_1d;
    if (sub_1aa18(&var_1f, 5) != 0)
    {
        r4 = 1;
    }
    else if ((var_1d | (var_1e << 8)) != 0x9000)
    {
        r4 = 1;
    }
    return r4;
}

int32_t sub_1ac80(int32_t arg1, char* arg2)
{
    sub_1f886(&arg2[0x11], 0, 0xef);
    char r1 = -0x65;
    arg2[1] = 4;
    *arg2 = 0x24;
    arg2[3] = ((arg1 | 0x2500) >> 8);
    arg2[2] = arg1;
    int32_t r0_4 = 0;
    if ((arg1 - 0x15) < 3)
    {
        r0_4 = 0xba0;
    }
    arg2[4] = r0_4;
    if (arg1 == 0x12)
    {
        r1 = -0x75;
    }
    arg2[6] = r1;
    arg2[7] = 0x20;
    arg2[8] = 2;
    char r1_1 = 0;
    arg2[9] = 0;
    if (arg1 == 0x12)
    {
        r1_1 = 8;
    }
    arg2[0xa] = r1_1;
    arg2[0xb] = r1_1;
    arg2[0xc] = 1;
    arg2[0xd] = 0x32;
    arg2[0xe] = 1;
    arg2[0xf] = 0x32;
    arg2[0x10] = 0x32;
    arg2[5] = (r0_4 >> 8);
    return 0;
}

int32_t sub_1ad04(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    arg1[2] = arg3;
    *arg1 = arg2;
    arg1[4] = arg4;
    arg1[3] = (arg3 >> 8);
    arg1[1] = (arg2 >> 8);
    arg1[5] = (arg4 >> 8);
    return 0;
}

int32_t sub_1ad1a(void* arg1, char* arg2)
{
    int32_t r0_1 = sub_1fedc(arg2);
    if (r0_1 >= 0x1f)
    {
        r0_1 = 0x1f;
    }
    if (r0_1 != 0)
    {
        uint32_t r6_1 = 0;
        int32_t r4_1 = 0;
        do
        {
            r4_1 = (r4_1 + 1);
            (arg1 + 0x16)[(r6_1 << 1)] = arg2[r6_1];
            int32_t r2_2 = (1 | (r6_1 << 1));
            r6_1 = r4_1;
            (arg1 + 0x16)[r2_2] = 0;
        } while (r0_1 > r6_1);
    }
    *(arg1 + 0x13) = r0_1;
    return 0;
}

int32_t sub_1ad64(void* arg1, char* arg2)
{
    int32_t r0_1 = sub_1fedc(arg2);
    if (r0_1 >= 0x1f)
    {
        r0_1 = 0x1f;
    }
    if (r0_1 != 0)
    {
        uint32_t r6_1 = 0;
        int32_t r4_1 = 0;
        do
        {
            r4_1 = (r4_1 + 1);
            (arg1 + 0x54)[(r6_1 << 1)] = arg2[r6_1];
            int32_t r2_2 = (1 | (r6_1 << 1));
            r6_1 = r4_1;
            (arg1 + 0x54)[r2_2] = 0;
        } while (r0_1 > r6_1);
    }
    *(arg1 + 0x14) = r0_1;
    return 0;
}

int32_t sub_1adb0(int16_t* arg1, int32_t arg2, int32_t* arg3)
{
    int32_t* r4 = arg3;
    uint32_t r6 = 0;
    char var_45 = 0x20;
    int16_t r0 = 0;
    int32_t r0_4;
    while (true)
    {
        char var_46 = r0;
        void var_44;
        sub_1ff48(&var_44, r4, 0x20);
        if (sub_182b6(arg1, arg2, &var_46, 0x22, nullptr, 0) != 0)
        {
            r0_4 = 0xffffffff;
            break;
        }
        r0 = (r6 + 0x20);
        r4 = &r4[8];
        r6 = r0;
        if (r6 >= 0x100)
        {
            r0_4 = 0;
            break;
        }
    }
    return r0_4;
}

int32_t sub_1ae14(int16_t* arg1, int32_t arg2)
{
    char var_a = 1;
    int16_t var_c = 0x1ff;
    return sub_182b6(arg1, arg2, &var_c, 3, nullptr, 0);
}

int32_t sub_1ae3c(void* arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        int32_t r2_1 = *(*(arg1 + 0x65c) + 0x18);
        if ((r2_1 != 0 && *(arg1 + 0x112) == 3))
        {
            r2_1(arg1);
        }
    }
    else if (*(arg1 + 0x111) == 3)
    {
        int32_t r0_4 = *(arg1 + 0x3b8);
        int32_t r1 = *(arg1 + 0x3d0);
        if (r1 <= r0_4)
        {
            int32_t r1_2 = *(*(arg1 + 0x65c) + 0x10);
            if ((r1_2 != 0 && *(arg1 + 0x112) == 3))
            {
                r1_2(arg1);
            }
            sub_1b158(arg1);
        }
        else
        {
            int32_t r2_2 = (r1 - r0_4);
            *(arg1 + 0x3d0) = r2_2;
            int32_t r1_1 = *(arg1 + 0x3c0);
            if (*(arg1 + 3) == 1)
            {
                r1_1 = (r1_1 + r0_4);
                *(arg1 + 0x3c0) = r1_1;
            }
            if (r2_2 < r0_4)
            {
                r0_4 = r2_2;
            }
            sub_1b146(arg1, r1_1, r0_4);
        }
    }
    return 0;
}

int32_t sub_1aeb2(void* arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        int32_t r2_1 = *(*(arg1 + 0x65c) + 0x14);
        if ((r2_1 != 0 && *(arg1 + 0x112) == 3))
        {
            r2_1(arg1);
        }
    }
    else
    {
        if (*(arg1 + 0x111) != 2)
        {
            int32_t r2_4 = *(*(arg1 + 0x65c) + 0x14);
            if ((r2_4 != 0 && *(arg1 + 0x112) == 3))
            {
                r2_4(arg1, 0);
            }
        }
        else
        {
            int32_t r0_4 = *(arg1 + 0x124);
            int32_t r1 = *(arg1 + 0x13c);
            if (r1 <= r0_4)
            {
                int32_t r1_2 = *(arg1 + 0x140);
                if (((r1_2 < r0_4 || (r1_2 >= r0_4 && (r1_2 % r0_4) != 0)) || ((r1_2 >= r0_4 && (r1_2 % r0_4) == 0) && r1_2 >= *(arg1 + 0x144))))
                {
                    int32_t r1_3 = *(*(arg1 + 0x65c) + 0xc);
                    if ((r1_3 != 0 && *(arg1 + 0x112) == 3))
                    {
                        r1_3(arg1);
                    }
                    sub_1b17a(arg1);
                }
                if (((r1_2 >= r0_4 && (r1_2 % r0_4) == 0) && r1_2 < *(arg1 + 0x144)))
                {
                    sub_1b114(arg1, 0, 0);
                    *(arg1 + 0x144) = 0;
                }
            }
            else
            {
                int32_t r2_2 = (r1 - r0_4);
                *(arg1 + 0x13c) = r2_2;
                int32_t r1_1 = *(arg1 + 0x128);
                if (*(arg1 + 3) == 1)
                {
                    r1_1 = (r1_1 + r0_4);
                    *(arg1 + 0x128) = r1_1;
                }
                sub_1b114(arg1, r1_1, r2_2);
            }
        }
        if (*(arg1 + 0x116) == 1)
        {
            *(*(arg1 + 0x10) + 4) = *0x2000616c;
            *(arg1 + 0x116) = 0;
        }
    }
    return 0;
}

int32_t sub_1af84(void* arg1)
{
    char var_18;
    sub_1b4da(arg1, &var_18);
    uint32_t r0 = var_18;
    int32_t r1_1 = (r0 & 0x60);
    bool cond:0 = r1_1 == 0x40;
    if (r1_1 != 0x40)
    {
        cond:0 = r1_1 == 0x20;
    }
    if (cond:0)
    {
        *(*(arg1 + 0x65c) + 8)(arg1, &var_18);
    }
    else
    {
        int32_t r1_2;
        if (r1_1 == 0)
        {
            r1_2 = (r0 & 3);
            if (r1_2 == 2)
            {
                sub_1b438(arg1, &var_18);
            }
            if (r1_2 == 1)
            {
                sub_1b3fc(arg1, &var_18);
            }
            if (r1_2 == 0)
            {
                sub_1b19c(arg1, &var_18);
            }
        }
        if ((r1_1 != 0 || (((r1_1 == 0 && r1_2 != 2) && r1_2 != 1) && r1_2 != 0)))
        {
            sub_1c3d8(arg1, (r0 & 0x80));
        }
    }
    return 0;
}

int32_t sub_1afee(void* arg1)
{
    int32_t r1 = *(*(arg1 + 0x65c) + 0x1c);
    if (r1 != 0)
    {
        r1();
    }
    return 0;
}

int32_t sub_1b004(void* arg1)
{
    sub_1c2d2(arg1, 0, 0x40, 0);
    sub_1c2d2(arg1, 0x80, 0x40, 0);
    *(arg1 + 0x112) = 1;
    *(*(arg1 + 0x660) + 4)(*(arg1 + 2));
    return 0;
}

int32_t sub_1b034(void* arg1)
{
    *(arg1 + 0x113) = *(arg1 + 0x112);
    *(arg1 + 0x112) = 4;
    *(*(arg1 + 0x660) + 0xc)();
    return 0;
}

int32_t sub_1b052(void* arg1)
{
    *(*(arg1 + 0x660) + 0x10)();
    *(arg1 + 0x112) = 3;
    return 0;
}

int32_t sub_1b06a(void* arg1)
{
    *(*(arg1 + 0x65c) + 0x20)();
    return 0;
}

int32_t sub_1b07a(void* arg1)
{
    *(*(arg1 + 0x65c) + 0x24)();
    return 0;
}

int32_t sub_1b08a(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    sub_17004();
    *(arg1 + 0x660) = arg4;
    *(arg1 + 0x65c) = arg3;
    sub_1c248(arg1);
    **(arg1 + 0x660)();
    /* tailcall */
    return sub_17140();
}

int32_t sub_1b0c4() __pure
{
    return 0;
}

int32_t sub_1b0c8(void* arg1)
{
    **(arg1 + 0x65c)(arg1);
    *(*(arg1 + 0x660) + 8)();
    return 0;
}

int32_t sub_1b0e4(void* arg1)
{
    *(*(arg1 + 0x65c) + 4)();
    return 0;
}

int32_t sub_1b0f4(void* arg1, int32_t arg2, int32_t arg3)
{
    *(arg1 + 0x13c) = arg3;
    *(arg1 + 0x140) = arg3;
    *(arg1 + 0x111) = 2;
    sub_1c394(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_1b114(void* arg1, int32_t arg2, int32_t arg3)
{
    sub_1c394(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_1b126(void* arg1, int32_t arg2, int32_t arg3)
{
    *(arg1 + 0x3d0) = arg3;
    *(arg1 + 0x3d4) = arg3;
    *(arg1 + 0x111) = 3;
    sub_1c34a(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_1b146(void* arg1, int32_t arg2, int32_t arg3)
{
    sub_1c34a(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_1b158(void* arg1)
{
    *(arg1 + 0x111) = 4;
    sub_1c394(arg1, 0, 0, 0);
    sub_1bd60(arg1);
    return 0;
}

int32_t sub_1b17a(void* arg1)
{
    *(arg1 + 0x111) = 5;
    sub_1c34a(arg1, 0, 0, 0);
    sub_1bd60(arg1);
    return 0;
}

int32_t sub_1b19c(void* arg1, void* arg2)
{
    uint32_t r0 = *(arg2 + 1);
    if (r0 > 9)
    {
    label_1b362:
        sub_1b3de(arg1);
    }
    else
    {
        int32_t r0_8;
        uint32_t r0_9;
        if (jump_table_1b1b2[r0] == 0x26)
        {
            r0_9 = *(arg2 + 2);
            if (r0_9 == 1)
            {
                r0_8 = 1;
            }
            if (r0_9 == 2)
            {
                uint32_t r0_24 = *(arg2 + 4);
                if ((r0_24 & 0xff) == 0)
                {
                    uint32_t r1_5 = (-1 + (r0_24 >> 8));
                    int32_t r0_27 = *(*(arg1 + 0x10) + 4);
                    if (r1_5 <= 4)
                    {
                        r0_27 = ((r0_27 & 0xffffff8f) | (0x10 + (r1_5 << 4)));
                    }
                    *0x2000616c = r0_27;
                    *(arg1 + 0x116) = 1;
                    goto label_1b3d8;
                }
            }
        }
        if (((jump_table_1b1b2[r0] == 0x19 && (*(arg1 + 0x112) & 0xfe) == 2) && *(arg2 + 2) == 1))
        {
            r0_8 = 0;
        }
        if ((((jump_table_1b1b2[r0] == 0x19 && (*(arg1 + 0x112) & 0xfe) == 2) && *(arg2 + 2) == 1) || (jump_table_1b1b2[r0] == 0x26 && r0_9 == 1)))
        {
            *(arg1 + 0x118) = r0_8;
            *(*(arg1 + 0x65c) + 8)(arg1, arg2);
        label_1b3d8:
            sub_1b158(arg1);
        }
        if ((jump_table_1b1b2[r0] == 0x19 && (*(arg1 + 0x112) & 0xfe) != 2))
        {
            goto label_1b362;
        }
        void* r0_4;
        void* r1;
        uint32_t r2_1;
        switch (jump_table_1b1b2[r0])
        {
            case 5:
            {
                if ((*(arg1 + 0x112) & 0xfe) != 2)
                {
                    goto label_1b362;
                }
                int32_t r0_3 = *(arg1 + 0x118);
                r2_1 = 2;
                r1 = 0x2000617c;
                if (r0_3 != 0)
                {
                    r0_3 = 2;
                }
                *0x2000617c = r0_3;
                r0_4 = arg1;
                goto label_1b3c0;
            }
            case 0x36:
            {
                if (*(arg2 + 4) != 0)
                {
                    goto label_1b362;
                }
                if (*(arg2 + 6) != 0)
                {
                    goto label_1b362;
                }
                if (*(arg1 + 0x112) == 3)
                {
                    goto label_1b362;
                }
                int32_t r5_1 = (*(arg2 + 2) & 0x7f);
                *(arg1 + 0x114) = r5_1;
                sub_1c450(arg1, r5_1);
                sub_1b158(arg1);
                char r0_18 = 2;
                if (r5_1 == 0)
                {
                    r0_18 = 1;
                }
                *(arg1 + 0x112) = r0_18;
                break;
            }
            case 0x56:
            {
                uint32_t r1_3 = *(arg2 + 2);
                if ((0xffffffff + (r1_3 >> 8)) > 6)
                {
                    goto label_1b362;
                }
                uint16_t var_16;
                uint32_t r0_32;
                int32_t r3_1;
                switch (*((r1_3 >> 8) + 0x1b271))
                {
                    case 4:
                    {
                        r1 = &data_224e4;
                        break;
                    }
                    case 0x4b:
                    {
                        r3_1 = *(*(arg1 + 0x65c) + 0x28);
                        break;
                    }
                    case 0x59:
                    {
                        uint32_t r0_33 = r1_3;
                        if (7 <= r0_33)
                        {
                            goto label_1b362;
                        }
                        r1 = *(0x20000b7c + (r0_33 << 2));
                        if (r1 == 0)
                        {
                            goto label_1b362;
                        }
                        r0_32 = *r1;
                        if (r0_32 == 0)
                        {
                            goto label_1b362;
                        }
                        var_16 = r0_32;
                    label_1b3ae:
                        r2_1 = *(arg2 + 6);
                        if (r2_1 != 0)
                        {
                            if (r0_32 < r2_1)
                            {
                                r2_1 = r0_32;
                            }
                            r0_4 = arg1;
                            var_16 = r2_1;
                            goto label_1b3c0;
                        }
                        break;
                    }
                    case 0x6d:
                    {
                        if (*(arg1 + 2) != 0)
                        {
                            goto label_1b362;
                        }
                        r1 = &data_22539;
                        break;
                    }
                    case 0x75:
                    {
                        if (*(arg1 + 2) != 0)
                        {
                            goto label_1b362;
                        }
                        break;
                    }
                    case 0x77:
                    {
                        goto label_1b362;
                    }
                }
                if ((*((r1_3 >> 8) + 0x1b271) == 4 || *((r1_3 >> 8) + 0x1b271) == 0x6d))
                {
                    r0_32 = *r1;
                }
                if ((*((r1_3 >> 8) + 0x1b271) == 0x4b && r3_1 != 0))
                {
                    r1 = r3_1(*(arg1 + 2), r1_3, &var_16);
                    r0_32 = var_16;
                }
                if (((*((r1_3 >> 8) + 0x1b271) == 0x4b && r3_1 == 0) || *((r1_3 >> 8) + 0x1b271) == 0x75))
                {
                    r1 = &data_224f6;
                    r0_32 = 0x43;
                }
                if ((((*((r1_3 >> 8) + 0x1b271) == 4 || *((r1_3 >> 8) + 0x1b271) == 0x6d) || (*((r1_3 >> 8) + 0x1b271) == 0x4b && r3_1 == 0)) || *((r1_3 >> 8) + 0x1b271) == 0x75))
                {
                    var_16 = r0_32;
                }
                if (((((((*((r1_3 >> 8) + 0x1b271) == 0x4b && r3_1 != 0) || *((r1_3 >> 8) + 0x1b271) == 4) || *((r1_3 >> 8) + 0x1b271) == 0x6d) || (*((r1_3 >> 8) + 0x1b271) == 0x4b && r3_1 == 0)) || *((r1_3 >> 8) + 0x1b271) == 0x75) && r0_32 != 0))
                {
                    goto label_1b3ae;
                }
                break;
            }
            case 0x69:
            {
                if (*(arg2 + 6) != 1)
                {
                    goto label_1b362;
                }
                uint32_t r0_21 = *(arg1 + 0x112);
                if (r0_21 == 3)
                {
                    r1 = (arg1 + 0x110);
                }
                else
                {
                    if (r0_21 != 2)
                    {
                        goto label_1b362;
                    }
                    r1 = 0x20006178;
                }
                r0_4 = arg1;
                r2_1 = 1;
            label_1b3c0:
                sub_1b0f4(r0_4, r1, r2_1);
                break;
            }
            case 0x77:
            {
                char r0_22 = *(arg2 + 2);
                uint32_t r1_4 = r0_22;
                *0x20006174 = r0_22;
                if (r1_4 >= 2)
                {
                    goto label_1b362;
                }
                uint32_t r0_23 = *(arg1 + 0x112);
                if (r0_23 == 3)
                {
                    if (r1_4 == 0)
                    {
                        *(arg1 + 0x110) = r1_4;
                        *(arg1 + 0x112) = 2;
                        sub_1b0e4(arg1);
                        goto label_1b3d8;
                    }
                    if (r1_4 == *(arg1 + 0x110))
                    {
                        goto label_1b3d8;
                    }
                    sub_1b0e4(arg1);
                    r1_4 = *0x20006174;
                }
                else
                {
                    if (r0_23 != 2)
                    {
                        goto label_1b362;
                    }
                    if (r1_4 == 0)
                    {
                        goto label_1b3d8;
                    }
                    *(arg1 + 0x112) = 3;
                }
                *(arg1 + 0x110) = r1_4;
                sub_1b0c8(arg1);
                goto label_1b3d8;
            }
            case 0xd7:
            {
                goto label_1b362;
            }
        }
    }
    return 0;
}

int32_t sub_1b3de(int32_t arg1)
{
    sub_1c3d8(arg1, 0x80);
    sub_1c3d8(arg1, 0);
    /* tailcall */
    return sub_1bd60(arg1);
}

int32_t sub_1b3fc(void* arg1, void* arg2)
{
    if ((*(arg1 + 0x112) != 3 || (*(arg1 + 0x112) == 3 && (*(arg2 + 4) & 0xfe) > 1)))
    {
        sub_1b3de(arg1);
    }
    if ((*(arg1 + 0x112) == 3 && (*(arg2 + 4) & 0xfe) <= 1))
    {
        *(*(arg1 + 0x65c) + 8)(arg1, arg2);
        if (*(arg2 + 6) == 0)
        {
            sub_1b158(arg1);
        }
    }
    return 0;
}

int32_t sub_1b438(void* arg1, void* arg2)
{
    uint32_t r0 = *(arg1 + 0x112);
    uint32_t r1 = *(arg2 + 4);
    if (r0 == 3)
    {
        uint32_t r0_3 = *(arg2 + 1);
        if (r0_3 == 0)
        {
            void* r0_10 = (((arg1 + 0x110) + ((r1 & 0x7f) * 0x2c)) + 0xc);
            if ((r1 & 0x80) == 0)
            {
                r0_10 = (((arg1 + 0x110) + (r1 * 0x2c)) + 0x2a0);
            }
            uint32_t r0_11 = *(r0_10 + 2);
            if (r0_11 != 0)
            {
                r0_11 = 1;
            }
            *0x20006170 = r0_11;
            sub_1b0f4(arg1, 0x20006170, 2);
        }
        else
        {
            if (((r0_3 == 1 && *(arg2 + 2) == 0) && (r1 | 0x80) != 0x80))
            {
                sub_1c414(arg1, r1);
            }
            if ((r0_3 == 3 && ((r1 << 0x19) != 0 && *(arg2 + 2) == 0)))
            {
                sub_1c3d8(arg1, r1);
            }
            if (((r0_3 == 1 && *(arg2 + 2) == 0) || r0_3 == 3))
            {
                sub_1b158(arg1);
            }
        }
    }
    else if (r0 != 2)
    {
        sub_1b3de(arg1);
    }
    else if ((r1 << 0x19) != 0)
    {
        sub_1c3d8(arg1, r1);
    }
    return 0;
}

void sub_1b4da(void* arg1, char* arg2)
{
    *arg2 = *(arg1 + 0x644);
    arg2[1] = *(arg1 + 0x645);
    *(arg2 + 2) = (*(arg1 + 0x646) | (*(arg1 + 0x647) << 8));
    *(arg2 + 4) = (*(arg1 + 0x648) | (*(arg1 + 0x649) << 8));
    int32_t r2_6 = (*(arg1 + 0x64a) | (*(arg1 + 0x64b) << 8));
    *(arg2 + 6) = r2_6;
    *(arg1 + 0x111) = 1;
    *(arg1 + 0x144) = r2_6;
}

int32_t sub_1b51e() __pure
{
    return;
}

void sub_1b520(int32_t arg1)
{
    int32_t i_1 = arg1;
    if (i_1 != 0)
    {
        int32_t i;
        do
        {
            sub_196cc(1);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
}

int32_t sub_1b534(void* arg1, char* arg2, int32_t arg3, int32_t arg4)
{
    if ((*(arg1 + 3) == 0 && arg4 != 0))
    {
        int32_t i = (arg4 + 4);
        int32_t* r0_1 = *((arg1 + (arg3 << 2)) + 0xd0);
        do
        {
            i = (i - 4);
            int32_t var_14;
            void* r3_3;
            if (i == 1)
            {
                r3_3 = &var_14;
            }
            else
            {
                void* r3_2;
                if (i == 2)
                {
                    r3_2 = &var_14;
                }
                else
                {
                    char* r3;
                    if (i == 3)
                    {
                        r3 = &var_14;
                    }
                    else
                    {
                        char r3_1 = *arg2;
                        arg2 = &arg2[1];
                        var_14 = r3_1;
                        r3 = (&var_14 | 1);
                    }
                    char r4_1 = *arg2;
                    arg2 = &arg2[1];
                    *r3 = r4_1;
                    r3_2 = &r3[1];
                }
                char r4_2 = *arg2;
                arg2 = &arg2[1];
                *r3_2 = r4_2;
                r3_3 = (r3_2 + 1);
            }
            char r4_3 = *arg2;
            arg2 = &arg2[1];
            *r3_3 = r4_3;
            *r0_1 = var_14;
        } while (i > 4);
    }
    return 0;
}

char* sub_1b59c(void* arg1, char* arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        int32_t* r0 = *(arg1 + 0xd0);
        int32_t i = (arg3 + 4);
        do
        {
            uint32_t r3_1 = *r0;
            i = (i - 4);
            uint32_t var_14 = r3_1;
            char* r4_2;
            if (i == 2)
            {
                r4_2 = &var_14;
            }
            else
            {
                uint32_t* r4_1;
                if (i == 3)
                {
                    r4_1 = &var_14;
                }
                else
                {
                    if (i == 1)
                    {
                        *arg2 = r3_1;
                        arg2 = &arg2[1];
                        break;
                    }
                    *arg2 = r3_1;
                    arg2 = &arg2[1];
                    r4_1 = (&var_14 | 1);
                    r3_1 = *var_14[1];
                }
                *arg2 = r3_1;
                arg2 = &arg2[1];
                r4_2 = (r4_1 + 1);
                r3_1 = *r4_2;
            }
            *arg2 = r3_1;
            arg2[1] = r4_2[1];
            arg2 = &arg2[2];
        } while (i > 4);
    }
    return arg2;
}

int32_t sub_1b5f6(char* arg1, int32_t arg2)
{
    char r3 = 1;
    arg1[2] = 1;
    arg1[3] = 0;
    *(arg1 + 4) = 0x40;
    uint32_t r2;
    char r4_1;
    int32_t r6;
    char r12_1;
    int16_t lr_1;
    if (arg2 == 0)
    {
        r12_1 = 1;
        lr_1 = 0x500;
        r2 = 6;
        r4_1 = 0xc;
        r3 = 0;
        r6 = 0x40040000;
    }
    if ((arg2 != 0 && arg2 != 1))
    {
        r2 = arg1[1];
        r6 = 0;
    }
    if (arg2 == 1)
    {
        r12_1 = 2;
        r6 = 0x50000000;
        lr_1 = 0x140;
        r2 = 4;
        r4_1 = 8;
    }
    if ((arg2 == 0 || arg2 == 1))
    {
        *arg1 = r4_1;
        arg1[0xb] = r3;
        arg1[1] = r2;
        *(arg1 + 6) = lr_1;
        arg1[8] = r12_1;
    }
    *(arg1 + 0xc) = r6;
    *(arg1 + 0x10) = (r6 + 0x800);
    if (r2 != 0)
    {
        int32_t r3_1 = (r6 + 0x900);
        int32_t r4_2 = 0;
        do
        {
            void* r1_1 = &arg1[(r4_2 << 2)];
            r4_2 = (r4_2 + 1);
            *(r1_1 + 0x54) = (r3_1 + 0x200);
            *(r1_1 + 0x18) = r3_1;
            r3_1 = (r3_1 + 0x20);
        } while (r4_2 < r2);
    }
    *(arg1 + 0xcc) = (r6 + 0x440);
    *(arg1 + 0x14) = (r6 + 0x400);
    uint32_t i_1 = *arg1;
    if (i_1 != 0)
    {
        int32_t r4_3 = (r6 + 0x500);
        int32_t r1_4 = 0;
        do
        {
            *((arg1 + 0x90) + (r1_4 << 2)) = r4_3;
            r1_4 = (r1_4 + 1);
            r4_3 = (r4_3 + 0x20);
        } while (r1_4 < i_1);
        if (i_1 != 0)
        {
            void* r3_3 = &arg1[0xd0];
            int32_t r4_4 = (r6 + 0x1000);
            uint32_t i;
            do
            {
                *r3_3 = r4_4;
                r3_3 = (r3_3 + 4);
                i = i_1;
                i_1 = (i_1 - 1);
                r4_4 = (r4_4 + 0x1000);
            } while (i != 1);
        }
    }
    *(arg1 + 0x10c) = (r6 + 0xe00);
    return 0;
}

int32_t sub_1b6c2(void* arg1)
{
    void* r0 = *(arg1 + 0xc);
    if (*(arg1 + 8) != 1)
    {
        *(r0 + 0xc) = (*(r0 + 0xc) | 0x40);
        sub_1b744(arg1);
        int32_t r1_6 = 0x3d0000;
        if (*(arg1 + 9) == 0)
        {
            r1_6 = 0x2d0000;
        }
        *(*(arg1 + 0xc) + 0x38) = r1_6;
        sub_1b520(0x14);
    }
    else
    {
        int32_t r1_1 = *(r0 + 0x38);
        int32_t r3_2 = ((r1_1 & 0xffeeffff) | 0x100000);
        if (*(arg1 + 9) == 0)
        {
            r3_2 = (r1_1 & 0xfffeffff);
        }
        *(r0 + 0x38) = r3_2;
        *(r0 + 0xc) = (*(r0 + 0xc) & 0xffb5ffbf);
        sub_1b744(arg1);
        if (*(arg1 + 3) == 1)
        {
            *(*(arg1 + 0xc) + 8) = 0x2a;
        }
    }
    if (((*(arg1 + 8) == 1 && *(arg1 + 3) == 1) || (*(arg1 + 8) != 1 && *(arg1 + 3) == 1)))
    {
        void* r0_8 = *(arg1 + 0xc);
        *(r0_8 + 8) = ((*(r0_8 + 8) & 0xffffffc1) | 0x2a);
    }
    return 0;
}

void* const sub_1b744(void* arg1)
{
    int32_t r6 = 0xffffffff;
    int32_t var_1c = 0;
    void* const r0_1;
    while (true)
    {
        r0_1 = *(arg1 + 0xc);
        r6 = (r6 + 1);
        int32_t r1_1 = *(r0_1 + 0x10);
        if (r6 > 0x30d3f)
        {
            break;
        }
        if (r1_1 <= 0xffffffff)
        {
            *(r0_1 + 0x10) = (r1_1 | 1);
            int32_t r1_6 = 0xffffffff;
            do
            {
                r1_6 = (r1_6 + 1);
                if (r1_6 > 0x30d3f)
                {
                    break;
                }
            } while ((*(r0_1 + 0x10) & 1) != 0);
            r0_1 = &data_3;
            break;
        }
    }
    return r0_1;
}

int32_t sub_1b7aa(void* arg1)
{
    void* r0_1 = *(arg1 + 0xc);
    *(r0_1 + 8) = (*(r0_1 + 8) | 1);
    return 0;
}

int32_t sub_1b7b8(void* arg1)
{
    void* r0_1 = *(arg1 + 0xc);
    *(r0_1 + 8) = (*(r0_1 + 8) & 0xfffffffe);
    return 0;
}

int32_t sub_1b7c6(void* arg1, int32_t arg2)
{
    void* r0 = *(arg1 + 0xc);
    *(r0 + 0x10) = (0x20 | ((arg2 & 0x1f) << 6));
    int32_t r1_1 = 0xffffffff;
    do
    {
        r1_1 = (r1_1 + 1);
        if (r1_1 > 0x30d3f)
        {
            break;
        }
    } while ((*(r0 + 0x10) & 0x20) != 0);
    return 0;
}

int32_t sub_1b810(void* arg1)
{
    void* r0 = *(arg1 + 0xc);
    *(r0 + 0x10) = 0x10;
    int32_t r1 = 0xffffffff;
    do
    {
        r1 = (r1 + 1);
        if (r1 > 0x30d3f)
        {
            break;
        }
    } while ((*(r0 + 0x10) & 0x10) != 0);
    return 0;
}

int32_t sub_1b852(void* arg1, int32_t arg2)
{
    void* r0_1 = *(arg1 + 0xc);
    int32_t r2_1 = (*(r0_1 + 0xc) & 0x9fffffff);
    int32_t r1;
    if (arg2 == 1)
    {
        r1 = 0x20000000;
    }
    if (arg2 == 0)
    {
        r1 = 0x40000000;
    }
    if ((arg2 == 1 || arg2 == 0))
    {
        r2_1 = (r2_1 | r1);
    }
    *(r0_1 + 0xc) = r2_1;
    sub_1b520(0x32);
    return 0;
}

int32_t sub_1b87e(void* arg1)
{
    return (1 & (!*(*(arg1 + 0xc) + 0x14)));
}

int32_t sub_1b88c(void* arg1)
{
    void* r0_2 = *(arg1 + 0xc);
    return (*(r0_2 + 0x18) & *(r0_2 + 0x14));
}

int32_t sub_1b898(void* arg1)
{
    **(arg1 + 0x10c) = 0;
    int32_t* r0_1 = *(arg1 + 0x10);
    *r0_1 = (*r0_1 & 0xffffe7ff);
    if (*(arg1 + 0xb) == 0)
    {
        int32_t r2_2 = (*r0_1 & 0xfffffffc);
        if (*(arg1 + 8) != 1)
        {
            r2_2 = (r2_2 | 1);
        }
        *r0_1 = r2_2;
        void* r0_2 = *(arg1 + 0xc);
        *(r0_2 + 0x24) = 0x200;
        *(r0_2 + 0x28) = 0x100200;
        __builtin_memcpy((r0_2 + 0x104), "\x10\x02\x54\x01\x64\x03\x80\x00\xe4\x03\x10\x00\xf4\x03\x00\x00\xf4\x03\x00\x00", 0x14);
    }
    sub_1b7c6(arg1, 0x10);
    sub_1b810(arg1);
    void* r12 = *(arg1 + 0x10);
    *(r12 + 0x10) = 0;
    *(r12 + 0x14) = 0;
    *(r12 + 0x18) = 0xffffffff;
    *(r12 + 0x1c) = 0;
    uint32_t i_1 = *(arg1 + 1);
    if (i_1 != 0)
    {
        int32_t r4_1 = 0;
        do
        {
            int32_t* r6_1 = *((arg1 + 0x18) + (r4_1 << 2));
            r4_1 = (r4_1 + 1);
            *r6_1 = (0x48000000 & (*r6_1 >> 0x1f));
            r6_1[4] = 0;
            r6_1[2] = 0xff;
        } while (r4_1 < i_1);
        if (i_1 != 0)
        {
            void* r2_4 = (arg1 + 0x54);
            uint32_t i;
            do
            {
                int32_t* r6_2 = *r2_4;
                r2_4 = (r2_4 + 4);
                i = i_1;
                i_1 = (i_1 - 1);
                *r6_2 = (0x48000000 & (*r6_2 >> 0x1f));
                r6_2[4] = 0;
                r6_2[2] = 0xff;
            } while (i != 1);
        }
    }
    *(r12 + 0x10) = (*(r12 + 0x10) | 0x100);
    uint32_t r1_4 = *(arg1 + 3);
    if (r1_4 == 1)
    {
        *(r12 + 0x30) = 0x810103;
    }
    void* r0_7 = *(arg1 + 0xc);
    *(r0_7 + 0x18) = 0;
    *(r0_7 + 0x14) = 0xbfffffff;
    *(r0_7 + 4) = 0xffffffff;
    *(r0_7 + 0x14) = 0xbfffffff;
    *(r0_7 + 0x18) = 0x80000800;
    int32_t r2_5 = 0x3c3808;
    if (r1_4 == 0)
    {
        r2_5 = 0x3c3818;
    }
    *(r0_7 + 0x18) = (((0xffc3c7f7 ^ r2_5) & *(r0_7 + 0x18)) | r2_5);
    return 0;
}

int32_t sub_1b9ee(void* arg1)
{
    return *(0x225b0 + ((((*(*(arg1 + 0x10) + 8) >> 1) & 3) ^ 2) << 2));
}

int32_t sub_1ba08(void* arg1)
{
    void* r1 = *(arg1 + 0x10);
    int32_t* r0 = *(arg1 + 0x18);
    int32_t r2 = (*r0 & 0xfffff800);
    if ((*(r1 + 8) & 6) == 4)
    {
        r2 = (r2 | 3);
    }
    *r0 = r2;
    *(r1 + 4) = (*(r1 + 4) | 0x100);
    return 0;
}

int32_t sub_1ba34(void* arg1, char* arg2)
{
    uint32_t r3 = *arg2;
    int32_t* r3_1;
    uint32_t r12;
    if (arg2[1] != 1)
    {
        r12 = (0x10000 << r3);
        r3_1 = *((arg1 + (r3 << 2)) + 0x54);
    }
    else
    {
        r12 = (1 << r3);
        r3_1 = *((arg1 + (r3 << 2)) + 0x18);
    }
    int32_t r2_3 = *r3_1;
    if ((r2_3 & 0x8000) == 0)
    {
        int32_t r1_4 = ((((((r2_3 & 0xe4337800) | (*(arg2 + 8) & 0x7ff)) | (0xc0000 & (arg2[3] << 0x12))) | ((*(arg2 + 6) & 0xf) << 0x16)) | 0x18000000) | 0x8000);
        *r3_1 = r1_4;
    }
    void* r0 = *(arg1 + 0x10);
    *(r0 + 0x1c) = (*(r0 + 0x1c) | r12);
    return 0;
}

int32_t sub_1baae(void* arg1, char* arg2)
{
    uint32_t r2_4 = *arg2;
    uint32_t r1_2;
    int32_t* r2_1;
    if (arg2[1] != 1)
    {
        r1_2 = (0x10000 << r2_4);
        r2_1 = *((arg1 + (r2_4 << 2)) + 0x54);
    }
    else
    {
        r2_1 = *((arg1 + (r2_4 << 2)) + 0x18);
        r1_2 = (1 << r2_4);
    }
    *r2_1 = 0;
    void* r0 = *(arg1 + 0x10);
    *(r0 + 0x1c) = (*(r0 + 0x1c) & (!r1_2));
    return 0;
}

int32_t sub_1bae2(void* arg1, char* arg2)
{
    uint32_t r2 = *arg2;
    if (arg2[1] != 1)
    {
        int32_t* r2_2 = *((arg1 + (r2 << 2)) + 0x54);
        int32_t r12_1 = *r2_2;
        int32_t r3_6 = r2_2[4];
        int32_t r5_4 = *(arg2 + 0x18);
        int32_t r4_7 = *(arg2 + 8);
        int32_t r3_8;
        int32_t r5_10;
        if (r5_4 == 0)
        {
            r5_10 = 0x80000;
            r3_8 = ((r3_6 & 0xe0000000) | (r4_7 & 0x7ffff));
        }
        else
        {
            uint32_t r5_7 = (((r5_4 + r4_7) - 1) / r4_7);
            r3_8 = (((r3_6 & 0xe0000000) & 0xe007ffff) | ((r5_7 & 0x3ff) << 0x13));
            r5_10 = ((r4_7 * (r5_7 & 0x3ff)) & 0x7ffff);
        }
        r2_2[4] = (r3_8 | r5_10);
        if (*(arg1 + 3) == 1)
        {
            r2_2[5] = *(arg2 + 0x14);
        }
        if (arg2[3] == 1)
        {
            uint32_t r0_3 = arg2[5];
            int32_t r1_1 = 0x10000000;
            int32_t r0_4 = 0xefffffff;
            if (r0_3 != 0)
            {
                r1_1 = 0x20000000;
            }
            if (r0_3 != 0)
            {
                r0_4 = 0xdfffffff;
            }
            r12_1 = ((r0_4 & r12_1) | r1_1);
        }
        *r2_2 = (r12_1 | 0x84000000);
    }
    else
    {
        int32_t* lr_1 = *((arg1 + (r2 << 2)) + 0x18);
        int32_t r12 = *lr_1;
        int32_t r3_2 = lr_1[4];
        int32_t r4 = *(arg2 + 0x18);
        int32_t r3_5;
        int32_t r4_6;
        int32_t r5_3;
        if (r4 == 0)
        {
            r3_5 = (r3_2 & 0xfff80000);
            r4_6 = 0x80000;
            r5_3 = 0xe007ffff;
        }
        else
        {
            int32_t r5_2 = *(arg2 + 8);
            r3_5 = (((r3_2 & 0xe0000000) | (r4 & 0x7ffff)) | (0x1ff80000 & ((((r4 + r5_2) - 1) / r5_2) << 0x13)));
            if (arg2[3] == 1)
            {
                r4_6 = 0x20000000;
                r5_3 = 0x9fffffff;
            }
        }
        if ((r4 == 0 || (r4 != 0 && arg2[3] == 1)))
        {
            r3_5 = ((r3_5 & r5_3) | r4_6);
        }
        lr_1[4] = r3_5;
        if (*(arg1 + 3) == 1)
        {
            lr_1[5] = *(arg2 + 0x14);
        }
        if (((*(arg1 + 3) != 1 && arg2[3] == 1) || (*(arg1 + 3) == 1 && arg2[3] == 1)))
        {
            int32_t r3_16 = (0x10000000 & (*(*(arg1 + 0x10) + 8) << 0x14));
            *lr_1 = ((((r3_16 ^ 0x10000000) + 0x10000000) | ((0x5fffffff + r3_16) & r12)) | 0x84000000);
            sub_1b534(arg1, *(arg2 + 0xc), r2, *(arg2 + 0x18));
        }
        if (((*(arg1 + 3) != 1 && arg2[3] != 1) && *(arg2 + 0x18) != 0))
        {
            void* r0_7 = *(arg1 + 0x10);
            *(r0_7 + 0x34) = ((1 << r2) | *(r0_7 + 0x34));
        }
        if (((*(arg1 + 3) == 1 && arg2[3] != 1) || (*(arg1 + 3) != 1 && arg2[3] != 1)))
        {
            *lr_1 = (r12 | 0x84000000);
        }
    }
    return 0;
}

int32_t sub_1bc2e(void* arg1, char* arg2)
{
    int32_t* r2_1;
    uint32_t r3_7;
    int32_t r12;
    if (arg2[1] == 1)
    {
        r2_1 = *(arg1 + 0x18);
        r12 = *r2_1;
        int32_t lr = r2_1[4];
        int32_t r3 = *(arg2 + 0x18);
        int32_t r3_1;
        if (r3 == 0)
        {
            r3_1 = (lr & 0xffffff80);
        }
        else
        {
            int32_t r4_1 = *(arg2 + 8);
            if (r3 > r4_1)
            {
                *(arg2 + 0x18) = r4_1;
                r3 = r4_1;
            }
            r3_1 = ((r3 & 0x7f) | (((lr >> 7) & 0x1ffffff) << 7));
        }
        r2_1[4] = ((r3_1 & 0xffe7ffff) | 0x80000);
        r3_7 = *(arg1 + 3);
        if (r3_7 == 1)
        {
            *(*((arg1 + (*arg2 << 2)) + 0x18) + 0x14) = *(arg2 + 0x14);
        }
        else
        {
            *r2_1 = (r12 | 0x84000000);
            if ((r3_7 == 0 && *(arg2 + 0x18) != 0))
            {
                void* r0_6 = *(arg1 + 0x10);
                *(r0_6 + 0x34) = ((1 << *arg2) | *(r0_6 + 0x34));
            }
        }
    }
    else
    {
        r2_1 = *((arg1 + (*arg2 << 2)) + 0x54);
        r12 = *r2_1;
        int32_t lr_1 = r2_1[4];
        int32_t r3_2 = *(arg2 + 8);
        if (*(arg2 + 0x18) != 0)
        {
            *(arg2 + 0x18) = r3_2;
        }
        r2_1[4] = (((r3_2 & 0x7f) | (0xffe7ff80 & lr_1)) | 0x80000);
        if (*(arg1 + 3) == 1)
        {
            r2_1[5] = *(arg2 + 0x14);
        }
    }
    if (((arg2[1] == 1 && r3_7 == 1) || arg2[1] != 1))
    {
        *r2_1 = (r12 | 0x84000000);
    }
    return 0;
}

int32_t sub_1bce0(int32_t arg1, char* arg2)
{
    void* r0 = (arg1 + (*arg2 << 2));
    int32_t* r0_1;
    int32_t r1_1;
    if (arg2[1] != 1)
    {
        r0_1 = *(r0 + 0x54);
        r1_1 = *r0_1;
    }
    else
    {
        r0_1 = *(r0 + 0x18);
        r1_1 = *r0_1;
        if (r1_1 < 0)
        {
            r1_1 = (r1_1 | 0x40000000);
        }
    }
    *r0_1 = (r1_1 | 0x200000);
    return 0;
}

int32_t sub_1bd08(int32_t arg1, char* arg2)
{
    void* r0 = (arg1 + (*arg2 << 2));
    int32_t* r0_1;
    if (arg2[1] != 1)
    {
        r0_1 = *(r0 + 0x54);
    }
    else
    {
        r0_1 = *(r0 + 0x18);
    }
    int32_t r2 = *r0_1;
    uint32_t r1 = arg2[3];
    bool cond:0 = r1 != 3;
    if (r1 != 3)
    {
        cond:0 = r1 != 2;
    }
    int32_t r1_2;
    if (cond:0)
    {
        r1_2 = (r2 & 0xffdfffff);
    }
    else
    {
        r1_2 = ((r2 & 0xefdfffff) | 0x10000000);
    }
    *r0_1 = r1_2;
    return 0;
}

uint32_t sub_1bd38(void* arg1)
{
    void* r0_3 = *(arg1 + 0x10);
    return ((*(r0_3 + 0x1c) & *(r0_3 + 0x18)) >> 0x10);
}

int32_t sub_1bd44(void* arg1, int32_t arg2)
{
    return (*(*(arg1 + 0x10) + 0x14) & *(*((arg1 + (arg2 << 2)) + 0x54) + 8));
}

uint32_t sub_1bd54(void* arg1)
{
    void* r0_3 = *(arg1 + 0x10);
    return (*(r0_3 + 0x1c) & *(r0_3 + 0x18));
}

void sub_1bd60(void* arg1)
{
    int32_t* r1 = *(arg1 + 0x54);
    r1[4] = 0xc0080018;
    if (*(arg1 + 3) != 1)
    {
        return;
    }
    r1[5] = (arg1 + 0x644);
    *r1 = 0x80008000;
}

void sub_1bd84(int32_t* arg1)
{
    if ((*(arg1 + 0xa) != 0 && (*(arg1[4] + 8) & 1) != 0))
    {
        arg1 = arg1[0x43];
        *arg1 = (arg1 & 0xfffffffc);
    }
}

int32_t sub_1bda0(void* arg1)
{
    int32_t r0 = sub_1b87e(arg1);
    int32_t r5_1;
    int32_t r9;
    if (r0 != 0)
    {
        r5_1 = sub_1b88c(arg1);
        if (r5_1 != 0)
        {
            if ((r5_1 << 0xc) >= 0)
            {
                r9 = 0;
            }
            else
            {
                uint32_t r0_5 = sub_1bd38(arg1);
                r9 = 1;
                if (r0_5 != 0)
                {
                    int32_t r6_1 = 0x15;
                    int32_t r11_1 = 0;
                    uint32_t r8_1;
                    do
                    {
                        r8_1 = r0_5;
                        if ((r8_1 << 0x1f) != 0)
                        {
                            uint32_t r5_2 = (r6_1 - 0x15);
                            int32_t r0_9 = sub_1bd44(arg1, r5_2);
                            if ((r0_9 & 1) != 0)
                            {
                                void* r0_14 = *(arg1 + (r6_1 << 2));
                                *(r0_14 + 8) = 1;
                                if (*(arg1 + 3) == 1)
                                {
                                    void* r1_6 = (arg1 + r11_1);
                                    *(r1_6 + 0x3cc) = (*(r1_6 + 0x3b8) - (*(r0_14 + 0x10) & 0x7ffff));
                                }
                                **0x20000c58(arg1, r5_2);
                                if ((r11_1 == 0 && (*(arg1 + 3) == 1 && *(arg1 + 0x111) == 5)))
                                {
                                    sub_1bd60(arg1);
                                }
                            }
                            else
                            {
                                void* r0_13;
                                int32_t r1_4;
                                if ((r0_9 << 0x1e) < 0)
                                {
                                    r0_13 = *(arg1 + (r6_1 << 2));
                                    r1_4 = 2;
                                }
                                if (((r0_9 << 0x1e) >= 0 && (r0_9 << 0x1c) < 0))
                                {
                                    *(*0x20000c58 + 8)(arg1);
                                    r0_13 = *(arg1 + (r6_1 << 2));
                                    r1_4 = 8;
                                }
                                if (((r0_9 << 0x1e) < 0 || ((r0_9 << 0x1e) >= 0 && (r0_9 << 0x1c) < 0)))
                                {
                                    *(r0_13 + 8) = r1_4;
                                }
                            }
                        }
                        r11_1 = (r11_1 + 0x2c);
                        r6_1 = (r6_1 + 1);
                        r0_5 = (r8_1 >> 1);
                    } while (0 != (r8_1 >> 1));
                    r9 = 1;
                }
            }
            if ((r5_1 << 0xd) < 0)
            {
                uint32_t r0_25 = sub_1bd54(arg1);
                r9 = 1;
                if (r0_25 != 0)
                {
                    int32_t r10_1 = 0;
                    uint32_t r11_2;
                    do
                    {
                        r11_2 = r0_25;
                        if ((r11_2 << 0x1f) != 0)
                        {
                            void* r1_8 = *(arg1 + 0x10);
                            void* r0_28 = *((arg1 + (r10_1 << 2)) + 0x18);
                            int32_t r2_8 = ((((*(r1_8 + 0x34) >> r10_1) << 7) | *(r1_8 + 0x10)) & *(r0_28 + 8));
                            if ((r2_8 & 1) != 0)
                            {
                                *(r1_8 + 0x34) = (*(r1_8 + 0x34) & (!(1 << r10_1)));
                                *(r0_28 + 8) = 1;
                                *(*0x20000c58 + 4)(arg1, r10_1);
                                if ((r10_1 == 0 && (*(arg1 + 3) == 1 && *(arg1 + 0x111) == 4)))
                                {
                                    sub_1bd60(arg1);
                                }
                            }
                            else
                            {
                                int32_t r1_14;
                                if ((r2_8 << 0x1c) < 0)
                                {
                                    r1_14 = 8;
                                label_1bfd6:
                                    *(r0_28 + 8) = r1_14;
                                }
                                else
                                {
                                    if ((r2_8 << 0x1b) < 0)
                                    {
                                        r1_14 = 0x10;
                                        goto label_1bfd6;
                                    }
                                    if ((r2_8 << 0x19) < 0)
                                    {
                                        r1_14 = 0x40;
                                        goto label_1bfd6;
                                    }
                                    if ((r2_8 << 0x1e) < 0)
                                    {
                                        r1_14 = 2;
                                        goto label_1bfd6;
                                    }
                                    if ((r2_8 << 0x18) < 0)
                                    {
                                        void* r2_10 = (arg1 + (r10_1 * 0x2c));
                                        int32_t r3_6 = *(r2_10 + 0x134);
                                        int32_t r5_3 = *(r2_10 + 0x138);
                                        int32_t r5_4 = (r3_6 - r5_3);
                                        int32_t r0_36;
                                        int32_t r2_15;
                                        if (r3_6 != r5_3)
                                        {
                                            int32_t r1_9 = *(r2_10 + 0x124);
                                            if (r5_4 > r1_9)
                                            {
                                                r5_4 = r1_9;
                                            }
                                            if (*(r0_28 + 0x18) >= ((r5_4 + 3) >> 2))
                                            {
                                                char* r1_12 = *(r2_10 + 0x128);
                                                do
                                                {
                                                    sub_1b534(arg1, r1_12, r10_1, r5_4);
                                                    r1_12 = &*(r2_10 + 0x128)[r5_4];
                                                    *(r2_10 + 0x128) = r1_12;
                                                    r0_36 = (*(r2_10 + 0x138) + r5_4);
                                                    *(r2_10 + 0x138) = r0_36;
                                                    r2_15 = *(r2_10 + 0x134);
                                                    r5_4 = (r2_15 - r0_36);
                                                    if (r2_15 == r0_36)
                                                    {
                                                        break;
                                                    }
                                                    int32_t r0_38 = *(r2_10 + 0x124);
                                                    if (r5_4 > r0_38)
                                                    {
                                                        r5_4 = r0_38;
                                                    }
                                                    r0_28 = *((arg1 + (r10_1 << 2)) + 0x18);
                                                } while (*(r0_28 + 0x18) >= ((r5_4 + 3) >> 2));
                                                if (r2_15 == r0_36)
                                                {
                                                    r0_28 = *((arg1 + (r10_1 << 2)) + 0x18);
                                                    r1_8 = *(arg1 + 0x10);
                                                }
                                            }
                                        }
                                        if ((((r3_6 != r5_3 && *(r0_28 + 0x18) >= ((r5_4 + 3) >> 2)) && r2_15 == r0_36) || r3_6 == r5_3))
                                        {
                                            *(r1_8 + 0x34) = (*(r1_8 + 0x34) & (!(1 << r10_1)));
                                        }
                                        r1_14 = 0x80;
                                        goto label_1bfd6;
                                    }
                                }
                            }
                        }
                        r0_25 = (r11_2 >> 1);
                        r10_1 = (r10_1 + 1);
                    } while (0 != (r11_2 >> 1));
                    r9 = 1;
                }
            }
            if ((r5_1 << 0x1e) < 0)
            {
                *(*(arg1 + 0xc) + 0x14) = 2;
            }
            if (r5_1 <= 0xffffffff)
            {
                if (*(arg1 + 0xa) != 0)
                {
                    int32_t* r0_47 = *(arg1 + 0x10c);
                    *r0_47 = (r0_47 & 0xfffffffc);
                }
                void* r0_48 = *(arg1 + 0x10);
                *(r0_48 + 4) = (*(r0_48 + 4) & 0xfffffffe);
                *(*0x20000c58 + 0x18)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 0x80000000;
            }
            if ((r5_1 << 0x14) < 0)
            {
                char var_25_1 = 0;
                char r0_53 = *(arg1 + 0x112);
                *(*0x20000c58 + 0x14)(arg1);
                bool cond:0_1 = (*(*(arg1 + 0x10) + 8) & 1) == 0;
                *(*(arg1 + 0xc) + 0x14) = 0x800;
                if (((!cond:0_1) && (*(arg1 + 0xa) != 0 && (*(arg1 + 0x115) == 1 && r0_53 == 3))))
                {
                    int32_t* r0_61 = *(arg1 + 0x10c);
                    *r0_61 = (*r0_61 | 1);
                    *r0_61 = (*r0_61 | 3);
                    *0xe000ed10 = (*0xe000ed10 | 6);
                }
                r9 = 1;
            }
            if ((r5_1 << 0x1c) < 0)
            {
                *(*0x20000c58 + 0xc)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 8;
            }
            if ((r5_1 << 0x1b) < 0)
            {
                void* r0_67 = *(arg1 + 0xc);
                *(r0_67 + 0x18) = (*(r0_67 + 0x18) & 0xffffffef);
                int32_t r6_4 = *(r0_67 + 0x20);
                int32_t r0_68 = ((r6_4 >> 0x11) & 0xf);
                int32_t r8_2 = (r6_4 & 0xf);
                if (r0_68 == 6)
                {
                    sub_1b59c(arg1, (arg1 + 0x644), 8);
                    void* r0_74 = (arg1 + (r8_2 * 0x2c));
                    *(r0_74 + 0x3cc) = (*(r0_74 + 0x3cc) + ((r6_4 >> 4) & 0x7ff));
                }
                else if (r0_68 == 2)
                {
                    int32_t r9_1 = ((r6_4 >> 4) & 0x7ff);
                    if (r9_1 != 0)
                    {
                        void* r6_5 = (arg1 + (r8_2 * 0x2c));
                        sub_1b59c(arg1, *(r6_5 + 0x3c0), r9_1);
                        int32_t r1_31 = *(r6_5 + 0x3cc);
                        *(r6_5 + 0x3c0) = (*(r6_5 + 0x3c0) + r9_1);
                        *(r6_5 + 0x3cc) = (r1_31 + r9_1);
                    }
                }
                void* r0_75 = *(arg1 + 0xc);
                r9 = 1;
                *(r0_75 + 0x18) = (*(r0_75 + 0x18) | 0x10);
            }
            if ((r5_1 << 0x13) < 0)
            {
                void* r0_77 = *(arg1 + 0x10);
                *(r0_77 + 4) = (*(r0_77 + 4) & 0xfffffffe);
                sub_1b7c6(arg1, 0);
                uint32_t i_1 = *(arg1 + 1);
                if (i_1 != 0)
                {
                    void* r1_39 = (arg1 + 0x54);
                    uint32_t i;
                    do
                    {
                        i = i_1;
                        i_1 = (i_1 - 1);
                        *(*(r1_39 - 0x3c) + 8) = 0xff;
                        void* r3_15 = *r1_39;
                        r1_39 = (r1_39 + 4);
                        *(r3_15 + 8) = 0xff;
                    } while (i != 1);
                }
                int32_t* r0_79 = *(arg1 + 0x10);
                r0_79[6] = 0xffffffff;
                r0_79[7] = 0x10001;
                r0_79[5] = 0xb;
                r0_79[4] = 0xb;
                *r0_79 = (*r0_79 & 0xfffff80f);
                sub_1bd60(arg1);
                *(*(arg1 + 0xc) + 0x14) = 0x1000;
                *(*0x20000c58 + 0x10)(arg1);
                r9 = 1;
            }
            if ((r5_1 << 0x12) < 0)
            {
                sub_1ba08(arg1);
                int32_t r6_6 = *(*(arg1 + 0xc) + 0xc);
                int32_t r0_88 = sub_1b9ee(arg1);
                char r1_43 = 0;
                r9 = 1;
                if (r0_88 != 3)
                {
                    r1_43 = 1;
                }
                *(arg1 + 2) = r1_43;
                int16_t r1_44 = 0x40;
                if (r0_88 == 3)
                {
                    r1_44 = 0x200;
                }
                *(arg1 + 4) = r1_44;
                int32_t r1_45 = 0x1400;
                if (r0_88 == 3)
                {
                    r1_45 = 0x2400;
                }
                void* r1_46 = *(arg1 + 0xc);
                *(r1_46 + 0xc) = ((r6_6 & 0xffffc3ff) | r1_45);
                *(r1_46 + 0x14) = 0x2000;
            }
            if ((r5_1 << 0xb) < 0)
            {
                *(*0x20000c58 + 0x1c)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 0x100000;
            }
            if ((r5_1 << 0xa) < 0)
            {
                *(*0x20000c58 + 0x20)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 0x200000;
            }
        }
    }
    if ((r0 == 0 || (r0 != 0 && r5_1 == 0)))
    {
        r9 = 0;
    }
    return r9;
}

int32_t sub_1c248(char* arg1)
{
    int32_t r1;
    sub_1b5f6(arg1, r1);
    arg1[0x112] = 1;
    arg1[0x114] = 0;
    uint32_t r0 = arg1[1];
    if (r0 != 0)
    {
        void* r3_1 = &arg1[0x11c];
        int32_t r5_1 = 0;
        do
        {
            *r3_1 = r5_1;
            *(r3_1 + 1) = 1;
            *(r3_1 + 6) = r5_1;
            r5_1 = (r5_1 + 1);
            *(r3_1 + 3) = 0;
            *(r3_1 + 8) = 0x40;
            *(r3_1 + 0xc) = 0;
            *(r3_1 + 0x10) = 0;
            *(r3_1 + 0x18) = 0;
            r3_1 = (r3_1 + 0x2c);
        } while (r5_1 < r0);
        if (r0 != 0)
        {
            void* r1_1 = &arg1[0x3b0];
            int32_t r5_2 = 0;
            do
            {
                *r1_1 = r5_2;
                *(r1_1 + 1) = 0;
                *(r1_1 + 6) = r5_2;
                r5_2 = (r5_2 + 1);
                *(r1_1 + 3) = 0;
                *(r1_1 + 8) = 0x40;
                *(r1_1 + 0xc) = 0;
                *(r1_1 + 0x10) = 0;
                *(r1_1 + 0x18) = 0;
                r1_1 = (r1_1 + 0x2c);
            } while (r0 != r5_2);
        }
    }
    sub_1b7b8(arg1);
    sub_1b6c2(arg1);
    sub_1b852(arg1, 0);
    sub_1b898(arg1);
    /* tailcall */
    return sub_1b7aa(arg1);
}

int32_t sub_1c2d2(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t lr = (arg2 & 0x7f);
    void* r4 = (arg1 + (lr * 0x2c));
    char* r1 = (r4 + 0x11c);
    if ((arg2 & 0x80) == 0)
    {
        r1 = (r4 + 0x3b0);
    }
    r1[1] = (arg2 >> 7);
    *r1 = lr;
    *(r1 + 8) = arg3;
    r1[3] = arg4;
    if (0 != (arg2 >> 7))
    {
        *(r1 + 6) = lr;
    }
    if (arg4 == 2)
    {
        r1[4] = 0;
    }
    sub_1ba34(arg1, r1);
    return 0;
}

int32_t sub_1c31a(void* arg1, int32_t arg2)
{
    int32_t r12 = (arg2 & 0x7f);
    void* r3 = (arg1 + (r12 * 0x2c));
    char* r2 = (r3 + 0x11c);
    if ((arg2 & 0x80) == 0)
    {
        r2 = (r3 + 0x3b0);
    }
    r2[1] = (arg2 >> 7);
    *r2 = r12;
    sub_1baae(arg1, r2);
    return 0;
}

int32_t sub_1c34a(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r12 = (arg2 & 0x7f);
    void* lr = (arg1 + (r12 * 0x2c));
    *(lr + 0x3c0) = arg3;
    *(lr + 0x3bc) = 0;
    *(lr + 0x3c8) = arg4;
    *(lr + 0x3cc) = 0;
    *(lr + 0x3b1) = 0;
    *(lr + 0x3b0) = r12;
    if (*(arg1 + 3) == 1)
    {
        *(lr + 0x3c4) = arg3;
    }
    if (r12 == 0)
    {
        sub_1bc2e(arg1, (lr + 0x3b0));
    }
    else
    {
        sub_1bae2(arg1, (lr + 0x3b0));
    }
    return 0;
}

int32_t sub_1c394(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r12 = (arg2 & 0x7f);
    void* lr = (arg1 + (r12 * 0x2c));
    *(lr + 0x11c) = r12;
    *(lr + 0x11d) = 1;
    *(lr + 0x128) = arg3;
    *(lr + 0x12c) = 0;
    *(lr + 0x138) = 0;
    *(lr + 0x134) = arg4;
    if (r12 == 0)
    {
        sub_1bc2e(arg1, (lr + 0x11c));
    }
    else
    {
        sub_1bae2(arg1, (lr + 0x11c));
    }
    return 0;
}

int32_t sub_1c3d8(int32_t arg1, int32_t arg2)
{
    int32_t r3 = (arg2 & 0x7f);
    void* r2_2 = (((arg1 + 0x110) + (r3 * 0x2c)) + 0xc);
    if ((arg2 & 0x80) == 0)
    {
        r2_2 = (((arg1 + 0x110) + (arg2 * 0x2c)) + 0x2a0);
    }
    *r2_2 = r3;
    *(r2_2 + 2) = 1;
    *(r2_2 + 1) = (arg2 >> 7);
    sub_1bce0(arg1, r2_2);
    return 0;
}

int32_t sub_1c414(int32_t arg1, int32_t arg2)
{
    int32_t r3 = (arg2 & 0x7f);
    void* r2_2 = (((arg1 + 0x110) + (r3 * 0x2c)) + 0xc);
    if ((arg2 & 0x80) == 0)
    {
        r2_2 = (((arg1 + 0x110) + (arg2 * 0x2c)) + 0x2a0);
    }
    *r2_2 = r3;
    *(r2_2 + 2) = 0;
    *(r2_2 + 1) = (arg2 >> 7);
    sub_1bd08(arg1, r2_2);
    return 0;
}

int32_t* sub_1c450(void* arg1, int32_t arg2)
{
    int32_t* r0 = *(arg1 + 0x10);
    *r0 = (*r0 | ((arg2 & 0x7f) << 4));
    return r0;
}

void* sub_1c462(void* arg1, int32_t arg2)
{
    int32_t r12 = (arg2 & 0x7f);
    void* r2 = *(arg1 + 0xc);
    int32_t lr = (1 << r12);
    void* r4_2 = *(arg1 + 0x10);
    int32_t* r1_1 = (arg1 + 0xc)[(r12 + 3)];
    *(r4_2 + 0x1c) = ((0xffff0000 | (!lr)) & *(r4_2 + 0x1c));
    *(r4_2 + 0x34) = (*(r4_2 + 0x34) | lr);
    if (*r1_1 <= 0xffffffff)
    {
        *r1_1 = (*r1_1 | 0x8000000);
        while ((r1_1[2] & 0x40) == 0)
        {
            /* nop */
        }
        *r1_1 = (*r1_1 | 0x40000000);
        while ((*r1_1 & 0x40000000) != 0)
        {
            /* nop */
        }
    }
    *(r2 + 0x10) = ((*(r2 + 0x10) & 0xfffff83f) | ((r12 & 0x1f) << 6));
    *(r2 + 0x10) = (*(r2 + 0x10) | 0x20);
    while ((*(r2 + 0x10) & 0x20) != 0)
    {
        /* nop */
    }
    r1_1[2] = r1_1[2];
    void* r0 = *(arg1 + 0x10);
    *(r0 + 0x1c) = (*(r0 + 0x1c) | lr);
    return r0;
}

int32_t sub_1c4e8(int32_t* arg1, int32_t arg2)
{
    arg1[1] = arg2;
    arg1[2] = 0;
    *arg1 = (arg2 + sub_4000);
    return 0;
}

int32_t sub_1c4f8(int32_t* arg1, int32_t arg2)
{
    *arg1 = arg2;
    arg1[2] = 0;
    arg1[1] = (arg2 + 0x18);
    return 0;
}

int32_t sub_1c506(int32_t* arg1)
{
    int32_t r0 = *arg1;
    if (r0 > 9)
    {
        return 0xffffffff;
    }
    int32_t r2;
    int32_t r0_5 = r2(&arg1[((r0 * 3) + 1)]);
    if (r0_5 == 0)
    {
        int32_t r0_6 = *arg1;
        arg1[((r0_6 * 3) + 3)] = 1;
        *arg1 = (r0_6 + 1);
        return 0;
    }
    return r0_5;
}

void* sub_1c53e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    if (arg2 < 0xa)
    {
        void* r0 = (arg1 + (arg2 << 2));
        *(r0 + 0xa4) = arg4;
        *(r0 + 0x7c) = arg3;
        return r0;
    }
    /* no return */
}

int32_t sub_1c54e() __noreturn
{
    sub_1fef2("setFifos", "/Users/cwlange/Desktop/potassium…", 0x42, "idx < numChSlots");
    /* no return */
}

void* sub_1c570(int32_t arg1, int32_t arg2, char arg3)
{
    if (arg2 < 0xa)
    {
        void* r0 = (arg1 + (arg2 * 0xc));
        *(r0 + 0xc) = arg3;
        return r0;
    }
    /* no return */
}

int32_t sub_1c580() __noreturn
{
    sub_1fef2("enableFifo", "/Users/cwlange/Desktop/potassium…", 0x48, "idx < numChSlots");
    /* no return */
}

int32_t sub_1c5a2(int32_t* arg1)
{
    int32_t r0 = *arg1;
    if (r0 >= 1)
    {
        int32_t r8_1 = 0;
        do
        {
            void* r6_1 = &arg1[(r8_1 * 3)];
            if ((*(r6_1 + 0xc) != 0 && arg1[(r8_1 + 0x1f)] != 0))
            {
                int32_t var_2c = 1;
                int32_t var_28;
                if (sub_1ca5a(1, (*(r6_1 + 8) + 0x14), &var_28, &var_2c, 0) == 0)
                {
                    int32_t r11_1 = var_28;
                    int32_t r0_3 = sub_17f78(arg1[(r8_1 + 0x1f)]);
                    if (r0_3 < r11_1)
                    {
                        r11_1 = r0_3;
                    }
                    if (r11_1 > 0x100)
                    {
                        r11_1 = 0x100;
                    }
                    if ((r11_1 > 0x100 || (r11_1 <= 0x100 && (r11_1 << 0x10) != 0)))
                    {
                        uint32_t i_1 = r11_1;
                        int32_t r0_7;
                        uint32_t r12_1;
                        r0_7 = sub_1c65a((r6_1 + 4), &arg1[0x33], i_1);
                        if ((r0_7 == 0 && i_1 != 0))
                        {
                            void* r5_1 = &arg1[0x33];
                            uint32_t i;
                            do
                            {
                                char r1_3 = *r5_1;
                                r5_1 = (r5_1 + 1);
                                sub_17f96(arg1[(r8_1 + 0x1f)], r1_3, r12_1);
                                i = i_1;
                                i_1 = (i_1 - 1);
                            } while (i != 1);
                        }
                    }
                }
            }
            r0 = *arg1;
            r8_1 = (r8_1 + 1);
        } while (r8_1 < r0);
    }
    return r0;
}

int32_t sub_1c65a(void* arg1, uint32_t* arg2, int32_t arg3)
{
    int32_t r5 = arg3;
    int32_t r0 = 0;
    uint32_t* r4 = arg2;
    uint32_t r6 = (r5 >> 2);
    uint32_t var_1c = r6;
    if (0 != (r5 >> 2))
    {
        r0 = sub_1ca5a(1, (*(arg1 + 4) + 0x10), r4, &var_1c, 0);
        r4 = &r4[r6];
        r5 = (r5 & 3);
    }
    if ((r5 != 0 && r0 == 0))
    {
        var_1c = 1;
        int32_t var_20;
        r0 = sub_1ca5a(1, (*(arg1 + 4) + (r5 << 2)), &var_20, &var_1c, 0);
        *r4 = (var_20 >> 8);
    }
    return r0;
}

int32_t sub_1c6bc(int32_t* arg1)
{
    int32_t r0 = *arg1;
    if (r0 >= 1)
    {
        int32_t r11_1 = 0;
        do
        {
            void* r5_1 = &arg1[(r11_1 * 3)];
            if (*(r5_1 + 0xc) != 0)
            {
                int32_t* r0_3 = arg1[(r11_1 + 0x29)];
                if (r0_3 != 0)
                {
                    uint32_t r6_1 = sub_17f62(r0_3);
                    if (r6_1 != 0)
                    {
                        int32_t var_2c = 1;
                        int16_t var_28;
                        int32_t r0_6;
                        int32_t r1_2;
                        uint32_t r2_2;
                        r0_6 = sub_1ca5a(1, (*(r5_1 + 4) + 0x14), &var_28, &var_2c, 0);
                        if (r0_6 == 0)
                        {
                            uint32_t r0_7 = var_28;
                            if (r0_7 != 0)
                            {
                                if (r6_1 > r0_7)
                                {
                                    r6_1 = r0_7;
                                }
                                if (r6_1 >= 0x100)
                                {
                                    r6_1 = 0x100;
                                }
                                if (r6_1 >= 1)
                                {
                                    int32_t r5_2 = 0;
                                    do
                                    {
                                        char r0_9;
                                        r0_9 = sub_17ff6(arg1[(r11_1 + 0x29)], r1_2, r2_2);
                                        *(&arg1[0x33] + r5_2) = r0_9;
                                        r5_2 = (r5_2 + 1);
                                    } while (r5_2 < r6_1);
                                }
                                sub_1c75e((r5_1 + 4), &arg1[0x33], r6_1);
                            }
                        }
                    }
                }
            }
            r0 = *arg1;
            r11_1 = (r11_1 + 1);
        } while (r11_1 < r0);
    }
    return r0;
}

int32_t sub_1c75e(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r5 = arg3;
    int32_t r0 = 0;
    int32_t r4 = arg2;
    uint32_t r6 = (r5 >> 2);
    uint32_t var_1c = r6;
    if (0 != (r5 >> 2))
    {
        r0 = sub_1ca5a(0, (*arg1 + 0x10), r4, &var_1c, 0);
        r4 = (r4 + (r6 << 2));
        r5 = (r5 & 3);
    }
    if ((r5 != 0 && r0 == 0))
    {
        var_1c = 1;
        r0 = sub_1ca5a(0, (*arg1 + (r5 << 2)), r4, &var_1c, 0);
    }
    return r0;
}

void sub_1c7ba(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r1 = *0x20000c5c;
    if (r1 == arg1)
    {
        return;
    }
    if (r1 >= 0)
    {
        int32_t r0 = (r1 * 5);
        sub_1c53e(0x20006180, r1, (0x2000634c + (r0 << 2)), (0x20006414 + (r0 << 2)));
        sub_8c9a(*0x20000c5c, 1);
    }
    *0x20000c5c = arg1;
    if (arg1 < 0)
    {
        return;
    }
    sub_1c53e(0x20006180, arg1, *0x200064dc, *0x200064e0);
    /* tailcall */
    return sub_8c9a(*0x20000c5c, 0);
}

int32_t sub_1c83a(int32_t arg1, int32_t arg2)
{
    int32_t i = 0;
    int32_t* r5 = 0x20006414;
    int32_t* r6 = 0x2000634c;
    int32_t r8 = 0x200064e4;
    *0x200064dc = arg2;
    *0x200064e0 = arg1;
    int32_t r0_4;
    do
    {
        sub_17f4c(r5, r8, 0x100);
        sub_17f4c(r6, (r8 + 0x100), 0x100);
        sub_1c53e(0x20006180, i, r6, r5);
        r0_4 = sub_8b7e(i, r6, r5, (i + 0x7a69));
        i = (i + 1);
        r8 = (r8 + 0x200);
        r6 = &r6[5];
        r5 = &r5[5];
    } while (i != 0xa);
    return r0_4;
}

int32_t sub_1c8c6(int32_t arg1, int32_t* arg2, int32_t* arg3)
{
    if (arg1 > 0xa)
    {
        return 0;
    }
    if (arg2 != 0)
    {
        *arg2 = (0x2000634c + (arg1 * 0x14));
    }
    if (arg3 != 0)
    {
        *arg3 = (0x20006414 + (arg1 * 0x14));
    }
    return 1;
}

int32_t j_sub_1c900(int32_t arg1)
{
    /* tailcall */
    return sub_1c900(arg1, 0);
}

uint32_t sub_1c900(uint32_t arg1, int32_t arg2)
{
    uint32_t r2 = *0x20000c68;
    uint32_t r4 = r2;
    if (r2 < 0)
    {
        r4 = *0x200078e4;
    }
    if (arg1 >= 0)
    {
        if (arg2 != 1)
        {
            *0x200078e4 = arg1;
        }
        else
        {
            uint32_t r3_1 = arg1;
            void* const r2_1 = &data_21761;
            if (arg1 == 0xffff)
            {
                r3_1 = 0xffffffff;
            }
            if (arg1 == 0xff)
            {
                r3_1 = 0xffffffff;
            }
            *0x20000c68 = r3_1;
            if (r3_1 < 0)
            {
                r2_1 = &data_2175d;
            }
            sub_17ba2(4, "dbgFifo override %s. dbgfifo %u\n", r2_1);
            arg1 = *0x200078e4;
            r2 = *0x20000c68;
        }
        if (r2 < 0)
        {
            r2 = arg1;
        }
        if (r2 != r4)
        {
            if (r2 == 0)
            {
                sub_17ba2(4, "Disable dbgFifo\n", r2);
                int32_t i = 0;
                *0x20007914 = 0;
                *0x20006180 = 0;
                sub_1d032();
                sub_1c7ba(0xffffffff);
                do
                {
                    sub_8bd4(i, 0);
                    i = (i + 1);
                } while (i != 0xa);
            }
            else if (r4 == 0)
            {
                sub_17ba2(4, "Enable dbgFifo\n", r2);
                if (sub_1cdd8() == 1)
                {
                    int32_t var_1c;
                    int32_t var_1c_1 = ((var_1c | 0x50000000) | 1);
                    sub_922a();
                }
            }
            else if (*0x20006180 != 0)
            {
                sub_1c7ba((r2 - 1));
                int32_t r0_3 = (*0x20000c5c + 1);
                if (*0x20000c68 > 0xffffffff)
                {
                    *0x20000c68 = r0_3;
                }
                else
                {
                    *0x200078e4 = r0_3;
                }
            }
        }
        uint32_t r0_9 = *0x20000c68;
        r4 = *0x200078e4;
        if (r0_9 >= 0)
        {
            r4 = r0_9;
        }
    }
    return r4;
}

void sub_1ca3c(int32_t arg1)
{
    if (arg1 <= 0xffffffff)
    {
        *0x20000c60;
        return;
    }
    *0x20000c60 = arg1;
}

int32_t sub_1ca5a(int32_t arg1, int32_t arg2, int32_t arg3, int32_t* arg4, int32_t arg5)
{
    int32_t var_28;
    int32_t r5 = sub_9d32(1, 0, &var_28);
    if (r5 == 0)
    {
        int32_t r0_2 = (0x42 | (arg5 << 4));
        int32_t r1 = var_28;
        int32_t r10_1;
        if ((r1 & 0x77) != r0_2)
        {
            r10_1 = 1;
            int32_t var_30 = (r0_2 | (r1 & 0xffffff88));
            sub_9bf6(1, 0, &var_30);
        }
        else
        {
            r10_1 = 0;
        }
        int32_t var_2c;
        int32_t r0_5;
        int32_t r1_2;
        r0_5 = sub_9d32(1, 4, &var_2c);
        int32_t r11_1 = var_2c;
        if (arg1 != 1)
        {
            sub_9c0a(1, r1_2, arg2, 0, arg3, arg4);
        }
        else
        {
            sub_9b74(1, r1_2, arg2, 0, arg3, arg4);
        }
        if (r10_1 != 0)
        {
            sub_9bf6(1, 0, &var_28);
        }
        if (r11_1 != arg2)
        {
            sub_9bf6(1, 4, &var_2c);
        }
        r5 = 0;
    }
    sub_1cb16();
    return r5;
}

uint32_t sub_1cb16()
{
    uint32_t r0 = sub_1cdd8();
    if (r0 == 1)
    {
        int32_t var_c;
        int32_t r0_1 = var_c;
        if ((r0_1 & 0xb2) != 0)
        {
            sub_922a();
            r0_1 = var_c;
        }
        r0 = sub_8ffe((r0_1 & 1));
        if ((var_c & 0x50000001) != 0x50000001)
        {
            r0 = sub_922a();
        }
    }
    return r0;
}

int32_t sub_1cb5c()
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r1 = *0x20000c68;
    uint32_t r0 = *0x200078e4;
    if (r1 >= 0)
    {
        r0 = r1;
    }
    if ((r0 != 0 && sub_1698c() > 1))
    {
        if (*0x20006180 == 0)
        {
            int32_t r0_9;
            if (*0x2000790c == 1)
            {
                r0_9 = (*0x20006064 - *0x20007910);
                if (r0_9 < 0)
                {
                    goto label_1cc7a;
                }
            }
            int32_t r0_10;
            int32_t r2_3;
            r0_10 = sub_1cca6();
            int32_t r0_11;
            if (r0_10 == 0)
            {
                sub_17ba2(3, "Second Pass of ROM TABLE\n", r2_3);
                *0x20006180 = 0;
                sub_1d032();
                r0_11 = sub_1cca6();
                if (r0_11 == 0)
                {
                    *0x2000790c = 0;
                    *0x20007914 = 1;
                    *0x20007918 = (*0x20006064 - 1);
                    sub_1d180();
                }
            }
            if ((r0_10 != 0 || (r0_10 == 0 && r0_11 != 0)))
            {
                *0x2000790c = 1;
                r0_9 = (*0x20006064 + *0x20000c64);
                *0x20007910 = r0_9;
            label_1cc7a:
                return r0_9;
            }
        }
        if ((*0x20007914 == 1 && (*0x20006064 - *0x20007918) >= 0))
        {
            *0x20007914 = 1;
            *0x20007918 = (*0x20006064 + *0x20000c60);
            sub_1c5a2(0x20006180);
        }
        /* tailcall */
        return sub_1c6bc(0x20006180);
    }
    *0x20006180 = 0;
    /* tailcall */
    return sub_1d032();
}

int32_t sub_1cca6()
{
    int32_t var_20 = 3;
    int32_t r2;
    sub_17ba2(4, "idChip\n", r2);
    int32_t var_1c;
    int32_t r0;
    int32_t r2_2;
    r0 = sub_1ca5a(1, 0x80000fe0, &var_1c, &var_20, 1);
    int32_t r0_1;
    if (r0 != 0)
    {
        sub_17ba2(4, "failed\n", r2_2);
        sub_1d100();
        r0_1 = 0xffffffff;
    }
    else
    {
        int32_t var_14;
        int32_t var_28_1 = var_14;
        sub_17ba2(4, "idChip: %X %X %X", var_1c);
        int32_t r0_3;
        int32_t r2_4;
        r0_3 = sub_1f894(&data_225c4, &var_1c, 0xc);
        if (r0_3 == 0)
        {
            sub_17c48(4, " Found %s\n", &data_21824);
            int32_t r5_1 = *0x20006180;
            sub_1c506(0x20006180);
            sub_1d054(0x20006180, r5_1);
        }
        else
        {
            sub_17c48(4, " Unknown\n", r2_4);
        }
        sub_1d152();
        int32_t r2_6 = *0x20006180;
        if (r2_6 == 0)
        {
            int32_t r0_4 = sub_9d32(1, 0xf8, &var_1c);
            if (r0_4 == 0)
            {
                int32_t r2_9 = (var_1c & 0x7fffffff);
                var_1c = r2_9;
                int32_t r2_10 = sub_17ba2(4, "findDbgFifo: base: %X\n", r2_9);
                int32_t r8;
                sub_1ce04(0, var_1c, r2_10, r8);
            }
            else
            {
                sub_17ba2(4, "findDbgFifo: couldn't determine …", r0_4);
                sub_1cb16();
            }
            r2_6 = *0x20006180;
        }
        sub_17ba2(4, "findDbgFifo: found %u channels\n", r2_6);
        r0_1 = 0;
        if (*0x20006180 == 0)
        {
            r0_1 = 1;
        }
    }
    return r0_1;
}

int32_t sub_1cdd8()
{
    int32_t r0_2 = sub_9248();
    if (r0_2 == 7)
    {
        if (sub_90ec() == 0)
        {
            r0_2 = sub_9248();
        }
        else
        {
            r0_2 = 7;
        }
    }
    return r0_2;
}

int32_t sub_1ce04(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4 @ r8)
{
    int32_t var_24 = arg4;
    if (arg1 == 0)
    {
        sub_17ba2(3, "exploreRomTable start\n", arg3);
        *0x200078e8 = *0x20006064;
    }
    sub_17ba2(4, "EXPLORE ROMTABLE %X\n", arg2);
    sub_1d1b2();
    int32_t var_28 = 1;
    int32_t var_2c;
    bool cond:0 = sub_1ca5a(1, arg2, &var_2c, &var_28, 1) == 0;
    char const* const r1_8;
    int32_t r2_9;
    int32_t r3_1;
    int32_t r10;
    if (cond:0)
    {
        r10 = arg2;
        int32_t i;
        do
        {
            r3_1 = var_2c;
            if (r3_1 == 0)
            {
                break;
            }
            if ((r3_1 << 0x1f) != 0)
            {
                int32_t var_30 = 8;
                int32_t r0_4 = (r3_1 & 0x3fc);
                int32_t r9_1;
                if ((r0_4 == 0x3fc || r0_4 == 0))
                {
                    int32_t r1_1 = 0;
                    if (r0_4 == 0)
                    {
                        r1_1 = 1;
                    }
                    int32_t r0_5 = 0;
                    if (r0_4 == 0x3fc)
                    {
                        r0_5 = 1;
                    }
                    arg4 = ((r3_1 & 0xfffff000) + arg2);
                    r9_1 = (arg4 + 0xfe0);
                    if ((r0_5 | r1_1) == 0)
                    {
                        goto label_1cf1e;
                    }
                    if ((arg4 & 0xc0000000) != 0x40000000)
                    {
                        goto label_1cf1e;
                    }
                    int32_t var_40_1 = r9_1;
                    sub_17ba2(7, "  Valid addr: %08X romEntry: %08…", r10);
                    if (sub_1ca5a(1, r9_1, 0x200078ec, &var_30, 1) != 0)
                    {
                        sub_17ba2(7, "Bad entry: %X\n", arg4);
                    }
                    else if (sub_1f894(0x200078fc, &data_225f8, 0x10) == 0)
                    {
                        sub_17ba2(4, "FOUND ROMTABLE %X\n", arg4);
                        sub_1ce04((arg1 + 1), arg4);
                    }
                    else
                    {
                        void* r9_2 = &data_2262c;
                        char const* const j = "DockChannel-M8-A0";
                        do
                        {
                            if (sub_1f894(0x200078ec, (r9_2 - 0x20), 0x20) == 0)
                            {
                                int32_t r4_1 = *0x20006180;
                                int32_t var_40_3 = r4_1;
                                sub_17ba2(3, "FOUND %s %X (idx: %d)\n", j);
                                *r9_2;
                                sub_1c506(0x20006180);
                                sub_1d054(0x20006180, r4_1);
                                break;
                            }
                            j = *(r9_2 + 4);
                            r9_2 = (r9_2 + 0x28);
                        } while (j != 0);
                    }
                }
                if ((r0_4 != 0x3fc && r0_4 != 0))
                {
                    r9_1 = (arg4 + 0xfe0);
                label_1cf1e:
                    int32_t var_40_2 = r9_1;
                    sub_17ba2(7, "Invalid addr: %08X romEntry: %08…", r10);
                }
            }
            sub_1d1b2();
            r10 = (r10 + 4);
            var_28 = 1;
            i = sub_1ca5a(1, r10, &var_2c, &var_28, 1);
        } while (i == 0);
        if (r3_1 == 0)
        {
            r2_9 = arg2;
            r1_8 = "END ROMTABLE %X\n";
        }
    }
    else
    {
        r10 = arg2;
    }
    if (((!cond:0) || (cond:0 && r3_1 != 0)))
    {
        r2_9 = r10;
        r1_8 = "Error reading entry @ %X. Bailin…";
    }
    sub_17ba2(4, r1_8, r2_9);
    int32_t r0_14 = arg1;
    if (r0_14 == 0)
    {
        r0_14 = sub_17ba2(3, "exploreRomTable end (time: %d)\n", (*0x20006064 - *0x200078e8));
    }
    return r0_14;
}

int32_t sub_1d032()
{
    if (*0x20000508 == 0x206)
    {
        *0x20001d94 = 0;
    }
    return 0;
}

int32_t sub_1d054(int32_t arg1, int32_t arg2)
{
    int32_t r0 = (1 << arg2);
    int32_t r2_1 = (*0x20001d94 | r0);
    *0x20001d94 = r2_1;
    if ((*0x20000520 & r0) == 0)
    {
        sub_8bd4(arg2, 0);
        sub_1c570(arg1, arg2, 0);
    }
    else
    {
        int32_t r2_2;
        if (*0x20000504 == arg2)
        {
            sub_17ba2(3, "Added as Comms channel\n", r2_1);
            r2_2 = 0x20000b14;
            sub_1c53e(arg1, arg2, 0x20000b14, 0x20000b28);
        }
        else
        {
            if (*0x2000051c != arg2)
            {
                sub_17ba2(3, "Hippo Channel Enabled\n", r2_1);
            }
            r2_2 = sub_8bd4(arg2, 1);
        }
        if (*0x2000051c == arg2)
        {
            sub_17ba2(3, "Set as default channel\n", r2_2);
            sub_1c7ba(arg2);
        }
    }
    return 0;
}

int32_t sub_1d100()
{
    int32_t r0 = sub_a0ce(0);
    char r1_1 = (*0x2000791c + 1);
    *0x2000791c = r1_1;
    if ((r1_1 >= 3 && (r0 - 0x3e8) >= 0x2710))
    {
        sub_a0ce((r0 - 0x3e8));
        sub_17ba2(3, "idChip failed: Setting SWD clock…", sub_a0ce(0));
        *0x2000791c = 0;
    }
    sub_1671e(3);
    return 0;
}

int32_t sub_1d152()
{
    sub_166a2();
    sub_17ba2(4, "SWD Clock Rate: %d\n", sub_a0ce(0));
    *0x2000791c = 0;
    return 0;
}

int32_t sub_1d180()
{
    int32_t r0_1;
    if (sub_16756() != 5)
    {
        r0_1 = 4;
    }
    else
    {
        r0_1 = 6;
    }
    sub_17ba2(3, "Target ready for host comms\n", sub_166ee(r0_1));
    *0x20001d9c = 1;
    return 0;
}

int32_t sub_1d1b2()
{
    sub_168ec();
    return 0;
}

int32_t sub_1d1be(int32_t arg1)
{
    int32_t r8 = ((sub_18194(0x40021000, 0x40) << 1) | sub_18194(0x40021000, 0x80));
    int32_t r0_2 = sub_18194(0x40021000, 0x100);
    int32_t r0_4 = (sub_18194(0x40021000, 0x200) | (r0_2 << 1));
    int32_t r1_2;
    if (arg1 == 0)
    {
        uint32_t r0_7 = r0_4;
        bool cond:0_1 = r8 != 1;
        if (r8 == 1)
        {
            cond:0_1 = r0_7 != 1;
        }
        if ((!cond:0_1))
        {
            goto label_1d248;
        }
        if ((r8 == 1 || (r8 != 1 && r0_7 != 1)))
        {
            int32_t r1_3 = 0;
            int32_t r2_3 = r8;
            if (r0_7 != 1)
            {
                r1_3 = 1;
            }
            if (r8 != 1)
            {
                r2_3 = 0;
            }
            int32_t r2_4 = (r2_3 & r1_3);
            r1_2 = 3;
            if (r2_4 != 0)
            {
                r1_2 = 2;
            }
            if ((r0_7 != 1 && (r2_4 == 0 && r8 != 1)))
            {
                r1_2 = 7;
                if ((*0x200004f8 - 1) < 2)
                {
                    r1_2 = 1;
                }
            }
        }
        if ((r8 != 1 && r0_7 == 1))
        {
        label_1d2c0:
            r1_2 = 1;
        }
    }
    else
    {
        uint32_t r1_1 = r0_4;
        if ((r8 != 3 || (r8 == 3 && (r1_1 | 2) != 3)))
        {
            bool cond:1_1 = r8 == 1;
            if (r8 == 1)
            {
                cond:1_1 = r1_1 == 3;
            }
            if (cond:1_1)
            {
                goto label_1d248;
            }
            if ((r8 | 2) != 2)
            {
                r1_2 = 3;
                if ((r0_4 | 2) == 2)
                {
                    if (r8 == 1)
                    {
                        r1_2 = 6;
                    }
                    if (r8 == 3)
                    {
                        r1_2 = 2;
                    }
                }
            }
            else
            {
                if (r1_1 == 3)
                {
                    goto label_1d2c0;
                }
                if (r1_1 >= 3)
                {
                    r1_2 = 3;
                }
                else
                {
                    r1_2 = *(0x226b8 + ((r0_4 << 0x18) >> 0x16));
                }
            }
        }
        if ((r8 == 3 && (r1_1 | 2) == 3))
        {
        label_1d248:
            r1_2 = 0;
        }
    }
    int32_t r0_8 = *0x20007920;
    int32_t r6_3;
    if (r1_2 == r0_8)
    {
        *0x20007930 = 0;
    }
    else
    {
        if (*0x20007930 == 0)
        {
            *0x20007930 = 1;
            r6_3 = (*0x20006064 + 0xf);
            *0x20007934 = r6_3;
        }
        else
        {
            r6_3 = *0x20007934;
        }
        if ((*0x20006064 - r6_3) >= 0)
        {
            *0x20007920 = r1_2;
            *0x20007930 = 0;
        }
    }
    if ((r1_2 == r0_8 || (r1_2 != r0_8 && (*0x20006064 - r6_3) >= 0)))
    {
        r0_8 = r1_2;
    }
    return r0_8;
}

int32_t sub_1d326(int32_t arg1)
{
    int32_t r1_3;
    bool cond:1_1;
    if (arg1 == 0)
    {
        int32_t r5_2 = ((sub_18194(0x40020c00, 0x40) << 1) | sub_18194(0x40020c00, 0x80));
        char r6_1 = (sub_18194(0x40020c00, 0x100) << 1);
        cond:1_1 = r5_2 == 1;
        int32_t r0_4 = (sub_18194(0x40020c00, 0x200) | r6_1);
        if (r5_2 == 1)
        {
            cond:1_1 = r0_4 == 1;
        }
        if ((!cond:1_1))
        {
            if ((r5_2 != 1 && r0_4 == 1))
            {
                r1_3 = 1;
            }
            if ((r5_2 == 1 || (r5_2 != 1 && r0_4 != 1)))
            {
                if ((r0_4 != 1 && r5_2 == 1))
                {
                    r1_3 = 2;
                }
                if ((r0_4 == 1 || (r0_4 != 1 && r5_2 != 1)))
                {
                    if ((r0_4 | 2) == 2)
                    {
                        r1_3 = 7;
                    }
                    else
                    {
                        r1_3 = 3;
                    }
                }
            }
        }
    }
    if ((arg1 != 0 || (arg1 == 0 && cond:1_1)))
    {
        r1_3 = 0;
    }
    int32_t r0_5 = *0x20007924;
    int32_t r5_3;
    if (r1_3 == r0_5)
    {
        *0x20007938 = 0;
    }
    else
    {
        if (*0x20007938 == 0)
        {
            *0x20007938 = 1;
            r5_3 = (*0x20006064 + 0xf);
            *0x2000793c = r5_3;
        }
        else
        {
            r5_3 = *0x2000793c;
        }
        if ((*0x20006064 - r5_3) >= 0)
        {
            *0x20007924 = r1_3;
            *0x20007938 = 0;
        }
    }
    if ((r1_3 == r0_5 || (r1_3 != r0_5 && (*0x20006064 - r5_3) >= 0)))
    {
        r0_5 = r1_3;
    }
    return r0_5;
}

int32_t sub_1d40a()
{
    int32_t r1 = 0;
    if (sub_17798(0x40012000, 0xe, 1) >= 0x294)
    {
        r1 = 1;
    }
    return r1;
}

int32_t sub_1d42c()
{
    int32_t r1 = 0;
    if (sub_17798(0x40012000, 0xf, 1) >= 0x294)
    {
        r1 = 1;
    }
    return r1;
}

uint32_t sub_1d44e(int32_t arg1, int32_t arg2)
{
    if ((*0x40013004 & 0x40) != 0)
    {
        if ((*0x40013008 & 1) != 0)
        {
            do
            {
                /* unimplemented  {rbit r1, r0} */;
                arg2 = sub_1d4bc(*0x20007928, (arg2 >> 0x18), 8);
            } while ((*0x40013008 & 1) != 0);
        }
        if (*0x20001f3f == 0)
        {
            *0xe000ed04 = 0x10000000;
        }
    }
    uint32_t r0_5 = *0x40013004;
    if ((r0_5 & 0x80) == 0)
    {
        return r0_5;
    }
    uint32_t r0_6 = *0x40013008;
    if ((r0_6 & 2) != 0)
    {
        *0x4001300c = 0xd2;
    }
    return r0_6;
}

void sub_1d4bc(void* arg1, int32_t arg2, int32_t arg3)
{
    uint32_t r12 = *(arg1 + 0x403);
    uint32_t r3 = *(arg1 + 0x402);
    int32_t r3_1 = (r3 + arg3);
    *(arg1 + (r12 << 2)) = ((arg2 << r3) | (*(arg1 + (r12 << 2)) & ((1 << r3) - 1)));
    *(arg1 + 0x402) = r3_1;
    if ((r3_1 & 0xe0) < 0x20)
    {
        return;
    }
    *(arg1 + 0x402) = (r3_1 - 0x20);
    *(arg1 + 0x403) = (r12 + 1);
    *(arg1 + ((r12 + 1) << 2)) = (arg2 >> (arg3 - (r3_1 - 0x20)));
}

uint32_t sub_1d50e(int32_t arg1, int32_t arg2)
{
    if ((*0x40003c04 & 0x40) != 0)
    {
        if ((*0x40003c08 & 1) != 0)
        {
            do
            {
                /* unimplemented  {rbit r1, r0} */;
                arg2 = sub_1d4bc(*0x2000792c, (arg2 >> 0x18), 8);
            } while ((*0x40003c08 & 1) != 0);
        }
        if (*0x20001f3f == 0)
        {
            *0xe000ed04 = 0x10000000;
        }
    }
    uint32_t r0_5 = *0x40003c04;
    if ((r0_5 & 0x80) == 0)
    {
        return r0_5;
    }
    uint32_t r0_6 = *0x40003c08;
    if ((r0_6 & 2) != 0)
    {
        *0x40003c0c = 0xd2;
    }
    return r0_6;
}

int32_t sub_1d57c(void* arg1)
{
    *0x20007928 = arg1;
    *(arg1 + 0x400) = 0;
    sub_1812e(0x40021000, 0x400);
    sub_18190(0x40021000, 0x400);
    sub_18190(0x40021000, 1);
    sub_18190(0x40021000, 2);
    sub_18190(0x40021000, 0x20);
    sub_1812e(0x40021000, 0x20);
    *0x40023844 = (*0x40023844 | 0x1000);
    sub_18190(0x40021000, 0x10);
    sub_18190(0x40021000, 8);
    sub_1812e(0x40021000, 0x10);
    sub_1812e(0x40021000, 8);
    sub_19cee(0x40020400, 4, 5);
    sub_19cee(0x40020000, 7, 5);
    sub_19cee(0x40020400, 3, 5);
    sub_18158(0x40020400, 0x10);
    sub_18158(0x40020000, 0x80);
    sub_18158(0x40020400, 8);
    *0x40013000 = 0;
    *0x40013000 = 0x212;
    *0x40013004 = 0x40;
    *0xe000e104 = 8;
    *0x40013000 = (*0x40013000 | 0x40);
    /* tailcall */
    return sub_18182(0x40021000, 0x20, 0);
}

int32_t sub_1d684(void* arg1)
{
    int32_t r11 = ((*(arg1 + 0x402) - *(arg1 + 0x400)) + (0x1fe0 & ((*(arg1 + 0x403) - *(arg1 + 0x401)) << 5)));
    if (*0x20001f3f == 0)
    {
        /* unimplemented  {cpsid I} */;
    }
    if (r11 != 0)
    {
        int32_t r6_1 = 0;
        int32_t r9_1 = 1;
        int32_t r4_1;
        int32_t temp0_1;
        do
        {
            r4_1 = r11;
            if (r11 >= 4)
            {
                r4_1 = 4;
            }
            int32_t r9_2 = ((*(0x226a8 + (sub_1dac4(arg1, r6_1) & 0xf)) ^ (0 - r9_1)) & (0xffffffff << ((4 - r4_1) << 1)));
            while ((*0x40013008 & 2) == 0)
            {
                /* nop */
            }
            *0x4001300c = r9_2;
            sub_18182(0x40021000, 0x20, 1);
            r6_1 = (r6_1 + r4_1);
            temp0_1 = r11;
            r11 = (r11 - r4_1);
            r9_1 = (r9_2 & 1);
        } while (temp0_1 != r4_1);
    }
    while ((*0x40013008 & 2) == 0)
    {
        /* nop */
    }
    *0x4001300c = 0;
    while ((*0x40013008 & 2) == 0)
    {
        /* nop */
    }
    sub_18182(0x40021000, 0x20, 0);
    while ((*0x40013008 & 1) != 0)
    {
        *0x4001300c;
    }
    /* unimplemented  {cpsie I} */;
    if (*0x20001f3f != 0)
    {
        *0xe000ed04 = 0x10000000;
    }
    return 0;
}

int32_t sub_1d78c(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    if ((arg1 - 1) > 6)
    {
        return (arg1 - 1);
    }
    switch (*(arg1 + 0x1d79b))
    {
        case 4:
        {
            sub_18190(0x40021000, 1);
            break;
        }
        case 0xd:
        {
            sub_1818c(0x40021000, 1);
            break;
        }
        case 0x1b:
        {
            sub_18190(0x40021000, 2);
            /* tailcall */
            return sub_1818c(0x40021000, 1);
        }
        case 0x29:
        {
            return (arg1 - 1);
            break;
        }
    }
    if ((*(arg1 + 0x1d79b) == 4 || *(arg1 + 0x1d79b) == 0xd))
    {
        /* tailcall */
        return sub_1818c(0x40021000, 2);
    }
}

int32_t sub_1d7f0(int32_t arg1)
{
    if (arg1 == 0)
    {
        sub_18182(0x40021000, 0x20, 0);
        *0x40013004 = (*0x40013004 & 0xff7f);
        *0x40013004 = (*0x40013004 | 0x40);
    }
    else
    {
        *0x40013004 = (*0x40013004 & 0xffbf);
        *0x40013004 = (*0x40013004 | 0x80);
        sub_18182(0x40021000, 0x20, 1);
    }
    return 0;
}

int32_t sub_1d83e(void* arg1)
{
    *0x2000792c = arg1;
    *(arg1 + 0x400) = 0;
    sub_1812e(0x40020c00, 0x400);
    sub_18190(0x40020c00, 0x400);
    sub_18190(0x40020c00, 0x20);
    sub_1812e(0x40020c00, 0x20);
    *0x40023840 = (*0x40023840 | 0x8000);
    sub_18190(0x40020c00, 0x10);
    sub_18190(0x40020c00, 8);
    sub_1812e(0x40020c00, 0x10);
    sub_1812e(0x40020c00, 8);
    sub_19cee(0x40020800, 0xb, 6);
    sub_19cee(0x40020800, 0xc, 6);
    sub_19cee(0x40020800, 0xa, 6);
    sub_18158(0x40020800, 0x800);
    sub_18158(0x40020800, 0x1000);
    sub_18158(0x40020800, 0x400);
    *0x40003c00 = 0;
    *0x40003c00 = 0x212;
    *0x40003c04 = 0x40;
    *0xe000e104 = 0x80000;
    *0x40003c00 = (*0x40003c00 | 0x40);
    /* tailcall */
    return sub_18182(0x40020c00, 0x20, 0);
}

int32_t sub_1d92e(void* arg1)
{
    int32_t r11 = ((*(arg1 + 0x402) - *(arg1 + 0x400)) + (0x1fe0 & ((*(arg1 + 0x403) - *(arg1 + 0x401)) << 5)));
    if (*0x20001f3f == 0)
    {
        /* unimplemented  {cpsid I} */;
    }
    if (r11 != 0)
    {
        int32_t r6_1 = 0;
        int32_t r9_1 = 1;
        int32_t r4_1;
        int32_t temp0_1;
        do
        {
            r4_1 = r11;
            if (r11 >= 4)
            {
                r4_1 = 4;
            }
            int32_t r9_2 = ((*(0x226a8 + (sub_1dac4(arg1, r6_1) & 0xf)) ^ (0 - r9_1)) & (0xffffffff << ((4 - r4_1) << 1)));
            while ((*0x40003c08 & 2) == 0)
            {
                /* nop */
            }
            *0x40003c0c = r9_2;
            sub_18182(0x40020c00, 0x20, 1);
            r6_1 = (r6_1 + r4_1);
            temp0_1 = r11;
            r11 = (r11 - r4_1);
            r9_1 = (r9_2 & 1);
        } while (temp0_1 != r4_1);
    }
    while ((*0x40003c08 & 2) == 0)
    {
        /* nop */
    }
    *0x40003c0c = 0;
    while ((*0x40003c08 & 2) == 0)
    {
        /* nop */
    }
    sub_18182(0x40020c00, 0x20, 0);
    while ((*0x40003c08 & 1) != 0)
    {
        *0x40003c0c;
    }
    /* unimplemented  {cpsie I} */;
    if (*0x20001f3f != 0)
    {
        *0xe000ed04 = 0x10000000;
    }
    return 0;
}

void sub_1da36(int32_t arg1)
{
    if (arg1 != 1)
    {
        return;
    }
    /* tailcall */
    return sub_1818c(0x40020c00, 2);
}

int32_t sub_1da4a(int32_t arg1)
{
    if (arg1 == 0)
    {
        sub_18182(0x40020c00, 0x20, 0);
        *0x40003c04 = (*0x40003c04 & 0xff7f);
        *0x40003c04 = (*0x40003c04 | 0x40);
    }
    else
    {
        *0x40003c04 = (*0x40003c04 & 0xffbf);
        *0x40003c04 = (*0x40003c04 | 0x80);
        sub_18182(0x40020c00, 0x20, 1);
    }
    return 0;
}

int32_t sub_1da98()
{
    sub_1dd94();
    sub_1dd28(0, &data_22680, 0);
    /* tailcall */
    return sub_1dd28(1, &data_22694, 0);
}

uint32_t sub_1dac4(void* arg1, int32_t arg2)
{
    int32_t r0_1 = (*(arg1 + 0x400) + (arg2 & 0x1f));
    char r1_2 = (((r0_1 >> 5) & 7) + (*(arg1 + 0x401) + (arg2 >> 5)));
    int32_t r3_3 = (r0_1 & 0x1f);
    uint32_t r0_2 = (*(arg1 + (r1_2 << 2)) >> r3_3);
    if (r3_3 == 0)
    {
        return r0_2;
    }
    return (r0_2 | (*(arg1 + ((r1_2 + 1) << 2)) << (0x20 - r3_3)));
}

void sub_1db02(int32_t arg1, int32_t arg2)
{
    int32_t r1_1 = (arg2 & 0x1f);
    if (r1_1 == 0)
    {
        return;
    }
    /* tailcall */
    return sub_1db0a(arg1, r1_1);
}

char* sub_1db0a(int32_t arg1, int32_t arg2)
{
    char* r0_1 = ((arg1 * 0x47c) + 0x20008550);
    bool cond:1_1;
    do
    {
        if ((arg2 << 0x1f) != 0)
        {
            r0_1[1] = 0xff;
            *r0_1 = 0;
        }
        cond:1_1 = 0 != (arg2 >> 1);
        r0_1 = &r0_1[2];
        arg2 = (arg2 >> 1);
    } while (cond:1_1);
    return r0_1;
}

void* sub_1db40(int32_t arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        arg2 = 1;
    }
    *((arg1 * 0x47c) + 0x2000854c) = arg2;
    return (0x20008148 + (arg1 * 0x47c));
}

uint32_t sub_1db5c(int32_t arg1)
{
    return *((arg1 * 0x47c) + 0x2000854c);
}

void* sub_1db72(int32_t arg1)
{
    *((arg1 * 0x47c) + 0x2000854c) = (*((arg1 * 0x47c) + 0x2000854c) ^ 1);
    return (0x20008148 + (arg1 * 0x47c));
}

void* sub_1db90(int32_t arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        arg2 = 1;
    }
    *((arg1 * 0x47c) + 0x2000854d) = arg2;
    return (0x20008148 + (arg1 * 0x47c));
}

uint32_t sub_1dbac(int32_t arg1)
{
    return *((arg1 * 0x47c) + 0x2000854d);
}

void* sub_1dbc4(int32_t arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        arg2 = 1;
    }
    *((arg1 * 0x47c) + 0x2000854e) = arg2;
    return (0x20008148 + (arg1 * 0x47c));
}

void sub_1dbe0(int32_t arg1, int32_t arg2)
{
    char r2 = arg2;
    if (arg2 != 0)
    {
        r2 = 1;
    }
    *((arg1 * 0x47c) + 0x2000854c) = r2;
    *((arg1 * 0x47c) + 0x2000854d) = r2;
    *((arg1 * 0x47c) + 0x20008578) = 0;
    if (arg2 > 8)
    {
        return;
    }
    switch (jump_table_1dc12[arg2])
    {
        case 5:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x10:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x1b:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x26:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x31:
        {
            *(*((arg1 * 0x47c) + 0x2000858c) + 8)(0, *((arg1 * 0x47c) + 0x20008590));
            *((arg1 * 0x47c) + 0x20008578) = 1;
            return;
            break;
        }
        case 0x45:
        {
            *((arg1 * 0x47c) + 0x2000854e) = 1;
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x53:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x5e:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x69:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
    }
}

void* sub_1dcfc(int32_t arg1, int32_t arg2)
{
    *((arg1 * 0x47c) + 0x2000857c) = arg2;
    return (0x20008148 + (arg1 * 0x47c));
}

int32_t sub_1dd12(int32_t arg1)
{
    return *((arg1 * 0x47c) + 0x2000857c);
}

int32_t sub_1dd28(int32_t arg1, int32_t* arg2, int32_t arg3)
{
    *((arg1 * 0x47c) + 0x20008590) = arg3;
    *((arg1 * 0x47c) + 0x2000858c) = arg2;
    *((arg1 * 0x47c) + 0x2000857c) = 0x21;
    *((arg1 * 0x47c) + 0x20008548) = 0;
    *((arg1 * 0x47c) + 0x20008594) = 0xffffffff;
    int32_t r4 = 0x1f;
    int32_t i = 0;
    do
    {
        bool cond:0_1 = (r4 << 0x1f) != 0;
        r4 = (r4 >> 1);
        if (cond:0_1)
        {
            void* r5_2 = ((0x20008148 + (arg1 * 0x47c)) + i);
            *(r5_2 + 0x409) = 0xff;
            *(r5_2 + 0x408) = 0;
        }
        i = (i + 2);
    } while (i != 0xa);
    /* jump -> *arg2 */
}

int32_t sub_1dd94()
{
    int32_t i = 0;
    *0x20008144 = 0;
    *0x20007d40 = 0;
    *0x20008fe0 = 0x20008a40;
    do
    {
        *(0x20008a40 + i) = (i + 0x20008b60);
        i = (i + 0x120);
    } while (i != 0x480);
    *0x20008ec0 = 0;
    return i;
}

int32_t* sub_1ddda(int32_t arg1)
{
    /* unimplemented  {mrs r0, primask} */;
    /* unimplemented  {cpsid I} */;
    int32_t* r5 = *((arg1 * 0x47c) + 0x200085a0);
    int32_t* r0_1;
    if (r5 == 0)
    {
        __msr(0x47c);
        r0_1 = nullptr;
    }
    else
    {
        *((arg1 * 0x47c) + 0x200085a0) = *r5;
        __msr(0x47c);
        if (*((arg1 * 0x47c) + 0x20008578) != 0)
        {
            r0_1 = r5;
        }
    }
    if ((r5 == 0 || (r5 != 0 && *((arg1 * 0x47c) + 0x20008578) != 0)))
    {
        int32_t* r1_1 = *((arg1 * 0x47c) + 0x200085ac);
        if ((r1_1 != 0 && *((arg1 * 0x47c) + 0x200085bc) != 0))
        {
            uint32_t r6_1 = *0x20006064;
            if ((r6_1 - *((arg1 * 0x47c) + 0x200085c0)) >= 0)
            {
                /* unimplemented  {mrs r6, primask} */;
                /* unimplemented  {cpsid I} */;
                *r1_1 = *0x20008fe0;
                *0x20008fe0 = r1_1;
                __msr(r6_1);
                *((arg1 * 0x47c) + 0x200085ac) = 0;
                *((arg1 * 0x47c) + 0x200085bc) = 0;
            }
        }
    }
    if ((r5 != 0 && *((arg1 * 0x47c) + 0x20008578) == 0))
    {
        uint32_t r6_2 = r5[3];
        uint32_t r0_2;
        uint32_t r1_3;
        uint32_t r1_4;
        int32_t r2_4;
        int16_t r11_2;
        if ((r6_2 & 0x8080) != 0x8080)
        {
            r1_4 = 0;
            r11_2 = 0;
            r0_2 = 0;
        }
        else
        {
            r1_3 = *(r5 + 0xe);
            r0_2 = ((r1_3 >> 0xb) & 0xf);
            r11_2 = (r1_3 & 0x1ff);
            if ((r1_3 & 0x400) != 0)
            {
                r2_4 = 1;
                r1_4 = 0;
            }
            else
            {
                r1_4 = (r1_3 >> 0xf);
            }
        }
        if (((r6_2 & 0x8080) != 0x8080 || ((r6_2 & 0x8080) == 0x8080 && (r1_3 & 0x400) == 0)))
        {
            r2_4 = 0;
        }
        void* r3_7 = *((arg1 * 0x47c) + 0x200085a8);
        if (r3_7 == 0)
        {
            int32_t* r2_7 = *((arg1 * 0x47c) + 0x200085ac);
            int32_t* r3_9 = r2_7;
            if (r2_7 != 0)
            {
                r3_9 = &*(nullptr + 1);
            }
            if (((r3_9 | r1_4) != 0 && r1_4 == 0))
            {
                /* unimplemented  {mrs r0, primask} */;
                /* unimplemented  {cpsid I} */;
                *r2_7 = *0x20008fe0;
                *0x20008fe0 = r2_7;
                __msr(r0_2);
                *((arg1 * 0x47c) + 0x200085ac) = nullptr;
            }
            if ((((r3_9 | r1_4) != 0 && r1_4 == 0) || (r3_9 | r1_4) == 0))
            {
                r0_1 = r5;
            }
            if (((r3_9 | r1_4) != 0 && r1_4 != 0))
            {
                uint32_t r1_12;
                int32_t r8_3;
                if (r2_7 != 0)
                {
                    uint32_t r1_7 = r0_2;
                    sub_1ff48(((r2_7 + (r1_7 * 0x1a)) + 0x10), &r5[4], (0xfffffffe + (((r6_2 >> 0xc) & 7) << 2)));
                    r0_1 = *((arg1 * 0x47c) + 0x200085ac);
                    r8_3 = 1;
                    r0_1[0x46] = (r0_1[0x46] + (0xfffffffe + (((r6_2 >> 0xc) & 7) << 2)));
                    r1_12 = r1_7;
                }
                else
                {
                    *((arg1 * 0x47c) + 0x200085ac) = r5;
                    int32_t r1_15 = r5[0x47];
                    uint32_t r1_17;
                    uint16_t r2_12;
                    if ((r1_15 & 1) != 0)
                    {
                        r1_17 = *((arg1 * 0x47c) + 0x2000854d);
                        if (r1_17 != 0)
                        {
                            r1_17 = 1;
                        }
                        r2_12 = (*((arg1 * 0x47c) + 0x2000854c) << 5);
                    }
                    else if ((r1_15 & 6) == 0)
                    {
                        r2_12 = 0;
                        r1_17 = 0;
                    }
                    else
                    {
                        r2_12 = 0;
                        r1_17 = *((arg1 * 0x47c) + 0x2000854e);
                        if (r1_17 != 0)
                        {
                            r1_17 = 1;
                        }
                    }
                    r8_3 = 0;
                    *(r5 + 0xe) = (r11_2 & 0x1ff);
                    r5[3] = (((r2_12 | (0xe1f & r6_2)) | (r1_17 << 8)) | 0x8040);
                    r1_12 = r0_2;
                    r0_1 = r5;
                }
                uint32_t r2_16 = r11_2;
                if (((r1_12 + 1) * 0x1a) < r2_16)
                {
                    int32_t r0_14;
                    uint32_t r1_23;
                    r0_14 = sub_1e17e(arg1, r5[0x47], (r6_2 & 0x1f), 1, 1, 1, (r1_12 + 1), r2_16, nullptr, 0, 0);
                    if (r8_3 == 1)
                    {
                        /* unimplemented  {mrs r1, primask} */;
                        /* unimplemented  {cpsid I} */;
                        *r5 = *0x20008fe0;
                        *0x20008fe0 = r5;
                        __msr(r1_23);
                    }
                    if (r0_14 == 0)
                    {
                        int32_t r1_26 = *0x20006064;
                        *((arg1 * 0x47c) + 0x200085bc) = 1;
                        *((arg1 * 0x47c) + 0x200085c0) = (r1_26 + 0x1e);
                        r0_1 = nullptr;
                    }
                    else
                    {
                        int32_t* r0_15 = *((arg1 * 0x47c) + 0x200085ac);
                        /* unimplemented  {mrs r1, primask} */;
                        /* unimplemented  {cpsid I} */;
                        *r0_15 = *0x20008fe0;
                        *0x20008fe0 = r0_15;
                        r0_1 = nullptr;
                        __msr(r1_23);
                        *((arg1 * 0x47c) + 0x200085ac) = nullptr;
                        *((arg1 * 0x47c) + 0x200085bc) = 0;
                    }
                }
                else
                {
                    if (r8_3 == 1)
                    {
                        /* unimplemented  {mrs r0, primask} */;
                        /* unimplemented  {cpsid I} */;
                        *r5 = *0x20008fe0;
                        *0x20008fe0 = r5;
                        __msr(r0_1);
                        r0_1 = *((arg1 * 0x47c) + 0x200085ac);
                    }
                    r0_1[0x46] = (r2_16 + 4);
                    *((arg1 * 0x47c) + 0x200085ac) = nullptr;
                    *((arg1 * 0x47c) + 0x200085bc) = 0;
                }
            }
        }
        else
        {
            uint32_t r12_1 = 0xfffffffc;
            uint32_t r2_5;
            if (r2_4 != 1)
            {
                r0_1 = r5;
            }
            else
            {
                int16_t r1_5 = *(r3_7 + 0x118);
                uint32_t r11_3 = r0_2;
                uint32_t r8_1 = 0;
                r2_5 = (r1_5 - 4);
                uint32_t r0_4 = 0x1a;
                uint32_t lr_1 = (r2_5 - (r11_3 * 0x1a));
                int32_t r2_6 = (r6_2 & 0x1f);
                if (lr_1 < 1)
                {
                    r8_1 = 0xfffffffc;
                }
                r6_2 = (r11_3 * 0x1a);
                if (r2_6 == (*(r3_7 + 0xc) & 0x1f))
                {
                    r12_1 = r8_1;
                }
                if (r12_1 == 0)
                {
                    if (lr_1 < 0x1a)
                    {
                        r0_4 = lr_1;
                    }
                    r0_4 = sub_1e17e(arg1, r5[0x47], r2_6, 1, 1, 0, r11_3, (-4 + r1_5), ((r3_7 + r6_2) + 0x10), r0_4, 0);
                    r12_1 = r0_4;
                }
                /* unimplemented  {mrs r0, primask} */;
                /* unimplemented  {cpsid I} */;
                *r5 = *0x20008fe0;
                *0x20008fe0 = r5;
                __msr(r0_4);
                if (r12_1 == 0)
                {
                    r0_1 = nullptr;
                    r12_1 = 0;
                }
                else
                {
                    r0_1 = nullptr;
                }
            }
            if (((r2_4 != 1 || (r2_4 == 1 && r12_1 != 0)) || ((r2_4 == 1 && r12_1 == 0) && (r6_2 + 0x1a) >= r2_5)))
            {
                int32_t* r3_11 = *((arg1 * 0x47c) + 0x200085a8);
                /* unimplemented  {mrs r6, primask} */;
                /* unimplemented  {cpsid I} */;
                *r3_11 = *0x20008fe0;
                *0x20008fe0 = r3_11;
                __msr(r6_2);
                *((arg1 * 0x47c) + 0x200085a8) = 0;
                *((arg1 * 0x47c) + 0x200085b4) = 0;
                *((arg1 * 0x47c) + 0x200085b0) = r12_1;
            }
        }
    }
    if (r0_1 != 0)
    {
        r0_1 = &r0_1[3];
    }
    return r0_1;
}

int32_t sub_1e17e(int32_t arg1, uint32_t arg2, int16_t arg3, int32_t arg4, uint32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, char* arg9, int32_t arg10, int32_t arg11)
{
    int32_t r1 = arg10;
    uint32_t r4 = 0;
    if (arg4 != 0)
    {
        r1 = (r1 + 2);
    }
    uint32_t r1_2 = arg5;
    if (arg5 != 0)
    {
        r1_2 = ((r1 + 3) >> 2);
    }
    if (arg4 == 0)
    {
        r1_2 = ((r1 + 3) >> 2);
    }
    int32_t r8 = (0x7000 & (r1_2 << 0xc));
    int32_t temp0 = 0;
    uint32_t i = arg2;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    void* r6_3 = ((0x20008148 + (arg1 * 0x47c)) + ((0x1f - (0x20 - temp0)) << 1));
    if (arg2 == 1)
    {
        r4 = 3;
    }
    uint32_t r1_5;
    if ((arg2 & 1) != 0)
    {
        r1_5 = *((arg1 * 0x47c) + 0x2000854d);
        r8 = (r8 | (*((arg1 * 0x47c) + 0x2000854c) << 5));
    }
    else if ((arg2 & 6) == 0)
    {
        r1_5 = 0;
    }
    else
    {
        r1_5 = *((arg1 * 0x47c) + 0x2000854e);
    }
    if ((((arg2 & 1) != 0 || ((arg2 & 1) == 0 && (arg2 & 6) != 0)) && r1_5 != 0))
    {
        r1_5 = 1;
    }
    int32_t r5_8 = (((arg6 << 0xa) | (arg5 << 0xf)) | ((arg7 & 0xf) << 0xb));
    if (arg6 == 0)
    {
        r5_8 = (r5_8 | (arg8 & 0x1ff));
    }
    sub_1e454(arg2, 0x20007940, (((((0xe00 & (*(r6_3 + 0x408) << 9)) | ((arg3 & 0x1f) | (arg4 << 0xf))) | r8) | (r1_5 << 8)) | 0x40), r5_8, arg9, arg10, ((arg4 ^ 1) | arg5));
    int32_t r8_1 = 0;
    int32_t r1_7 = *((arg1 * 0x47c) + 0x2000857c);
    *((arg1 * 0x47c) + 0x2000857c) = (r1_7 | arg2);
    int32_t r0_21;
    uint32_t r1_15;
    int32_t r2_6;
    void* r5_10;
    int32_t r6_8;
    while (true)
    {
        *((arg1 * 0x47c) + 0x20008568) = (*((arg1 * 0x47c) + 0x20008568) + 1);
        *(*((arg1 * 0x47c) + 0x2000858c) + 4)(0x20007940, *((arg1 * 0x47c) + 0x20008590));
        *((arg1 * 0x47c) + 0x20008580) = *0x20006064;
        *((arg1 * 0x47c) + 0x20008588) = 0;
        int16_t* var_28;
        uint32_t r2_5;
        r0_21 = sub_1e670(arg1, &var_28, arg2, 1, r4, 2);
        if (r0_21 == 0xffffffff)
        {
            if (r4 == 0)
            {
                r8_1 = 0;
                r0_21 = 0xffffffff;
            }
            else
            {
                r4 = (r4 - 1);
                *((arg1 * 0x47c) + 0x20008574) = (*((arg1 * 0x47c) + 0x20008574) + 1);
                continue;
            }
        }
        else if (r0_21 == 0)
        {
            int16_t* r0_22 = var_28;
            uint32_t r1_13 = *r0_22;
            /* unimplemented  {mrs r2, primask} */;
            /* unimplemented  {cpsid I} */;
            *(r0_22 - 0xc) = *0x20008fe0;
            *0x20008fe0 = &r0_22[-6];
            __msr(r2_5);
            r2_6 = arg11;
            int32_t r0_24 = *(r6_3 + 0x408);
            r1_15 = arg2;
            r5_10 = ((arg1 * 0x47c) + 0x2000857c);
            r6_8 = r1_7;
            if (((r1_13 >> 9) & 7) != r0_24)
            {
                r8_1 = 1;
            }
            else
            {
                r8_1 = 0;
                *(r6_3 + 0x408) = ((r0_24 + 1) & 7);
            }
            r0_21 = 0;
            break;
        }
        r1_15 = arg2;
        r2_6 = arg11;
        r5_10 = ((arg1 * 0x47c) + 0x2000857c);
        r6_8 = r1_7;
        break;
    }
    *r5_10 = r6_8;
    int32_t r3_2 = 0;
    if (r0_21 == 0xffffffff)
    {
        r3_2 = 1;
    }
    if ((r2_6 >= 0 && (r3_2 | r8_1) == 1))
    {
        r0_21 = 0xfffffffd;
        if (sub_1ee0a(arg1, r1_15, r2_6) == 0)
        {
            r0_21 = 0xfffffffe;
        }
    }
    return r0_21;
}

int32_t* sub_1e3ba(int32_t arg1, uint32_t arg2)
{
    /* unimplemented  {mrs r1, primask} */;
    /* unimplemented  {cpsid I} */;
    *(arg1 - 0xc) = *0x20008fe0;
    *0x20008fe0 = (arg1 - 0xc);
    __msr(arg2);
    return (arg1 - 0xc);
}

int32_t sub_1e3d6(void* arg1)
{
    return *(arg1 + 0x110);
}

int32_t sub_1e3dc(int32_t arg1, uint32_t arg2, int16_t arg3, char* arg4, int32_t arg5, int32_t arg6)
{
    return sub_1e17e(arg1, arg2, arg3, 0, *((arg1 * 0x47c) + 0x200085a4), 0, 0, 0, arg4, arg5, arg6);
}

int32_t sub_1e41a(int32_t arg1, uint32_t arg2, int16_t arg3, char* arg4, int32_t arg5)
{
    return sub_1e17e(arg1, arg2, arg3, 0, *((arg1 * 0x47c) + 0x200085a4), 0, 0, 0, arg4, arg5, 0);
}

int32_t sub_1e454(uint32_t arg1, void* arg2, int32_t arg3, int32_t arg4, char* arg5, int32_t arg6, int32_t arg7)
{
    int32_t r8 = 0;
    *(arg2 + 0x400) = 0;
    sub_1d4bc(arg2, 0xaaaaaaaa, 0x20);
    sub_1d4bc(arg2, 0xaaaaaaaa, 0x20);
    int32_t temp0 = 0;
    uint32_t i = arg1;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    sub_1d4bc(arg2, *(0x226c4 + ((0x1f - (0x20 - temp0)) << 2)), 0x14);
    uint32_t r5_1 = arg3;
    sub_1d4bc(arg2, (*(0x22ad8 + (arg3 & 0xf)) | (*(0x22ad8 + (r5_1 >> 4)) << 5)), 0xa);
    sub_1d4bc(arg2, (*(0x22ad8 + ((arg3 >> 8) & 0xf)) | (*(0x22ad8 + (arg3 >> 0xc)) << 5)), 0xa);
    int32_t r0_13 = (*(0x226d8 + ((r5_1 ^ 0xff) << 2)) ^ 0xffffff);
    int32_t r6 = (*(0x226d8 + ((r0_13 ^ (arg3 >> 8)) << 2)) ^ (r0_13 >> 8));
    int32_t i_2 = arg6;
    char* r9_1 = arg5;
    if (arg3 <= 0xffffffff)
    {
        sub_1d4bc(arg2, (*(0x22ad8 + (arg4 & 0xf)) | (*(0x22ad8 + ((arg4 >> 4) & 0xf)) << 5)), 0xa);
        sub_1d4bc(arg2, (*(0x22ad8 + ((arg4 >> 8) & 0xf)) | (*(0x22ad8 + (arg4 >> 0xc)) << 5)), 0xa);
        int32_t r0_24 = (*(0x226d8 + ((r6 ^ arg4) << 2)) ^ (r6 >> 8));
        r8 = 2;
        r6 = (*(0x226d8 + ((r0_24 ^ (arg4 >> 8)) << 2)) ^ (r0_24 >> 8));
    }
    int32_t r0_25 = (r8 + i_2);
    if (i_2 != 0)
    {
        int32_t i_1;
        do
        {
            uint32_t r8_2 = *r9_1;
            r9_1 = &r9_1[1];
            sub_1d4bc(arg2, (*(0x22ad8 + (r8_2 & 0xf)) | (*(0x22ad8 + (r8_2 >> 4)) << 5)), 0xa);
            i_1 = i_2;
            i_2 = (i_2 - 1);
            r6 = (*(0x226d8 + ((r6 ^ r8_2) << 2)) ^ (r6 >> 8));
        } while (i_1 != 1);
    }
    if (((r0_25 << 0x1e) != 0 && arg7 != 0))
    {
        int32_t r5_2 = (r0_25 + 1);
        bool cond:3_1;
        do
        {
            sub_1d4bc(arg2, 0x3de, 0xa);
            cond:3_1 = (r5_2 & 3) != 0;
            r6 = (*(0x226d8 + (r6 << 2)) ^ (r6 >> 8));
            r5_2 = (r5_2 + 1);
        } while (cond:3_1);
    }
    int32_t r5_3 = (!r6);
    sub_1d4bc(arg2, (*(0x22ad8 + (0xf & (!r6))) | (*(0x22ad8 + ((r5_3 >> 4) & 0xf)) << 5)), 0xa);
    sub_1d4bc(arg2, (*(0x22ad8 + ((r5_3 >> 8) & 0xf)) | (*(0x22ad8 + ((r5_3 >> 0xc) & 0xf)) << 5)), 0xa);
    sub_1d4bc(arg2, (*(0x22ad8 + ((r5_3 >> 0x10) & 0xf)) | (*(0x22ad8 + ((r5_3 >> 0x14) & 0xf)) << 5)), 0xa);
    sub_1d4bc(arg2, (*(0x22ad8 + ((r5_3 >> 0x18) & 0xf)) | (*(0x22ad8 + (r5_3 >> 0x1c)) << 5)), 0xa);
    sub_1d4bc(arg2, 0xd, 5);
    /* tailcall */
    return sub_1d4bc(arg2, 0, 1);
}

int32_t sub_1e670(int32_t arg1, int16_t** arg2, int32_t arg3, int32_t arg4, uint32_t arg5 @ r4, int32_t arg6)
{
    uint32_t var_14 = arg5;
    uint32_t i_1 = 0;
    uint32_t r0_1 = *0x20006064;
    int32_t r10 = (r0_1 + arg6);
    int32_t r0_5;
    while (true)
    {
        int32_t r11_1 = *0x20006064;
        /* unimplemented  {mrs r4, primask} */;
        /* unimplemented  {cpsid I} */;
        int16_t* r5_1 = *((arg1 * 0x47c) + 0x200085a0);
        if (r5_1 != 0)
        {
            r0_1 = *r5_1;
            *((arg1 * 0x47c) + 0x200085a0) = r0_1;
        }
        else
        {
            r5_1 = nullptr;
        }
        __msr(arg5);
        bool cond:0_1 = r5_1 == 0;
        if (r5_1 != 0)
        {
            r5_1 = &r5_1[6];
        }
        if ((!cond:0_1))
        {
            /* unimplemented  {mrs r0, primask} */;
            /* unimplemented  {cpsid I} */;
            arg5 = (r5_1 - 0xc);
            *arg5 = i_1;
            __msr(r0_1);
            int32_t r0_2 = *(arg5 + 0x11c);
            uint32_t r0_3;
            int32_t r6_1;
            if (r0_2 == arg3)
            {
                r0_3 = *r5_1;
                r6_1 = (r0_3 & 0x1f);
                if ((r6_1 != arg4 && (r0_3 & 0x701f) == 0xd))
                {
                    r0_5 = 0xfffffffe;
                }
                if (r6_1 == arg4)
                {
                    /* unimplemented  {mrs r0, primask} */;
                    /* unimplemented  {cpsid I} */;
                    if (arg5 != 0)
                    {
                        i_1 = *arg5;
                    }
                    else
                    {
                        i_1 = 0;
                    }
                    __msr(r0_3);
                    if (arg2 == 0)
                    {
                        /* unimplemented  {mrs r0, primask} */;
                        /* unimplemented  {cpsid I} */;
                        arg2 = 0x20008fe0;
                        *arg5 = *0x20008fe0;
                        *0x20008fe0 = arg5;
                        __msr(r0_3);
                    }
                    else
                    {
                        *arg2 = r5_1;
                    }
                    r0_5 = 0;
                    break;
                }
            }
            if ((r0_2 != arg3 && (r0_2 & 0x60) != 0))
            {
                r0_5 = 0xfffffffd;
            }
            if (((r0_2 != arg3 && (r0_2 & 0x60) != 0) || ((r0_2 == arg3 && r6_1 != arg4) && (r0_3 & 0x701f) == 0xd)))
            {
                i_1 = arg5;
                break;
            }
            if (((r0_2 != arg3 && (r0_2 & 0x60) == 0) || ((r0_2 == arg3 && r6_1 != arg4) && (r0_3 & 0x701f) != 0xd)))
            {
                i_1 = arg5;
            }
        }
        r0_1 = (r11_1 - r10);
        if (r0_1 >= 0)
        {
            r0_5 = 0xffffffff;
            break;
        }
    }
    if (i_1 != 0)
    {
        uint32_t i;
        do
        {
            /* unimplemented  {mrs r1, primask} */;
            /* unimplemented  {cpsid I} */;
            i = *i_1;
            __msr(arg2);
            /* unimplemented  {mrs r1, primask} */;
            /* unimplemented  {cpsid I} */;
            *i_1 = *((arg1 * 0x47c) + 0x200085a0);
            *((arg1 * 0x47c) + 0x200085a0) = i_1;
            i_1 = i;
            __msr(arg2);
        } while (i != 0);
    }
    return r0_5;
}

void sub_1e78e(int32_t arg1, int32_t arg2)
{
    if (arg2 != 2)
    {
        return;
    }
    /* tailcall */
    return sub_1e794();
}

int32_t sub_1e794(int32_t arg1)
{
    *((arg1 * 0x47c) + 0x20008590);
    /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 0x10) */
}

void* sub_1e7b2()
{
    int32_t r4 = 0;
    void* r0 = 0x20008148;
    char* r9 = 0x20008550;
    while (true)
    {
        void* r6_1 = (0x20008148 + (r4 * 0x47c));
        int32_t* r11_1 = *(r6_1 + 0x450);
        void* r5_1 = (r6_1 + 0x450);
        char* var_40_1;
        int32_t var_3c_1;
        void* var_38_1;
        int32_t* r0_9;
        int32_t** i_6;
        void* r4_1;
        void* r5_2;
        void* r8_1;
        void* r9_2;
        void* r10_1;
        if (r11_1 != 0)
        {
            var_38_1 = r5_1;
            var_40_1 = r9;
            var_3c_1 = r4;
            r9_2 = (r6_1 + 0x454);
            r8_1 = (r6_1 + 0x402);
            r10_1 = (r6_1 + 0x400);
            r5_2 = (r6_1 + 0x401);
            r4_1 = (r6_1 + 0x403);
        }
        else
        {
            if (((*(r6_1 + 0x402) - *(r6_1 + 0x400)) + (0x1fe0 & ((*(r6_1 + 0x403) - *(r6_1 + 0x401)) << 5))) < 0x14)
            {
                goto label_1edb6;
            }
            var_3c_1 = r4;
            var_38_1 = r5_1;
            r8_1 = (r6_1 + 0x402);
            r10_1 = (r6_1 + 0x400);
            r5_2 = (r6_1 + 0x401);
            r4_1 = (r6_1 + 0x403);
            uint32_t r0_29;
            int32_t r0_30;
            int32_t r9_1;
            while (true)
            {
                r0_29 = sub_1dac4(r6_1, 0);
                int32_t r1_32;
                if ((r0_29 & 0xf) == 0xa)
                {
                    r1_32 = 4;
                }
                else
                {
                    r0_30 = (r0_29 & 0xfffff);
                    r1_32 = 1;
                    switch (r0_30)
                    {
                        case 0x31b18:
                        {
                            var_40_1 = r9;
                            r9_1 = 2;
                            break;
                            break;
                        }
                        case 0x31f07:
                        {
                            int32_t r0_1 = 6;
                            int32_t i = 0;
                            do
                            {
                                if ((r0_1 << 0x1f) != 0)
                                {
                                    void* r2_2 = (r0 + i);
                                    *(r2_2 + 0x409) = 0xff;
                                    *(r2_2 + 0x408) = 0;
                                }
                                i = (i + 2);
                                r0_1 = (r0_1 >> 1);
                            } while (i != 6);
                            var_40_1 = r9;
                            r9_1 = 0x40;
                            break;
                            break;
                        }
                        case 0x360d8:
                        {
                            var_40_1 = r9;
                            r9_1 = 4;
                            break;
                            break;
                        }
                        case 0x36738:
                        {
                            var_40_1 = r9;
                            r9_1 = 8;
                            break;
                            break;
                        }
                        case 0x89b38:
                        {
                            var_40_1 = r9;
                            r9_1 = 0x10;
                            break;
                            break;
                        }
                        case 0x8e318:
                        {
                            var_40_1 = r9;
                            r9_1 = 1;
                            break;
                            break;
                        }
                        case 0xc9ce7:
                        {
                            int32_t r0_10 = 0x1f;
                            int32_t i_1 = 0;
                            do
                            {
                                if ((r0_10 << 0x1f) != 0)
                                {
                                    void* r2_5 = (r0 + i_1);
                                    *(r2_5 + 0x409) = 0xff;
                                    *(r2_5 + 0x408) = 0;
                                }
                                i_1 = (i_1 + 2);
                                r0_10 = (r0_10 >> 1);
                            } while (i_1 != 0xa);
                            var_40_1 = r9;
                            r9_1 = 0x20;
                            *(r6_1 + 0x441) = 0;
                            break;
                            break;
                        }
                    }
                }
                int32_t r0_32 = (*r10_1 + r1_32);
                int32_t r0_33 = (r0_32 & 0x1f);
                int32_t r1_34 = (((r0_32 >> 5) & 7) + *r5_2);
                *r5_2 = r1_34;
                *r10_1 = r0_33;
                if (((*r8_1 - r0_33) + (0x1fe0 & ((*r4_1 - r1_34) << 5))) <= 0x13)
                {
                    r11_1 = nullptr;
                    break;
                }
            }
            if ((!((r0_29 & 0xf) != 0xa && r0_30 == 0x31b18)))
            {
                goto label_1eb82;
            }
            int32_t r1_3 = (*r10_1 + 0x14);
            *r5_2 = (*r5_2 + ((r1_3 >> 5) & 7));
            uint32_t r0_4 = (r1_3 & 0x1f);
            *r10_1 = r0_4;
            /* unimplemented  {mrs r0, primask} */;
            /* unimplemented  {cpsid I} */;
            r11_1 = *0x20008fe0;
            if (r11_1 == 0)
            {
                __msr(r0_4);
                r11_1 = nullptr;
                r5_1 = var_38_1;
                *r5_1 = 0;
                r9 = var_40_1;
                r4 = var_3c_1;
                goto label_1edbc;
            }
            *0x20008fe0 = *r11_1;
            __msr(r0_4);
            *var_38_1 = r11_1;
            int32_t var_30;
            sub_19778(&var_30);
            int32_t r0_7 = var_30;
            int32_t var_2c;
            r11_1[2] = var_2c;
            r11_1[1] = r0_7;
            *(r6_1 + 0x454) = 0xffffffff;
            r11_1[0x47] = r9_1;
            r11_1[0x46] = 0;
            if ((r9_1 & 0x60) != 0)
            {
                uint32_t r0_8 = *(r6_1 + 0x434);
                r4 = var_3c_1;
                if ((r0_8 & r9_1) == 0)
                {
                    /* unimplemented  {mrs r0, primask} */;
                    /* unimplemented  {cpsid I} */;
                    *r11_1 = *0x20008fe0;
                    *0x20008fe0 = r11_1;
                    r11_1 = nullptr;
                    __msr(r0_8);
                    r9 = var_40_1;
                    r5_1 = var_38_1;
                    goto label_1edbc;
                }
                r5_1 = var_38_1;
                r0_9 = *r5_1;
                *r0_9 = 0;
                int32_t* i_2 = *(r6_1 + 0x458);
                if (i_2 == 0)
                {
                    i_6 = (r6_1 + 0x458);
                }
                else
                {
                    do
                    {
                        i_6 = i_2;
                        i_2 = *i_6;
                    } while (i_2 != 0);
                }
                r9 = var_40_1;
                goto label_1edb4;
            }
            r9_2 = (r6_1 + 0x454);
        }
        if (((*r8_1 - *r10_1) + (0x1fe0 & ((*r4_1 - *r5_2) << 5))) >= 5)
        {
            int32_t r0_16;
            do
            {
                r0_16 = (sub_1dac4(r6_1, 0) & 0x1f);
                int32_t r2_8 = (*r10_1 + 5);
                *r5_2 = (*r5_2 + ((r2_8 >> 5) & 7));
                *r10_1 = (r2_8 & 0x1f);
                if (r0_16 == 0xd)
                {
                    break;
                }
                if (((0x7cfcce00 >> r0_16) << 0x1f) == 0)
                {
                    break;
                }
                int32_t r0_17 = *(0x22ae8 + r0_16);
                uint32_t r1_16 = r11_1[0x46];
                uint32_t r0_19;
                if ((r1_16 & 1) != 0)
                {
                    uint32_t r1_18 = (r1_16 >> 1);
                    *(&r11_1[3] + r1_18) = (*(&r11_1[3] + r1_18) | (r0_17 << 4));
                    r0_19 = r11_1[0x46];
                    int32_t r2_10 = *r9_2;
                    *r9_2 = (*(0x226d8 + ((*(&r11_1[3] + (r0_19 >> 1)) ^ r2_10) << 2)) ^ (r2_10 >> 8));
                }
                else
                {
                    *((r11_1 + (r1_16 >> 1)) + 0xc) = r0_17;
                    r0_19 = r11_1[0x46];
                }
                r11_1[0x46] = (r0_19 + 1);
            } while (((*r8_1 - *r10_1) + (0x1fe0 & ((*r4_1 - *r5_2) << 5))) > 4);
            int16_t r0_41;
            if ((r0_16 != 0xd && ((0x7cfcce00 >> r0_16) << 0x1f) == 0))
            {
                *(r6_1 + 0x418) = (*(r6_1 + 0x418) + 1);
                *(r11_1 + 0xd) = 0xff;
                *(r11_1 + 0xe) = r0_16;
                r11_1[3] = r11_1[0x47];
                uint32_t r0_39 = r11_1[0x46];
                *(r11_1 + 0xf) = (r0_39 + (r0_39 << 2));
                r0_41 = 4;
                goto label_1ec34;
            }
            if (r0_16 == 0xd)
            {
                uint32_t r0_36 = r11_1[0x46];
                if ((r0_36 & 1) == 0)
                {
                    if (*r9_2 != 0xdebb20e3)
                    {
                        *(r6_1 + 0x414) = (*(r6_1 + 0x414) + 1);
                        *(r11_1 + 0xd) = 0xfd;
                        r11_1[3] = r11_1[0x47];
                        int32_t r0_48 = *r9_2;
                        *(r11_1 + 0xe) = r0_48;
                        r11_1[4] = (r0_48 >> 0x10);
                        r0_41 = 6;
                        goto label_1ec34;
                    }
                    *(r6_1 + 0x424) = (*(r6_1 + 0x424) + 1);
                    r11_1[0x46] = (0xfffffffc + (r0_36 >> 1));
                    r9 = var_40_1;
                    if ((r0_36 >> 1) == 4)
                    {
                        goto label_1eb82;
                    }
                    goto label_1ec40;
                }
                *(r6_1 + 0x41c) = (*(r6_1 + 0x41c) + 1);
                *(r11_1 + 0xd) = 0xfe;
                r11_1[3] = r11_1[0x47];
                r0_41 = 2;
            label_1ec34:
                r11_1[0x47] = 0x80;
                r11_1[0x46] = r0_41;
                r9 = var_40_1;
            label_1ec40:
                uint32_t r0_50 = r11_1[0x47];
                uint32_t r8_2 = r11_1[3];
                int32_t r2_16 = (*(r6_1 + 0x434) & r0_50);
                bool cond:3_1 = r0_50 == 0x80;
                if (r0_50 != 0x80)
                {
                    cond:3_1 = r2_16 == 0;
                }
                if (cond:3_1)
                {
                    goto label_1ed4c;
                }
                int32_t r5_3 = (r8_2 & 0x701f);
                int32_t r1_43 = (r8_2 & 0x8000);
                if (r5_3 != 1)
                {
                    r1_43 = (r1_43 | 1);
                }
                if (r1_43 == 0)
                {
                    break;
                }
                int32_t r3_5 = ((r8_2 >> 9) & 7);
                uint32_t r1_45;
                uint32_t r2_17;
                if ((r0_50 << 0x1f) != 0)
                {
                    r1_45 = *(r6_1 + 0x405);
                    if (r1_45 != 0)
                    {
                        r1_45 = 1;
                    }
                    r2_17 = (*(r6_1 + 0x404) << 5);
                }
                else if ((r0_50 & 6) == 0)
                {
                    r2_17 = 0;
                    r1_45 = 0;
                }
                else
                {
                    r1_45 = *(r6_1 + 0x406);
                    r2_17 = 0;
                    if (r1_45 != 0)
                    {
                        r1_45 = 1;
                    }
                }
                sub_1e454(r0_50, 0x20007d44, (((r2_17 | (r8_2 & 0xe00)) | (r1_45 << 8)) | 0x41), 0, nullptr, 0, 0);
                *(*(r6_1 + 0x444) + 4)(0x20007d44, *(r6_1 + 0x448));
                *(r6_1 + 0x420) = (*(r6_1 + 0x420) + 1);
                *r10_1 = 0;
                uint32_t i_5 = r11_1[0x47];
                int32_t r0_54;
                void* r0_57;
                if (r5_3 != 0xd)
                {
                    int32_t temp0_1 = 0;
                    uint32_t i_3 = i_5;
                    while (i_3 != 0)
                    {
                        i_3 = (i_3 >> 1);
                        temp0_1 = (temp0_1 + 1);
                    }
                    r0_57 = (r6_1 + ((0x1f - (0x20 - temp0_1)) << 1));
                    if (r3_5 != *(r0_57 + 0x409))
                    {
                        *(r0_57 + 0x409) = r3_5;
                    }
                    else
                    {
                        r2_16 = 0;
                        *(r6_1 + 0x428) = (*(r6_1 + 0x428) + 1);
                    label_1ed4c:
                        r4 = var_3c_1;
                        r5_1 = var_38_1;
                    }
                }
                else
                {
                    r0_54 = (i_5 & 0x1f);
                }
                if (((r5_3 != 0xd && r3_5 != *(r0_57 + 0x409)) || (r5_3 == 0xd && r0_54 == 0)))
                {
                    r4 = var_3c_1;
                    r5_1 = var_38_1;
                }
                if ((r5_3 == 0xd && r0_54 != 0))
                {
                    r4 = var_3c_1;
                    r5_1 = var_38_1;
                    char* r1_48 = r9;
                    bool cond:11_1;
                    do
                    {
                        if ((r0_54 << 0x1f) != 0)
                        {
                            r1_48[1] = 0xff;
                            *r1_48 = 0;
                        }
                        r1_48 = &r1_48[2];
                        cond:11_1 = 0 != (r0_54 >> 1);
                        r0_54 = (r0_54 >> 1);
                    } while (cond:11_1);
                }
                void* r0_61 = (r6_1 + 0x438);
                int32_t r1_50 = (0x701f & r8_2);
                if (r1_50 == 5)
                {
                    r0_61 = (r6_1 + 0x43c);
                }
                *r0_61 = *0x20006064;
                char r0_62 = 0;
                if (r1_50 == 5)
                {
                    r0_62 = 1;
                }
                *(r6_1 + 0x440) = r0_62;
                if (r2_16 == 0)
                {
                    uint32_t r0_63 = *(r6_1 + 0x430);
                    if (r0_63 != 0)
                    {
                        goto label_1ed9a;
                    }
                    /* unimplemented  {mrs r0, primask} */;
                    /* unimplemented  {cpsid I} */;
                    *r11_1 = *0x20008fe0;
                    *0x20008fe0 = r11_1;
                    __msr(r0_63);
                    goto label_1edb6;
                }
            label_1ed9a:
                r0_9 = *r5_1;
                *r0_9 = 0;
                int32_t* i_4 = *(r6_1 + 0x458);
                if (i_4 == 0)
                {
                    i_6 = (r6_1 + 0x458);
                }
                else
                {
                    do
                    {
                        i_6 = i_4;
                        i_4 = *i_6;
                    } while (i_4 != 0);
                }
            label_1edb4:
                *i_6 = r0_9;
            label_1edb6:
                r11_1 = nullptr;
            label_1edbc:
                r4 = (r4 + 1);
                r9 = &r9[0x47c];
                *r5_1 = r11_1;
                r0 = (r0 + 0x47c);
                if (r4 == 2)
                {
                    return r0;
                }
                continue;
            }
        }
        r9 = var_40_1;
    label_1eb82:
        r4 = var_3c_1;
        r5_1 = var_38_1;
        goto label_1edbc;
    }
    goto label_1ed4c;
}

int32_t sub_1edd8(int32_t arg1)
{
    void* r2 = ((arg1 * 0x47c) + 0x20008584);
    if (*((arg1 * 0x47c) + 0x20008588) == 0)
    {
        r2 = ((arg1 * 0x47c) + 0x20008580);
    }
    return (*0x20006064 - *r2);
}

int32_t sub_1ee0a(int32_t arg1, uint32_t arg2, int32_t arg3)
{
    int32_t r4 = 0;
    *((arg1 * 0x47c) + 0x20008589) = 0;
    if (arg3 == 0)
    {
        int32_t r1_1 = (arg2 & 0x1f);
        if (r1_1 != 0)
        {
            void* r2_1 = ((arg1 * 0x47c) + 0x20008550);
            bool cond:3_1;
            do
            {
                if ((r1_1 << 0x1f) != 0)
                {
                    *(r2_1 + 1) = 0xff;
                    *r2_1 = 0;
                }
                cond:3_1 = 0 != (r1_1 >> 1);
                r2_1 = (r2_1 + 2);
                r1_1 = (r1_1 >> 1);
            } while (cond:3_1);
        }
        int32_t r9_1 = *((arg1 * 0x47c) + 0x2000857c);
        *((arg1 * 0x47c) + 0x2000857c) = (r9_1 | arg2);
        int32_t r0_6 = sub_1e17e(arg1, arg2, 0xd, 0, *((arg1 * 0x47c) + 0x200085a4), 0, 0, 0, nullptr, 0, 1);
        int32_t r0_8;
        if (r0_6 == 0)
        {
            r4 = 0;
            r0_8 = sub_1e670(arg1, nullptr, arg2, 3, 0, 0x1e);
            if (r0_8 != 0)
            {
                if (arg2 != 1)
                {
                    r4 = 1;
                }
                sub_1eee2((0x20008148 + (arg1 * 0x47c)), r4);
            }
        }
        if ((r0_6 != 0 || (r0_6 == 0 && r0_8 != 0)))
        {
            r4 = 0xffffffff;
        }
        *((arg1 * 0x47c) + 0x2000857c) = r9_1;
    }
    else
    {
        int32_t r1 = 0;
        if (arg2 != 1)
        {
            r1 = 1;
        }
        sub_1eee2((0x20008148 + (arg1 * 0x47c)), r1);
    }
    return r4;
}

int32_t sub_1eee2(void* arg1, int32_t arg2)
{
    int32_t r0 = 0x1f;
    void* r1 = (arg1 + 0x408);
    if (arg2 != 0)
    {
        r0 = 6;
    }
    bool cond:2_1;
    do
    {
        if ((r0 << 0x1f) != 0)
        {
            *(r1 + 1) = 0xff;
            *r1 = 0;
        }
        cond:2_1 = 0 != (r0 >> 1);
        r1 = (r1 + 2);
        r0 = (r0 >> 1);
    } while (cond:2_1);
    *0x20007d40 = 0;
    sub_1d4bc(0x20007940, 0xaaaaaaaa, 0x20);
    sub_1d4bc(0x20007940, 0xaaaaaaaa, 0x20);
    int32_t r1_1 = 0xc9ce7;
    if (arg2 != 0)
    {
        r1_1 = 0x31f07;
    }
    sub_1d4bc(0x20007940, r1_1, 0x14);
    sub_1d4bc(0x20007940, 0, 1);
    *(*(arg1 + 0x444) + 4)(0x20007940, *(arg1 + 0x448));
    int32_t r0_2 = *0x20006064;
    *(arg1 + 0x440) = 0;
    *(arg1 + 0x438) = r0_2;
    return r0_2;
}

int32_t sub_1ef8c(int32_t arg1)
{
    int32_t r0_1;
    if (*((arg1 * 0x47c) + 0x20008589) != 0)
    {
        r0_1 = 3;
    }
    else
    {
        r0_1 = *(*((arg1 * 0x47c) + 0x2000858c) + 0xc)(*((arg1 * 0x47c) + 0x2000854d), *((arg1 * 0x47c) + 0x20008590));
        if (r0_1 != *((arg1 * 0x47c) + 0x20008594))
        {
            int32_t r1_3 = *0x20006064;
            *((arg1 * 0x47c) + 0x20008588) = 0;
            *((arg1 * 0x47c) + 0x20008580) = r1_3;
            if (r0_1 == 0)
            {
                int32_t r5_1 = 0x1f;
                int32_t i = 0;
                do
                {
                    bool cond:1_1 = (r5_1 << 0x1f) != 0;
                    r5_1 = (r5_1 >> 1);
                    if (cond:1_1)
                    {
                        void* r6_2 = ((0x20008148 + (arg1 * 0x47c)) + i);
                        *(r6_2 + 0x409) = 0xff;
                        *(r6_2 + 0x408) = 0;
                    }
                    i = (i + 2);
                } while (i != 0xa);
            }
        }
        *((arg1 * 0x47c) + 0x20008594) = r0_1;
    }
    return r0_1;
}

void* sub_1f014(int32_t arg1, char arg2)
{
    *((arg1 * 0x47c) + 0x20008589) = arg2;
    return (0x20008148 + (arg1 * 0x47c));
}

uint32_t sub_1f02a(int32_t arg1)
{
    return *((arg1 * 0x47c) + 0x20008589);
}

void sub_1f040()
{
    *0x20008144 = 0;
    *0x20007d40 = 0;
    int32_t i = 0xfffff708;
    do
    {
        void* r3_1 = (0x20008148 + i);
        i = (i + 0x47c);
        *(r3_1 + 0xcf8) = 0;
    } while (i != 0);
}

int32_t sub_1f07c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r12 = (arg2 & 0x7fffffff);
    int32_t r5 = 0;
    int32_t r8 = (arg4 & 0x7fffffff);
    int32_t r9 = arg3;
    int32_t r11 = arg4;
    int32_t r10 = arg3;
    int32_t r4 = (r12 - 0);
    int32_t r6 = 0;
    if (r4 > 0x7fefffff)
    {
        r6 = 1;
    }
    int32_t r7_1 = 0;
    if (arg1 == 0)
    {
        r7_1 = 1;
    }
    if (r4 != 0x7fefffff)
    {
        r7_1 = r6;
    }
    if (r7_1 == 0)
    {
        int32_t r7_2 = 0;
        int32_t r6_1 = (r8 - 0);
        if (r6_1 < 0x7fefffff)
        {
            r7_2 = 1;
        }
        int32_t r4_2 = 0;
        if (r9 != 0)
        {
            r4_2 = 1;
        }
        if (r6_1 != 0x7fefffff)
        {
            r4_2 = r7_2;
        }
        if (r4_2 != 0)
        {
        label_1f17e:
            int32_t r3_2 = 0;
            int32_t r2_3 = 0;
            int32_t r9_1 = arg2;
            if (r9 > arg1)
            {
                r3_2 = 1;
            }
            if (r8 > r12)
            {
                r2_3 = 1;
            }
            if (r8 == r12)
            {
                r2_3 = r3_2;
            }
            int32_t r3_3 = arg1;
            if (r2_3 != 0)
            {
                r3_3 = r10;
            }
            int32_t var_30 = r3_3;
            if (r2_3 != 0)
            {
                r9_1 = r11;
            }
            if (r2_3 != 0)
            {
                r11 = arg2;
            }
            if (r2_3 != 0)
            {
                r10 = arg1;
            }
            int32_t var_38 = r10;
            int32_t r5_2 = ((r11 >> 0x14) & 0x7ff);
            int32_t r4_5 = ((r9_1 >> 0x14) & 0x7ff);
            if (r4_5 == 0)
            {
                r4_5 = sub_1f3d0(&var_30);
            }
            if (r5_2 == 0)
            {
                int32_t r0_4 = sub_1f3d0(&var_38);
                r10 = var_38;
                r5_2 = r0_4;
            }
            int32_t r1_1 = var_30;
            int32_t r3_6 = (r10 << 3);
            int32_t lr_1 = (r1_1 << 3);
            var_30 = lr_1;
            int32_t r12_1 = ((((r9_1 & 0xfffff) << 3) | (r1_1 >> 0x1d)) | 0x800000);
            int32_t var_2c_2 = r12_1;
            uint32_t r1_2 = ((((r11 & 0xfffff) << 3) | (r10 >> 0x1d)) | 0x800000);
            uint32_t var_34_2 = r1_2;
            var_38 = r3_6;
            uint32_t r7_6;
            if (r4_5 == r5_2)
            {
                r7_6 = r1_2;
            }
            else
            {
                int32_t r5_3 = (r4_5 - r5_2);
                if (r5_3 > 0x3f)
                {
                    r7_6 = 0;
                    r3_6 = 1;
                    int32_t var_34_4 = 0;
                }
                else
                {
                    r7_6 = (r1_2 >> r5_3);
                    uint32_t var_34_3 = r7_6;
                    int32_t r6_7 = ((r3_6 >> r5_3) | (r1_2 << (0x20 - r5_3)));
                    if ((r5_3 - 0x20) >= 0)
                    {
                        r6_7 = (r1_2 >> (r5_3 - 0x20));
                    }
                    int32_t r1_5 = ((r3_6 >> (0x20 - (0x40 - r5_3))) | (r1_2 << (0x40 - r5_3)));
                    if ((0x20 - r5_3) >= 0)
                    {
                        r1_5 = (r3_6 << (0x20 - r5_3));
                    }
                    int32_t r0_13 = ((r3_6 << (0x40 - r5_3)) | r1_5);
                    if (r0_13 != 0)
                    {
                        r0_13 = 1;
                    }
                    r3_6 = (r0_13 | r6_7);
                }
                var_38 = r3_6;
            }
            int32_t r1_7;
            uint32_t r5_5;
            if ((r9_1 ^ r11) <= 0xffffffff)
            {
                uint32_t r6_8 = (lr_1 - r3_6);
                arg3 = 0;
                r5_5 = (r12_1 - r7_6);
                var_30 = r6_8;
                uint32_t var_2c_5 = r5_5;
                if (((lr_1 ^ r3_6) | (r12_1 ^ r7_6)) != 0)
                {
                    if (0 != (r5_5 >> 0x17))
                    {
                        r1_7 = r6_8;
                    }
                    else
                    {
                        int32_t r0_19 = sub_1f40c(r6_8, r5_5);
                        r1_7 = (r6_8 << (r0_19 - 8));
                        r4_5 = (r4_5 - (r0_19 - 8));
                        r5_5 = ((r6_8 >> (0x28 - r0_19)) | (r5_5 << (r0_19 - 8)));
                        var_30 = r1_7;
                        if ((r0_19 - 0x28) >= 0)
                        {
                            r5_5 = (r6_8 << (r0_19 - 0x28));
                        }
                        uint32_t var_2c_6 = r5_5;
                    }
                }
            }
            else
            {
                r1_7 = (lr_1 + r3_6);
                r5_5 = (r12_1 + r7_6);
                var_30 = r1_7;
                uint32_t var_2c_3 = r5_5;
                if ((r5_5 & 0x1000000) != 0)
                {
                    r5_5 = (r5_5 >> 1);
                    r4_5 = (r4_5 + 1);
                    /* unimplemented  {rrx r1, r1} */;
                    uint32_t var_2c_4 = r5_5;
                    r1_7 = (r1_7 | ((lr_1 + r3_6) & 1));
                    var_30 = r1_7;
                }
            }
            if ((((r9_1 ^ r11) <= 0xffffffff && ((lr_1 ^ r3_6) | (r12_1 ^ r7_6)) != 0) || (r9_1 ^ r11) > 0xffffffff))
            {
                if (r4_5 >= 0x7ff)
                {
                    arg3 = 0;
                }
                else
                {
                    uint32_t r0_22;
                    if (r4_5 > 0)
                    {
                        r0_22 = r5_5;
                    }
                    else
                    {
                        int32_t r3_8 = (0x20 - (1 - r4_5));
                        r0_22 = (r5_5 >> (1 - r4_5));
                        int32_t r7_10 = (0x40 - (1 - r4_5));
                        uint32_t var_2c_7 = r0_22;
                        uint32_t r2_8 = ((r1_7 >> (1 - r4_5)) | (r5_5 << r3_8));
                        int32_t r6_10 = (0xffffffe1 - r4_5);
                        if (r6_10 >= 0)
                        {
                            r2_8 = (r5_5 >> r6_10);
                        }
                        int32_t r6_12 = ((r5_5 << r7_10) | (r1_7 >> (0x20 - r7_10)));
                        if (r3_8 >= 0)
                        {
                            r6_12 = (r1_7 << r3_8);
                        }
                        int32_t r1_11 = ((r1_7 << r7_10) | r6_12);
                        if (r1_11 != 0)
                        {
                            r1_11 = 1;
                        }
                        r1_7 = (r1_11 | r2_8);
                        var_30 = r1_7;
                    }
                    int32_t r1_12 = (r1_7 & 7);
                    int32_t r0_24 = (((r1_7 >> 3) | (r0_22 << 0x1d)) | 0);
                    arg3 = (r0_24 + 1);
                    if (r1_12 <= 4)
                    {
                        arg3 = r0_24;
                    }
                    if (r1_12 == 4)
                    {
                        arg3 = (arg3 + (arg3 & 1));
                    }
                }
            }
            goto label_1f3ca;
        }
    }
    int32_t r6_2 = 0;
    if (r12 < 0x7ff00000)
    {
        r6_2 = 1;
    }
    if (arg1 == 0)
    {
        r5 = 1;
    }
    if (r12 != 0x7ff00000)
    {
        r5 = r6_2;
    }
    if (r5 != 0)
    {
        int32_t r5_1 = 0;
        int32_t r6_3 = 0;
        if (r8 < 0x7ff00000)
        {
            r5_1 = 1;
        }
        if (r9 == 0)
        {
            r6_3 = 1;
        }
        if (r8 != 0x7ff00000)
        {
            r6_3 = r5_1;
        }
        if (r6_3 == 0)
        {
            arg3 = r10;
            goto label_1f3ca;
        }
        if (((r12 ^ 0x7ff00000) | arg1) == 0)
        {
            int32_t r2_1 = ((r10 ^ arg1) | ((r11 ^ arg2) ^ 0x80000000));
            if (r2_1 != 0)
            {
                r2_1 = arg1;
            }
            return r2_1;
        }
        if (((r8 ^ 0x7ff00000) | r9) == 0)
        {
            goto label_1f3ca;
        }
        if ((arg1 | r12) != 0)
        {
            arg3 = arg1;
            if ((r9 | r8) != 0)
            {
                goto label_1f17e;
            }
            goto label_1f3ca;
        }
        if ((r9 | r8) == 0)
        {
            arg3 = (r10 & arg1);
        }
        goto label_1f3ca;
    }
    arg3 = arg1;
label_1f3ca:
    return arg3;
}

int32_t sub_1f3d0(int32_t* arg1)
{
    uint32_t r6 = *arg1;
    uint32_t r7 = arg1[1];
    int32_t r0_1 = sub_1f40c(r6, r7);
    uint32_t r3_2 = ((r6 >> (0x2b - r0_1)) | (r7 << (r0_1 - 0xb)));
    if ((r0_1 - 0x2b) >= 0)
    {
        r3_2 = (r6 << (r0_1 - 0x2b));
    }
    *arg1 = (r6 << (r0_1 - 0xb));
    arg1[1] = r3_2;
    return (0xc - r0_1);
}

int32_t sub_1f40c(uint32_t arg1, uint32_t arg2) __pure
{
    int32_t r0;
    if (arg2 != 0)
    {
        int32_t temp0 = 0;
        uint32_t i = arg2;
        while (i != 0)
        {
            i = (i >> 1);
            temp0 = (temp0 + 1);
        }
        r0 = (0x20 - temp0);
    }
    else
    {
        int32_t temp0_1 = 0;
        uint32_t i_1 = arg1;
        while (i_1 != 0)
        {
            i_1 = (i_1 >> 1);
            temp0_1 = (temp0_1 + 1);
        }
        r0 = ((0x20 * 2) - temp0_1);
    }
    return r0;
}

void sub_1f41c(int32_t arg1) __pure
{
    uint32_t i_1 = (arg1 & 0x7fffffff);
    if ((((i_1 - 0x800000) >> 0x18) > 0x7e && (i_1 < 0x7f800000 && i_1 != 0)))
    {
        int32_t temp0_1 = 0;
        uint32_t i = i_1;
        while (i != 0)
        {
            i = (i >> 1);
            temp0_1 = (temp0_1 + 1);
        }
    }
}

uint32_t sub_1f490(int32_t arg1, int32_t arg2) __pure
{
    int32_t r12 = ((arg2 >> 0x14) & 0x7ff);
    uint32_t r2 = 0;
    bool cond:0 = (r12 - 0x3ff) < 0;
    if ((r12 - 0x3ff) >= 0)
    {
        r2 = 0;
        cond:0 = arg2 < 0;
    }
    if ((!cond:0))
    {
        r2 = ((((arg1 >> 0x15) | (arg2 << 0xb)) | 0x80000000) >> (0x41e - r12));
    }
    return r2;
}

int32_t sub_1f4c0(uint32_t arg1) __pure
{
    if (arg1 == 0)
    {
        return 0;
    }
    uint32_t i_1 = arg1;
    if (arg1 < 0)
    {
        i_1 = (0 - arg1);
    }
    int32_t temp0 = 0;
    uint32_t i = i_1;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    return (i_1 << (0x34 - (0x1f - (0x20 - temp0))));
}

int32_t sub_1f518(uint32_t arg1) __pure
{
    int32_t r1 = 0;
    if (arg1 != 0)
    {
        uint32_t i_1 = arg1;
        if (arg1 < 0)
        {
            i_1 = (0 - arg1);
        }
        int32_t temp0_1 = 0;
        uint32_t i = i_1;
        while (i != 0)
        {
            i = (i >> 1);
            temp0_1 = (temp0_1 + 1);
        }
        int32_t r2_1;
        if ((0x1f - (0x20 - temp0_1)) <= 0x17)
        {
            r2_1 = ((i_1 << (0x17 - (0x1f - (0x20 - temp0_1)))) ^ 0x800000);
        }
        else
        {
            int32_t r3_1 = 0;
            int32_t lr_1 = (i_1 << (0x37 - (0x1f - (0x20 - temp0_1))));
            uint32_t r0_5 = (i_1 >> ((0x1f - (0x20 - temp0_1)) - 0x17));
            if (lr_1 > 0x80000000)
            {
                r3_1 = 1;
            }
            r2_1 = ((r0_5 ^ 0x800000) + r3_1);
            if (lr_1 == 0x80000000)
            {
                r2_1 = (r2_1 + ((r0_5 + r3_1) & 1));
            }
        }
        r1 = (((r2_1 + ((0x1f - (0x20 - temp0_1)) << 0x17)) + 0x3f800000) | (arg1 & 0x80000000));
    }
    return r1;
}

int32_t sub_1f588(uint32_t arg1) __pure
{
    int32_t r1_2 = 0;
    if (arg1 != 0)
    {
        int32_t temp0_1 = 0;
        uint32_t i = arg1;
        while (i != 0)
        {
            i = (i >> 1);
            temp0_1 = (temp0_1 + 1);
        }
        int32_t r0_1;
        if ((0x1f - (0x20 - temp0_1)) <= 0x17)
        {
            r0_1 = ((arg1 << (0x17 - (0x1f - (0x20 - temp0_1)))) ^ 0x800000);
        }
        else
        {
            int32_t r12_1 = (arg1 << (0x37 - (0x1f - (0x20 - temp0_1))));
            uint32_t r3_2 = (arg1 >> ((0x1f - (0x20 - temp0_1)) - 0x17));
            int32_t r2_3 = 0;
            if (r12_1 > 0x80000000)
            {
                r2_3 = 1;
            }
            r0_1 = ((r3_2 ^ 0x800000) + r2_3);
            if (r12_1 == 0x80000000)
            {
                r0_1 = (r0_1 + ((r2_3 + r3_2) & 1));
            }
        }
        r1_2 = ((r0_1 + ((0x1f - (0x20 - temp0_1)) << 0x17)) + 0x3f800000);
    }
    return r1_2;
}

void sub_1f5e0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r5 = arg3;
    int32_t var_30 = arg1;
    int32_t r7 = 0;
    int32_t var_38 = r5;
    int32_t r9 = ((arg4 >> 0x14) & 0x7ff);
    int32_t r10 = ((arg2 >> 0x14) & 0x7ff);
    int32_t r6_1;
    if ((r10 - 1) <= 0x7fd)
    {
        r6_1 = 0;
        if ((r9 - 1) < 0x7fe)
        {
        label_1f6d0:
            int32_t r0_8 = var_30;
            var_38 = r5;
            int32_t r3 = ((arg2 & 0xfffff) | 0x100000);
            int32_t r1_6 = (r5 << 0xb);
            int32_t r5_1 = ((arg4 & 0xfffff) | 0x100000);
            var_30 = r0_8;
            int32_t r2_6;
            int32_t r4_3;
            r4_3 = HIGHD((r1_6 * r3));
            r2_6 = LOWD((r1_6 * r3));
            int32_t var_34_1 = r5_1;
            int32_t var_2c_1 = r3;
            /* unimplemented  {umlal r4, r5, r7, r3} */;
            int32_t r3_1;
            int32_t r7_4;
            r3_1 = HIGHD((((r5 >> 0x15) | (r5_1 << 0xb)) * r0_8));
            r7_4 = LOWD((((r5 >> 0x15) | (r5_1 << 0xb)) * r0_8));
            int32_t r0_9;
            int32_t r11_2;
            r0_9 = HIGHD((r1_6 * r0_8));
            r11_2 = LOWD((r1_6 * r0_8));
            int32_t r2_7 = (r2_6 & 0xfffff800);
            int32_t r3_2 = (r3_1 + r4_3);
            int32_t r11_3 = (r11_2 & 0xfffff800);
            int32_t r0_10 = (r0_9 + r2_7);
            int32_t r2_8 = (r0_10 + r7_4);
            int32_t r0_11 = ((0 + 0) + 0);
            int32_t r12_1 = (r3_2 + r0_11);
            int32_t r0_12 = ((0 + 0) + 0);
            int32_t r7_5 = (((r10 + r9) + r6_1) - 0x3ff);
            if ((r0_12 & 0x100000) == 0)
            {
                int32_t temp3_1 = r11_3;
                int32_t temp4_1 = r11_3;
                r11_3 = (r11_3 * 2);
                bool c_6 = (r12_1 * 2) < r12_1;
                r12_1 = ((r12_1 * 2) | (r2_8 >> 0x1f));
                r0_12 = (r0_12 + r0_12);
                r2_8 = (r2_8 + r2_8);
            }
            else
            {
                r7_5 = (r7_5 + 1);
            }
            if (r7_5 < 0x7ff)
            {
                if ((r7_5 <= 0 && (1 - r7_5) < 0x40))
                {
                    int32_t r3_6 = ((r2_8 << (0x20 - (1 - r7_5))) | (r11_3 >> (1 - r7_5)));
                    if (((1 - r7_5) - 0x20) >= 0)
                    {
                        r3_6 = (r2_8 >> ((1 - r7_5) - 0x20));
                    }
                    int32_t r3_8 = ((r11_3 >> (0x20 - (0x40 - (1 - r7_5)))) | (r2_8 << (0x40 - (1 - r7_5))));
                    if ((0x20 - (1 - r7_5)) >= 0)
                    {
                        r3_8 = (r11_3 << (0x20 - (1 - r7_5)));
                    }
                    int32_t r1_15 = ((r11_3 << (0x40 - (1 - r7_5))) | r3_8);
                    if (r1_15 != 0)
                    {
                        r1_15 = 1;
                    }
                    r11_3 = (((r12_1 << (0x40 - (1 - r7_5))) | r3_6) | r1_15);
                    int32_t r5_5 = ((r12_1 >> (0x20 - (0x40 - (1 - r7_5)))) | (r0_12 << (0x40 - (1 - r7_5))));
                    if ((0x20 - (1 - r7_5)) >= 0)
                    {
                        r5_5 = (r12_1 << (0x20 - (1 - r7_5)));
                    }
                    r2_8 = (r5_5 | (r2_8 >> (1 - r7_5)));
                }
                if ((r7_5 > 0 || (r7_5 <= 0 && (1 - r7_5) < 0x40)))
                {
                    /* nop */
                    /* nop */
                    if (r11_3 != 0)
                    {
                        /* nop */
                    }
                    if (r2_8 != 0x80000000)
                    {
                        /* nop */
                    }
                }
            }
        }
    }
    if (((r10 - 1) > 0x7fd || ((r10 - 1) <= 0x7fd && (r9 - 1) >= 0x7fe)))
    {
        int32_t r2_5 = (arg2 & 0x7fffffff);
        int32_t r4_1 = 0;
        if (r2_5 < 0x7ff00000)
        {
            r4_1 = 1;
        }
        if (arg1 == 0)
        {
            r7 = 1;
        }
        if (r2_5 != 0x7ff00000)
        {
            r7 = r4_1;
        }
        if (r7 != 0)
        {
            int32_t r7_1 = (arg4 & 0x7fffffff);
            int32_t r4_2 = 0;
            int32_t r1 = 0;
            if (r7_1 < 0x7ff00000)
            {
                r4_2 = 1;
            }
            if (r5 == 0)
            {
                r1 = 1;
            }
            if (r7_1 != 0x7ff00000)
            {
                r1 = r4_2;
            }
            if (((r1 != 0 && (((r2_5 ^ 0x7ff00000) | arg1) != 0 && ((r7_1 ^ 0x7ff00000) | r5) != 0)) && (arg1 | r2_5) != 0))
            {
                r6_1 = 0;
                if (0 == (r2_5 >> 0x14))
                {
                    r6_1 = sub_1f844(&var_30);
                }
                if (0 == (r7_1 >> 0x14))
                {
                    int32_t r0_7 = sub_1f844(&var_38);
                    r5 = var_38;
                    r6_1 = (r6_1 + r0_7);
                }
                goto label_1f6d0;
            }
        }
    }
}

int32_t sub_1f844(int32_t* arg1)
{
    uint32_t i_2 = *arg1;
    uint32_t i_3 = arg1[1];
    int32_t r1_1;
    if (i_3 == 0)
    {
        int32_t temp0 = 0;
        uint32_t i = i_2;
        while (i != 0)
        {
            i = (i >> 1);
            temp0 = (temp0 + 1);
        }
        r1_1 = ((0x20 * 2) - temp0);
    }
    else
    {
        int32_t temp0_1 = 0;
        uint32_t i_1 = i_3;
        while (i_1 != 0)
        {
            i_1 = (i_1 >> 1);
            temp0_1 = (temp0_1 + 1);
        }
        r1_1 = (0x20 - temp0_1);
    }
    int32_t r5_3 = ((i_2 >> (0x2b - r1_1)) | (i_3 << (r1_1 - 0xb)));
    if ((r1_1 - 0x2b) >= 0)
    {
        r5_3 = (i_2 << (r1_1 - 0x2b));
    }
    *arg1 = (i_2 << (r1_1 - 0xb));
    arg1[1] = r5_3;
    return (0xc - r1_1);
}

void sub_1f886(char* arg1, char arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        char* r3_1 = arg1;
        int32_t i;
        do
        {
            *r3_1 = arg2;
            r3_1 = &r3_1[1];
            i = arg3;
            arg3 = (arg3 - 1);
        } while (i != 1);
    }
}

int32_t sub_1f894(char* arg1, char* arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        int32_t i;
        do
        {
            if (*arg1 != *arg2)
            {
                return 1;
            }
            i = arg3;
            arg3 = (arg3 - 1);
            arg2 = &arg2[1];
            arg1 = &arg1[1];
        } while (i != 1);
    }
    return 0;
}

int32_t sub_1f8b4(void* arg1, char* arg2, char* arg3)
{
    char* r4 = arg2;
    char* r7 = arg3;
    uint32_t i = *r4;
    int32_t var_2c = 0;
    if (i != 0)
    {
        int32_t r11_1 = 0;
        do
        {
            uint32_t r1_3 = i;
            void* r0_20;
            char* r1_8;
            int32_t r3_4;
            if (r11_1 == 0)
            {
                if (r1_3 == 0x25)
                {
                    r11_1 = 1;
                }
                else
                {
                    r3_4 = *(arg1 + 0x2c);
                    r0_20 = arg1;
                    r1_8 = r4;
                label_1fa88:
                    r3_4(r0_20, r1_8, 1);
                    var_2c = (var_2c + 1);
                label_1fc92:
                    r11_1 = 0;
                }
            }
            else
            {
                uint32_t r0_25;
                if ((r1_3 - 0x20) > 0x19)
                {
                    void* r0_36;
                    uint32_t r1_9;
                    char* r2_4;
                    int32_t r3_6;
                    int32_t r11_2;
                    if ((r1_3 - 0x63) <= 0x15)
                    {
                        switch (*(r1_3 + &*jump_table_1f9c8[0xf][1]))
                        {
                            case 0x93:
                            {
                                r11_1 = ((r11_1 & 0xfffffff1) | 2);
                                break;
                            }
                            case 0x96:
                            {
                                int32_t r0_34 = 4;
                                if ((r11_1 & 0xe) == 4)
                                {
                                    r0_34 = 8;
                                }
                                r11_1 = (r0_34 | (r11_1 & 0xfffffff1));
                                break;
                            }
                            case 0xbb:
                            {
                                r1_9 = *r7;
                                r7 = &r7[4];
                                r11_2 = ((r11_1 & 0xffff83ff) | sub_4000);
                                r0_36 = arg1;
                                r2_4 = &data_219f0;
                                break;
                            }
                            case 0xc5:
                            {
                                int32_t r0_37 = (r11_1 & 0x40);
                                int32_t r0_38 = ((r11_1 >> 0xf) & 0xff);
                                char* r8_2 = *r7;
                                r7 = &r7[4];
                                if ((r0_37 == 0 && r0_38 != 0))
                                {
                                    int32_t r6_1;
                                    if (*r8_2 == 0)
                                    {
                                        r6_1 = 0;
                                    }
                                    else
                                    {
                                        r6_1 = 0;
                                        uint32_t j;
                                        do
                                        {
                                            j = r8_2[(1 + r6_1)];
                                            r6_1 = (r6_1 + 1);
                                        } while (j != 0);
                                    }
                                    if (r11_1 <= 0xffffffff)
                                    {
                                        int32_t r0 = ((r11_1 >> 0x17) & 0xff);
                                        if (r0 < r6_1)
                                        {
                                            r6_1 = r0;
                                        }
                                    }
                                    if (r6_1 < r0_38)
                                    {
                                        int32_t j_3 = (r0_38 - r6_1);
                                        int32_t j_1;
                                        do
                                        {
                                            *(arg1 + 0x2c)(arg1, &data_219ee, 1);
                                            j_1 = j_3;
                                            j_3 = (j_3 - 1);
                                        } while (j_1 != 1);
                                        var_2c = ((var_2c + r0_38) - r6_1);
                                    }
                                }
                                int32_t r9_2 = 0;
                                if (*r8_2 != 0)
                                {
                                    while ((!(r11_1 <= 0xffffffff && r9_2 >= ((r11_1 >> 0x17) & 0xff))))
                                    {
                                        void* r10_1 = &r8_2[r9_2];
                                        *(arg1 + 0x2c)(arg1, r10_1, 1);
                                        r9_2 = (r9_2 + 1);
                                        if (*(r10_1 + 1) == 0)
                                        {
                                            break;
                                        }
                                    }
                                    var_2c = (var_2c + r9_2);
                                }
                                r11_1 = 0;
                                if ((r0_38 != 0 && (r0_37 != 0 && r9_2 < r0_38)))
                                {
                                    int32_t j_4 = (r0_38 - r9_2);
                                    int32_t j_2;
                                    do
                                    {
                                        *(arg1 + 0x2c)(arg1, &data_219ee, 1);
                                        j_2 = j_4;
                                        j_4 = (j_4 - 1);
                                    } while (j_2 != 1);
                                    r11_1 = 0;
                                    var_2c = ((var_2c + r0_38) - r9_2);
                                }
                                break;
                            }
                        }
                        switch (*(r1_3 + &*jump_table_1f9c8[0xf][1]))
                        {
                            case 0x24:
                            {
                                int32_t r0_23 = ((r11_1 >> 1) & 7);
                                if ((r0_23 == 2 || (r0_23 != 2 && r0_23 != 4)))
                                {
                                    r1_9 = *r7;
                                    r7 = &r7[4];
                                }
                                if (r0_23 == 4)
                                {
                                    uint32_t* r7_1 = (&r7[7] & 0xfffffff8);
                                    r1_9 = *r7_1;
                                    r7 = &r7_1[2];
                                }
                                r3_6 = ((r11_1 & 0xffff83ff) | 0x2800);
                                if (r1_9 < 0)
                                {
                                    r2_4 = &data_219f8;
                                }
                                else
                                {
                                    int32_t r0_26 = ((r11_1 >> 4) & 3);
                                    r2_4 = nullptr;
                                    if (r0_26 == 2)
                                    {
                                        r2_4 = &data_219fa;
                                    }
                                    if (r0_26 == 1)
                                    {
                                        r2_4 = &data_219ee;
                                    }
                                }
                                if (r1_9 < 0)
                                {
                                    r1_9 = (0 - r1_9);
                                }
                                r0_36 = arg1;
                                goto label_1fc88;
                            }
                            case 0x32:
                            {
                                goto label_1fab6;
                            }
                            case 0x8a:
                            {
                                char r0_32 = *r7;
                                r7 = &r7[4];
                                char var_25;
                                r1_8 = &var_25;
                                var_25 = r0_32;
                                r0_20 = arg1;
                                r3_4 = *(arg1 + 0x2c);
                                goto label_1fa88;
                            }
                            case 0xa2:
                            {
                                int32_t* r0_35 = *r7;
                                r7 = &r7[4];
                                int32_t r1_13 = ((r11_1 >> 1) & 7);
                                r11_1 = 0;
                                if (r1_13 <= 4)
                                {
                                    switch (jump_table_1fba4[r1_13])
                                    {
                                        case 3:
                                        {
                                            *r0_35 = var_2c;
                                            r0_35[1] = (var_2c >> 0x1f);
                                            goto label_1fc92;
                                        }
                                        case 8:
                                        {
                                            *r0_35 = var_2c;
                                            goto label_1fc92;
                                        }
                                        case 0xb:
                                        {
                                            *r0_35 = var_2c;
                                            goto label_1fc92;
                                        }
                                    }
                                }
                                break;
                            }
                        }
                    }
                    else if (r1_3 != 0x58)
                    {
                        goto label_1fab6;
                    }
                    if ((((r1_3 - 0x63) <= 0x15 && *(r1_3 + &*jump_table_1f9c8[0xf][1]) == 0xb) || (r1_3 - 0x63) > 0x15))
                    {
                        r11_2 = ((r11_1 & 0xffff83ff) | sub_4000);
                        int32_t r0_19;
                        if (r1_3 == 0x75)
                        {
                            r0_19 = 0x2800;
                        }
                        if (r1_3 == 0x6f)
                        {
                            r0_19 = 0x2000;
                        }
                        int32_t r2_3;
                        if ((r1_3 == 0x75 || r1_3 == 0x6f))
                        {
                            r2_3 = 0xffff83ff;
                        }
                        if (r1_3 == 0x58)
                        {
                            r0_19 = 0x200;
                            r2_3 = 0xfffffdff;
                        }
                        if (((r1_3 == 0x75 || r1_3 == 0x6f) || r1_3 == 0x58))
                        {
                            r11_2 = ((r2_3 & r11_2) | r0_19);
                        }
                        int32_t r0_41 = ((r11_2 >> 1) & 7);
                        uint32_t r3_7;
                        if ((r0_41 == 2 || (r0_41 != 2 && r0_41 != 4)))
                        {
                            r3_7 = *r7;
                            r7 = &r7[4];
                        }
                        if (r0_41 == 4)
                        {
                            uint32_t* r7_2 = (&r7[7] & 0xfffffff8);
                            r3_7 = *r7_2;
                            r7 = &r7_2[2];
                        }
                        r2_4 = nullptr;
                        if (((r11_2 << 0x18) < 0 && r3_7 != 0))
                        {
                            if (r1_3 == 0x58)
                            {
                                r2_4 = &data_219f3;
                            }
                            else if (r1_3 == 0x6f)
                            {
                                r2_4 = &data_219f6;
                            }
                            else if (r1_3 != 0x78)
                            {
                                r2_4 = nullptr;
                            }
                            else
                            {
                                r2_4 = &data_219f0;
                            }
                        }
                        r0_36 = arg1;
                        r1_9 = r3_7;
                    }
                    if (((((r1_3 - 0x63) <= 0x15 && *(r1_3 + &*jump_table_1f9c8[0xf][1]) == 0xbb) || ((r1_3 - 0x63) <= 0x15 && *(r1_3 + &*jump_table_1f9c8[0xf][1]) == 0xb)) || (r1_3 - 0x63) > 0x15))
                    {
                        r3_6 = r11_2;
                    label_1fc88:
                        r0_25 = sub_1fca8(r0_36, r1_9, r2_4, r3_6);
                        goto label_1fc90;
                    }
                }
                else
                {
                    int32_t r0_17;
                    uint32_t r1_7;
                    switch (jump_table_1f9c8[(r1_3 - 0x20)])
                    {
                        case 0x1a:
                        {
                            int32_t r1_4 = 0;
                            while ((i - 0x30) <= 9)
                            {
                                r1_4 = ((i - 0x30) + (r1_4 * 0xa));
                                r4 = &r4[1];
                                i = *r4;
                                if (i == 0)
                                {
                                    break;
                                }
                            }
                            r4 = (r4 - 1);
                            r0_17 = (((0x80ff8000 & (r11_1 >> 0x1f)) - 0x7f8001) & r11_1);
                            r1_7 = (r1_4 << ((8 & (r11_1 >> 0x1f)) + 0xf));
                            break;
                        }
                        case 0x73:
                        {
                        label_1fab6:
                            r0_25 = sub_1fe08("Unsupported: '%c'", r1_3);
                        label_1fc90:
                            var_2c = (var_2c + r0_25);
                            goto label_1fc92;
                        }
                        case 0x97:
                        {
                            if ((r11_1 & 0x30) == 0)
                            {
                                r11_1 = ((r11_1 & 0xffffffcf) | 0x10);
                            }
                            break;
                        }
                        case 0x9d:
                        {
                            r11_1 = (r11_1 | 0x80);
                            break;
                        }
                        case 0xa0:
                        {
                            r3_4 = *(arg1 + 0x2c);
                            r0_20 = arg1;
                            r1_8 = &data_219ec;
                            goto label_1fa88;
                        }
                        case 0xa7:
                        {
                            uint32_t r2_5 = *r7;
                            r7 = &r7[4];
                            r0_17 = (((0x80ff8000 & (r11_1 >> 0x1f)) - 0x7f8001) & r11_1);
                            r1_7 = (r2_5 << ((8 & (r11_1 >> 0x1f)) + 0xf));
                            break;
                        }
                        case 0xb5:
                        {
                            if ((r11_1 << 0x1a) >= 0)
                            {
                                r11_1 = ((r11_1 & 0xffffffcf) | 0x20);
                            }
                            break;
                        }
                        case 0xbc:
                        {
                            r11_1 = ((r11_1 & 0xfffffebf) | 0x40);
                            break;
                        }
                        case 0xc1:
                        {
                            r11_1 = (r11_1 | 0x80000000);
                            break;
                        }
                        case 0xc4:
                        {
                            r11_1 = (r11_1 | (0x100 & (!(r11_1 << 2))));
                            break;
                        }
                    }
                    if ((*(&jump_table_1f9c8 + ((r1_3 - 0x20) << 1)) == 0x1a || *(&jump_table_1f9c8 + ((r1_3 - 0x20) << 1)) == 0xa7))
                    {
                        r11_1 = (r1_7 | r0_17);
                    }
                }
            }
            r4 = &r4[1];
            i = *r4;
        } while (i != 0);
    }
    return var_2c;
}

uint32_t sub_1fca8(void* arg1, uint32_t arg2, char* arg3, int32_t arg4)
{
    char* r5 = arg3;
    char const* const r2 = "0123456789ABCDEF";
    if ((arg4 & 0x200) == 0)
    {
        r2 = "0123456789abcdef";
    }
    int32_t r3 = ((arg4 >> 0xa) & 0x1f);
    void var_25;
    void* r7 = &var_25;
    int32_t r0 = 0;
    if (arg2 != 0)
    {
        bool cond:1_1;
        do
        {
            r0 = (r0 + 1);
            cond:1_1 = r3 <= arg2;
            int32_t r4_1 = (arg2 % r3);
            arg2 = (arg2 / r3);
            *r7 = r2[r4_1];
            r7 = (r7 - 1);
        } while (cond:1_1);
    }
    if (arg4 <= 0xffffffff)
    {
        int32_t i = ((arg4 >> 0x17) & 0xff);
        if (i > r0)
        {
            do
            {
                r0 = (r0 + 1);
                *r7 = 0x30;
                r7 = (r7 - 1);
            } while (i > r0);
        }
    }
    if ((r0 << 0x18) == 0)
    {
        *r7 = 0x30;
        r7 = (r7 - 1);
        r0 = 1;
    }
    uint32_t r8 = r0;
    uint32_t r0_1;
    uint32_t r6_2;
    if (r5 == 0)
    {
        r5 = nullptr;
    }
    else
    {
        r0_1 = *r5;
        if (((arg4 << 0x17) < 0 && r0_1 != 0))
        {
            r6_2 = r8;
            do
            {
                *(arg1 + 0x2c)(arg1, r5, 1);
                r5 = &r5[1];
                r6_2 = (r6_2 + 1);
            } while (*r5 != 0);
        }
    }
    if (((r5 == 0 || ((r5 != 0 && (arg4 << 0x17) < 0) && r0_1 == 0)) || ((r5 != 0 && (arg4 << 0x17) >= 0) && r0_1 == 0)))
    {
        r6_2 = r8;
    }
    if (((r5 != 0 && (arg4 << 0x17) >= 0) && r0_1 != 0))
    {
        int32_t r0_2 = 0;
        void* r1_2;
        do
        {
            r1_2 = &r5[r0_2];
            r0_2 = (r0_2 + 1);
        } while (*(r1_2 + 1) != 0);
        r6_2 = (r8 + r0_2);
    }
    int32_t r4_3 = (arg4 & 0x40);
    uint32_t r10 = ((arg4 >> 0xf) & 0xff);
    char var_65;
    if ((r4_3 == 0 && r10 > r6_2))
    {
        uint32_t i_5 = (r10 - r6_2);
        var_65 = ((0x10 & (arg4 >> 4)) | 0x20);
        if (i_5 >= 1)
        {
            uint32_t i_1;
            do
            {
                *(arg1 + 0x2c)(arg1, &var_65, 1);
                i_1 = i_5;
                i_5 = (i_5 - 1);
            } while (i_1 != 1);
        }
        r6_2 = r10;
    }
    if (((arg4 << 0x17) >= 0 && r5 != 0))
    {
        for (uint32_t i_2 = *r5; i_2 != 0; i_2 = *r5)
        {
            *(arg1 + 0x2c)(arg1, r5, 1);
            r5 = &r5[1];
        }
    }
    *(arg1 + 0x2c)(arg1, (r7 + 1), r8);
    if ((r4_3 == 0 || (r4_3 != 0 && r10 <= r6_2)))
    {
        r10 = r6_2;
    }
    if ((r4_3 != 0 && r10 > r6_2))
    {
        uint32_t i_4 = (r10 - r6_2);
        var_65 = 0x20;
        if (i_4 >= 1)
        {
            uint32_t i_3;
            do
            {
                *(arg1 + 0x2c)(arg1, &var_65, 1);
                i_3 = i_4;
                i_4 = (i_4 - 1);
            } while (i_3 != 1);
        }
    }
    return r10;
}

int32_t sub_1fe08(char* arg1, int32_t arg2)
{
    int32_t var_c = arg2;
    int32_t r2;
    int32_t var_8 = r2;
    int32_t r3;
    int32_t var_4 = r3;
    int32_t* var_18 = &var_c;
    return sub_1f8b4(*0x20000c6c, arg1, &var_c);
}

int32_t sub_1fe34(char* arg1, int32_t arg2, char* arg3, char* arg4)
{
    int32_t r6 = (arg2 & 0x7fffffff);
    void* const var_3c = sub_1fe76;
    int32_t r0 = r6;
    char* var_58 = arg1;
    if (r6 != 0)
    {
        r0 = (r6 - 1);
    }
    void var_68;
    int32_t r0_2 = sub_1f8b4(&var_68, arg3, arg4);
    if ((arg1 != 0 && r6 != 0))
    {
        int32_t r1_2 = r0_2;
        if (r0 == 0)
        {
            r1_2 = (r6 - 1);
        }
        arg1[r1_2] = 0;
    }
    return r0_2;
}

int32_t sub_1fe76(void* arg1, int32_t* arg2, int32_t arg3)
{
    int32_t r4 = arg3;
    int32_t* r0 = *(arg1 + 0x10);
    if (r0 == 0)
    {
        r4 = 0xffffffff;
    }
    else
    {
        int32_t r2 = *(arg1 + 0x14);
        if (r2 < r4)
        {
            r4 = r2;
        }
        sub_1ff48(r0, arg2, r4);
        int32_t r1 = *(arg1 + 0x14);
        *(arg1 + 0x10) = (*(arg1 + 0x10) + r4);
        *(arg1 + 0x14) = (r1 - r4);
    }
    return r4;
}

int32_t sub_1fea4(char* arg1, int32_t arg2, char* arg3, int32_t arg4)
{
    int32_t var_4 = arg4;
    int32_t* var_10 = &var_4;
    return sub_1fe34(arg1, arg2, arg3, &var_4);
}

int32_t sub_1febe() __pure
{
    return;
}

int32_t sub_1fec2(int32_t arg1, char* arg2, int32_t arg3)
{
    char* r5 = arg2;
    if (arg3 != 0)
    {
        int32_t i_1 = arg3;
        int32_t i;
        do
        {
            *r5;
            r5 = &r5[1];
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
    return arg3;
}

int32_t sub_1fedc(char* arg1)
{
    if (*arg1 == 0)
    {
        return 0;
    }
    int32_t r0 = 0;
    uint32_t i;
    do
    {
        i = arg1[(1 + r0)];
        r0 = (r0 + 1);
    } while (i != 0);
    return r0;
}

int32_t sub_1fef2(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) __noreturn
{
    if (arg1 != 0)
    {
        int32_t var_10 = arg3;
        sub_1ff24("Assertion failed: (%s), function…", arg4);
        /* no return */
    }
    sub_1ff24("Assertion failed: (%s), file %s,…", arg4);
    /* no return */
}

int32_t sub_1ff24(char* arg1, int32_t arg2) __noreturn
{
    int32_t var_c = arg2;
    int32_t r2;
    int32_t var_8 = r2;
    int32_t r3;
    int32_t var_4 = r3;
    int32_t* var_18 = &var_c;
    sub_1f8b4(*0x20000c70, arg1, &var_c);
    while (true)
    {
        /* nop */
    }
}

void sub_1ff48(int32_t* arg1, int32_t* arg2, int32_t arg3)
{
    bool v_1 = /* bool v_1 = unimplemented  {orrs r3, r0, r1} */;
    if (((arg1 | arg2) << 0x1e) != 0)
    {
        __msr((arg3 << 0x1c));
        if ((!(TEST_BIT(arg3, 4))))
        {
            arg3 = (arg3 - 2);
            *(arg1 + arg3) = *(arg2 + arg3);
        }
        if (v_1)
        {
            arg3 = (arg3 - 1);
            *(arg1 + arg3) = *(arg2 + arg3);
        }
        uint32_t i_3 = (arg3 >> 2);
        if (i_3 == 0)
        {
            return;
        }
        uint32_t i;
        do
        {
            i = i_3;
            i_3 = (i_3 - 1);
            arg1[i_3] = arg2[i_3];
        } while (i > 1);
        return;
    }
    int32_t* var_20 = arg1;
    int32_t i_2 = (arg3 - 0x20);
    if ((arg3 - 0x20) >= 0)
    {
        int32_t i_1;
        do
        {
            int32_t r3_1 = *arg2;
            int32_t r4_1 = arg2[1];
            int32_t r5_1 = arg2[2];
            int32_t r6_1 = arg2[3];
            int32_t r7_1 = arg2[4];
            int32_t r8_1 = arg2[5];
            int32_t r9_1 = arg2[6];
            int32_t lr_1 = arg2[7];
            arg2 = &arg2[8];
            i_1 = i_2;
            i_2 = (i_2 - 0x20);
            *arg1 = r3_1;
            arg1[1] = r4_1;
            arg1[2] = r5_1;
            arg1[3] = r6_1;
            arg1[4] = r7_1;
            arg1[5] = r8_1;
            arg1[6] = r9_1;
            arg1[7] = lr_1;
            arg1 = &arg1[8];
        } while (i_1 >= 0x20);
    }
    if (i_2 != 0xffffffe0)
    {
        bool v = ((i_2 + 0x20) - 0x10);
        if ((i_2 + 0x10) < 0 == v)
        {
            int32_t r3_2 = *arg2;
            int32_t r4_2 = arg2[1];
            int32_t r5_2 = arg2[2];
            int32_t r6_2 = arg2[3];
            arg2 = &arg2[4];
            *arg1 = r3_2;
            arg1[1] = r4_2;
            arg1[2] = r5_2;
            arg1[3] = r6_2;
            arg1 = &arg1[4];
        }
        __msr(((i_2 + 0x10) << 0x1c));
        if (((i_2 + 0x10) << 0x1c) < 0)
        {
            int32_t r3_3 = *arg2;
            int32_t r4_3 = arg2[1];
            arg2 = &arg2[2];
            *arg1 = r3_3;
            arg1[1] = r4_3;
            arg1 = &arg1[2];
        }
        if (((i_2 + 0x10) & 0xf) == 0)
        {
            int32_t r3_4 = *arg2;
            arg2 = &arg2[1];
            *arg1 = r3_4;
            arg1 = &arg1[1];
        }
        if ((!(TEST_BIT((i_2 + 0x10), 4))))
        {
            int16_t r3_5 = *arg2;
            arg2 = (arg2 + 2);
            *arg1 = r3_5;
            arg1 = (arg1 + 2);
        }
        if (v)
        {
            *arg1 = *arg2;
        }
    }
}

int32_t sub_20652(int32_t arg1, void* arg2, int32_t arg3, void* arg4 @ r4, void* arg5 @ r5, void* arg6 @ r6, int32_t arg7 @ r7)
{
    *(arg4 + 9) = arg2;
    *(arg4 + 0x54) = arg7;
    *(arg5 + 0x10) = arg5;
    *(arg5 + 9) = 0x6f;
    *(arg5 + 0x15) = arg7;
    *(arg4 + 4);
    *(arg4 + 0x11) = arg5;
    *(arg4 + 0x34) = arg5;
    *(arg6 + 0x54) = arg4;
    *(arg2 + 0x14);
    *(arg4 + 0x11) = arg2;
    *(arg4 + 4);
    /* tailcall */
    return sub_200(0x64, arg2, arg3);
}

int32_t sub_207e2(int32_t arg1, char arg2, void* arg3, int32_t arg4, void* arg5 @ r4, char* arg6 @ r5, void* arg7 @ r6, int32_t arg8 @ r7)
{
    *(arg3 + 0x11) = arg4;
    *(arg5 + 9) = arg2;
    *(arg7 + 0x15) = arg5;
    *(arg3 + 0x11) = arg4;
    *(arg5 + 9) = arg2;
    *0x482e4367 = arg5;
    void* r4 = *0x905c86b8;
    *0x525300a8 = arg4;
    arg6[0x19] = arg8;
    *(r4 + 9) = arg6;
    char r1 = (arg8 << 1);
    *(arg3 + 0x14) = arg8;
    arg6[0x11] = r1;
    *(r4 + 0x60) = 0x905c86a4;
    arg6[9] = arg8;
    int16_t* r0 = (0x905c86a4 | r4);
    *(r4 + 1) = r1;
    *(r0 + r4) = r0;
    __builtin_strncpy(0x206f7434, " to ", 4);
    arg6[0x15] = r4;
    *(r4 + 0x11) = r1;
    __builtin_strncpy(&data_79, "tion", 4);
    __builtin_strncpy((arg3 + 0x54), "tion", 4);
    *(arg6 + 0x54) = r4;
    *(r4 + 0x11) = 0x74;
    int16_t* r0_1 = (0x40dee840 | r4);
    *(r4 + 1) = r1;
    *(r0_1 + r4) = r0_1;
    *(arg6 + r0_1) = 0x76;
    *0x64658a = arg3;
    arg6[0xd] = 0x76;
    arg6[0x11] = r1;
    *(arg6 + 0x74);
    int16_t r6 = *(arg6 + 0x34);
    *(0x6e + r4) = 0x6e;
    *(arg6 + 0x6e) = r6;
    *(r4 + 0x14) = arg6;
    *(0x6e + *(r4 + 5)) = 0x6e;
    /* jump -> arg6 */
}

int32_t sub_20994(int16_t* arg1, char arg2, void* arg3, int32_t arg4, int16_t* arg5 @ r4, int16_t* arg6 @ r5, int16_t arg7 @ r6)
{
    *(arg1 + arg6) = arg4;
    *(arg6 + arg5) = arg7;
    int16_t* r5 = *(arg5 + 0x64);
    *(arg3 + 0x1d) = arg4;
    *(arg5 + 1) = arg2;
    *(0xffffff95 + r5) = arg4;
    int32_t r1 = *(arg5 + 0x14);
    *(arg3 + 0x15) = arg5;
    int16_t* r2 = *((arg3 * (r5 << 1)) + 0x64);
    int32_t r7 = *(r5 + 0x64);
    int32_t r6_2 = (r5 << 1);
    *(r2 + r1) = 0x6e;
    *(r2 + 0x54) = arg4;
    *(r5 + 0x44) = r6_2;
    *(arg5 * 2) = 0x6e;
    *(r6_2 + 0x14) = r7;
    int16_t r0 = (r6_2 << 1);
    *(r2 + r1) = r0;
    int32_t r3 = *(r2 + 0x74);
    *(r6_2 + 9) = r5;
    *(arg5 + 0x54) = r3;
    arg5[8] = r0;
    void* r6_3 = *(r5 + 0x34);
    data_de = 0x6f;
    *(r2 + r5) = r2;
    *(r5 + arg5) = r6_3;
    *(r2 + 9) = arg5;
    int32_t r1_1 = *(arg5 + 0x64);
    void* r4 = *(r6_3 + 0x14);
    int32_t r7_1 = *(r5 + 0x64);
    *(r4 + 0x10) = 0x6b;
    *(r5 + 0x64) = r7_1;
    int32_t r6_4 = (r4 << 1);
    *(r2 + r1_1) = 0x6f;
    int32_t r3_1 = *(r2 + 0x74);
    *(r6_4 + 9) = r5;
    *(r4 + 0x54) = r3_1;
    *(r4 + 0x6f) = 0x6f;
    *(r6_4 + 0x14) = r2;
    *(r5 + 0xd) = r6_4;
    *(r5 + 0x11) = r1_1;
    void* r4_1 = *(r6_4 + 0x74);
    int32_t* r0_1 = *(r4_1 + 0x70);
    *(r4_1 + 0x64) = r6_4;
    *(r0_1 * 2) = r0_1;
    *(r2 + r5) = r2;
    *(r5 + r4_1) = r6_4;
    int32_t r1_2 = *(r5 + 0x64);
    int16_t* r4_2 = *(r6_4 + 0x74);
    *(r4_2 * 2) = 0x6b;
    *(r5 + 0x15) = r7_1;
    *(r6_4 + 0x34) = r2;
    *(0x6b + r1_2) = r4_2;
    *(r4_2 * 3) = r6_4;
    /* jump -> r4_2 */
}

int32_t sub_21ac2(int32_t arg1, int32_t arg2 @ r9)
{
    int32_t r3 = arg1;
    uint32_t r4 = arg1;
    while (true)
    {
        uint32_t r0_70 = (*(r4 + 0xa) << 2);
        void* sp;
        *(sp + 0x180) = (*(r4 + r3) - r4);
        int32_t r2_5 = (r4 << 1);
        r4 = r0_70;
        int32_t r0_72 = (r2_5 << 1);
        int32_t r5_1 = r0_72;
        int32_t r0_73 = r0_72;
        *(r4 + 6) = r0_73;
        while (true)
        {
            r3 = r0_73;
            int32_t* temp0_1 = r0_73;
            *temp0_1 = r0_73;
            temp0_1[1] = r0_73;
            sp = (sp + 0x1c0);
            int32_t* r5_4 = r5_1;
            *(r5_1 + r3) = r5_4;
            *(r5_4 + r3) = r5_4;
            r4 = (r5_1 + 0x860000);
            if ((!(TEST_BIT(r3, 0x1e))))
            {
                break;
            }
            int32_t r6_3 = ((r5_1 - 3) << 4);
            int32_t r0_83 = (r5_1 - 3);
            *(r4 + 0x34) = r0_83;
            while (true)
            {
                uint32_t* temp0_2 = r3;
                *temp0_2 = r4;
                temp0_2[1] = r6_3;
                int32_t r1_4 = (r0_83 << 0x19);
                r6_3 = (r1_4 << 0x1a);
                int32_t r7_3 = (r6_3 << 0x1b);
                r3 = ((r1_4 << 0x1b) << 0x1d);
                int32_t r0_88 = *r7_3;
                r4 = *(r7_3 + 0xc);
                r5_1 = *(r7_3 + 0x10);
                if (r0_88 == 0)
                {
                    uint32_t r7_4 = (r4 >> 8);
                    int32_t r0_97 = (*(r7_3 + 4) << 0x10);
                    int32_t r0_124 = (((((r0_97 << 0x10) >> 0x20) >> 0x10) >> 0x20) << 4);
                    int32_t r0_125 = (r0_124 << 4);
                    int32_t r2_10 = (r0_125 << 0xc);
                    *(r5_1 + 0x14) = r0_97;
                    *(r0_125 + 0x1c) = r7_4;
                    *(r2_10 + 0x20) = r0_125;
                    *(r5_1 + 0x14) = r0_125;
                    *(r0_125 + 0x1c) = r7_4;
                    *((r0_124 << 0x10) + 0x24) = r5_1;
                    *(r0_97 + 0x28) = r0_125;
                    *(r2_10 + 0x2c) = r0_125;
                    *(r2_10 + 0x2c) = r5_1;
                    *(r6_3 + 0x2c) = r0_125;
                    *(r2_10 + 0x30) = r7_4;
                    *(r7_4 + 0x30) = r5_1;
                    uint32_t r0_270 = ((((((((((((((((r0_97 >> 0x20) >> 0x20) >> 0x10) >> 0x20) << 1) >> 0x20) << 2) >> 0x20) << 4) >> 0x20) << 8) >> 0x20) << 0x10) >> 0x20) >> 0x10) << 1);
                    uint32_t r0_328 = (((((((((r0_270 >> 0x10) << 2) >> 0x10) << 4) >> 0x10) << 8) >> 0x10) << 0x10) << 0x10);
                    *r0_328 = r0_328;
                    uint32_t r0_408 = (((((((r0_328 << 0x18) >> 0x20) >> 0x20) << 0x10) << 0x17) >> 0x20) << 8);
                    *nullptr = 0;
                    *nullptr = 0;
                    *(r0_408 + 0xf) = 0;
                    data_11 = r5_1;
                    *(r0_408 + 0x12) = r5_1;
                    *(r0_408 + 0x18) = 0;
                    *(r7_4 + 0x18) = r0_408;
                    *(r0_408 + 0x1a) = 0;
                    data_1b = r5_1;
                    *nullptr = 0;
                    data_18 = r5_1;
                    uint32_t r2_11 = 0;
                    *nullptr = 0;
                    *nullptr = 0;
                    data_1ee5 = 0x1e95;
                    data_1ec5 = 0x1e95;
                    *nullptr = 0;
                    data_1ea5 = 0x95;
                    *data_1ea5 = 0x1e95;
                    data_1ea1 = 0x95;
                    data_1ea1 = 0x95;
                    *0x1000106 = 0xf2;
                    uint32_t r0_418 = (*0x1000142 >> 0x18);
                    *(r0_418 + 0xc) = r0_418;
                    *(r0_418 + 0x10) = r0_418;
                    *(r0_418 + 8) = r0_418;
                    void* r0_419 = *(r0_418 + 0x10);
                    *(r0_419 + 0xc) = r0_419;
                    int32_t i_6 = (r0_419 << 8);
                    while (true)
                    {
                        uint32_t r0_426 = (i_6 >> 4);
                        uint32_t i_15 = (r0_426 << 0x1c);
                        uint32_t i = ((r0_426 << 8) >> 4);
                        bool v_1;
                        do
                        {
                            *(r2_11 + 0x1b) = r2_11;
                            uint32_t i_2 = i;
                            while (true)
                            {
                                uint32_t r7_6 = (i_2 << 3);
                                *i_2 = i_2;
                                *(i_2 + 4) = i_2;
                                *(i_2 + 8) = 0xe8;
                                *(i_2 + 0xc) = i_15;
                                *(i_2 + 0x10) = r7_6;
                                *i_15 = 0xe8;
                                *(i_15 + 4) = i_15;
                                *(i_15 + 8) = r7_6;
                                i = i_2;
                                i_15 = (i + i_2);
                                uint32_t i_8;
                                bool n_3;
                                while (true)
                                {
                                    uint32_t r1_16 = (i << 2);
                                    uint32_t r0_452 = (i_15 << 3);
                                    uint32_t* temp0_6 = r1_16;
                                    *temp0_6 = r0_452;
                                    temp0_6[1] = i_2;
                                    temp0_6[2] = r1_16;
                                    temp0_6[3] = r0_452;
                                    temp0_6[4] = i_15;
                                    temp0_6[5] = r7_6;
                                    v_1 = (i_2 + r0_452);
                                    r2_11 = (i_2 + r0_452);
                                    uint32_t i_3 = (i_15 << 3);
                                    bool c_3 = (TEST_BIT(i_15, 0x1e));
                                    int32_t* i_17 = i_2;
                                    *i_17 = i_3;
                                    i_17[1] = i_2;
                                    i_17[2] = i_2;
                                    i_17[3] = i_3;
                                    i_17[4] = i_15;
                                    i_17[5] = r7_6;
                                    uint32_t i_7 = i_3;
                                    i = i_3;
                                    do
                                    {
                                        if (i >= 0)
                                        {
                                            n_3 = (r2_11 - i_15) < 0;
                                            v_1 = (r2_11 + (-i_15));
                                            *i_7;
                                            *(i_7 + 4);
                                            *(i_7 + 8);
                                            *(i_7 + 0xc);
                                            *(i_7 + 0x10);
                                        label_22782:
                                            if (n_3 != v_1)
                                            {
                                                /* undefined */;
                                            }
                                            /* undefined */;
                                        }
                                        i_6 = i;
                                        if (v_1)
                                        {
                                            break;
                                        }
                                        while (v_1)
                                        {
                                            if (i != 0)
                                            {
                                                break;
                                            }
                                            i_7 = i;
                                            if ((!v_1))
                                            {
                                                break;
                                            }
                                            i_8 = i;
                                            if ((i_8 != 0 && (!c_3)))
                                            {
                                                *(sp + 0x2fc) = i;
                                            }
                                            else
                                            {
                                                if ((!(i == 0 || c_3)))
                                                {
                                                    if (i < 0 == v_1)
                                                    {
                                                        *(i_15 + 0x1a);
                                                        c_3 = i_3 < 7;
                                                        v_1 = (i_3 - 7);
                                                        continue;
                                                    }
                                                    if ((i < 0 != v_1 && c_3))
                                                    {
                                                        *(i_2 - 0x28c) = arg2;
                                                        *(i_2 - 0x288) = i_3;
                                                        **(sp + 0x190);
                                                    }
                                                }
                                                if (((((!(i == 0 || c_3)) && i < 0 != v_1) && c_3) || (i == 0 || c_3)))
                                                {
                                                    /* undefined */;
                                                }
                                                if ((((!(i == 0 || c_3)) && i < 0 != v_1) && (!c_3)))
                                                {
                                                    if (i < 0 == v_1)
                                                    {
                                                        *(i_3 + 0x44) = i_2;
                                                        /* undefined */;
                                                    }
                                                    i_8 = i;
                                                    uint32_t r3_8;
                                                    if (r3_8 != 0xffffffe8)
                                                    {
                                                        break;
                                                    }
                                                }
                                            }
                                            *(i_8 + 5) = *(i_15 + 0x28);
                                            /* undefined */;
                                        }
                                    } while (((v_1 && i == 0) && (!v_1)));
                                    if (v_1)
                                    {
                                        break;
                                    }
                                    if ((!(v_1 && i != 0)))
                                    {
                                        break;
                                    }
                                    if ((!(v_1 && i != 0)))
                                    {
                                        /* nop */
                                    }
                                }
                                if (v_1)
                                {
                                    break;
                                }
                                if ((!v_1))
                                {
                                    break;
                                }
                                void* i_20 = (sp + 0x34c);
                                *(sp - 4) = r7_6;
                                *(sp - 8) = i_15;
                                *(sp - 0xc) = i_2;
                                *(sp - 0x10) = i_8;
                                *(sp - 0x14) = i;
                                void* i_19 = (sp + 0x33c);
                                int32_t lr;
                                *(sp - 0x18) = lr;
                                *(sp - 0x1c) = r7_6;
                                *(sp - 0x20) = i_15;
                                *(sp - 0x24) = i_19;
                                *(sp - 0x28) = i_8;
                                sp = (sp - 0x28);
                                uint32_t i_10 = i;
                                uint32_t i_4 = i;
                                while (true)
                                {
                                    uint32_t i_16 = i_4;
                                    uint32_t i_13 = i_4;
                                    uint32_t i_21 = (i_16 >> 0x20);
                                label_22d02:
                                    uint32_t i_9 = i_13;
                                    uint32_t i_11;
                                    uint32_t i_12;
                                    uint32_t i_14;
                                    if ((!(i_9 == 0 || i_9 < 0 != v_1)))
                                    {
                                        i_14 = i_13;
                                        if ((!(i_14 == 0 || i_14 < 0 != v_1)))
                                        {
                                            trap(0x59);
                                        }
                                    }
                                    else
                                    {
                                        void* i_1;
                                        while (true)
                                        {
                                            i_19 = (sp + 0x374);
                                            *i_21 = (sp + 0x18c);
                                            *(i_21 + 4) = (sp + 0x17c);
                                            *(i_21 + 8) = i_20;
                                            *(i_21 + 0xc) = i_21;
                                            *(i_21 + 0x10) = (sp + 0x74);
                                            i_21 = (i_21 + 0x14);
                                            *(sp + 0x74) = (sp + 0x18c);
                                            *(sp + 0x78) = (sp + 0x17c);
                                            *(sp + 0x7c) = i_9;
                                            *(sp + 0x80) = i_19;
                                            *(sp + 0x84) = i_20;
                                            *(sp + 0x88) = i_21;
                                            *(sp + 0x8c) = (sp + 0x74);
                                            *(sp + 0x90) = i_10;
                                            i_16 = (sp + 0x94);
                                            *(sp + 0x4c) = (sp + 0x18c);
                                            *(sp + 0x50) = (sp + 0x17c);
                                            *(sp + 0x54) = i_9;
                                            *(sp + 0x58) = i_20;
                                            *(sp + 0x5c) = (sp + 0x4c);
                                            *(sp + 0xdc) = (sp + 0x18c);
                                            *(sp + 0xe0) = i_9;
                                            *(sp + 0xe4) = i_21;
                                            *(sp + 0xe8) = (sp + 0xdc);
                                            i_10 = (sp + 0xec);
                                            i_1 = (sp + 0x18c);
                                            sp = (sp + 0x84);
                                            bool c_4;
                                            do
                                            {
                                                c_4 = (TEST_BIT(i_20, 1));
                                                i_9 = i_1;
                                                if ((i_9 == 0 || c_4))
                                                {
                                                    break;
                                                }
                                            } while ((i_1 == 0 || c_4));
                                            if ((!(i_9 == 0 || c_4)))
                                            {
                                                break;
                                            }
                                            int32_t* i_22 = i_19;
                                            *i_22 = i_1;
                                            i_22[1] = i_9;
                                            i_22[2] = i_16;
                                            i_10 = &data_22ee4;
                                            *(i_19 + 0xc) = i_1;
                                            *(i_19 + 0x10) = i_9;
                                            *(i_19 + 0x14) = (i_19 + 0xc);
                                            *(i_19 + 0x18) = i_21;
                                            *(i_19 + 0x1c) = i_16;
                                            *(i_19 + 0x20) = &data_22ee4;
                                            int32_t* i_23 = i_20;
                                            *i_23 = i_1;
                                            i_23[1] = &data_22ed0;
                                            i_23[2] = (i_19 + 0x24);
                                            i_23[3] = i_21;
                                            i_23[4] = &data_22ee4;
                                            *(i_20 + 0x14) = i_1;
                                            *(i_20 + 0x18) = i_9;
                                            *(i_20 + 0x1c) = (i_19 + 0x24);
                                            *(i_20 + 0x20) = (i_20 + 0x14);
                                            *(i_20 + 0x24) = i_21;
                                            *(i_20 + 0x28) = &data_22ee4;
                                            *(i_20 + 0x2c) = i_1;
                                            *(i_20 + 0x30) = i_9;
                                            *(i_20 + 0x34) = (i_19 + 0x24);
                                            *(i_20 + 0x38) = (i_20 + 0x2c);
                                            *(i_20 + 0x3c) = i_16;
                                            *(i_20 + 0x40) = &data_22ee4;
                                            *(i_20 + 0x44) = i_1;
                                            *(i_20 + 0x48) = i_9;
                                            *(i_20 + 0x4c) = (i_19 + 0x24);
                                            *(i_20 + 0x50) = (i_20 + 0x44);
                                            *(i_20 + 0x54) = i_21;
                                            *(i_20 + 0x58) = i_16;
                                            *(i_20 + 0x5c) = &data_22ee4;
                                            i_20 = (i_20 + 0x60);
                                            *i_21 = i_1;
                                            *(i_21 + 4) = i_9;
                                            *(i_21 + 8) = i_16;
                                            *(i_21 + 0xc) = i_1;
                                            *(i_21 + 0x10) = &data_22ed0;
                                            *(i_21 + 0x14) = (i_19 + 0x24);
                                            *(i_21 + 0x18) = i_20;
                                            *(i_21 + 0x1c) = i_16;
                                            *(i_21 + 0x20) = i_1;
                                            *(i_21 + 0x24) = &data_22ed0;
                                            *(i_21 + 0x28) = i_9;
                                            *(i_21 + 0x2c) = (i_19 + 0x24);
                                            *(i_21 + 0x30) = i_20;
                                            *(i_21 + 0x34) = i_16;
                                            i_21 = (i_21 + 0x38);
                                        }
                                        i_8 = i_1;
                                        uint32_t i_5 = i_1;
                                        if (i_5 < 0 == v_1)
                                        {
                                            while (true)
                                            {
                                                if ((i_5 != 0 && i_5 < 0 == v_1))
                                                {
                                                    i_8 = i_5;
                                                    break;
                                                }
                                                i_12 = i_5;
                                                if ((!(i_12 != 0 && i_12 < 0 == v_1)))
                                                {
                                                    i_4 = i_12;
                                                    break;
                                                }
                                            label_22cc2:
                                                i_11 = i_12;
                                                if (i_11 < 0 == v_1)
                                                {
                                                    break;
                                                }
                                                if (i_11 < 0 != v_1)
                                                {
                                                    trap(0xef);
                                                }
                                                i_20 = i_11;
                                                i_13 = i_11;
                                                i_21 = (i_11 >> 0x20);
                                                if ((i_13 != 0 && i_13 < 0 == v_1))
                                                {
                                                    goto label_22d02;
                                                }
                                                if ((i_13 != 0 && i_13 < 0 == v_1))
                                                {
                                                    n_3 = i_13 < 0;
                                                    break;
                                                }
                                                i_21 = i_13;
                                                i_5 = i_13;
                                                i_16 = (i_20 >> 0x20);
                                            }
                                            if ((!(i_5 != 0 && i_5 < 0 == v_1)))
                                            {
                                                if ((!(((!(i_5 != 0 && i_5 < 0 == v_1)) && (i_12 != 0 && i_12 < 0 == v_1)) && i_11 < 0 == v_1)))
                                                {
                                                    if ((!((!(i_5 != 0 && i_5 < 0 == v_1)) && (!(i_12 != 0 && i_12 < 0 == v_1)))))
                                                    {
                                                        goto label_22782;
                                                    }
                                                    continue;
                                                }
                                                goto label_22cb0;
                                            }
                                        }
                                        i_14 = i_5;
                                    }
                                    int16_t* i_18;
                                    if ((((i_9 == 0 || i_9 < 0 != v_1) && i_14 < 0 != v_1) || (!(i_9 == 0 || i_9 < 0 != v_1))))
                                    {
                                        i_11 = i_14;
                                    label_22cb0:
                                        i_16 = (i_16 << 0x1f);
                                        i_18 = i_11;
                                        if (i_18 < 0 != v_1)
                                        {
                                            if (i_11 < 0 == v_1)
                                            {
                                                i_15 = i_8;
                                                i_2 = i_11;
                                                break;
                                            }
                                            i_12 = i_11;
                                            i_19 = i_12;
                                            goto label_22cc2;
                                        }
                                    }
                                    if (((i_9 == 0 || i_9 < 0 != v_1) && i_14 < 0 == v_1))
                                    {
                                        i_18 = nullptr;
                                    }
                                    data_14 = i_10;
                                    *(i_21 + 0x44) = 0;
                                    *nullptr = 0xc3;
                                    *i_21 = i_18;
                                    *(i_18 + i_19) = i_18;
                                    *i_18 = arg2;
                                    /* jump -> arg2 */
                                }
                            }
                        } while ((!v_1));
                    }
                }
                else
                {
                    r0_73 = r0_88;
                    if (r0_73 == 0)
                    {
                        break;
                    }
                    r0_83 = r0_73;
                    if (r0_83 != 0)
                    {
                        /* jump -> &data_21ca2 */
                    }
                }
            }
        }
    }
}

int32_t sub_2363c(int32_t arg1 @ r6, int32_t arg2 @ r7, int32_t arg3 @ r8)
{
    /* jump -> arg3 */
}

int32_t sub_8001e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4 @ r4, void* arg5 @ r6, char arg6 @ r7)
{
    int32_t r1 = arg1;
    if (arg1 != 0)
    {
        r1 = (arg1 << 0x10);
        /* unimplemented  {vld4.8 {d0, d1, d2, d3}, [sp], r8} */;
    }
    *(arg5 + 0x78) = arg1;
    *(r1 * 2) = arg6;
    *(r1 + arg4) = arg6;
    /* unimplemented  {vext.8 d16, d15, d8, #0} */;
    /* unimplemented  {vext.8 d16, d11, d8, #0} */;
    /* unimplemented  {vext.8 d0, d1, d8, #0} */;
    /* unimplemented  {vaddl.S32 q8, d15, d8} */;
    /* tailcall */
    return sub_80200(r1, r1, arg3);
}

int32_t sub_80200(int32_t arg1, void* arg2, int32_t arg3)
{
    int32_t r4 = 0;
    if (arg3 != 0)
    {
        uint32_t r8_1 = 0;
        while (true)
        {
            int16_t r10_1 = (arg3 - r8_1);
            int32_t r0_1 = (arg1 + r8_1);
            char var_65_1 = r0_1;
            uint8_t var_66 = (r0_1 >> 8);
            if (r10_1 > (0x40 - (r0_1 & 0x3f)))
            {
                r10_1 = (0x40 - (r0_1 & 0x3f));
            }
            uint32_t r11_1 = r10_1;
            void var_64;
            sub_97f48(&var_64, (arg2 + r8_1), r11_1);
            int32_t r0_6 = sub_902b6(0x40005400, 0x50, &var_66, (r11_1 + 2), nullptr, 0);
            sub_916cc(7);
            if (r0_6 != 0)
            {
                r4 = 0xfffffffd;
                break;
            }
            r8_1 = (r10_1 + r8_1);
            if (r8_1 >= arg3)
            {
                r4 = 0;
                break;
            }
        }
    }
    return r4;
}

int32_t sub_80298(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        uint32_t r5_1 = 0;
        do
        {
            int32_t r0 = (r5_1 + arg1);
            uint32_t r1 = (arg3 - r5_1);
            char var_25_1 = r0;
            uint8_t var_26 = (r0 >> 8);
            uint8_t* r0_2 = (arg2 + r5_1);
            if (r1 < 0x41)
            {
                int32_t r4_1 = sub_902b6(0x40005400, 0x50, &var_26, 2, r0_2, r1);
                sub_916cc(2);
                if (r4_1 != 0)
                {
                    r4_1 = 0xfffffffe;
                }
                return r4_1;
            }
            int32_t r0_3 = sub_902b6(0x40005400, 0x50, &var_26, 2, r0_2, 0x40);
            sub_916cc(2);
            if (r0_3 != 0)
            {
                return 0xfffffffe;
            }
            r5_1 = (r5_1 + 0x40);
        } while (r5_1 < arg3);
    }
    return 0;
}

int32_t sub_80334(int32_t arg1)
{
    if (arg1 != 0)
    {
        sub_90190(0x40020c00, 0x2000);
        sub_8e930(arg1);
    }
    /* tailcall */
    return sub_9018c(0x40020c00, 0x2000);
}

uint32_t sub_80362()
{
    sub_92c80(0x15, 0x20005074);
    sub_92d04(0x20005074, 0x5ac, &data_1635, 1);  {  // {"@FIF"}}
    sub_92d1a(0x20005074, "Apple Inc.");
    sub_92d64(0x20005074, "Potassium Hub");
    sub_97f48(0x20005106, 0x20005cd9, 0x30);
    uint32_t r1 = *0x2000507a;
    *0x20005086 = 9;
    *0x20005085 = 4;
    *0x2000507d = 4;
    *0x2000507e = 0;
    *0x2000507f = 0;
    *0x20005080 = 0;
    __builtin_strncpy(0x20005081, "d222", 4);
    *0x20005089 = ((*0x20005cd7 + 0x1fe) >> 1);
    int32_t r1_5 = (((((r1 | (*0x2000507b << 8)) | (*0x2000507c << 0x10)) & 0xf04740) | 0x10800) | 0x93);
    *0x2000507a = r1_5;
    *0x2000507c = (r1_5 >> 0x10);
    *0x2000507b = (r1_5 >> 8);
    uint32_t r0 = *0x20001ee8;
    if (r0 >= 5)
    {
        *0x2000516e = 2;
    }
    return r0;
}

int32_t sub_80422()
{
    uint32_t i_1 = 0;
    int32_t r1 = 0;
    char* r0 = 0x20001ec7;
    uint32_t i;
    do
    {
        uint32_t r4_1 = *r0;
        if (r4_1 == 0)
        {
            i = i_1;
            break;
        }
        void* r2_1 = (0x20005cd7 + (i_1 << 1));
        r1 = (r1 + 1);
        i_1 = (i_1 + 1);
        r0 = (r0 - 1);
        *(r2_1 + 3) = 0;
        *(r2_1 + 2) = r4_1;
        i = r1;
    } while (i < 0x18);
    int32_t r0_1 = 2;
    *0x20005cd8 = 3;
    *0x20005cd7 = (2 + (i << 1));
    uint32_t r1_2 = *0x20001f3d;
    if (r1_2 != 0)
    {
        int32_t r3 = 3;
        int32_t r4_2 = 0;
        do
        {
            char r5_1 = *(0x20001f04 + r4_2);
            void* r6_1 = (0x20005d09 + (r4_2 << 1));
            r4_2 = (r4_2 + 1);
            *(r6_1 + 2) = r5_1;
            *(0x20005d09 + r3) = 0;
            r3 = (r3 + 2);
        } while (r4_2 < r1_2);
        r0_1 = (r3 - 1);
    }
    *0x20005d0a = 3;
    *0x20005d09 = r0_1;
    return r0_1;
}

uint32_t sub_804c4()
{
    return *((((sub_9019e(0x40020800, 0x40) * 9) + 0x99aa1) + (sub_9019e(0x40020800, 0x80) * 3)) + sub_9019e(0x40020800, 0x100));
}

int32_t sub_80504(int32_t* arg1, int32_t arg2, char* arg3, int32_t arg4)
{
    int32_t i_1 = arg4;
    char* r6 = arg3;
    sub_9006e(arg1);
    uint32_t r12;
    sub_8ff96(arg1, 0xfe, r12);
    int32_t r1;
    if (arg2 == 1)
    {
        sub_8ff96(arg1, 4, r12);
        r1 = 4;
    }
    int32_t r4_1;
    uint32_t r9;
    if ((arg2 != 1 && arg2 != 0))
    {
        r9 = 0xff;
        r4_1 = 0xff;
    }
    if (arg2 == 0)
    {
        sub_8ff96(arg1, 5, r12);
        r1 = 5;
    }
    if ((arg2 == 1 || arg2 == 0))
    {
        r4_1 = sub_90b1c(0xffff, r1);
        r9 = (r4_1 >> 8);
    }
    if (i_1 != 0)
    {
        int32_t i;
        do
        {
            uint32_t r1_1 = *r6;
            if (r1_1 == 0xfe)
            {
                sub_8ff96(arg1, 0xfe, r12);
                r1_1 = *r6;
            }
            int32_t r0_8 = sub_90b1c((r4_1 | (r9 << 8)), r1_1);
            char r1_2 = *r6;
            r6 = &r6[1];
            r4_1 = r0_8;
            sub_8ff96(arg1, r1_2, r12);
            r9 = (r4_1 >> 8);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
    uint32_t r4_2 = r4_1;
    if (r4_2 == 0xfe)
    {
        sub_8ff96(arg1, 0xfe, r12);
    }
    sub_8ff96(arg1, r4_2, r12);
    if (r9 == 0xfe)
    {
        sub_8ff96(arg1, 0xfe, r12);
    }
    sub_8ff96(arg1, r9, r12);
    sub_8ff96(arg1, 0xfe, r12);
    sub_8ff96(arg1, 0x40, r12);
    return 2;
}

int32_t sub_805cc(int32_t* arg1, char* arg2, int32_t arg3)
{
    int32_t r0_3;
    if (*arg2 != 5)
    {
        r0_3 = 0xfffffff6;
    }
    else
    {
        int32_t r0_1 = sub_90b1c(0xffff, 5);
        uint8_t var_98;
        if (arg3 >= 2)
        {
            void* r6_1 = &arg2[1];
            int32_t i_1 = (arg3 - 1);
            char* r4_1 = &var_98;
            int32_t i;
            do
            {
                r0_1 = sub_90b1c(r0_1, *r6_1);
                char r1_1 = *r6_1;
                r6_1 = (r6_1 + 1);
                i = i_1;
                i_1 = (i_1 - 1);
                *r4_1 = r1_1;
                r4_1 = &r4_1[1];
            } while (i != 1);
        }
        if (r0_1 != 0)
        {
            r0_3 = 0xfffffff7;
        }
        else
        {
            char var_97;
            uint32_t r0_4 = var_97;
            uint32_t r5_1 = var_98;
            int32_t var_9c;
            int32_t* r2 = &var_9c;
            char var_96;
            char* r1_2 = &var_96;
            int32_t r4_2 = (r0_4 & 0x7f);
            var_9c = r4_2;
            int32_t* r0_9;
            uint8_t* r2_1;
            uint32_t r3_1;
            if (r0_4 > 0xffffffff)
            {
                char r0_7 = sub_90b7a(r5_1, r1_2, r2);
                char r1_3 = var_9c;
                var_98 = r5_1;
                r2_1 = &var_98;
                r3_1 = (r0_7 + 2);
                r0_9 = arg1;
                char var_97_1 = r1_3;
            }
            else
            {
                char r1_4 = 0;
                bool cond:2_1 = sub_90bc6(r5_1, r1_2, r2) != r4_2;
                var_98 = r5_1;
                r2_1 = &var_98;
                r3_1 = 3;
                if (cond:2_1)
                {
                    r1_4 = 1;
                }
                char r0_12 = var_9c;
                var_96 = r1_4;
                char var_97_2 = (r0_12 | 0x80);
                r0_9 = arg1;
            }
            sub_80504(r0_9, 1, r2_1, r3_1);
            r0_3 = 0;
        }
    }
    return r0_3;
}

int32_t sub_80688(int32_t* arg1, int32_t arg2)
{
    if (*arg1 == 0xffffffff)
    {
        return 0;
    }
    int32_t r12 = arg1[7];
    if ((r12 & 0xfffffffc) > arg2)
    {
        return 0;
    }
    /* tailcall */
    return sub_806a2(0, arg2, arg1, r12);
}

int32_t sub_806a2(int32_t arg1, int32_t arg2, int32_t* arg3, int32_t arg4 @ r12)
{
    int32_t r0_1 = (*0x40023830 | 0x1000);
    *0x40023830 = r0_1;
    *0x40023008 = 1;
    if (0 != (arg4 >> 2))
    {
        int32_t i_1 = (0 - (arg4 >> 2));
        int32_t i;
        do
        {
            int32_t r1 = *arg3;
            arg3 = &arg3[1];
            i = i_1;
            i_1 = (i_1 + 1);
            *0x40023000 = r1;
        } while (i != 0xffffffff);
    }
    bool cond:0 = *0x40023000 == 0;
    *0x40023830 = (*0x40023830 & 0xffffefff);
    if (cond:0)
    {
        r0_1 = 1;
    }
    return r0_1;
}

int32_t sub_806f6(int32_t arg1, int32_t* arg2)
{
    int32_t lr = 0;
    int32_t r2;
    int32_t r2_1;
    int32_t r12_1;
    if (arg1 < 0x10000)
    {
        r2 = 0xe;
        r12_1 = 0;
    }
    else if (arg1 >= "%u %u %u\n")
    {
        r2_1 = 0;
        if (0 == (arg1 >> 0x14))
        {
            r2 = 0x11;
            r12_1 = 4;
        }
    }
    else
    {
        r2 = 0x10;
        r12_1 = 3;
    }
    if (((arg1 < 0x10000 || (arg1 >= 0x10000 && arg1 < "%u %u %u\n")) || ((arg1 >= 0x10000 && arg1 >= "%u %u %u\n") && 0 == (arg1 >> 0x14))))
    {
        *arg2 = (((arg1 >> r2) + r12_1) << 3);
        if ((((1 << r2) - 1) & arg1) == 0)
        {
            lr = 1;
        }
        r2_1 = lr;
    }
    return r2_1;
}

void sub_80746(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (*(0x20000000 + (arg1 << 2)) == arg2)
    {
        return;
    }
    /* tailcall */
    return sub_80758(arg1, arg2, arg3, 0x20000000);
}

void sub_80758(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4 @ r12)
{
    *(arg4 + (arg1 << 2)) = arg2;
    uint32_t r3 = *0x20000c74;
    uint32_t r4 = (r3 * 3);
    *(0x20000c76 + (r4 << 1)) = arg3;
    *((r4 << 1) + 0x20000c7b) = arg2;
    *((r4 << 1) + 0x20000c7a) = arg1;
    *((r4 << 1) + 0x20000c79) = (arg3 >> 0x18);
    *((r4 << 1) + 0x20000c78) = (arg3 >> 0x10);
    *((r4 << 1) + 0x20000c77) = (arg3 >> 8);
    int32_t r2_2 = ((r3 + 1) & 0x7f);
    *0x20000c74 = r2_2;
    int32_t r2_3 = (r2_2 * 3);
    *(0x20000c76 + (r2_3 << 1)) = 0;
    *((r2_3 << 1) + 0x20000c7a) = 0;
    *((r2_3 << 1) + 0x20000c79) = 0;
    *((r2_3 << 1) + 0x20000c78) = 0;
    *((r2_3 << 1) + 0x20000c77) = 0;
    *((r2_3 << 1) + 0x20000c7b) = 0;
}

int32_t sub_807c0(char* arg1, uint8_t* arg2)
{
    char var_11 = 0xff;
    sub_8fed8(1, &var_11, 1);
    uint32_t r2 = var_11;
    if (r2 == 0xff)
    {
        int32_t r2_1 = 0;
        *arg1 = 0x6b;
        char* r1_2 = 0x20001ec7;
        uint32_t i_1 = 0;
        uint32_t i;
        do
        {
            uint32_t r3_1 = *r1_2;
            if (r3_1 == 0)
            {
                i = i_1;
                break;
            }
            r2_1 = (r2_1 + 1);
            arg1[(1 + i_1)] = r3_1;
            i_1 = (i_1 + 1);
            r1_2 = (r1_2 - 1);
            i = r2_1;
        } while (i < 0x18);
        *arg2 = (i + 1);
    }
    else
    {
        if (r2 >= 0x20)
        {
            r2 = 0x20;
        }
        *arg2 = r2;
        sub_8fed8(2, arg1, r2);
    }
    return 0;
}

uint32_t sub_8082e()
{
    char var_11 = 0;
    sub_8fed8(0, &var_11, 1);
    uint32_t r0 = var_11;
    if (r0 == 0xff)
    {
        var_11 = 0;
        r0 = 0;
    }
    sub_8fb8a(r0);
    return r0;
}

int32_t sub_8085c(int32_t arg1)
{
    /* tailcall */
    return sub_8fed8(0x100, arg1, 0x54);
}

int32_t sub_80868(int32_t arg1)
{
    /* tailcall */
    return sub_8feb2(0x100, arg1, 0x54);
}

int32_t sub_80874(int32_t arg1)
{
    int32_t r1 = 0;
    if ((*0x20001378 != 0 && *0x2000137c != 0))
    {
        int32_t r1_1 = *0x2000170c;
        if (r1_1 == 2)
        {
            uint32_t r1_3 = *0x2000170a;
            *0x2000170a = (r1_3 + 1);
            *(r1_3 + 0x200014aa) = arg1;
            arg1 = (arg1 ^ 0xff);
        label_80958:
            sub_80b30(arg1);
        label_80aec:
            r1 = 1;
        }
        else
        {
            if (r1_1 == 1)
            {
                uint32_t r1_5 = *0x2000170a;
                uint32_t r2_3 = (r1_5 + 1);
                *0x2000170a = r2_3;
                *(r1_5 + 0x200014aa) = arg1;
                uint32_t r9_1 = *0x20001708;
                if (r9_1 == 0x22)
                {
                    r2_3 = *0x2000138c;
                    uint32_t r1_7 = *0x2000138e;
                    uint32_t r3_1 = *0x20001397;
                    bool cond:0_1 = r2_3 != 8;
                    if (r2_3 == 8)
                    {
                        cond:0_1 = r1_7 != 0x45;
                    }
                    if ((cond:0_1 || ((!cond:0_1) && r3_1 != 0x11)))
                    {
                        if ((*0x20001f38 << 0x1e) >= 0)
                        {
                            goto label_8098c;
                        }
                        uint32_t var_34_1 = r3_1;
                        int32_t var_38_1 = (r1_7 & 0xf);
                        sub_8fc48(5, "Not Hippo packet: bad header %u …", r2_3);
                    label_8098c:
                        sub_80af8();
                        goto label_80aec;
                    }
                }
                int32_t r0_4;
                if (arg1 == 0xfe)
                {
                    r0_4 = 2;
                }
                else
                {
                    if (arg1 != 0xfb)
                    {
                        goto label_80958;
                    }
                    if (r9_1 <= 0x29)
                    {
                        if ((*0x20001f38 << 0x1e) < 0)
                        {
                            sub_8fc48(5, "Not Hippo packet: too small\n", r2_3);
                        }
                        goto label_8098c;
                    }
                    *0x20001700 = 0;
                    uint32_t r0_8 = *0x200013a4;
                    int32_t r1_8 = ((r0_8 >> 0x18) | (((r0_8 >> 0x10) & 0xff) | (((r0_8 >> 8) & 0xff) | (r0_8 & 0xff))));
                    if ((0x5f4d + (r1_8 >> 0x10)) < 0x28)
                    {
                        sub_80af8();
                    }
                    else
                    {
                        uint32_t r0_12 = (*0x2000139a | (*0x2000139c << 0x10));
                        void* r5_1 = 0x20001720;
                        int32_t r1_9 = 0;
                        int32_t r0_13 = ((r0_12 >> 0x18) | (((r0_12 >> 0x10) & 0xff) | (((r0_12 >> 8) & 0xff) | (r0_12 & 0xff))));
                        while (true)
                        {
                            uint32_t r2_7 = *(r5_1 + 6);
                            if (r2_7 != (r1_8 >> 0x10))
                            {
                                r1_9 = (r1_9 + 1);
                                r5_1 = (r5_1 + 0x1c);
                                if (r1_9 < 0xb)
                                {
                                    continue;
                                }
                            }
                            else if (r5_1 != 0x10)
                            {
                                uint32_t r1_10 = *0x200013a2;
                                *r5_1 = r0_13;
                                *(r5_1 + 4) = (((r1_10 >> 0x18) | (((r1_10 >> 0x10) & 0xff) | (((r1_10 >> 8) & 0xff) | (r1_10 & 0xff)))) >> 0x10);
                                uint32_t r12;
                                if ((*0x20001f39 << 0x1f) != 0)
                                {
                                    int32_t var_28_1 = (r9_1 - 0x2a);
                                    uint32_t var_2c_1 = r0_13;
                                    int32_t var_30_1 = ((r0_13 >> 8) & 0xff);
                                    int32_t var_34_2 = ((r0_13 >> 0x10) & 0xff);
                                    uint32_t var_38_2 = (r0_13 >> 0x18);
                                    r12 = sub_8fc48(5, "Rx hippo packet len: %u port: %u…", r9_1);
                                }
                                if (r9_1 != 0x2a)
                                {
                                    int32_t* r0_15 = *(r5_1 - 0x10);
                                    if (r0_15 != 0)
                                    {
                                        sub_8ff96(r0_15, *0x200013aa, r12);
                                        if (r9_1 != 0x2b)
                                        {
                                            char* r8_2 = 0x200013ab;
                                            int32_t i_2 = (r9_1 - 0x2b);
                                            int32_t i;
                                            do
                                            {
                                                char r1_19 = *r8_2;
                                                r8_2 = &r8_2[1];
                                                sub_8ff96(*(r5_1 - 0x10), r1_19, r12);
                                                i = i_2;
                                                i_2 = (i_2 - 1);
                                            } while (i != 1);
                                        }
                                    }
                                }
                                break;
                            }
                            if ((*0x20001f38 << 0x1e) < 0)
                            {
                                uint32_t var_2c_2 = r0_13;
                                int32_t var_30_2 = ((r0_13 >> 8) & 0xff);
                                int32_t var_34_3 = ((r0_13 >> 0x10) & 0xff);
                                uint32_t var_38_3 = (r0_13 >> 0x18);
                                r2_7 = sub_8fc48(5, "Unexpected hippo packet len: %u …", r9_1);
                                r9_1 = *0x20001708;
                            }
                            if (r9_1 != 0)
                            {
                                int32_t i_1 = 0;
                                do
                                {
                                    if (((i_1 << 0x1c) == 0 && (*0x20001f38 << 0x1e) < 0))
                                    {
                                        r2_7 = sub_8fc48(5, &data_98156, r2_7);
                                    }
                                    if ((*0x20001f38 << 0x1e) < 0)
                                    {
                                        r2_7 = sub_8fc48(5, "%02X ", *(0x20001380 + i_1));
                                    }
                                    i_1 = (i_1 + 1);
                                } while (i_1 < *0x20001708);
                            }
                            if ((*0x20001f38 << 0x1e) >= 0)
                            {
                                break;
                            }
                            sub_8fc48(5, &data_98160, r2_7);
                            break;
                        }
                    }
                    r0_4 = 0;
                }
                *0x2000170c = r0_4;
                goto label_80aec;
            }
            if (r1_1 != 0)
            {
                r1 = 0;
            }
            else
            {
                r1 = 0;
                if (arg1 == 0xfa)
                {
                    *0x2000170c = 1;
                    *0x20001708 = 0;
                    *0x20001700 = 1;
                    *0x20001704 = (*0x20006064 + *0x20000538);
                    goto label_80aec;
                }
            }
        }
    }
    return r1;
}

int32_t sub_80af8()
{
    *0x20001700 = 0;
    *0x2000170c = 0;
    sub_8f1fc(&data_99abd, 1, 0);
    /* tailcall */
    return sub_8f1fc(0x200014aa, *0x2000170a, 0);
}

void sub_80b30(char arg1)
{
    uint32_t r2 = *0x20001708;
    if (r2 != 0x12a)
    {
        *0x20001708 = (r2 + 1);
        *(0x20001380 + r2) = arg1;
        *0x2000170c = 1;
        return;
    }
    if ((*0x20001f38 << 0x1e) >= 0)
    {
        /* tailcall */
        return sub_80af8();
    }
    /* tailcall */
    return sub_80b54();
}

int32_t sub_80b54()
{
    int32_t r2;
    sub_8fc48(5, "Not Hippo packet: too large\n", r2);
    /* tailcall */
    return sub_80af8();
}

int32_t sub_80b7e(int32_t arg1, int32_t arg2, int32_t arg3, int16_t arg4)
{
    if (arg1 >= 0xb)
    {
        sub_97ef2("HippoPortSetup", "/Users/cwlange/Desktop/potassium…", 0x168, "idx < numOfHippoPorts");
        /* no return */
    }
    int32_t r12 = (arg1 * 7);
    *(0x20001710 + (r12 << 2)) = arg3;
    *((r12 << 2) + 0x20001714) = arg2;
    *((r12 << 2) + 0x20001726) = arg4;
    *((r12 << 2) + 0x20001724) = 0;
    *((r12 << 2) + 0x20001720) = 0;
    *((r12 << 2) + 0x20001718) = 0;
    *((r12 << 2) + 0x20001729) = 1;
    sub_80bd4(arg1, 0);
    return 0;
}

int32_t sub_80bd4(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if (arg1 >= 0xb)
    {
        sub_97ef2("HippoPortEnable", "/Users/cwlange/Desktop/potassium…", 0x178, "idx < numOfHippoPorts");
        /* no return */
    }
    int32_t r8 = (arg1 * 7);
    if (arg2 != *((r8 << 2) + 0x20001728))
    {
        sub_9006e(*((r8 << 2) + 0x20001714));
        sub_9006e(*(0x20001710 + (r8 << 2)));
    }
    *((r8 << 2) + 0x20001728) = arg2;
    int32_t r0_4 = ((arg2 << arg1) | (*0x20001378 & (!(1 << arg1))));
    *0x20001378 = r0_4;
    if (r0_4 != 0)
    {
        return r0_4;
    }
    /* tailcall */
    return sub_9006e(0x2000002c);
}

int32_t sub_80c64(uint32_t arg1)
{
    if (arg1 <= 0xffffffff)
    {
        arg1 = *0x2000137c;
    }
    else
    {
        if (arg1 != 0)
        {
            arg1 = 1;
        }
        *0x2000137c = arg1;
    }
    int32_t r1 = *0x20001378;
    if (r1 != 0)
    {
        r1 = 1;
    }
    return (arg1 & r1);
}

void sub_80c9a(void* arg1, char arg2)
{
    bool cond:0 = arg1 < 0xb;
    if (arg1 < 0xb)
    {
        arg1 = (0x20001710 + (arg1 * 0x1c));
    }
    if (cond:0)
    {
        *(arg1 + 0x19) = arg2;
        return;
    }
    /* no return */
}

int32_t sub_80cb4() __noreturn
{
    sub_97ef2("HippoPortPingEnable", "/Users/cwlange/Desktop/potassium…", 0x194, "idx < numOfHippoPorts");
    /* no return */
}

uint32_t sub_80cd8(int32_t arg1)
{
    uint32_t r0_2 = *((arg1 * 0x1c) + 0x20001724);
    if (r0_2 != 0)
    {
        r0_2 = 1;
    }
    return r0_2;
}

uint32_t sub_80cf2()
{
    uint32_t r12;
    if ((*0x20001700 != 0 && (*0x20006064 - *0x20001704) >= 0))
    {
        int32_t r2;
        if ((*0x20001f38 << 0x1e) < 0)
        {
            sub_8fc48(5, "Not Hippo packet: timeout\n", r2);
        }
        r12 = sub_80af8();
    }
    uint32_t r0_6 = *0x2000137c;
    if (r0_6 != 0)
    {
        int32_t i = 0;
        do
        {
            r0_6 = *((i * 0x1c) + 0x20001728);
            if (r0_6 != 0)
            {
                r0_6 = *((i * 0x1c) + 0x20001714);
                if (r0_6 != 0)
                {
                    uint32_t r0_7;
                    if (*((i * 0x1c) + 0x20001724) != 0)
                    {
                        r0_7 = sub_8ff92(r0_6);
                        if (r0_7 == 0)
                        {
                            uint32_t j_2 = sub_8ff62(*((i * 0x1c) + 0x20001714));
                            if ((0x56 + (j_2 << 1)) <= sub_8ff78(0x2000002c))
                            {
                                sub_8ff96(0x2000002c, 0xfa, r12);
                                int32_t r1_7;
                                uint32_t r2_5;
                                r1_7 = sub_80ee4((0x20001710 + (i * 0x1c)), j_2, 0);
                                uint32_t j_1 = j_2;
                                if (j_2 != 0)
                                {
                                    uint32_t j;
                                    do
                                    {
                                        int32_t r0_17;
                                        r0_17 = sub_8fff6(*((i * 0x1c) + 0x20001714), r1_7, r2_5);
                                        r1_7 = sub_80ea4(r0_17, 1);
                                        j = j_1;
                                        j_1 = (j_1 - 1);
                                    } while (j != 1);
                                }
                                sub_8ff96(0x2000002c, 0xfb, r12);
                                if ((*0x20001f39 << 0x1f) != 0)
                                {
                                    r12 = sub_8fc48(5, "Tx hippo packet port: %u payload…", *((i * 0x1c) + 0x20001726));
                                }
                            }
                            int32_t r0_20 = *0x20006064;
                            *((i * 0x1c) + 0x20001718) = 1;
                            r0_6 = (r0_20 + 0xfa);
                            *((i * 0x1c) + 0x2000171c) = r0_6;
                        }
                    }
                    if ((*((i * 0x1c) + 0x20001724) == 0 || (*((i * 0x1c) + 0x20001724) != 0 && r0_7 != 0)))
                    {
                        r0_6 = ((i * 0x1c) + 0x20001718);
                        void* r1_5;
                        if (*r0_6 == 0)
                        {
                            r1_5 = ((i * 0x1c) + 0x2000171c);
                        }
                        else
                        {
                            r1_5 = ((i * 0x1c) + 0x2000171c);
                        }
                        if ((*r0_6 == 0 || (*r0_6 != 0 && (*0x20006064 - *r1_5) >= 0)))
                        {
                            *r1_5 = (*0x20006064 + 0xfa);
                            *r0_6 = 1;
                            r0_6 = *((i * 0x1c) + 0x20001729);
                            if (r0_6 != 0)
                            {
                                r0_6 = sub_8ff78(0x2000002c);
                                if (r0_6 >= 0x5a)
                                {
                                    sub_8ff96(0x2000002c, 0xfa, r12);
                                    r12 = sub_80ee4((0x20001710 + (i * 0x1c)), 2, 1);
                                    sub_80ea4(*((i * 0x1c) + 0x20001727), 1);
                                    sub_80ea4(*((i * 0x1c) + 0x20001726), 1);
                                    r0_6 = 0x2000002c;
                                    sub_8ff96(0x2000002c, 0xfb, r12);
                                }
                            }
                        }
                    }
                }
            }
            i = (i + 1);
        } while (i != 0xb);
    }
    return r0_6;
}

int32_t sub_80ea4(int32_t arg1, int32_t arg2)
{
    int32_t r4 = arg1;
    uint32_t r12;
    if ((arg2 == 1 && ((r4 - 0xfa) <= 4 && ((1 << (r4 - 0xfa)) & 0x13) != 0)))
    {
        sub_8ff96(0x2000002c, 0xfe, r12);
        r4 = (!r4);
    }
    /* tailcall */
    return sub_8ff96(0x2000002c, r4, r12);
}

int32_t sub_80ee4(void* arg1, int32_t arg2, int32_t arg3)
{
    void var_4c;
    sub_97886(&var_4c, 0, 0x2a);
    int16_t var_40 = 8;
    char var_3e = 0x45;
    char var_35 = 0x11;
    int16_t var_30 = 0;
    int16_t var_32 = 0;
    int32_t r0_1 = *(arg1 + 0x10);
    uint16_t var_3c = ((((arg2 + 0x1c) >> 0x18) | ((((arg2 + 0x1c) >> 0x10) & 0xff) | ((((arg2 + 0x1c) >> 8) & 0xff) | ((arg2 + 0x1c) & 0xff)))) >> 0x10);
    int32_t r0_2 = ((r0_1 >> 0x18) | (((r0_1 >> 0x10) & 0xff) | (((r0_1 >> 8) & 0xff) | (r0_1 & 0xff))));
    int16_t var_2e = r0_2;
    uint16_t var_2c = (r0_2 >> 0x10);
    uint16_t r0_4;
    uint16_t r1_3;
    if (arg3 == 0)
    {
        uint32_t r0_5 = *(arg1 + 0x14);
        r1_3 = (((r0_5 >> 0x18) | (((r0_5 >> 0x10) & 0xff) | (((r0_5 >> 8) & 0xff) | (r0_5 & 0xff)))) >> 0x10);
        uint32_t r0_7 = *(arg1 + 0x16);
        r0_4 = (((r0_7 >> 0x18) | (((r0_7 >> 0x10) & 0xff) | (((r0_7 >> 8) & 0xff) | (r0_7 & 0xff)))) >> 0x10);
    }
    else
    {
        r0_4 = 0x3bc9;
        r1_3 = 0x3bc9;
    }
    uint16_t var_28 = r1_3;
    uint16_t var_2a = r0_4;
    int16_t var_24 = 0;
    int32_t i = 1;
    uint16_t var_26 = ((((arg2 + 8) >> 0x18) | ((((arg2 + 8) >> 0x10) & 0xff) | ((((arg2 + 8) >> 8) & 0xff) | ((arg2 + 8) & 0xff)))) >> 0x10);
    sub_80ea4(0, 1);
    do
    {
        sub_80ea4(*(&var_4c + i), 1);
        i = (i + 1);
    } while (i != 0x2a);
    return 0x2000002c;
}

uint32_t sub_80f96(uint32_t arg1)
{
    uint32_t r4;
    if (arg1 >= 0x10000)
    {
        r4 = *0x20001844;
    }
    else
    {
        r4 = arg1;
        if (arg1 != 0)
        {
            r4 = 1;
        }
        if ((*0x20001f38 << 0x1d) < 0)
        {
            int32_t r2_1 = 0x54;
            if (*0x20001844 == 0)
            {
                r2_1 = 0x46;
            }
            sub_8fc48(5, "swd_bypass_enable: %c -> %c\n", r2_1);
        }
        *0x20001844 = r4;
    }
    return r4;
}

uint32_t sub_80ffe(uint32_t arg1)
{
    uint32_t r4;
    if (arg1 >= 0x10000)
    {
        r4 = *0x20001846;
    }
    else
    {
        r4 = arg1;
        if (arg1 != 0)
        {
            r4 = 1;
        }
        if ((*0x20001f38 << 0x1d) < 0)
        {
            int32_t r2_1 = 0x54;
            if (*0x20001846 == 0)
            {
                r2_1 = 0x46;
            }
            sub_8fc48(5, "swd_overrun_mode: %c -> %c\n", r2_1);
        }
        *0x20001846 = r4;
    }
    return r4;
}

uint32_t sub_81068()
{
    int32_t lr;
    int32_t var_4 = lr;
    *0x20000044 = 0xffffffff;
    uint32_t i_1 = *0x2000004c;
    uint32_t i_2 = i_1;
    if (i_1 >= 0x20)
    {
        uint32_t i = i_1;
        do
        {
            sub_81d48(0x20, 0xffffffff);
            i = (i - 0x20);
        } while (i > 0x1f);
        i_2 = (i_1 & 0x1f);
    }
    if (i_2 != 0)
    {
        sub_81d48(i_2, 0xffffffff);
    }
    if ((*0x20001f38 << 0x1c) < 0)
    {
        sub_8fc48(5, "ILR:%X\n", i_1);
    }
    int32_t r2_2 = sub_81d48(0x10, 0xe79e);
    uint32_t r0_3 = (*0x20001f38 << 0x1c);
    if (r0_3 >= 0)
    {
        return r0_3;
    }
    /* tailcall */
    return sub_8fc48(5, "J2S\n", r2_2);
}

int32_t sub_810ec()
{
    int32_t r5 = *0x2000184c;
    sub_81068();
    sub_81176();
    if (r5 != 0)
    {
        uint32_t r6_1 = *0x20001846;
        sub_80ffe(1);
        int32_t var_1c_1 = 0;
        sub_8f928();
        sub_80ffe(r6_1);
    }
    sub_8f928();
    return 1;
}

uint32_t sub_81176()
{
    int32_t lr;
    int32_t var_4 = lr;
    *0x20000044 = 0xffffffff;
    uint32_t i_2 = *0x20000048;
    uint32_t i_3 = *0x2000004c;
    uint32_t i_4 = i_3;
    if (i_3 >= 0x20)
    {
        uint32_t i = i_3;
        do
        {
            sub_81d48(0x20, 0xffffffff);
            i = (i - 0x20);
        } while (i > 0x1f);
        i_4 = (i_3 & 0x1f);
    }
    if (i_4 != 0)
    {
        sub_81d48(i_4, 0xffffffff);
    }
    if ((*0x20001f38 << 0x1c) < 0)
    {
        sub_8fc48(5, "ILR:%X\n", i_3);
    }
    uint32_t i_5 = i_2;
    if (i_2 >= 0x20)
    {
        uint32_t i_1 = i_2;
        do
        {
            sub_81d48(0x20, 0);
            i_1 = (i_1 - 0x20);
        } while (i_1 > 0x1f);
        i_5 = (i_2 & 0x1f);
    }
    if (i_5 != 0)
    {
        sub_81d48(i_5, 0);
    }
    uint32_t r0_3 = (*0x20001f38 << 0x1c);
    if (r0_3 >= 0)
    {
        return r0_3;
    }
    /* tailcall */
    return sub_8fc48(5, "IDL:%X\n", i_2);
}

int32_t sub_8122a()
{
    sub_8f928();
    return 0;
}

int32_t sub_81248()
{
    sub_8f928();
    return 0;
}

uint32_t sub_81266(int32_t arg1, uint32_t arg2, uint32_t* arg3)
{
    int32_t r0 = (arg1 ^ (arg1 >> 0x10));
    int32_t r0_1 = (r0 ^ (r0 >> 8));
    uint32_t r11 = *0x20001846;
    uint32_t i_3 = *0x20000048;
    sub_81d48(8, (((0x20 & ((0x6996 >> ((r0_1 ^ (r0_1 >> 4)) & 0xf)) << 5)) | arg1) | 0x81));
    uint32_t r5 = *0x20001848;
    if (r5 != 0)
    {
        r5 = (1 << r5);
    }
    uint32_t i_2 = (r5 * 0x38);
    uint32_t i;
    do
    {
        i = i_2;
        i_2 = (i_2 - 1);
    } while (i > 1);
    sub_9010a(0x40020000, 4);
    sub_90190(0x40020000, 0x40);
    uint32_t r0_8 = sub_81dc0(4);
    sub_9018c(0x40020000, 0x40);
    sub_9012e(0x40020000, 4);
    int32_t r2 = sub_81d48(1, 0);
    if ((*0x20001f38 << 0x1c) < 0)
    {
        int32_t var_30_1 = (0xc & (arg1 >> 1));
        r2 = sub_8fc48(5, "%10u %cP w %X", *0x20006064);
    }
    uint32_t r5_2 = (r0_8 >> 1);
    uint32_t* r4_1;
    if ((r11 != 0 || (r11 == 0 && r5_2 == 1)))
    {
        sub_81d48(0x20, arg2);
        uint32_t r0_14 = (arg2 ^ (arg2 >> 0x10));
        uint32_t r0_15 = (r0_14 ^ (r0_14 >> 8));
        sub_81d48(1, ((0x6996 >> ((r0_15 ^ (r0_15 >> 4)) & 0xf)) & 1));
        r4_1 = arg3;
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_8fc48(5, " = %08X", arg2);
        }
    }
    if ((r11 == 0 && r5_2 != 1))
    {
        r4_1 = arg3;
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_8fc48(5, "           ", r2);
        }
    }
    if ((*0x20001f38 << 0x1c) < 0)
    {
        sub_8fc48(5, " ack %X idl %X\n", r5_2);
    }
    if (i_3 >= 0x20)
    {
        uint32_t i_1 = i_3;
        do
        {
            sub_81d48(0x20, 0);
            i_1 = (i_1 - 0x20);
        } while (i_1 > 0x1f);
        i_3 = (i_3 & 0x1f);
    }
    if (i_3 != 0)
    {
        sub_81d48(i_3, 0);
    }
    uint32_t r0_24 = 0x40020000;
    sub_9018c(0x40020000, 4);
    bool cond:1 = arg1 != 8;
    if (arg1 == 8)
    {
        cond:1 = r5_2 != 1;
    }
    if ((!cond:1))
    {
        r0_24 = sub_80ffe((arg2 & 1));
    }
    *r4_1 = r5_2;
    return r0_24;
}

uint32_t* sub_81430(int32_t arg1, int32_t* arg2, uint32_t* arg3)
{
    int32_t r0_1 = ((arg1 | 4) ^ (arg1 >> 0x10));
    int32_t r0_2 = (r0_1 ^ (r0_1 >> 8));
    uint32_t r8 = *0x20001846;
    uint32_t r10 = *0x20000048;
    sub_81d48(8, (((0x20 & ((0x6996 >> ((r0_2 ^ (r0_2 >> 4)) & 0xf)) << 5)) | arg1) | 0x85));
    uint32_t r6 = *0x20001848;
    if (r6 != 0)
    {
        r6 = (1 << r6);
    }
    uint32_t i_2 = (r6 * 0x38);
    uint32_t i;
    do
    {
        i = i_2;
        i_2 = (i_2 - 1);
    } while (i > 1);
    sub_9010a(0x40020000, 4);
    sub_90190(0x40020000, 0x40);
    uint32_t r0_9;
    int32_t r2;
    r0_9 = sub_81dc0(4);
    if ((*0x20001f38 << 0x1c) < 0)
    {
        int32_t var_30_1 = (0xc & (arg1 >> 1));
        r2 = sub_8fc48(5, "%10u %cP r %X", *0x20006064);
    }
    uint32_t r4_1 = (r0_9 >> 1);
    char const* const r5_1;
    if ((r8 != 0 || (r8 == 0 && r4_1 == 1)))
    {
        *arg2 = sub_81dc0(0x20);
        uint32_t r0_16 = sub_81dc0(1);
        int32_t r2_2 = *arg2;
        r5_1 = &data_9822a;
        int32_t r1_1 = (r2_2 ^ (r2_2 >> 0x10));
        int32_t r1_2 = (r1_1 ^ (r1_1 >> 8));
        int32_t r3_3 = 0;
        uint32_t r0_17 = r4_1;
        if (r0_16 != ((0x6996 >> ((r1_2 ^ (r1_2 >> 4)) & 0xf)) & 1))
        {
            r3_3 = 1;
        }
        if (r4_1 != 1)
        {
            r0_17 = 0;
        }
        if ((r0_17 & r3_3) != 0)
        {
            r5_1 = "bad parity";
            r4_1 = 9;
        }
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_8fc48(5, " = %08X", r2_2);
        }
    }
    if ((r8 == 0 && r4_1 != 1))
    {
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_8fc48(5, "           ", r2);
        }
        *arg2 = 0xffffffff;
        r5_1 = &data_9822a;
    }
    if ((*0x20001f38 << 0x1c) < 0)
    {
        char const* const var_30_2 = r5_1;
        sub_8fc48(5, " ack %X idl %X %s\n", r4_1);
    }
    sub_9018c(0x40020000, 0x40);
    sub_9012e(0x40020000, 4);
    int32_t i_3 = (r10 + 1);
    if (r10 >= 0x1f)
    {
        int32_t i_1 = i_3;
        do
        {
            sub_81d48(0x20, 0);
            i_1 = (i_1 - 0x20);
        } while (i_1 > 0x1f);
        i_3 = (i_3 & 0x1f);
    }
    if ((r10 < 0x1f || (r10 >= 0x1f && i_3 != 0)))
    {
        sub_81d48(i_3, 0);
    }
    sub_9018c(0x40020000, 4);
    *arg3 = r4_1;
    return arg3;
}

int32_t sub_8160c(int32_t arg1, int32_t arg2, int32_t* arg3)
{
    int32_t r8 = 0xc8;
    int32_t r5 = arg2;
    uint32_t r10 = *0x20001846;
    if (r10 != 0)
    {
        r8 = 0x14;
    }
    int32_t var_30;
    int32_t r0_1;
    int32_t i;
    if (*arg3 == 0)
    {
        i = 0;
    }
    else
    {
        r0_1 = (arg1 & 2);
        i = 0;
        do
        {
            int32_t r9_1 = 0;
            int32_t r0_3;
            while (true)
            {
                int32_t var_2c_1 = 0;
                sub_8f928();
                r0_3 = var_2c_1;
                var_30 = r0_3;
                if (r0_3 != 2)
                {
                    break;
                }
                int32_t r0_5;
                if (r10 != 0)
                {
                    r0_5 = sub_81728(&var_30);
                }
                if ((r10 == 0 || (r10 != 0 && r0_5 != 0)))
                {
                    r9_1 = (r9_1 + 1);
                    if (r9_1 < r8)
                    {
                        if (i >= *arg3)
                        {
                            goto label_816ae;
                        }
                        continue;
                    }
                }
                r0_3 = var_30;
                break;
            }
            if (r0_3 != 1)
            {
                break;
            }
            bool cond:1_1 = i != 0;
            int32_t r0_7 = (r5 + 4);
            i = (i + 1);
            if (cond:1_1)
            {
                r5 = r0_7;
            }
            if (r0_1 == 0)
            {
                r5 = r0_7;
            }
        } while (i < *arg3);
    label_816ae:
    }
    int32_t r0_14;
    if (((*arg3 == 0 || (*arg3 != 0 && r0_1 == 0)) || ((*arg3 != 0 && r0_1 != 0) && i == 0)))
    {
        r0_14 = var_30;
    }
    if (((*arg3 != 0 && r0_1 != 0) && i != 0))
    {
        int32_t r9_2 = 0;
        do
        {
            int32_t var_28_1 = 0;
            sub_8f928();
            var_30 = var_28_1;
            if (var_28_1 != 2)
            {
                break;
            }
            if ((r10 != 0 && sub_81728(&var_30) == 0))
            {
                break;
            }
            r9_2 = (r9_2 + 1);
        } while (r9_2 < r8);
        r0_14 = var_30;
        if (r0_14 != 1)
        {
            i = (i - 1);
        }
    }
    if (r0_14 == 7)
    {
        sub_817e6();
        r0_14 = var_30;
    }
    *arg3 = i;
    int32_t r0_15;
    if (r0_14 == 1)
    {
        r0_15 = 0;
    }
    else if (r0_14 == 8)
    {
        r0_15 = 0xfd;
    }
    else if (r0_14 != 2)
    {
        r0_15 = 0xfe;
    }
    else
    {
        r0_15 = 0xff;
    }
    return r0_15;
}

int32_t sub_81728(int32_t* arg1)
{
    int32_t i_1 = 1;
    int32_t var_2c;
    int32_t r2_1;
    int32_t i;
    do
    {
        int32_t var_28_1 = 0;
        r2_1 = sub_8f928();
        if ((var_2c & 0xb2) != 0)
        {
            break;
        }
        i = i_1;
        i_1 = (i_1 - 1);
    } while (i != 1);
    int32_t r0_3;
    int32_t r5;
    if ((var_2c << 0x18) >= 0)
    {
        r5 = 1;
        r0_3 = 0;
    }
    else
    {
        if ((*0x20001f38 << 0x1d) < 0)
        {
            sub_8fc48(5, "wdataerr\n", r2_1);
        }
        r0_3 = 8;
        r5 = 0;
        if (arg1 != 0)
        {
            *arg1 = 8;
        }
    }
    if ((var_2c & 0x30) != 0)
    {
        r5 = 0;
        if (arg1 != 0)
        {
            *arg1 = 4;
        }
    }
    if (((0x10 & (var_2c << 3)) | r0_3) != 0)
    {
        int32_t var_24_1 = 0;
        sub_8f928();
    }
    return r5;
}

uint32_t sub_817e6()
{
    sub_8f928();
    sub_81176();
    int32_t r2 = sub_8f928();
    int32_t r4 = 0;
    if ((*0x20001f38 << 0x1d) < 0)
    {
        r2 = sub_8fc48(5, "clean; ack = %X", r4);
    }
    int32_t var_1c;
    if ((r4 == 1 && (*0x20001f38 << 0x1d) < 0))
    {
        r2 = sub_8fc48(5, "; idcode = %08X", var_1c);
    }
    uint32_t r0_7 = (*0x20001f38 << 0x1d);
    if (r0_7 < 0)
    {
        r0_7 = sub_8fc48(5, &data_98160, r2);
    }
    return r0_7;
}

int32_t sub_81876(int32_t arg1, int32_t arg2, int32_t* arg3)
{
    int32_t r9 = 0xc8;
    uint32_t r0 = *0x20001846;
    int32_t r0_1 = 0;
    if (r0 != 0)
    {
        r9 = 0x14;
    }
    if ((arg1 & 0x1a) == 0x1a)
    {
        r0_1 = 1;
    }
    uint32_t r1_1 = *0x20001844;
    if (r1_1 != 0)
    {
        r1_1 = 1;
    }
    if (arg1 == 0x10)
    {
        *0x20000044 = 0xffffffff;
    }
    int32_t r1_2 = (r1_1 & r0_1);
    int32_t r5_1;
    int32_t r10;
    if (*arg3 == 0)
    {
        r5_1 = 1;
        r10 = 0;
    }
    else
    {
        int32_t r3_1 = (arg1 & 2);
        r10 = 0;
        int32_t var_40_1 = r3_1;
        int32_t r0_3 = 0;
        int32_t r1_3 = r3_1;
        int32_t r8_1 = 0;
        if (r10 < 2)
        {
            r0_3 = 1;
        }
        if (r3_1 != 0)
        {
            r1_3 = 1;
        }
        while (true)
        {
            *(arg2 + (r10 << 2));
            sub_8f928();
            r5_1 = 0;
            if ((1 | (r1_3 & r0_3)) != 0)
            {
                break;
            }
            int32_t r0_9;
            if (r0 != 0)
            {
                r0_9 = sub_81728(nullptr);
            }
            if ((r0 == 0 || (r0 != 0 && r0_9 != 0)))
            {
                r8_1 = (r8_1 + 1);
                if ((r8_1 < r9 && r10 < *arg3))
                {
                    continue;
                }
            }
            r5_1 = 2;
            break;
        }
        r1_2 = r1_2;
    }
    *arg3 = r10;
    int32_t r0_23;
    if ((r1_2 != 1 && r5_1 == 7))
    {
        sub_817e6();
    label_81a9a:
        r0_23 = 0xfe;
    }
    if (r1_2 == 1)
    {
        uint32_t r9_1 = *0x20001845;
        uint32_t i_2 = *0x20000048;
        uint32_t i_3 = *0x2000004c;
        uint32_t i_4 = i_3;
        if (i_3 >= 0x20)
        {
            uint32_t i = i_3;
            do
            {
                sub_81d48(0x20, 0);
                i = (i - 0x20);
            } while (i > 0x1f);
            i_4 = (i_3 & 0x1f);
        }
        if (i_4 != 0)
        {
            sub_81d48(i_4, 0);
        }
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_8fc48(5, "IDL:%X\n", i_3);
        }
        if (r9_1 == 0)
        {
            sub_81176();
        }
        else
        {
            sub_81068();
        }
        uint32_t i_5 = i_2;
        if (i_2 >= 0x20)
        {
            uint32_t i_1 = i_2;
            do
            {
                sub_81d48(0x20, 0);
                i_1 = (i_1 - 0x20);
            } while (i_1 > 0x1f);
            i_5 = (i_2 & 0x1f);
        }
        if (i_5 != 0)
        {
            sub_81d48(i_5, 0);
        }
        if ((*0x20001f38 << 0x1c) < 0)
        {
            sub_8fc48(5, "IDL:%X\n", i_2);
        }
        int32_t r2_2 = sub_8f928();
        r5_1 = 0;
        if ((*0x20001f38 << 0x1d) < 0)
        {
            r2_2 = sub_8fc48(5, "bypass; ack = %X", 0);
        }
        if ((*0x20001f38 << 0x1d) < 0)
        {
            sub_8fc48(5, &data_98160, r2_2);
        }
    }
    if (((r1_2 != 1 && r5_1 != 7) || r1_2 == 1))
    {
        if (r5_1 == 1)
        {
            r0_23 = 0;
        }
        else if (r5_1 == 8)
        {
            r0_23 = 0xfd;
        }
        else
        {
            if (r5_1 != 2)
            {
                goto label_81a9a;
            }
            r0_23 = 0xff;
        }
    }
    return r0_23;
}

int32_t sub_81aac(int32_t arg1, int32_t arg2, int32_t arg3, int32_t* arg4)
{
    int32_t r4 = ((arg2 & 0xf0) | (arg1 << 0x18));
    int32_t r0 = *0x20000044;
    int32_t var_28 = r4;
    int32_t r0_1;
    if (r4 != r0)
    {
        int32_t var_24 = 1;
        r0_1 = sub_81876(0x10, &var_28, &var_24);
        if ((r0_1 == 0 && *0x20000040 != 0))
        {
            *0x20000044 = r4;
        }
    }
    if ((r4 == r0 || (r4 != r0 && r0_1 == 0)))
    {
        r0_1 = sub_8160c(((0x18 & (arg2 << 1)) | 2), arg3, arg4);
    }
    return r0_1;
}

int32_t sub_81b10(int32_t arg1, int32_t arg2, int32_t arg3, int32_t* arg4)
{
    int32_t r4 = ((arg2 & 0xf0) | (arg1 << 0x18));
    int32_t r0 = *0x20000044;
    int32_t var_28 = r4;
    int32_t r0_1;
    if (r4 != r0)
    {
        int32_t var_24 = 1;
        r0_1 = sub_81876(0x10, &var_28, &var_24);
        if ((r0_1 == 0 && *0x20000040 != 0))
        {
            *0x20000044 = r4;
        }
    }
    if ((r4 == r0 || (r4 != r0 && r0_1 == 0)))
    {
        r0_1 = sub_81876(((0x18 & (arg2 << 1)) | 2), arg3, arg4);
    }
    return r0_1;
}

int32_t sub_81b74(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t* arg6)
{
    int32_t r0_3;
    while (true)
    {
        int32_t var_30 = 0;
        int32_t var_2c;
        int32_t var_28;
        if (arg1 != 4)
        {
            var_2c = arg3;
            var_28 = 1;
            r0_3 = sub_81b10(arg1, 4, &var_2c, &var_28);
            if (r0_3 != 0)
            {
                break;
            }
        }
        if ((arg1 == 4 || (r0_3 == 0 && arg1 == 4)))
        {
            var_2c = arg4;
            var_28 = 1;
            r0_3 = sub_81b10(arg1, 8, &var_2c, &var_28);
            if (r0_3 != 0)
            {
                break;
            }
        }
        var_30 = *arg6;
        r0_3 = sub_81aac(arg1, 0xc, arg5, &var_30);
        if (r0_3 != 0xfd)
        {
            *arg6 = var_30;
            break;
        }
    }
    return r0_3;
}

int32_t sub_81bf6(int32_t arg1, int32_t arg2, int32_t arg3)
{
    int32_t var_c = 1;
    return sub_81b10(arg1, arg2, arg3, &var_c);
}

int32_t sub_81c0a(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t* arg6)
{
    int32_t var_30 = *arg6;
    *arg6 = 0;
    int32_t var_2c = arg3;
    int32_t var_28 = 1;
    int32_t i = sub_81b10(arg1, 4, &var_2c, &var_28);
    if (i == 0)
    {
        if (arg1 == 4)
        {
            var_2c = arg4;
            var_28 = 1;
            i = sub_81b10(4, 8, &var_2c, &var_28);
        }
        if ((arg1 != 4 || (arg1 == 4 && i == 0)))
        {
            i = sub_81b10(arg1, 0xc, arg5, &var_30);
            if (*0x20001844 != 0)
            {
                sub_80f96(0);
            }
            else
            {
                *arg6 = var_30;
                if (i == 0)
                {
                    do
                    {
                        int32_t r8_2 = 1;
                        int32_t r0_9;
                        int32_t r6;
                        while (true)
                        {
                            r6 = 0;
                            var_28 = 0;
                            sub_8f928();
                            r0_9 = var_2c;
                            if ((r0_9 & 0xb2) != 0)
                            {
                                break;
                            }
                            int32_t temp0_1 = r8_2;
                            r8_2 = (r8_2 - 1);
                            if (temp0_1 == 1)
                            {
                                r6 = 1;
                                break;
                            }
                        }
                        if ((r0_9 << 0x18) >= 0)
                        {
                            if (r6 == 0)
                            {
                                i = 0xfe;
                                *arg6 = (*arg6 - 1);
                            }
                            else
                            {
                                i = 0;
                            }
                            break;
                        }
                        var_28 = 0;
                        sub_8f928();
                        int32_t r0_12 = *arg6;
                        var_28 = 1;
                        i = sub_81b10(arg1, 0xc, ((arg5 + (r0_12 << 2)) - 4), &var_28);
                    } while (i == 0);
                }
            }
        }
    }
    return i;
}

int32_t sub_81d32(int32_t arg1, int32_t arg2, int32_t arg3)
{
    int32_t var_c = 1;
    return sub_81aac(arg1, arg2, arg3, &var_c);
}

int32_t sub_81d48(int32_t arg1, uint32_t arg2)
{
    int32_t i_4 = *0x20000050;
    if (i_4 == 0)
    {
        uint32_t r1 = (arg2 >> 1);
        if ((!(TEST_BIT(arg2, 0))))
        {
            *0x40020018 = 4;
        }
        else
        {
            *0x4002001a = 4;
        }
        while (true)
        {
            int32_t temp3_1 = arg1;
            arg1 = (arg1 - 1);
            if (temp3_1 < 1)
            {
                break;
            }
            *0x40020018 = 2;
            uint32_t temp4_1 = r1;
            r1 = (r1 >> 1);
            if ((!(TEST_BIT(temp4_1, 0))))
            {
                *0x40020018 = 4;
            }
            else
            {
                *0x4002001a = 4;
            }
            *0x4002001a = 2;
        }
        return arg1;
    }
    while (true)
    {
        int32_t temp1_1 = arg1;
        arg1 = (arg1 - 1);
        *0x4002001a = 2;
        if (temp1_1 < 1)
        {
            break;
        }
        uint32_t temp2_1 = arg2;
        arg2 = (arg2 >> 1);
        if ((!(TEST_BIT(temp2_1, 0))))
        {
            *0x40020018 = 4;
        }
        else
        {
            *0x4002001a = 4;
        }
        int32_t i_2 = i_4;
        int32_t i;
        do
        {
            i = i_2;
            i_2 = (i_2 - 1);
        } while (i > 1);
        *0x40020018 = 2;
        int32_t i_3 = i_4;
        int32_t i_1;
        do
        {
            i_1 = i_3;
            i_3 = (i_3 - 1);
        } while (i_1 > 1);
    }
    return arg1;
}

uint32_t sub_81dc0(int32_t arg1)
{
    int32_t i_4 = *0x20000050;
    int32_t r1;
    if (i_4 == 0)
    {
        r1 = 0;
        int32_t r4_1 = arg1;
        while (true)
        {
            int32_t temp0_1 = r4_1;
            r4_1 = (r4_1 - 1);
            if (temp0_1 < 1)
            {
                break;
            }
            int32_t r3_2 = *0x42400208;
            *0x40020018 = 2;
            r1 = (RORD((r1 | r3_2), 1));
            *0x4002001a = 2;
        }
    }
    else
    {
        r1 = 0;
        int32_t r5_1 = arg1;
        while (true)
        {
            int32_t temp1_1 = r5_1;
            r5_1 = (r5_1 - 1);
            if (temp1_1 < 1)
            {
                break;
            }
            int32_t r3_1 = *0x42400208;
            *0x40020018 = 2;
            r1 = (RORD((r1 | r3_1), 1));
            int32_t i_2 = i_4;
            int32_t i;
            do
            {
                i = i_2;
                i_2 = (i_2 - 1);
            } while (i > 1);
            *0x4002001a = 2;
            int32_t i_3 = i_4;
            int32_t i_1;
            do
            {
                i_1 = i_3;
                i_3 = (i_3 - 1);
            } while (i_1 > 1);
        }
    }
    return (r1 >> (0x20 - arg1));
}

int32_t sub_81e38()
{
    int32_t r2;
    sub_8fba2(4, "Initializing SWD \n", r2);
    sub_9007c(&data_99ac0, 2);
    sub_9012e(0x40020000, 0x10);
    sub_9012e(0x40020000, 0x40);
    sub_90190(0x40020000, 2);
    sub_9018c(0x40020000, 0x10);
    sub_9012e(0x40020000, 2);
    sub_9018c(0x40020000, 0x40);
    sub_9012e(0x40020000, 4);
    /* tailcall */
    return sub_90190(0x40021000, 0x8000);
}

int32_t sub_81ea6(int32_t arg1)
{
    sub_8fba2(4, "Initializing Mojo/UART at baud %…", arg1);
    sub_9012e(0x40020000, 0x10);
    sub_9012e(0x40020000, 0x40);
    sub_90190(0x40020000, 0x10);
    sub_9018c(0x40020000, 0x40);
    sub_9007c(&data_99af8, 2);
    sub_92000("%u %u %u\n", 1);
    sub_92000(0x80000, 1);
    int32_t r1;
    if (arg1 < 0x16e361)
    {
        sub_92372(0x40004400, 0);
        r1 = 0;
    }
    else
    {
        sub_8fba2(6, "High Baud Rate, Setting Oversamp…", 0x40023840);
        sub_92372(0x40004400, 1);
        r1 = 1;
    }
    sub_92372(0x40004c00, r1);
    int32_t var_30 = arg1;
    int32_t var_2c = 0;
    int32_t var_28 = 0x80000;
    int16_t var_24 = 0;
    sub_9229c(0x40004400, &var_30);
    sub_92360(0x40004400, 1);
    var_30 = arg1;
    int32_t var_2c_1 = 0;
    int32_t var_28_1 = 0x40000;
    int16_t var_24_1 = 0;
    sub_9229c(0x40004c00, &var_30);
    sub_92360(0x40004c00, 1);
    *0xe000e104 = 0x100000;
    *0xe000e434 = 0x80;
    int32_t r0 = sub_8fba2(3, "Target ready for host comms\n", sub_92390(0x40004c00, 0x525, 1));
    *0x20001d9c = 1;
    return r0;
}

int32_t sub_81fd6()
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0 = sub_923d6(0x40004c00, 0x525);
    if (r0 == 0)
    {
        return r0;
    }
    int32_t r12;
    /* tailcall */
    return sub_8ff96(0x20000aec, *0x40004c04, r12);
}

uint32_t sub_82004()
{
    uint32_t i = sub_8ff92(0x20000b00);
    if (i == 0)
    {
        do
        {
            int32_t r1;
            uint32_t r2;
            r1 = sub_917c2(0x40004400, sub_8fff6(0x20000b00, r1, r2));
            i = sub_8ff92(0x20000b00);
        } while (i == 0);
    }
    return i;
}

int32_t sub_82040()
{
    int32_t r2;
    sub_8fba2(4, "DeInit Debug Pins\n", r2);
    *0xe000e184 = 0x100000;
    sub_92360(0x40004c00, 0);
    sub_921d8(0x40004c00);
    sub_92000(0x80000, 0);
    sub_92360(0x40004400, 0);
    sub_921d8(0x40004400);
    sub_92000("%u %u %u\n", 0);
    int32_t r0 = sub_8fba2(3, "Target NOT ready for host comms\n", sub_9007c(&data_99b30, 4));
    *0x20001d9c = 0;
    return r0;
}

int32_t sub_820ce(int32_t arg1)
{
    int32_t r1 = 0;
    int32_t r2 = *0x20000050;
    int32_t r4_1;
    int32_t lr;
    while (true)
    {
        r4_1 = *(0x99ba0 + (r1 << 3));
        if (r4_1 >= r2)
        {
            lr = *((r1 << 3) + 0x99ba4);
            break;
        }
        r1 = (r1 + 1);
        if (r1 >= 0x17)
        {
            r4_1 = *(0x99ba0 + (r1 << 3));
            lr = 0;
            r1 = 0x17;
            break;
        }
    }
    int32_t r5_1 = (r4_1 - *(0x99ba0 + ((r1 - 1) << 3)));
    if (r5_1 >= 2)
    {
        lr = (lr + (((r4_1 - r2) * (*(((r1 - 1) << 3) + 0x99ba4) - *((r1 << 3) + 0x99ba4))) / r5_1));
    }
    if (arg1 != 0)
    {
        int32_t* r1_6 = &data_99ba4;
        int32_t r3_1 = 0;
        int32_t r2_2;
        while (true)
        {
            int32_t r4_2 = *r1_6;
            if (r4_2 <= arg1)
            {
                r2_2 = *(r1_6 - 4);
                if (r3_1 != 0)
                {
                    int32_t r3_3 = (r2_2 - *(r1_6 - 0xc));
                    if (r3_3 >= 2)
                    {
                        r2_2 = (r2_2 - ((r3_3 * (arg1 - r4_2)) / (*(r1_6 - 8) - r4_2)));
                    }
                }
                break;
            }
            r3_1 = (r3_1 + 1);
            r1_6 = &r1_6[2];
            if (r3_1 >= 0x17)
            {
                r2_2 = 0xad2;
                break;
            }
        }
        *0x20000050 = r2_2;
    }
    return lr;
}

int32_t sub_82178() __pure
{
    return 0;
}

int32_t sub_8217c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t* arg5, char* arg6)
{
    int32_t r0 = 0;
    bool cond:0 = arg1 != 1;
    if (arg1 == 1)
    {
        cond:0 = arg2 != 0xff00;
    }
    if ((!cond:0))
    {
        if (arg4 != 1)
        {
            return 2;
        }
        arg5[2] = 0x16330002;
        arg5[1] = 0;
        *arg5 = 0x5ac;  {  // {"@FIF"}}
        *arg6 = 3;
        r0 = 1;
    }
    return r0;
}

int32_t sub_821b0(int32_t* arg1, int32_t arg2)
{
    *0x200018ad = arg2;
    int32_t r2_1 = sub_97f48(0x200018b0, arg1, (arg2 << 2));
    if ((sub_8fb96() >= 3 && arg2 != 0))
    {
        int32_t r5_1 = 0;
        do
        {
            int32_t r0_1 = arg1[r5_1];
            r5_1 = (r5_1 + 1);
            int32_t var_30_1 = r0_1;
            int32_t var_38_1 = (((r0_1 >> 0xa) & 0x3ff) * 0x32);
            *(0x99c58 + ((r0_1 >> 0x1e) << 2));
            int32_t var_34_1 = ((r0_1 & 0x3ff) * 0xa);
            r2_1 = sub_8fba2(3, "Rcpt Got PDO[%d]: %s %dmV %dmA (…", r5_1);
        } while (arg2 != r5_1);
    }
    uint32_t r0_6;
    int32_t r2_4;
    int32_t r2_5;
    int32_t r11_1;
    if (*0x20001850 != 0)
    {
        r0_6 = *0x20001d99;
        if (r0_6 == 8)
        {
            int32_t r0_21 = *0x200018d4;
            r2_5 = ((r0_21 >> 0x1c) & 7);
            int32_t r1_18 = *(&arg1[r2_5] - 4);
            *0x200018d0 = r0_21;
            *0x200018cc = r1_18;
        }
        else
        {
            int32_t r0_7;
            if (r0_6 != 9)
            {
                sub_832cc(7);
                r0_7 = *arg1;
                int32_t var_38_4 = 0;
                int32_t var_34_6 = 0;
            }
            else
            {
                sub_8fba2(3, "Received SourceCap message on re…", r2_1);
                sub_84d56(0);
                sub_87b88(0);
                sub_832cc(7);
                r0_7 = *arg1;
                int32_t var_38_2 = 0;
                int32_t var_34_2 = 0;
            }
            r11_1 = sub_9113a(arg1, arg2, 0x1388, ((r0_7 & 0x3ff) * 0xa), 0, 0);
            int32_t r0_26 = *arg1;
            *0x200018d0 = r11_1;
            *0x200018cc = r0_26;
            r2_4 = ((r11_1 >> 0x1c) & 7);
        label_82426:
            sub_8fba2(3, "Rcpt Request PDO %d\n", r2_4);
        }
    }
    if ((*0x20001850 == 0 && (*0x20001858 == 0 || (*0x20001858 != 0 && *0x2000187e != 0))))
    {
        uint32_t r0_10 = *0x20001d99;
        if (r0_10 != 4)
        {
            int32_t r0_20;
            if (r0_10 == 3)
            {
                uint32_t r0_11 = *0x20001884;
                if (r0_11 != 0)
                {
                    uint32_t i;
                    do
                    {
                        int32_t r0_13 = *((r0_11 << 2) + 0x200018d4);
                        int32_t var_38_3;
                        int32_t* r0_16;
                        uint32_t r1_4;
                        int32_t r1_12;
                        int32_t r2_3;
                        int32_t r3_2;
                        int32_t r4_1;
                        if (0 == (r0_13 >> 0x1e))
                        {
                            int32_t var_34_4 = 0;
                            int32_t var_30_3 = 0x1000000;
                            r4_1 = ((r0_13 & 0x3ff) * 0xa);
                            r1_12 = arg2;
                            var_38_3 = r4_1;
                            r2_3 = (((r0_13 >> 0xa) & 0x3ff) * 0x32);
                            r0_16 = arg1;
                            r3_2 = r2_3;
                        }
                        else
                        {
                            r1_4 = (r0_13 >> 0x1e);
                            if (r1_4 == 1)
                            {
                                int32_t var_34_5 = 0;
                                int32_t var_30_4 = 0x1000000;
                                r3_2 = (((r0_13 >> 0x14) & 0x3ff) * 0x32);
                                r4_1 = ((0x3d090 * (r0_13 & 0x3ff)) / r3_2);
                                var_38_3 = r4_1;
                                r2_3 = (((r0_13 >> 0xa) & 0x3ff) * 0x32);
                            }
                            if (r1_4 == 2)
                            {
                                int32_t var_34_3 = 0;
                                int32_t var_30_2 = 0x1000000;
                                r4_1 = ((r0_13 & 0x3ff) * 0xa);
                                var_38_3 = r4_1;
                                r2_3 = (((r0_13 >> 0xa) & 0x3ff) * 0x32);
                                r3_2 = (((r0_13 >> 0x14) & 0x3ff) * 0x32);
                            }
                            if ((r1_4 == 1 || r1_4 == 2))
                            {
                                r0_16 = arg1;
                                r1_12 = arg2;
                            }
                        }
                        if ((0 == (r0_13 >> 0x1e) || (0 != (r0_13 >> 0x1e) && (r1_4 == 1 || r1_4 == 2))))
                        {
                            r11_1 = sub_9121e(r0_16, r1_12, r2_3, r3_2, var_38_3, 0, 0x1000000);
                            int32_t r0_19 = ((r11_1 >> 0x1c) & 7);
                            if (r11_1 != 0x1500280a)
                            {
                                int32_t r8_2 = *(&arg1[r0_19] - 4);
                                int32_t r0_39;
                                char r1_29;
                                int32_t* r2_8;
                                if (r0_19 != 1)
                                {
                                    int32_t r0_40 = 0;
                                    uint32_t r5_4;
                                    uint32_t r9_2;
                                    uint32_t r0_70;
                                    int32_t r6_1;
                                    if (0 == (r8_2 >> 0x1e))
                                    {
                                        r5_4 = (((r8_2 >> 0xa) & 0x3ff) * 0x32);
                                        int32_t r0_58;
                                        int32_t r1_37;
                                        r0_58 = sub_974c0(r5_4);
                                        r6_1 = ((r8_2 & 0x3ff) * 0xa);
                                        int32_t r0_64;
                                        int32_t r1_38;
                                        r0_64 = sub_9741c(sub_97588(r6_1));
                                        int32_t r0_65;
                                        int32_t r1_39;
                                        r0_65 = sub_975e0(r0_64, r1_38, 0x33333333, 0xbfc33333);
                                        int32_t r0_67;
                                        int32_t r1_41;
                                        r0_67 = sub_9707c(r0_58, r1_37, r0_65, r1_39);
                                        r9_2 = sub_97490(r0_67, r1_41);
                                        if (sub_90194(0x40020400, sub_4000) != 0)
                                        {
                                        label_826fc:
                                            r0_40 = r6_1;
                                        }
                                        else
                                        {
                                            r0_70 = (0xf4240 / r5_4);
                                        label_82716:
                                            r0_40 = (r6_1 - r0_70);
                                        }
                                        if (r6_1 > r4_1)
                                        {
                                            int32_t r8_4 = (r8_2 & 0x3ff);
                                            r11_1 = ((r8_4 | (r11_1 & 0xfff00000)) | (r8_4 << 0xa));
                                        }
                                    }
                                    else
                                    {
                                        uint32_t r1_30 = (r8_2 >> 0x1e);
                                        if ((r1_30 != 1 && r1_30 != 2))
                                        {
                                            r5_4 = 0;
                                            r9_2 = 0;
                                        }
                                        uint32_t r1_36;
                                        if (r1_30 == 2)
                                        {
                                            uint32_t r0_42 = (0x32 * ((r8_2 >> 0xa) & 0x3ff));
                                            int32_t r0_43;
                                            int32_t r1_31;
                                            r0_43 = sub_974c0(r0_42);
                                            r6_1 = ((r8_2 & 0x3ff) * 0xa);
                                            int32_t r0_49;
                                            int32_t r1_32;
                                            r0_49 = sub_9741c(sub_97588(r6_1));
                                            int32_t r0_50;
                                            int32_t r1_33;
                                            r0_50 = sub_975e0(r0_49, r1_32, 0x33333333, 0xbfc33333);
                                            int32_t r0_52;
                                            int32_t r1_35;
                                            r0_52 = sub_9707c(r0_43, r1_31, r0_50, r1_33);
                                            r9_2 = sub_97490(r0_52, r1_35);
                                            r5_4 = (((r8_2 >> 0x14) & 0x3ff) * 0x32);
                                            if (sub_90194(0x40020400, sub_4000) != 0)
                                            {
                                                goto label_826fc;
                                            }
                                            r1_36 = r0_42;
                                        }
                                        if (r1_30 == 1)
                                        {
                                            r5_4 = (((r8_2 >> 0x14) & 0x3ff) * 0x32);
                                            r6_1 = ((0x3d090 * (r8_2 & 0x3ff)) / r5_4);
                                            uint32_t r0_76 = (0x32 * ((r8_2 >> 0xa) & 0x3ff));
                                            int32_t r0_77;
                                            int32_t r1_42;
                                            r0_77 = sub_974c0(r0_76);
                                            int32_t r0_80;
                                            int32_t r1_43;
                                            r0_80 = sub_9741c(sub_97588(r6_1));
                                            int32_t r0_81;
                                            int32_t r1_44;
                                            r0_81 = sub_975e0(r0_80, r1_43, 0x33333333, 0xbfc33333);
                                            int32_t r0_83;
                                            int32_t r1_46;
                                            r0_83 = sub_9707c(r0_77, r1_42, r0_81, r1_44);
                                            r9_2 = sub_97490(r0_83, r1_46);
                                            if (sub_90194(0x40020400, sub_4000) != 0)
                                            {
                                                goto label_826fc;
                                            }
                                            r1_36 = r0_76;
                                        }
                                        if ((r1_30 == 1 || r1_30 == 2))
                                        {
                                            r0_70 = (0xf4240 / r1_36);
                                            goto label_82716;
                                        }
                                    }
                                    int32_t r1_49 = ((r0_40 / 0xa) & 0x3ff);
                                    int32_t r2_14 = r1_49;
                                    if (*0x20001880 != 2)
                                    {
                                        r2_14 = 0x12c;
                                    }
                                    if (r0_40 <= 0xbb8)
                                    {
                                        r2_14 = r1_49;
                                    }
                                    int32_t r1_50;
                                    int32_t r3_10;
                                    r3_10 = HIGHD((r9_2 * 0x51eb851f));
                                    r1_50 = LOWD((r9_2 * 0x51eb851f));
                                    r0_39 = (((((0xffc00 & (r3_10 << 6)) & 0xc00fffff) | (((r5_4 / 0x32) & 0x3ff) << 0x14)) | r2_14) | 0x80000000);
                                    r2_8 = 0x20001860;
                                    r1_29 = 2;
                                }
                                else
                                {
                                    int32_t r8_3 = (r8_2 & 0x3ff);
                                    int32_t r1_24 = (r8_3 * 5);
                                    int32_t r3_6 = (r1_24 << 1);
                                    if (sub_90194(0x40020400, sub_4000) == 0)
                                    {
                                        r3_6 = (0xffffff38 + (r1_24 << 1));
                                    }
                                    int32_t r1_27 = (((r3_6 / 0xa) & 0x3ff) | 0x22019000);
                                    r0_39 = r1_27;
                                    if (r3_6 > 0xbb8)
                                    {
                                        r0_39 = 0x2201912c;
                                    }
                                    if (*0x20001880 == 2)
                                    {
                                        r0_39 = r1_27;
                                    }
                                    r2_8 = 0x2000185c;
                                    r11_1 = ((r8_3 | (r11_1 & 0xfff00000)) | (r8_3 << 0xa));
                                    r1_29 = 1;
                                }
                                *r2_8 = r0_39;
                                *0x2000011c = r1_29;
                                r2_4 = ((r11_1 >> 0x1c) & 7);
                                r0_20 = *(&arg1[r2_4] - 4);
                                goto label_8239a;
                            }
                        }
                        i = r0_11;
                        r0_11 = (r0_11 - 1);
                    } while (i != 1);
                }
            }
            r11_1 = 0x11000000;
            r0_20 = *arg1;
            r2_4 = 1;
        label_8239a:
            *0x200018d0 = r11_1;
            *0x200018cc = r0_20;
            goto label_82426;
        }
        *0x20001885 = 1;
        int32_t r0_35 = *0x20001d8c;
        *0x200018cc = *0x20001d88;
        *0x200018d0 = r0_35;
        r2_5 = ((r0_35 >> 0x1c) & 7);
    }
    if (((*0x20001850 != 0 && r0_6 == 8) || (*0x20001850 == 0 && (*0x20001858 == 0 || (*0x20001858 != 0 && *0x2000187e != 0)))))
    {
        sub_8fba2(3, "Rcpt Request PDO %d\n", r2_5);
        r11_1 = *0x200018d0;
    }
    if (((*0x20001850 == 0 && *0x20001858 != 0) && *0x2000187e == 0))
    {
        int32_t r4_2 = ((*arg1 & 0x3ff) * 5);
        int32_t r5_2 = (r4_2 << 1);
        r11_1 = sub_9113a(arg1, arg2, 0x1388, r5_2, 0, 0);
        if (sub_90194(0x40020400, sub_4000) == 0)
        {
            r5_2 = (0xffffff38 + (r4_2 << 1));
        }
        if (r5_2 >= 0xbb8)
        {
            r5_2 = 0xbb8;
        }
        *0x20001854 = (0x22019000 | (r5_2 / 0xa));
        sub_8fba2(3, "RCPT charging current of %d (RDO…", r5_2);
        int32_t r0_34 = *arg1;
        *0x200018d0 = r11_1;
        *0x200018cc = r0_34;
    }
    return r11_1;
}

uint32_t sub_827b2(int32_t* arg1)
{
    int32_t r1_4;
    if ((*0x20001858 != 0 && *0x2000187e == 0))
    {
        r1_4 = 0x1912c;
    }
    if (((*0x20001858 == 0 || (*0x20001858 != 0 && *0x2000187e != 0)) && *0x20001884 == 0))
    {
        r1_4 = 0x19000;
    }
    if (((*0x20001858 != 0 && *0x2000187e == 0) || ((*0x20001858 == 0 || (*0x20001858 != 0 && *0x2000187e != 0)) && *0x20001884 == 0)))
    {
        *arg1 = r1_4;
        return 1;
    }
    if (((*0x20001858 == 0 || (*0x20001858 != 0 && *0x2000187e != 0)) && *0x20001884 != 0))
    {
        sub_97f48(arg1, 0x200018d8, (*0x20001884 << 2));
        return *0x20001884;
    }
}

int32_t sub_82802(int32_t arg1)
{
    sub_8fba2(4, "DR_Swap Result: %d\n", arg1);
    *0x2000187b = arg1;
    return 0;
}

int32_t sub_82826(int32_t arg1)
{
    sub_8fba2(4, "PR_Swap Result: %d\n", arg1);
    return 0;
}

int32_t sub_8283e(int32_t arg1)
{
    sub_8fba2(4, "VConn_Swap Result: %d\n", arg1);
    *0x2000187a = arg1;
    return 0;
}

int32_t sub_82862(int32_t arg1)
{
    if (arg1 == 0)
    {
        sub_8b7d0(0);
        if (sub_849b6(1) != 0)
        {
            uint32_t r0_4 = *0x20001d99;
            int32_t r0_6;
            if ((r0_4 - 7) <= 2)
            {
                sub_84a16(1, sub_9113a(0x200018b0, *0x200018ad, 0x1388, ((*0x200018b0 & 0x3ff) * 0xa), 0, 0));
                r0_6 = 7;
            }
            if (((r0_4 - 7) > 2 && r0_4 != 5))
            {
                sub_84a16(1, 0x11000000);
                r0_6 = 0;
            }
            if (((r0_4 - 7) <= 2 || ((r0_4 - 7) > 2 && r0_4 != 5)))
            {
                sub_832cc(r0_6);
            }
            *0x2000011c = 1;
            *0x200018f4 = 0;
            *0x20001884 = 0;
            *0x2000188b = 0;
            int32_t r0_8;
            int32_t r1_5;
            r1_5 = HIGHD((*0x20000524 * 0xcccccccd));
            r0_8 = LOWD((*0x20000524 * 0xcccccccd));
            *0x2000185c = (((r1_5 >> 3) & 0x3ff) | 0x22019000);
        }
    }
    else
    {
        uint32_t r0 = *0x20001d99;
        int32_t r0_2;
        if ((r0 > 9 || (r0 <= 9 && ((1 << r0) & 0x3a0) == 0)))
        {
            r0_2 = 1;
        }
        if ((r0 <= 9 && ((1 << r0) & 0x3a0) != 0))
        {
            r0_2 = 2;
        }
        sub_8b7d0(r0_2);
    }
    return 0;
}

int32_t sub_8295e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t* arg5, char* arg6)
{
    char r0;
    int32_t r0_4;
    char* r0_9;
    int32_t r5_1;
    if (arg1 == 2)
    {
        if (arg2 == 0x5ac)  {  // {"@FIF"}}
        {
            r5_1 = 2;
            if (arg4 > 0x13)
            {
                if (arg4 == 0x14)
                {
                    r5_1 = 2;
                    if ((arg3 == 1 && *0x200018f5 == 1))
                    {
                        r0_4 = 0xa0908;
                        goto label_82a46;
                    }
                }
                else if (arg4 == 0x15)
                {
                    r5_1 = 2;
                    if ((arg3 == 1 && *0x200018f5 == 1))
                    {
                        if (*arg6 != 2)
                        {
                            goto label_82ba0;
                        }
                        int32_t r0_16 = *arg5;
                        int32_t r1_3 = arg5[1];
                        int32_t var_1c = 0;
                        int32_t r1_4;
                        if (r1_3 == 3)
                        {
                            r1_4 = 0x2ee;
                        }
                        if (r1_3 == 2)
                        {
                            r1_4 = 0x5dc;
                        }
                        if ((r1_3 == 3 || r1_3 == 2))
                        {
                            var_1c = r1_4;
                            r1_3 = 2;
                        }
                        if (sub_8cb9a(((((1 << ((r0_16 & 0xf) - 1)) & 0xf) & 0xfffff0ff) | ((r1_3 & 0xf) << 8)), &var_1c) == 0x52524521)
                        {
                            goto label_82ba0;
                        }
                        r0 = 0;
                        goto label_829f0;
                    }
                }
                else if (arg4 == 0x16)
                {
                    r5_1 = 2;
                    if ((arg3 == 1 && *0x200018f5 == 1))
                    {
                        if (*arg6 != 1)
                        {
                            goto label_82ba0;
                        }
                        int32_t r5_2 = *arg5;
                        sub_8d038(1);
                        if (r5_2 != 0)
                        {
                            *0x20000514 = r5_2;
                            sub_8d038(0);
                        }
                        *arg6 = 0;
                        goto label_829f2;
                    }
                }
                goto label_82a00;
            }
            if (arg4 == 3)
            {
                r0_4 = 0x30006;
            label_82a46:
                r5_1 = 1;
                *arg5 = r0_4;
                *arg6 = 1;
                goto label_82a00;
            }
            if (arg4 != 4)
            {
                if (arg4 == 5)
                {
                    *arg6 = 0;
                    if ((arg3 != 7 && arg3 != 1))
                    {
                        goto label_82ba0;
                    }
                    *0x200018f5 = 0;
                    goto label_829f2;
                }
                goto label_82a00;
            }
            *arg6 = 0;
            if (arg3 != 1)
            {
                goto label_82ba0;
            }
            r5_1 = 1;
            r0_9 = 0x200018f5;
        }
        else
        {
            if (arg2 != 0xff00)
            {
                goto label_829f6;
            }
            if (arg4 != 2)
            {
                if (arg4 != 1)
                {
                label_82ba0:
                    r5_1 = 2;
                }
                else
                {
                    arg5[1] = 0;
                    *arg5 = 0x1c0005ac;
                    arg5[2] = 0x16340002;
                    arg5[3] = (0x1083030 | (*0x20001ee8 << 0x1c));
                    r0 = 4;
                label_829f0:
                    *arg6 = r0;
                label_829f2:
                    r5_1 = 1;
                }
                goto label_82a00;
            }
        }
    }
    if ((arg1 == 1 && arg2 != 0x5ac))  {  // {"@FIF"}}
    {
        if (arg2 != 0xff00)
        {
            goto label_829f6;
        }
        if (arg4 != 2)
        {
            if (arg4 != 1)
            {
                goto label_82ba0;
            }
            arg5[2] = 0x16340002;
            arg5[1] = 0;
            *arg5 = 0x800005ac;
            r0 = 3;
            goto label_829f0;
        }
    }
    if (((arg1 == 1 && arg2 != 0x5ac) || (arg1 == 2 && arg2 != 0x5ac)))  {  // {"@FIF"}}
    {
        r0_4 = 0x5ac0000;
        goto label_82a46;
    }
    if ((arg1 == 1 && arg2 == 0x5ac))  {  // {"@FIF"}}
    {
        if (arg4 == 5)
        {
            if ((arg3 != 7 && arg3 != 1))
            {
                goto label_82ba0;
            }
            sub_8b30a();
            *0x2000188a = 0;
            goto label_829f2;
        }
        if (arg4 != 4)
        {
            if (arg4 == 3)
            {
                r0_4 = 2;
                goto label_82a46;
            }
            r5_1 = 0;
            if ((arg4 == 6 && *0x2000188a == 1))
            {
                r5_1 = 0;
                sub_88228(0, *arg5, &arg5[1], (*arg6 - 1));
            }
            goto label_82a00;
        }
        if (arg3 != 1)
        {
            goto label_82ba0;
        }
        sub_89154(0);
        r5_1 = 1;
        sub_8b30a();
        r0_9 = 0x2000188a;
    }
    if (((arg1 == 2 && arg2 == 0x5ac) || (arg1 == 1 && arg2 == 0x5ac)))  {  // {"@FIF"}}
    {
        *r0_9 = 1;
        goto label_82a00;
    }
    if ((arg1 != 2 && arg1 != 1))
    {
    label_829f6:
        r5_1 = 0;
    label_82a00:
        return r5_1;
    }
}

int32_t sub_82ba8(int32_t arg1, int32_t arg2, int16_t* arg3, char* arg4, char* arg5)
{
    if ((arg2 == 0x5ac && *0x2000188a == 1))  {  // {"@FIF"}}
    {
        sub_88228(0, *arg3, arg4, *arg5);
    }
    return 0;
}

uint32_t sub_82bdc(int32_t* arg1)
{
    uint32_t r0 = *0x20001d99;
    if (r0 == 5)
    {
        *0x2000011c = 1;
        *0x2000185c = *0x20001854;
    }
    else if ((r0 - 7) <= 2)
    {
        uint32_t r0_4 = *0x200018ad;
        if (r0_4 == 0)
        {
            r0_4 = 0;
        }
        else
        {
            uint32_t i = 0;
            int32_t r9_1 = 0;
            do
            {
                int32_t r10_1 = *(0x200018b0 + (i << 2));
                uint32_t r1_1;
                uint32_t r1_7;
                int32_t r1_9;
                if (0 != (r10_1 >> 0x1e))
                {
                    r1_1 = (r10_1 >> 0x1e);
                    if ((r1_1 != 1 && r1_1 != 2))
                    {
                        r1_9 = r10_1;
                    }
                    if (r1_1 == 1)
                    {
                        int32_t r5_1 = (((r10_1 >> 0x14) & 0x3ff) * 0x32);
                        uint32_t r6_1 = ((0x3d090 * (r10_1 & 0x3ff)) / r5_1);
                        if (sub_90194(0x40020400, sub_4000) == 0)
                        {
                            r6_1 = (r6_1 - (0xf4240 / (0x32 * ((r10_1 >> 0xa) & 0x3ff))));
                        }
                        uint32_t r0_20 = r6_1;
                        if (*0x20001880 != 2)
                        {
                            r0_20 = 0xbb8;
                        }
                        if (r6_1 <= 0xbb8)
                        {
                            r0_20 = r6_1;
                        }
                        r1_7 = ((r5_1 * r0_20) / 0x3d090);
                    }
                }
                if ((0 == (r10_1 >> 0x1e) || (0 != (r10_1 >> 0x1e) && r1_1 == 2)))
                {
                    int32_t r2_1 = ((r10_1 & 0x3ff) * 0xa);
                    if (sub_90194(0x40020400, sub_4000) == 0)
                    {
                        r2_1 = (r2_1 - (0xf4240 / (0x32 * ((r10_1 >> 0xa) & 0x3ff))));
                    }
                    uint32_t r0_10 = (r2_1 / 0xa);
                    r1_7 = r0_10;
                    if (*0x20001880 != 2)
                    {
                        r1_7 = 0x12c;
                    }
                    if (r2_1 <= 0xbb8)
                    {
                        r1_7 = r0_10;
                    }
                }
                if ((((0 != (r10_1 >> 0x1e) && r1_1 == 1) || 0 == (r10_1 >> 0x1e)) || (0 != (r10_1 >> 0x1e) && r1_1 == 2)))
                {
                    r1_9 = ((r1_7 & 0x3ff) | (((r10_1 >> 0xa) & 0x3fffff) << 0xa));
                    r0_4 = *0x200018ad;
                }
                r9_1 = (r9_1 + 1);
                *(0x2000185c + (i << 2)) = r1_9;
                i = r9_1;
            } while (i < r0_4);
        }
        *0x2000011c = r0_4;
        sub_832cc(8);
    }
    uint32_t r0_27;
    if ((r0 == 5 || (r0 != 5 && *0x2000011c != 0)))
    {
        uint32_t r1_11 = 0;
        int32_t r6_2 = 0;
        do
        {
            int32_t r0_25 = *(0x2000185c + (r1_11 << 2));
            arg1[r1_11] = r0_25;
            int32_t var_28_1 = r0_25;
            int32_t var_2c_1 = ((r0_25 & 0x3ff) * 0xa);
            *(0x99c58 + ((r0_25 >> 0x1e) << 2));
            int32_t var_30_1 = (((r0_25 >> 0xa) & 0x3ff) * 0x32);
            sub_8fba2(3, "Plug Send PDO[%d]: %s %dmV %dmA …", (r1_11 + 1));
            r6_2 = (r6_2 + 1);
            r0_27 = *0x2000011c;
            r1_11 = r6_2;
        } while (r1_11 < r0_27);
    }
    if ((r0 != 5 && *0x2000011c == 0))
    {
        r0_27 = 0;
    }
    *arg1 = ((*arg1 & 0xfbffffff) | ((*0x200004ec & 1) << 0x1a));
    return r0_27;
}

int32_t sub_82e1c(int32_t arg1)
{
    int32_t r2 = ((arg1 >> 0x1c) & 7);
    int32_t r4_1;
    if (r2 == 0)
    {
    label_82e3c:
        r4_1 = 2;
    }
    else
    {
        if (r2 > *0x2000011c)
        {
            goto label_82e3c;
        }
        int32_t r8_1 = (arg1 & 0x4000000);
        int32_t r5_1 = ((arg1 & 0x3ff) * 0xa);
        int32_t r3_5 = (((arg1 >> 0xa) & 0x3ff) * 0xa);
        int32_t r12_1 = *((r2 << 2) + 0x20001858);
        int32_t r6_1 = ((r12_1 & 0x3ff) * 0xa);
        if ((r8_1 != 0 || (r8_1 == 0 && r5_1 > r6_1)))
        {
            r4_1 = 2;
            if ((r3_5 <= r5_1 && (r8_1 != 0 && r3_5 <= r6_1)))
            {
                goto label_82ea4;
            }
        }
        if ((r8_1 == 0 && r5_1 <= r6_1))
        {
            if (r3_5 > r5_1)
            {
                goto label_82e3c;
            }
        label_82ea4:
            *0x200018d4 = arg1;
            *0x200018f8 = r12_1;
            if (r2 == 1)
            {
                *0x200018f8 = ((r12_1 & 0xfbffffff) | ((*0x200004ec & 1) << 0x1a));
            }
            *0x200018f4 = r2;
            int32_t r2_1 = sub_8fba2(3, "Plug Request PDO %d\n", r2);
            r4_1 = 1;
            if ((r8_1 != 0 && *0x20001d99 == 0))
            {
                sub_8fba2(3, "Detected Mismatch\n", r2_1);
                r4_1 = 1;
                sub_832cc(1);
            }
        }
    }
    return r4_1;
}

int32_t sub_82f12(int32_t* arg1, int32_t arg2)
{
    sub_97f48(0x200018d8, arg1, (arg2 << 2));
    *0x20001884 = arg2;
    return 0;
}

int32_t sub_82f36(int32_t* arg1, int32_t arg2)
{
    int32_t* r4 = arg1;
    if ((sub_8fb96() >= 3 && arg2 != 0))
    {
        int32_t r6_1 = 0;
        do
        {
            int32_t r0_1 = r4[r6_1];
            r6_1 = (r6_1 + 1);
            int32_t var_28_1 = r0_1;
            int32_t var_30_1 = (((r0_1 >> 0xa) & 0x3ff) * 0x32);
            *(0x99c58 + ((r0_1 >> 0x1e) << 2));
            int32_t var_2c_1 = ((r0_1 & 0x3ff) * 0xa);
            sub_8fba2(3, "Plug Got PDO[%d]: %s %dmV %dmA (…", r6_1);
        } while (arg2 != r6_1);
    }
    int32_t r0_6 = sub_9113a(r4, arg2, *0x200004e8, *0x200004ea, 0, 0x1000000);
    uint32_t r2_3 = *0x2000188b;
    if ((r2_3 < 5 || (r2_3 >= 5 && (r0_6 & 0x4000000) == 0)))
    {
        r4 = (&r4[((r0_6 >> 0x1c) & 7)] - 4);
    }
    if ((r2_3 >= 5 && (r0_6 & 0x4000000) != 0))
    {
        r0_6 = 0x11000000;
    }
    int32_t r3_6 = *r4;
    *0x2000188b = (r2_3 + 1);
    *0x200018f8 = r3_6;
    *0x200018d4 = (r0_6 | ((*0x200004ec & 1) << 0x19));
    sub_8fba2(3, "Plug Request PDO %d\n", ((r0_6 >> 0x1c) & 7));
    return *0x200018d4;
}

int32_t sub_83020(int32_t* arg1)
{
    int32_t r1_1;
    int32_t r3;
    r3 = HIGHD((*0x200004ea * 0xcccccccd));
    r1_1 = LOWD((*0x200004ea * 0xcccccccd));
    int32_t r1_2 = ((r3 >> 3) & 0x3ff);
    uint32_t r2 = *0x200004e8;
    *arg1 = (((r1_2 | ((*0x200004ec & 1) << 0x1a)) | 0x22000000) | 0x19000);
    if (r2 == 0x1388)
    {
        return 1;
    }
    int32_t r2_1;
    int32_t r3_6;
    r3_6 = HIGHD((r2 * 0x51eb851f));
    r2_1 = LOWD((r2 * 0x51eb851f));
    arg1[1] = (r1_2 | (0xffc00 & (r3_6 << 6)));
    return 2;
}

int32_t sub_83086(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    if (arg4 >= 2)
    {
        int32_t r0 = 1;
        do
        {
            uint32_t r12_1 = r0;
            if (*(arg3 + (r12_1 << 2)) == 2)
            {
                sub_84c40(0, 1, 0x5ac, r12_1, 4, nullptr, 0, 0x830d5);  {  // {"@FIF"}}
                break;
            }
            r0 = (r0 + 1);
        } while (r0 < arg4);
    }
    return 0;
}

int32_t sub_830d6()
{
    sub_8b30a();
    *0x2000188a = 1;
    return 0;
}

int32_t sub_830f4(int32_t arg1, int32_t arg2, int32_t arg3)
{
    int32_t* r0_15;
    if (arg1 == 1)
    {
        if (arg2 != 0)
        {
            sub_8bb82(arg2);
            sub_8bc22(1);
            sub_84d3a(1);
        }
        else
        {
            sub_8bc22(0);
            sub_84d56(1);
            uint32_t r0_16 = *0x20001d99;
            if ((*0x20001850 == 0 && (r0_16 & 0xfe) == 4))
            {
                sub_84d56(0);
                sub_87b88(0);
                sub_87af8(0);
            }
            if ((*0x20001850 != 0 && (r0_16 - 7) <= 2))
            {
                sub_832cc(0);
                sub_84d56(0);
                sub_87b88(0);
            }
            if (((*0x20001850 == 0 && (r0_16 & 0xfe) == 4) || (*0x20001850 != 0 && (r0_16 - 7) <= 2)))
            {
                r0_16 = *0x20001d99;
            }
            *0x20001854 = 0;
            if (r0_16 == 3)
            {
                sub_832cc(0);
            }
            r0_15 = 0x20001d88;
        }
    }
    if ((arg1 == 0 && arg2 == 0))
    {
        sub_8bbd2(0);
        sub_8b7d0(0);
        sub_8b87c(0, 0, 2, 2);
        sub_82040();
        j_sub_94900(0);
        sub_84d56(0);
        sub_84824();
        r0_15 = 0x20001d80;
    }
    if (((arg1 == 0 && arg2 == 0) || (arg1 == 1 && arg2 == 0)))
    {
        r0_15[1] = 0;
        *r0_15 = 0;
    }
    if ((arg1 == 0 && arg2 != 0))
    {
        if ((*0x20001850 == 0 || (*0x20001850 != 0 && (*0x20001d99 - 7) < 3)))
        {
            sub_8bb32(arg2);
            sub_8bbd2(1);
            *0x20001851 = 0;
            if (arg3 == 1)
            {
                uint32_t r0_5 = *0x20001d99;
                int32_t r0_7;
                if ((r0_5 > 9 || (r0_5 <= 9 && ((1 << r0_5) & 0x3a0) == 0)))
                {
                    r0_7 = 1;
                }
                if ((r0_5 <= 9 && ((1 << r0_5) & 0x3a0) != 0))
                {
                    r0_7 = 2;
                }
                sub_8b7d0(r0_7);
                if (((*0x20001f24 << 0x1d) < 0 && *0x200004f8 == 0))
                {
                    *0x20001851 = 1;
                }
            }
            sub_8b87c(arg2, 1, 2, 0);
            sub_84d3a(0);
            if ((*0x20000534 << 0x1f) != 0)
            {
                sub_8fba2(3, "Resetting main FIFOs\n", 0xdc);
                sub_9006e(0x20000b00);
                sub_9006e(0x20000aec);
            }
            sub_8e6ee(2);
        }
        if ((*0x20001850 != 0 && (*0x20001d99 - 7) >= 3))
        {
            sub_8fba2(3, "Charger must be connected first …", arg3);
            sub_87b88(0);
        }
    }
    return 0;
}

uint32_t sub_832cc(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0 = *0x20001d99;
    if (r0 == arg1)
    {
        return r0;
    }
    *(0x99c68 + (arg1 << 2));
    sub_8fba2(6, "Charge-through: %s -> %s\n", *(0x99c68 + (r0 << 2)));
    *0x20001d99 = arg1;
    /* tailcall */
    return sub_80746(6, arg1, *0x20006064);
}

int32_t sub_83318()
{
    int32_t r1 = *0x200004fc;
    char* r1_1;
    if (r1 == 2)
    {
        r1_1 = 0x20001858;
    }
    if (r1 == 3)
    {
        r1_1 = 0x20001850;
    }
    if ((r1 == 2 || r1 == 3))
    {
        *r1_1 = 1;
    }
    int32_t r0 = *0x20000524;
    *0x20001860 = 0;
    *0x2000011c = 1;
    *0x2000185c = (((r0 / 0xa) & 0x3ff) | 0x22019000);
    sub_8b01c();
    return 0;
}

int32_t sub_83384()
{
    if (sub_849b6(0) != 0)
    {
        uint32_t r0_1 = *0x20001d98;
        if (r0_1 <= 7)
        {
            char r0_13;
            char r0_31;
            int32_t r1_2;
            char* r5_1;
            switch (jump_table_833ae[r0_1])
            {
                case 8:
                {
                    if (sub_96dd8(0) >= 0x44)
                    {
                        *0x20001d98 = 1;
                        sub_80746(5, 1, *0x20006064);
                        *0x20001879 = 0;
                        *0x2000187a = 0;
                        sub_8e6ee(3);
                        uint32_t r0_3 = sub_95b5c(0);
                        sub_95bac(0);
                        int32_t var_28_1 = *0x200004f0;
                        sub_8fba2(4, "DR:%d PR:%d Default:%d\n", r0_3);
                    }
                    break;
                }
                case 0x3e:
                {
                    r5_1 = 0x2000187a;
                    uint32_t r0_6 = *0x2000187a;
                    if (r0_6 != 0xff)
                    {
                        if ((r0_6 == 0 && *0x20001851 == 1))
                        {
                            sub_84bac(0);
                        label_837aa:
                            r0_31 = -1;
                            goto label_837ac;
                        }
                        *0x20001d98 = 2;
                        sub_80746(5, 2, *0x20006064);
                        *0x20001879 = 0;
                        *0x2000187b = 0;
                    }
                    break;
                }
                case 0x55:
                {
                    r5_1 = 0x2000187b;
                    uint32_t r0_8 = *0x2000187b;
                    if (r0_8 <= 3)
                    {
                        char r0_30;
                        int32_t r1_13;
                        if ((jump_table_8346c[r0_8] == 0x109 || (*(&jump_table_8346c + (r0_8 << 1)) == 0x102 && *0x200004f0 == 2)))
                        {
                            r0_30 = 7;
                            r1_13 = 7;
                        }
                        if ((*(&jump_table_8346c + (r0_8 << 1)) == 0x102 && *0x200004f0 != 2))
                        {
                            r0_30 = 3;
                            r1_13 = 3;
                        }
                        if (((*(&jump_table_8346c + (r0_8 << 1)) == 0x109 || (*(&jump_table_8346c + (r0_8 << 1)) == 0x102 && *0x200004f0 == 2)) || (*(&jump_table_8346c + (r0_8 << 1)) == 0x102 && *0x200004f0 != 2)))
                        {
                            *0x20001d98 = r0_30;
                            sub_80746(5, r1_13, *0x20006064);
                            r0_31 = 0;
                        label_837ac:
                            *r5_1 = r0_31;
                        }
                        if (*(&jump_table_8346c + (r0_8 << 1)) == 0x10c)
                        {
                            int32_t r2_10 = *0x20006064;
                            if (*0x200018fc == 0)
                            {
                                *0x200018fc = 1;
                                *0x20001900 = (r2_10 + 0x1f4);
                            }
                            else if ((r2_10 - *0x20001900) >= 0)
                            {
                                *0x200018fc = 0;
                                char r2_13 = (*0x20001879 + 1);
                                *0x20001879 = r2_13;
                                if (r2_13 >= 3)
                                {
                                    *0x20001d98 = 7;
                                    sub_80746(5, 7, *0x20006064);
                                }
                                *0x2000187b = 0;
                            }
                        }
                        if ((*(&jump_table_8346c + (r0_8 << 1)) == 4 && sub_96dd8(0) >= 0x44))
                        {
                            int32_t r0_10 = *0x200004f0;
                            int32_t r1_1;
                            if (r0_10 == 2)
                            {
                                r1_1 = 0;
                            }
                            else
                            {
                                if (r0_10 != 0)
                                {
                                    goto label_83628;
                                }
                                r1_1 = 1;
                            }
                            sub_84ad4(0, r1_1);
                            goto label_837aa;
                        }
                    }
                    break;
                }
                case 0x77:
                {
                    if (sub_95b5c(0) == 1)
                    {
                        int32_t r0_12;
                        int32_t r2_3;
                        r0_12 = sub_84c40(0, 1, 0xff00, 0, 1, nullptr, 0, 0x8385b);
                        if (r0_12 == 0)
                        {
                            sub_8fba2(3, "Discover Identity sent\n", r2_3);
                        }
                        *0x2000187c = 0;
                        *0x20001879 = 0;
                        r0_13 = 4;
                        r1_2 = 4;
                        goto label_83784;
                    }
                    break;
                }
                case 0xa4:
                {
                    uint32_t r0_14 = *0x2000187c;
                    int32_t r0_21;
                    if (r0_14 == 0)
                    {
                        int32_t r2_8;
                        r0_21 = sub_96dd8(0);
                        if (r0_21 >= 0xc9)
                        {
                            char r1_7 = (*0x20001879 + 1);
                            *0x20001879 = r1_7;
                            if (r1_7 <= 9)
                            {
                            label_83628:
                                r0_13 = 3;
                                r1_2 = 3;
                                goto label_83784;
                            }
                            sub_8fba2(3, "Failed to get Discover Identity …", r2_8);
                        }
                    }
                    int32_t r2_5;
                    if (((r0_14 != 0 && r0_14 != 0x5ac) || (r0_14 == 0 && r0_21 >= 0xc9)))  {  // {"@FIF"}}
                    {
                        r0_13 = 7;
                        r1_2 = 7;
                    label_83784:
                        *0x20001d98 = r0_13;
                        r2_5 = *0x20006064;
                    label_83792:
                        sub_80746(5, r1_2, r2_5);
                    }
                    if (r0_14 == 0x5ac)  {  // {"@FIF"}}
                    {
                        *0x20001d98 = 6;
                        sub_80746(5, 6, *0x20006064);
                        if ((*0x2000187c == 0x5ac && (*0x20001886 == 0x1633 && *0x20001888 == 2)))  {  // {"@FIF"}}
                        {
                            r1_2 = 8;
                            *0x20001d98 = 8;
                            r2_5 = *0x20006064;
                            goto label_83792;
                        }
                    }
                    break;
                }
                case 0xda:
                {
                    if (sub_95b5c(0) == 1)
                    {
                        sub_89cc8();
                        if (sub_89146(0) != 0)
                        {
                            sub_890c2(0);
                        }
                    }
                    break;
                }
            }
            if ((*(&jump_table_833ae + (r0_1 << 1)) == 0xda || *(&jump_table_833ae + (r0_1 << 1)) == 0xe8))
            {
                int32_t r0_20;
                int32_t r2_6;
                r0_20 = sub_96dd8(0);
                if (r0_20 >= 0x12)
                {
                    if ((*0x200004fc == 1 || (*0x200004fc != 1 && *0x2000187e == 1)))
                    {
                        uint32_t r1_5 = *0x20001d99;
                        if (r1_5 == 6)
                        {
                            int32_t r1_15 = *0x20001880;
                            int32_t r0_25;
                            if ((r1_15 == 0 && *0x20001878 == 0))
                            {
                                r0_25 = *0x200004f8;
                                int32_t r6_1;
                                if ((r0_25 - 1) >= 2)
                                {
                                    r6_1 = 1;
                                    if (r0_25 != 3)
                                    {
                                        sub_95cfc(0, (sub_95d12(0) | 2));
                                        sub_84c40(0, 2, 0xff00, 0, 1, nullptr, 0, sub_838ae);
                                        r1_15 = *0x20001880;
                                        *0x20001878 = 1;
                                    }
                                }
                                else
                                {
                                    r6_1 = 2;
                                }
                                if (((r0_25 - 1) < 2 || ((r0_25 - 1) >= 2 && r0_25 == 3)))
                                {
                                    *0x20001880 = r6_1;
                                label_837fe:
                                    *0x20001878 = 0;
                                    sub_832cc(2);
                                    sub_84ab6(0);
                                }
                            }
                            if (((((((r1_15 == 0 && *0x20001878 == 0) && (r0_25 - 1) >= 2) && r0_25 != 3) || r1_15 != 0) || (r1_15 == 0 && *0x20001878 != 0)) && r1_15 != 0))
                            {
                                goto label_837fe;
                            }
                        }
                        else if (r1_5 == 2)
                        {
                            if ((sub_849b6(1) != 0 && *0x20001884 != 0))
                            {
                                goto label_83738;
                            }
                        }
                        else if (r1_5 == 1)
                        {
                            sub_8fba2(4, "Got mismatch from Target\n", r2_6);
                            sub_832cc(6);
                        }
                        else if ((*0x20001885 == 1 && sub_849b6(1) != 0))
                        {
                            *0x20001885 = 0;
                        label_83738:
                            sub_832cc(3);
                            sub_84a8a(1);
                        }
                    }
                    if (((*0x200004fc != 1 && *0x2000187e != 1) && (*0x20001d99 - 7) <= 2))
                    {
                        int32_t r1_11 = *0x20001880;
                        uint32_t r2_9 = *0x20001878;
                        if ((r1_11 == 0 && r2_9 == 0))
                        {
                            int32_t r0_23 = *0x200004f8;
                            if ((r0_23 - 1) <= 1)
                            {
                                r1_11 = 2;
                            }
                            else if (r0_23 != 3)
                            {
                                sub_95cfc(0, (sub_95d12(0) | 2));
                                sub_84c40(0, 2, 0xff00, 0, 1, nullptr, 0, sub_838ae);
                                r1_11 = *0x20001880;
                            }
                            else
                            {
                                r1_11 = 1;
                            }
                            if (((r0_23 - 1) <= 1 || ((r0_23 - 1) > 1 && r0_23 == 3)))
                            {
                                *0x20001880 = r1_11;
                            }
                            r2_9 = 1;
                            *0x20001878 = 1;
                        }
                        if ((r1_11 != 0 && r2_9 != 0))
                        {
                            *0x20001878 = 0;
                            sub_84a5c(0);
                        }
                    }
                }
            }
        }
    }
    return 0;
}

int32_t sub_8385c(int32_t arg1, int32_t arg2, int16_t* arg3)
{
    if ((*arg3 & 0xc0) == 0x40)
    {
        int16_t r0_1 = *(arg3 + 4);
        *0x2000187c = r0_1;
        int32_t r1 = *(arg3 + 0xc);
        *0x20001888 = r1;
        uint32_t var_10_1 = r1;
        *0x20001886 = (r1 >> 0x10);
        sub_8fba2(4, "Target's VID = %04X PID = %04X b…", r0_1);
    }
    return 0;
}

int32_t sub_838ae(int32_t arg1, int32_t arg2, void* arg3)
{
    int32_t r0_1;
    if (arg1 == 0)
    {
        r0_1 = ((*(arg3 + 0x10) >> 5) & 3);
    }
    else
    {
        r0_1 = 1;
    }
    *0x20001880 = r0_1;
    sub_95cfc(0, (sub_95d12(0) & 0xfffffffd));
    return 0;
}

int32_t j_sub_89c1e()
{
    /* tailcall */
    return sub_89c1e();
}

int32_t j_sub_89c32()
{
    /* tailcall */
    return sub_89c32();
}

int32_t sub_838e4()
{
    int32_t r0_5 = 0;
    if (((((*0x20001886 ^ 0x1633) | (*0x2000187c ^ 0x5ac)) | (*0x20001888 ^ 2)) << 0x10) == 0)  {  // {"@FIF"}}
    {
        r0_5 = 1;
    }
    return r0_5;
}

uint32_t sub_83922()
{
    return *0x2000188a;
}

uint32_t sub_8392e()
{
    return *0x20001851;
}

int32_t sub_8393a(int32_t arg1)
{
    int32_t r0_1;
    int32_t r1_2;
    int32_t r2_1;
    int32_t r4;
    if (arg1 == 0)
    {
        r4 = 0;
        *0x2000011c = 1;
        int32_t r0_3;
        r1_2 = HIGHD((*0x20000524 * 0xcccccccd));
        r0_3 = LOWD((*0x20000524 * 0xcccccccd));
    }
    else if (*0x200004fc != 1)
    {
        r4 = 1;
    }
    else
    {
        r0_1 = *0x20001d84;
        if ((r0_1 & 0x70000000) != 0x20000000)
        {
            r4 = 0;
            int32_t r1_4;
            r2_1 = HIGHD((*0x20000524 * 0xcccccccd));
            r1_4 = LOWD((*0x20000524 * 0xcccccccd));
            if (((r0_1 >> 0xa) & 0x3ff) <= (r2_1 >> 3))
            {
                sub_832cc(0);
                *0x20001884 = 0;
                *0x2000011c = 1;
                int32_t r0_9;
                r1_2 = HIGHD((*0x20000524 * 0xcccccccd));
                r0_9 = LOWD((*0x20000524 * 0xcccccccd));
            }
        }
    }
    if ((arg1 == 0 || (((arg1 != 0 && *0x200004fc == 1) && (r0_1 & 0x70000000) != 0x20000000) && ((r0_1 >> 0xa) & 0x3ff) <= (r2_1 >> 3))))
    {
        *0x2000185c = (((r1_2 >> 3) & 0x3ff) | 0x22019000);
        sub_84a5c(0);
    }
    if (((arg1 != 0 && *0x200004fc == 1) && (r0_1 & 0x70000000) == 0x20000000))
    {
        r4 = 0;
    }
    return r4;
}

void sub_839f6()
{
    *0x2000188b = 0;
}

int32_t sub_83a04(int32_t arg1, int32_t arg2, int32_t arg3 @ r6, int32_t arg4 @ r9)
{
    int32_t var_c = arg3;
    int32_t var_1c = arg4;
    *0x2000187b = 0;
    sub_84ad4(0, arg1);
    int32_t r5_1 = (arg2 + *0x20006064);
    if ((*0x20006064 - r5_1) <= 0xffffffff)
    {
        do
        {
            uint32_t r0_3 = *0x2000187b;
            if (r0_3 == 3)
            {
                int32_t r0_4 = *0x20006064;
                if ((arg3 << 0x18) == 0)
                {
                    arg4 = (r0_4 + 0x64);
                    arg3 = 1;
                }
                else if ((r0_4 - arg4) >= 0)
                {
                    arg3 = 0;
                    *0x2000187b = 0;
                    sub_84ad4(0, arg1);
                }
            }
            else
            {
                if (r0_3 == 2)
                {
                    *0x2000187b = 0;
                    sub_8e930(1);
                    return 0xfffffff2;
                }
                if (r0_3 == 1)
                {
                    *0x2000187b = 0;
                    sub_8e930(1);
                    return 0;
                }
            }
            sub_8e930(1);
        } while ((*0x20006064 - r5_1) < 0);
    }
    return 0xffffffff;
}

int32_t sub_83aac()
{
    int32_t r4 = 0xffffffff;
    if ((*0x20001858 != 0 && *0x20001d99 == 5))
    {
        r4 = 0;
        *0x2000187e = 1;
        sub_832cc(0);
        *0x20001884 = 0;
        *0x2000011c = 1;
        int32_t r0_3;
        int32_t r1_1;
        r1_1 = HIGHD((*0x20000524 * 0xcccccccd));
        r0_3 = LOWD((*0x20000524 * 0xcccccccd));
        *0x2000185c = (((r1_1 >> 3) & 0x3ff) | 0x22019000);
        sub_84a5c(0);
    }
    return r4;
}

int32_t sub_83b2e(int32_t* arg1)
{
    sub_95cfc(0, (sub_95d12(0) | 2));
    *0x2000188c = 0;
    sub_84c40(0, 2, 0xff00, 0, 1, nullptr, 0, sub_83ba8);
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_8e930(1);
    }
    int32_t r0_3;
    if (r0_1 != 1)
    {
        r0_3 = 0;
    }
    else
    {
        sub_97f48(arg1, 0x20001894, 0x10);
        r0_3 = 1;
    }
    return r0_3;
}

int32_t sub_83ba8(int32_t arg1, int32_t arg2, int16_t* arg3, int32_t arg4)
{
    if (arg2 == 2)
    {
        sub_8fba2(4, "Got Cable response of %d\n", arg1);
        if ((arg1 + 3) <= 3)
        {
            int32_t r0 = 0xffffffff;
            switch (jump_table_83bd8[(3 + arg1)])
            {
                case 2:
                {
                    r0 = 5;
                    break;
                }
                case 4:
                {
                    r0 = 6;
                    break;
                }
                case 6:
                {
                    int32_t r0_1 = *arg3;
                    if (r0_1 <= 0xffffffff)
                    {
                        r0 = ((r0_1 >> 6) & 3);
                        if ((r0 != 1 && r0 != 2))
                        {
                            r0 = 3;
                        }
                    }
                    if ((r0_1 > 0xffffffff || (r0_1 <= 0xffffffff && r0 == 1)))
                    {
                        sub_97f48(0x20001890, arg3, (arg4 << 2));
                        *0x200018ac = arg4;
                        r0 = 1;
                    }
                    break;
                }
            }
            *0x2000188c = r0;
        }
        sub_95cfc(0, (sub_95d12(0) & 0xfffffffd));
    }
    return 0;
}

int32_t sub_83c3c(int32_t arg1)
{
    sub_95cfc(0, (sub_95d12(0) | 2));
    *0x2000188c = 0;
    sub_84c40(0, 2, 0xff00, 0, 2, nullptr, 0, sub_83ba8);
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_8e930(1);
    }
    if (r0_1 == 1)
    {
        uint32_t i = *0x200018ac;
        if (i >= 2)
        {
            int32_t r2_1 = 1;
            do
            {
                int32_t r5_1 = *(0x20001890 + (r2_1 << 2));
                int32_t r0_3 = 1;
                if (arg1 == (r5_1 >> 0x10))
                {
                    return r0_3;
                }
                if (r5_1 == arg1)
                {
                    return r0_3;
                }
                r2_1 = (r2_1 + 1);
            } while (r2_1 < i);
        }
    }
    return 0;
}

int32_t sub_83cd4(int16_t arg1, int32_t arg2, int32_t arg3, int32_t* arg4)
{
    sub_95cfc(0, (sub_95d12(0) | 2));
    *0x2000188c = 0;
    sub_84c40(0, 2, arg1, 0, 3, nullptr, 0, sub_83ba8);
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_8e930(1);
    }
    int32_t r0_2;
    uint32_t i;
    int32_t r4_1;
    if (r0_1 == 1)
    {
        i = *0x200018ac;
        if (i >= 2)
        {
            r0_2 = 1;
            int32_t r3 = 1;
            do
            {
                r4_1 = *(0x20001890 + (r0_2 << 2));
                if (((r4_1 ^ arg2) & arg3) == 0)
                {
                    break;
                }
                r3 = (r3 + 1);
                r0_2 = (r0_2 + 1);
            } while (r3 < i);
            if ((((r4_1 ^ arg2) & arg3) == 0 && arg4 != 0))
            {
                *arg4 = r4_1;
            }
        }
    }
    if (((r0_1 != 1 || (r0_1 == 1 && i < 2)) || ((r0_1 == 1 && i >= 2) && ((r4_1 ^ arg2) & arg3) != 0)))
    {
        r0_2 = 0;
    }
    return r0_2;
}

int32_t sub_83d7c(int16_t arg1, int32_t arg2)
{
    sub_95cfc(0, (sub_95d12(0) | 2));
    *0x2000188c = 0;
    sub_84c40(0, 2, arg1, arg2, 4, nullptr, 0, sub_83ba8);
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_8e930(1);
    }
    int32_t r0_2;
    if (r0_1 != 1)
    {
        r0_2 = 0;
    }
    else
    {
        r0_2 = 1;
    }
    return r0_2;
}

int32_t sub_83de2(int16_t arg1, int32_t arg2)
{
    sub_95cfc(0, (sub_95d12(0) | 2));
    *0x2000188c = 0;
    sub_84c40(0, 2, arg1, arg2, 5, nullptr, 0, sub_83ba8);
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_8e930(1);
    }
    int32_t r0_2;
    if (r0_1 != 1)
    {
        r0_2 = 0;
    }
    else
    {
        r0_2 = 1;
    }
    return r0_2;
}

int32_t sub_83e48(int32_t arg1, int32_t arg2, char* arg3, char* arg4, int32_t* arg5)
{
    sub_95cfc(0, (sub_95d12(0) | 2));
    *0x2000188c = 0;
    sub_84cc8(0, 2, 0x5ac, ((0xf | (arg2 << 4)) | ((arg1 & 7) << 0xc)), nullptr, 0, 1, sub_83ba8);  {  // {"@FIF"}}
    int32_t r0_3;
    while (true)
    {
        r0_3 = *0x2000188c;
        if (r0_3 != 0)
        {
            break;
        }
        sub_8e930(1);
    }
    int32_t r0_8;
    if (r0_3 != 1)
    {
        r0_8 = 0;
    }
    else
    {
        *arg3 = ((*0x20001890 >> 9) & 7);
        int32_t r2 = ((*0x20001890 >> 4) & 0x1f);
        *arg4 = r2;
        sub_97f48(arg5, 0x20001894, r2);
        r0_8 = 1;
    }
    return r0_8;
}

int32_t sub_83eea()
{
    int32_t r0;
    int32_t var_14 = r0;
    int32_t var_18 = 1;
    sub_95cfc(0, (sub_95d12(0) | 2));
    *0x2000188c = 0;
    sub_84c40(0, 2, 0x5ac, 2, 0x15, &var_18, 2, sub_83ba8);  {  // {"@FIF"}}
    int32_t r0_2;
    while (true)
    {
        r0_2 = *0x2000188c;
        if (r0_2 != 0)
        {
            break;
        }
        sub_8e930(1);
    }
    int32_t r0_3;
    if (r0_2 != 1)
    {
        r0_3 = 0;
    }
    else
    {
        r0_3 = 1;
    }
    return r0_3;
}

int32_t sub_83f50(int32_t* arg1)
{
    int32_t var_1c = 1;
    sub_95cfc(0, (sub_95d12(0) | 2));
    *0x2000188c = 0;
    sub_84c40(0, 2, 0x5ac, 3, 0x10, &var_1c, 1, sub_83ba8);  {  // {"@FIF"}}
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_8e930(1);
    }
    int32_t r0_3;
    int32_t r0_5;
    if (r0_1 == 1)
    {
        sub_95cfc(0, (sub_95d12(0) | 2));
        *0x2000188c = 0;
        sub_84c40(0, 2, 0x5ac, 3, 0x11, nullptr, 0, sub_83ba8);  {  // {"@FIF"}}
        while (true)
        {
            r0_3 = *0x2000188c;
            if (r0_3 != 0)
            {
                break;
            }
            sub_8e930(1);
        }
        if (r0_3 == 1)
        {
            if (arg1 != 0)
            {
                *arg1 = *0x20001894;
            }
            r0_5 = 1;
        }
    }
    if ((r0_1 != 1 || (r0_1 == 1 && r0_3 != 1)))
    {
        r0_5 = 0;
    }
    return r0_5;
}

int32_t sub_84010()
{
    int32_t var_1c = 1;
    sub_95cfc(0, (sub_95d12(0) | 2));
    *0x2000188c = 0;
    sub_84c40(0, 2, 0x5ac, 3, 0x10, &var_1c, 1, sub_83ba8);  {  // {"@FIF"}}
    int32_t r0_1;
    while (true)
    {
        r0_1 = *0x2000188c;
        if (r0_1 != 0)
        {
            break;
        }
        sub_8e930(1);
    }
    if (r0_1 == 1)
    {
        while (true)
        {
            sub_95cfc(0, (sub_95d12(0) | 2));
            *0x2000188c = 0;
            sub_84c40(0, 2, 0x5ac, 3, 0x12, nullptr, 0, sub_83ba8);  {  // {"@FIF"}}
            int32_t r0_3;
            while (true)
            {
                r0_3 = *0x2000188c;
                if (r0_3 != 0)
                {
                    break;
                }
                sub_8e930(1);
            }
            if (r0_3 == 1)
            {
                return 1;
            }
            if (r0_3 != 3)
            {
                break;
            }
            sub_8e930(0x32);
            if (*0x2000188c != 3)
            {
                return 1;
            }
        }
    }
    return 0;
}

uint32_t sub_840d0()
{
    char var_21 = 0;
    char var_20;
    int32_t r0 = sub_84104(0, 1, &var_20, 0, &var_21, 1);
    uint32_t r1 = var_20;
    if (r0 == 0)
    {
        r1 = 0xffffffff;
    }
    return r1;
}

int32_t sub_84104(int32_t arg1, char arg2, int32_t* arg3, int32_t arg4, char* arg5, char arg6)
{
    sub_95cfc(0, (sub_95d12(0) | 2));
    *0x2000188c = 0;
    sub_84cc8(0, 2, 0x4b4, ((arg2 & 0x1f) | (arg1 << 5)), arg3, arg4, arg6, sub_83ba8);
    int32_t r0_4;
    while (true)
    {
        r0_4 = *0x2000188c;
        if (r0_4 != 0)
        {
            break;
        }
        sub_8e930(1);
    }
    int32_t r0_8;
    if (r0_4 != 1)
    {
        r0_8 = 0;
    }
    else
    {
        if (arg5 != 0)
        {
            *arg5 = *0x200018ac;
        }
        if (arg3 != 0)
        {
            sub_97f48(arg3, 0x20001894, (*arg5 << 2));
        }
        r0_8 = 1;
    }
    return r0_8;
}

int32_t sub_841a8()
{
    int32_t var_20 = 0x4a;
    sub_84104(0, 5, &var_20, 1, nullptr, 0);
    return 0xffffffff;
}

int32_t sub_841cc()
{
    int32_t r4 = 0;
    int32_t var_28 = 0x50;
    char var_29 = 0;
    int32_t r0_3;
    if (sub_84104(0, 6, &var_28, 1, &var_29, 1) == 0)
    {
        r0_3 = 0xffffffff;
    }
    else
    {
        if (var_28 == 2)
        {
            r4 = 1;
        }
        uint32_t r0_2 = var_29;
        if (r0_2 != 0)
        {
            r0_2 = 1;
        }
        r0_3 = (r0_2 & r4);
    }
    return r0_3;
}

int32_t sub_84212(int32_t arg1, int32_t arg2, int32_t arg3)
{
    int32_t r0_3;
    int32_t r0_6;
    if (arg1 >= 0x9a)
    {
        int32_t i = 0;
        do
        {
            int32_t r0 = (i * 3);
            bool cond:0_1 = i == 5;
            int32_t r3_1 = 6;
            i = (i + 1);
            if (cond:0_1)
            {
                r3_1 = 2;
            }
            sub_84104(i, 7, (arg3 + (r0 << 3)), r3_1, nullptr, 0);
            int32_t j;
            do
            {
                sub_8e930(1);
                j = sub_96dd8(0);
            } while (j < 0xf);
        } while (i != 6);
        int32_t r4_1 = 0;
        char var_31 = 0;
        int32_t var_30 = (0x46 | (arg1 << 8));
        r0_3 = sub_84104(0, 8, &var_30, 1, &var_31, 1);
        if (r0_3 != 0)
        {
            if (var_30 == 2)
            {
                r4_1 = 1;
            }
            uint32_t r0_5 = var_31;
            if (r0_5 != 0)
            {
                r0_5 = 1;
            }
            r0_6 = (r0_5 & r4_1);
        }
    }
    if ((arg1 < 0x9a || (arg1 >= 0x9a && r0_3 == 0)))
    {
        r0_6 = 0xffffffff;
    }
    return r0_6;
}

int32_t sub_842aa(int32_t arg1)
{
    int32_t var_28 = arg1;
    int32_t r4 = 0;
    char var_29 = 0;
    int32_t r0_3;
    if (sub_84104(0, 0xb, &var_28, 1, &var_29, 1) == 0)
    {
        r0_3 = 0xffffffff;
    }
    else
    {
        if (var_28 == 2)
        {
            r4 = 1;
        }
        uint32_t r0_2 = var_29;
        if (r0_2 != 0)
        {
            r0_2 = 1;
        }
        r0_3 = (r0_2 & r4);
    }
    return r0_3;
}

int32_t sub_842ee() __pure
{
    return 0;
}

int32_t sub_842f2()
{
    *0x20001d8c = 0;
    *0x20001d88 = 0;
    sub_87ba2(1);
    return 0;
}

int32_t sub_8430e()
{
    *0x20001d8c = 0;
    *0x20001d88 = 0;
    sub_87bbc(1);
    return 0;
}

int32_t sub_8432a() __pure
{
    return 1;
}

uint32_t sub_8432e()
{
    uint32_t r0 = sub_95bac(1);
    if (r0 != 1)
    {
        r0 = 2;
    }
    return r0;
}

int32_t sub_84340() __pure
{
    return 2;
}

int32_t sub_84344()
{
    *0x20001d88 = *0x200018cc;
    *0x20001d8c = *0x200018d0;
    int32_t r0_5;
    if ((*0x20001858 != 0 && *0x2000187e == 0))
    {
        if (sub_849b6(0) != 0)
        {
            sub_84a5c(0);
        }
        r0_5 = 5;
        goto label_843be;
    }
    uint32_t r0_4 = *0x20001d99;
    if (r0_4 == 7)
    {
        if (sub_849b6(0) != 0)
        {
            sub_84a5c(0);
            r0_5 = 8;
        label_843be:
            sub_832cc(r0_5);
        }
        else if (((*0x20001f40 | (*0x20001f24 & 0x70)) << 0x18) == 0)
        {
            sub_87af8(0);
        }
    }
    else if (r0_4 == 3)
    {
        sub_84a5c(0);
        r0_5 = 4;
        goto label_843be;
    }
    return 0;
}

int32_t sub_843ec()
{
    if (*0x20001858 != 0)
    {
        int32_t r0_1;
        int32_t r2_1;
        r0_1 = sub_87c58(1);
        int32_t r4_1;
        if (r0_1 == 3)
        {
            sub_8fba2(4, "Charger with 3A Rp detected\n", r2_1);
            r4_1 = 0xbb8;
        }
        if (r0_1 == 2)
        {
            sub_8fba2(4, "Charger with 1.5A Rp detected\n", r2_1);
            r4_1 = 0x5dc;
        }
        if (r0_1 == 1)
        {
            sub_8fba2(4, "Charger with Default Rp detected…", r2_1);
            r4_1 = 0x1f4;
        }
        if (((r0_1 == 3 || r0_1 == 2) || r0_1 == 1))
        {
            bool cond:0_1 = sub_90194(0x40020400, sub_4000) == 0;
            *0x20001d88 = 0xffffffff;
            *0x20001d8c = r4_1;
            if (cond:0_1)
            {
                r4_1 = (r4_1 - 0xc8);
            }
            *0x20001854 = (0x22019000 | (r4_1 / 0xa));
            if (sub_849b6(0) != 0)
            {
                sub_84a5c(0);
            }
            sub_832cc(5);
        }
    }
    return 0;
}

int32_t sub_844aa()
{
    int32_t r0 = *0x200004f0;
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_844bc()
{
    sub_84824();
    *0x20001d84 = 0;
    *0x20001d80 = 0;
    sub_87ba2(0);
    return 0;
}

int32_t sub_844dc()
{
    sub_84824();
    *0x20001d84 = 0;
    *0x20001d80 = 0;
    sub_87bbc(0);
    return 0;
}

int32_t sub_844fc()
{
    if (*0x20001880 != 0)
    {
        return 0;
    }
    int32_t r0_2 = 0;
    if ((*0x2000187a == 1 && *0x200004f8 == 0))
    {
        sub_95cfc(0, (sub_95d12(0) | 2));
        r0_2 = 1;
    }
    return r0_2;
}

int32_t sub_84544()
{
    int32_t r1 = 2;
    if (sub_95b5c(0) == 0)
    {
        r1 = 1;
    }
    return r1;
}

int32_t sub_8455a() __pure
{
    return 2;
}

int32_t sub_8455e()
{
    int32_t r0 = 2;
    if (*0x20001851 != 0)
    {
        r0 = 0x81;
    }
    return r0;
}

int32_t sub_84572()
{
    uint32_t r0 = *0x20001d99;
    uint32_t r1 = *0x20001904;
    int32_t r4;
    if ((r0 - 7) > 2)
    {
        int32_t r1_2;
        if (r1 != 1)
        {
            *0x20001904 = 1;
            r1_2 = (*0x20006064 + 0x19);
            *0x20001908 = r1_2;
        }
        else
        {
            r1_2 = *0x20001908;
        }
        if ((*0x20006064 - r1_2) < 0)
        {
        label_846c6:
            r4 = 1;
        }
        else
        {
            *0x20001904 = 0;
            *0x20001d80 = *0x200018f8;
            int32_t r1_6 = *0x200018d4;
            *0x20001d84 = r1_6;
            uint32_t r2_4 = *0x200018f4;
            int32_t r0_8;
            if (r2_4 != 1)
            {
                if (r0 != 4)
                {
                    sub_8fba2(4, "Switching to 5V path (This shoul…", r2_4);
                }
                else
                {
                    r4 = 2;
                    sub_8b7d0(2);
                    sub_916cc(0xa);
                }
            }
            else
            {
                int32_t r2_6;
                int32_t r3_1;
                r2_6 = HIGHD((*0x20000524 * 0xcccccccd));
                r3_1 = LOWD((*0x20000524 * 0xcccccccd));
                if ((r0 == 5 || (r0 != 5 && ((r1_6 >> 0xa) & 0x3ff) > (r2_6 >> 3))))
                {
                    r0_8 = 2;
                    goto label_846ee;
                }
            }
            if (((r2_4 != 1 && r0 != 4) || r2_4 == 1))
            {
                r0_8 = 1;
            label_846ee:
                sub_8b7d0(r0_8);
                sub_916cc(0xa);
                goto label_846f8;
            }
        }
    }
    else
    {
        if (r1 == 0)
        {
            *0x20001904 = 1;
            *0x20001908 = (*0x20006064 + 0x15e);
            sub_832cc(8);
            sub_84a8a(1);
            char r0_3 = sub_84dd2(1);
            *0x20001d91 = r0_3;
            sub_80746(4, r0_3, *0x20006064);
        }
        if (sub_849b6(1) != 0)
        {
            *0x20001904 = 0;
            *0x20001d80 = *0x200018f8;
            *0x20001d84 = *0x200018d4;
            sub_832cc(9);
        label_846f8:
            r4 = 2;
        }
        else
        {
            if (*0x20001904 != 1)
            {
                goto label_846c6;
            }
            if ((*0x20006064 - *0x20001908) < 0)
            {
                goto label_846c6;
            }
            r4 = 0;
            *0x20001904 = 0;
        }
    }
    return r4;
}

int32_t sub_846fe()
{
    int32_t r1 = *0x20006064;
    int32_t r4;
    if (*0x2000190c == 0)
    {
        r4 = 1;
        *0x2000190c = 1;
        *0x20001910 = (r1 + 0x2bc);
        sub_8b7d0(0);
        if ((*0x20001d99 - 7) <= 2)
        {
            sub_832cc(7);
            r4 = 1;
            sub_84a8a(1);
        }
    }
    else if ((r1 - *0x20001910) < 0)
    {
        r4 = 1;
    }
    else
    {
        *0x2000190c = 0;
        uint32_t r0_1 = *0x20001d99;
        if (((r0_1 - 7) <= 2 || ((r0_1 - 7) > 2 && r0_1 == 5)))
        {
            r4 = 2;
            sub_8b7d0(2);
        }
        if (((r0_1 - 7) > 2 && r0_1 != 5))
        {
            sub_8b7d0(1);
            r4 = 2;
        }
    }
    return r4;
}

int32_t sub_84796()
{
    sub_84a5c(0);
    return 0;
}

int32_t sub_847a4()
{
    int32_t r0 = *0x200018f8;
    int32_t r2 = *0x200018d4;
    *0x20001d80 = r0;
    *0x20001d84 = r2;
    if (*0x200004ea == (((r2 >> 0xa) & 0x3ff) * 0xa))
    {
        uint32_t r2_3;
        if (2 != (r0 >> 0x1e))
        {
            r2_3 = (r0 >> 0x1e);
            if ((r2_3 != 1 && (r2_3 == 0 && (0x32 * ((r0 >> 0xa) & 0x3ff)) == *0x200004e8)))
            {
                goto label_8481e;
            }
        }
        if ((2 == (r0 >> 0x1e) || (2 != (r0 >> 0x1e) && r2_3 == 1)))
        {
            uint32_t r1_2 = *0x200004e8;
            if (((0x32 * ((r0 >> 0x14) & 0x3ff)) >= r1_2 && (0x32 * ((r0 >> 0xa) & 0x3ff)) <= r1_2))
            {
            label_8481e:
                *0x2000188b = 0;
            }
        }
    }
    return 0;
}

int32_t sub_84824()
{
    sub_95cfc(0, (sub_95d12(0) & 0xffffffe7));
    *0x2000011c = 1;
    *0x200018f4 = 0;
    *0x20001884 = 0;
    *0x2000188b = 0;
    *0x200004e8 = 0x1388;
    *0x200004ea = 0;
    *0x2000187e = 0;
    *0x2000187b = 0;
    *0x2000187a = 0;
    *0x20001851 = 0;
    *0x20001880 = 0;
    int32_t r0_2;
    int32_t r1_1;
    r1_1 = HIGHD((*0x20000524 * 0xcccccccd));
    r0_2 = LOWD((*0x20000524 * 0xcccccccd));
    *0x2000185c = (((r1_1 >> 3) & 0x3ff) | 0x22019000);
    sub_890fc();
    *0x2000188a = 0;
    uint32_t r0_5 = *0x20001d99;
    if ((r0_5 - 7) <= 2)
    {
        sub_832cc(7);
        sub_84a8a(1);
    }
    else if (r0_5 != 5)
    {
        if (sub_849b6(1) != 0)
        {
            sub_84a16(1, 0x11000000);
        }
        sub_832cc(0);
    }
    *0x20001886 = 0;
    *0x2000187c = 0;
    *0x20001888 = 0;
    sub_892a4();
    *0x20001d98 = 0;
    sub_80746(5, 0, *0x20006064);
    *0x20001885 = 0;
    *0x200018f5 = 0;
    if (*0x200004f8 == 3)
    {
        char var_11 = 0;
        sub_8f938(0x40005c00, 0x1c, 0x664e4f43, 0, &var_11, 1, 0, 0x64);
    }
    sub_8e6ee(1);
    return sub_8e6a2();
}

int32_t sub_849b6(int32_t arg1)
{
    int32_t r1 = 0;
    int32_t r0 = 0;
    uint32_t r2 = *((arg1 * 0xdc) + 0x20001918);
    if (r2 != 7)
    {
        r1 = 1;
    }
    int32_t r2_1 = 0;
    if (r2 != 0x13)
    {
        r2_1 = 1;
    }
    if ((r2_1 & r1) == 0)
    {
        if ((*((arg1 * 0xdc) + 0x20001976) & 1) == 0)
        {
            return 0;
        }
        uint32_t r1_5 = ((*((arg1 * 0xdc) + 0x2000197a) | (*((arg1 * 0xdc) + 0x2000197b) << 8)) | ((*((arg1 * 0xdc) + 0x2000197c) | (*((arg1 * 0xdc) + 0x2000197d) << 8)) << 0x10));
        r0 = 0;
        if (r1_5 == 5)
        {
            r0 = 1;
        }
    }
    return r0;
}

void* sub_84a16(int32_t arg1, int32_t arg2)
{
    if (sub_95bac(arg1) == 0)
    {
        *((arg1 * 0xdc) + 0x2000197a) = 1;
        *((arg1 * 0xdc) + 0x2000197d) = 0;
        *((arg1 * 0xdc) + 0x2000197c) = 0;
        *((arg1 * 0xdc) + 0x2000197b) = 0;
        *((arg1 * 0xdc) + 0x200019c4) = arg2;
        *((arg1 * 0xdc) + 0x20001978) = (*((arg1 * 0xdc) + 0x20001978) | 0x40);
        return (0x20001914 + (arg1 * 0xdc));
    }
    return 0xffffffff;
}

int32_t sub_84a5c(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x2000197a) = 0;
    *((arg1 * 0xdc) + 0x2000197d) = 0;
    *((arg1 * 0xdc) + 0x2000197c) = 0;
    *((arg1 * 0xdc) + 0x2000197b) = 0;
    *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 8);
    return 0;
}

int32_t sub_84a8a(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x2000197a) = 0;
    *((arg1 * 0xdc) + 0x2000197d) = 0;
    *((arg1 * 0xdc) + 0x2000197c) = 0;
    *((arg1 * 0xdc) + 0x2000197b) = 0;
    *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 2);
    return 0;
}

int32_t sub_84ab6(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 0x10);
    return 0;
}

int32_t sub_84ad4(int32_t arg1, int32_t arg2)
{
    uint32_t r0 = sub_95b5c(arg1);
    int32_t r1;
    char const* const r1_1;
    int32_t r2_1;
    if (r0 == 0)
    {
        if (arg2 == 0)
        {
            r2_1 = *(*(0x20001acc + (arg1 << 2)) + 0x1c);
            if (r2_1 != 0)
            {
                r1 = 0;
            }
        }
        else
        {
            r1_1 = "Requesting DR_Swap to DFP\n";
        }
    }
    if ((r0 != 0 && arg2 != 1))
    {
        r1_1 = "Requesting DR_Swap to UFP\n";
    }
    if (((r0 == 0 && arg2 != 0) || (r0 != 0 && arg2 != 1)))
    {
        sub_8fba2(4, r1_1, 0x47c);
        *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 0x40);
    }
    if ((r0 != 0 && arg2 == 1))
    {
        r2_1 = *(*(0x20001acc + (arg1 << 2)) + 0x1c);
        if (r2_1 != 0)
        {
            r1 = 1;
        }
    }
    if ((((r0 == 0 && arg2 == 0) && r2_1 != 0) || ((r0 != 0 && arg2 == 1) && r2_1 != 0)))
    {
        r2_1(1, r1);
    }
    return 0;
}

int32_t sub_84b4c(int32_t arg1, int32_t arg2)
{
    uint32_t r0 = sub_95bac(arg1);
    int32_t r1;
    int32_t r2_1;
    if (r0 == 0)
    {
        if (arg2 == 0)
        {
            r2_1 = *(*(0x20001acc + (arg1 << 2)) + 0x20);
            if (r2_1 != 0)
            {
                r1 = 1;
            }
        }
    }
    else if (arg2 == 1)
    {
        r2_1 = *(*(0x20001acc + (arg1 << 2)) + 0x20);
        if (r2_1 != 0)
        {
            r1 = 0;
        }
    }
    if ((((r0 == 0 && arg2 == 0) && r2_1 != 0) || ((r0 != 0 && arg2 == 1) && r2_1 != 0)))
    {
        r2_1(1, r1);
    }
    if (((r0 == 0 && arg2 != 0) || (r0 != 0 && arg2 != 1)))
    {
        *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 0x20);
    }
    return 0;
}

int32_t sub_84bac(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x20001979) = (*((arg1 * 0xdc) + 0x20001979) | 0x80);
    return 0;
}

int32_t sub_84bca(int32_t arg1, uint32_t arg2, int16_t arg3, char* arg4, int32_t arg5)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0 = sub_95bac(arg1);
    int32_t r0_4 = sub_9641a(arg1, arg2, arg3, arg4, (arg5 << 2));
    char r1_2;
    int32_t r2_1;
    if (r0 == 0)
    {
        r2_1 = (r0_4 + 2);
        if (r0_4 == 0xfffffffe)
        {
            r1_2 = 3;
        label_84c32:
            /* tailcall */
            return sub_9159c((0x20001914 + (arg1 * 0xdc)), r1_2, r2_1);
        }
        if (r0_4 == 0xfffffffd)
        {
            r1_2 = 0xb;
            goto label_84c32;
        }
    }
    else
    {
        r2_1 = (r0_4 + 2);
        if (r0_4 == 0xfffffffe)
        {
            r1_2 = 0xf;
            goto label_84c32;
        }
        if (r0_4 == 0xfffffffd)
        {
            r1_2 = 0x18;
            goto label_84c32;
        }
    }
    return (0x20001914 + (arg1 * 0xdc));
}

int32_t sub_84c40(int32_t arg1, int32_t arg2, int16_t arg3, int32_t arg4, int16_t arg5, int32_t* arg6, int32_t arg7, int32_t arg8)
{
    int32_t r0_1;
    if (*((arg1 * 0xdc) + 0x200019c8) == 0)
    {
        *((arg1 * 0xdc) + 0x200019c8) = arg2;
        *((arg1 * 0xdc) + 0x200019ce) = arg3;
        *((arg1 * 0xdc) + 0x200019cc) = ((((arg5 & 0x1f) | ((arg4 & 7) << 8)) | (*((arg1 * 0xdc) + 0x200019cc) & 0x1820)) | 0x8000);
        sub_97f48(((arg1 * 0xdc) + 0x200019d0), arg6, (arg7 << 2));
        char r0_8 = *((arg1 * 0xdc) + 0x20001977);
        *((arg1 * 0xdc) + 0x200019ec) = (arg8 >> 0x10);
        *((arg1 * 0xdc) + 0x200019ea) = arg8;
        *((arg1 * 0xdc) + 0x200019e8) = (arg7 + 1);
        *((arg1 * 0xdc) + 0x200019e9) = 1;
        *((arg1 * 0xdc) + 0x20001977) = (r0_8 | 8);
        r0_1 = 0;
    }
    else
    {
        r0_1 = 0xffffffff;
    }
    return r0_1;
}

int32_t sub_84cc8(int32_t arg1, int32_t arg2, int16_t arg3, int16_t arg4, int32_t* arg5, int32_t arg6, char arg7, int32_t arg8)
{
    int32_t r0_1;
    if (*((arg1 * 0xdc) + 0x200019c8) == 0)
    {
        *((arg1 * 0xdc) + 0x200019c8) = arg2;
        *((arg1 * 0xdc) + 0x200019cc) = (arg4 & 0x7fff);
        *((arg1 * 0xdc) + 0x200019ce) = arg3;
        sub_97f48(((arg1 * 0xdc) + 0x200019d0), arg5, (arg6 << 2));
        char r0_3 = *((arg1 * 0xdc) + 0x20001977);
        *((arg1 * 0xdc) + 0x200019ec) = (arg8 >> 0x10);
        *((arg1 * 0xdc) + 0x200019ea) = arg8;
        *((arg1 * 0xdc) + 0x200019e8) = (arg6 + 1);
        *((arg1 * 0xdc) + 0x200019e9) = arg7;
        *((arg1 * 0xdc) + 0x20001977) = (r0_3 | 8);
        r0_1 = 0;
    }
    else
    {
        r0_1 = 0xffffffff;
    }
    return r0_1;
}

void* sub_84d3a(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x20001976) = (*((arg1 * 0xdc) + 0x20001976) | 1);
    return (0x20001914 + (arg1 * 0xdc));
}

void* sub_84d56(int32_t arg1)
{
    if ((*((arg1 * 0xdc) + 0x20001976) & 1) == 0)
    {
        return (0x20001914 + (arg1 * 0xdc));
    }
    *((arg1 * 0xdc) + 0x20001976) = 2;
    /* tailcall */
    return sub_9159c((0x20001914 + (arg1 * 0xdc)), 0, 2);
}

int32_t sub_84d7c(int32_t arg1, int32_t arg2)
{
    int32_t i = 0;
    int32_t* r6 = 0x20001914;
    int32_t r0_1;
    do
    {
        sub_91424(r6, *(arg1 + (i << 2)), 0x28, 0x20000120, 0, i);
        r0_1 = *(arg2 + (i << 2));
        r6 = &r6[0x37];
        *(0x20001acc + (i << 2)) = r0_1;
        i = (i + 1);
    } while (i != 2);
    return r0_1;
}

uint32_t sub_84dd2(int32_t arg1)
{
    uint32_t r2;
    if (((*((arg1 * 0xdc) + 0x20001976) << 0x1e) < 0 && *((arg1 * 0xdc) + 0x20001919) != 0))
    {
        sub_9159c((0x20001914 + (arg1 * 0xdc)), 0, r2);
    }
    int32_t* r0_5;
    uint32_t r12;
    r0_5 = sub_95dda(arg1);
    if (r0_5 != 0)
    {
        uint32_t r1_2;
        r1_2 = sub_84e7a(arg1, r0_5);
        sub_963ba(r0_5, r1_2);
    }
    sub_91486((0x20001914 + (arg1 * 0xdc)), arg1, 6, r12);
    if ((*((arg1 * 0xdc) + 0x2000196c) != 0 && (*0x20006064 - *((arg1 * 0xdc) + 0x20001970)) >= 0))
    {
        *((arg1 * 0xdc) + 0x200019c8) = 0;
        *((arg1 * 0xdc) + 0x2000196c) = 0;
        *((arg1 * 0xdc) + 0x20001977) = (*((arg1 * 0xdc) + 0x20001977) & 0xe7);
        int32_t r6_1 = (*((arg1 * 0xdc) + 0x200019ea) | (*((arg1 * 0xdc) + 0x200019ec) << 0x10));
        if (r6_1 != 0)
        {
            r6_1(0xfffffffd, 0, 0, 0);
        }
    }
    return *((arg1 * 0xdc) + 0x20001918);
}

uint32_t sub_84e7a(int32_t arg1, int16_t* arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r4 = *arg2;
    if (sub_963d6(arg2) != 0x20)
    {
        int32_t r9 = (r4 & 0x7000);
        int32_t r8 = (r4 & 0x1f);
        uint32_t r0_7 = ((*((arg1 * 0xdc) + 0x20001977) | (*((arg1 * 0xdc) + 0x20001978) << 8)) | (*((arg1 * 0xdc) + 0x20001979) << 0x10));
        uint32_t r0_15;
        int32_t r0_16;
        if ((r0_7 & 0x10) != 0)
        {
            if ((r9 != 0 && r8 == 0xf))
            {
                *((arg1 * 0xdc) + 0x20001978) = (r0_7 >> 8);
                *((arg1 * 0xdc) + 0x20001977) = (0xef & r0_7);
                *((arg1 * 0xdc) + 0x20001979) = (r0_7 >> 0x10);
            label_84f80:
                r0_15 = ((0x801e >> r8) << 0x1f);
                if (r0_15 == 0)
                {
                    goto label_84fb4;
                }
                r0_16 = 0x99c90;
                goto label_84fae;
            }
            *((arg1 * 0xdc) + 0x2000196c) = 0;
            *((arg1 * 0xdc) + 0x200019c8) = 0;
            *((arg1 * 0xdc) + 0x20001978) = (r0_7 >> 8);
            uint32_t r1_5 = (0xffffe7 & r0_7);
            *((arg1 * 0xdc) + 0x20001977) = r1_5;
            *((arg1 * 0xdc) + 0x20001979) = (r0_7 >> 0x10);
            int32_t r4_1 = (*((arg1 * 0xdc) + 0x200019ea) | (*((arg1 * 0xdc) + 0x200019ec) << 0x10));
            if (r4_1 == 0)
            {
                r0_7 = r1_5;
            }
            else
            {
                r4_1(0xfffffffe, 0, 0, 0);
                r0_7 = ((*((arg1 * 0xdc) + 0x20001977) | (*((arg1 * 0xdc) + 0x20001978) << 8)) | (*((arg1 * 0xdc) + 0x20001979) << 0x10));
            }
        }
        *((arg1 * 0xdc) + 0x20001978) = (r0_7 >> 8);
        *((arg1 * 0xdc) + 0x20001977) = (0xef & r0_7);
        *((arg1 * 0xdc) + 0x20001979) = (r0_7 >> 0x10);
        if (r9 != 0)
        {
            goto label_84f80;
        }
        r0_15 = (r8 - 1);
        if (r0_15 > 0xc)
        {
        label_84fb4:
            return r0_15;
        }
        r0_16 = 0x99cd0;
    label_84fae:
        /* jump -> *(r0_16 + (r8 << 2)) */
    }
    char r1;
    if (sub_95bac(arg1) != 0)
    {
        r1 = 0x18;
    }
    else
    {
        r1 = 0xb;
    }
    /* tailcall */
    return sub_9159c((0x20001914 + (arg1 * 0xdc)), r1, 0x47c);
}

uint32_t sub_84fb6(int32_t arg1, int16_t* arg2)
{
    int32_t r3 = ((*arg2 >> 0xc) & 7);
    *((arg1 * 0xdc) + 0x20001980) = r3;
    if (r3 != 0)
    {
        int32_t i = 0;
        do
        {
            void* r5_1 = &arg2[(i * 2)];
            *(((arg1 * 0xdc) + 0x20001984) + (i << 2)) = (((*(r5_1 + 2) | (*(r5_1 + 3) << 8)) | (*(r5_1 + 4) << 0x10)) | (*(r5_1 + 5) << 0x18));
            i = (i + 1);
        } while (i < *((arg1 * 0xdc) + 0x20001980));
    }
    uint32_t r0_6 = sub_95bac(arg1);
    if (r0_6 == 0)
    {
        uint32_t r0_8 = *((arg1 * 0xdc) + 0x20001918);
        if (((r0_8 - 7) > 0x1c || ((r0_8 - 7) <= 0x1c && ((1 << (r0_8 - 7)) & 0x10000005) == 0)))
        {
            r0_6 = (r0_8 - 2);
        }
        if ((((r0_8 - 7) <= 0x1c && ((1 << (r0_8 - 7)) & 0x10000005) != 0) || (((r0_8 - 7) > 0x1c || ((r0_8 - 7) <= 0x1c && ((1 << (r0_8 - 7)) & 0x10000005) == 0)) && r0_6 < 2)))
        {
            r0_6 = (0x20001914 + (arg1 * 0xdc));
            *(r0_6 + 0x64) = (*(r0_6 + 0x64) | 2);
        }
    }
    return r0_6;
}

uint32_t sub_8504a(int32_t arg1, void* arg2)
{
    uint32_t r0 = sub_95bac(arg1);
    if (r0 != 0)
    {
        r0 = (0x20001914 + (arg1 * 0xdc));
        *(r0 + 0xac) = (((*(arg2 + 2) | (*(arg2 + 3) << 8)) | (*(arg2 + 4) << 0x10)) | (*(arg2 + 5) << 0x18));
        uint32_t r1_4 = *(r0 + 4);
        if ((r1_4 == 0x13 || r1_4 == 0xf))
        {
            *(r0 + 0x64) = (*(r0 + 0x64) | 0x20);
        }
    }
    return r0;
}

int32_t sub_85096(int32_t arg1, void* arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if ((*(arg2 + 5) & 0xf0) != 0x50)
    {
        return sub_9641a(arg1, sub_963d6(arg2), 4, nullptr, 0);
    }
    /* tailcall */
    return sub_9678e(arg1, 2);
}

uint32_t sub_850d0(int32_t arg1, int16_t* arg2)
{
    int32_t r3 = ((*arg2 >> 0xc) & 7);
    *((arg1 * 0xdc) + 0x200019a0) = r3;
    if (r3 != 0)
    {
        int32_t i = 0;
        do
        {
            void* r5_1 = &arg2[(i * 2)];
            *(((arg1 * 0xdc) + 0x200019a4) + (i << 2)) = (((*(r5_1 + 2) | (*(r5_1 + 3) << 8)) | (*(r5_1 + 4) << 0x10)) | (*(r5_1 + 5) << 0x18));
            i = (i + 1);
        } while (i < *((arg1 * 0xdc) + 0x200019a0));
    }
    uint32_t r0_6 = sub_95bac(arg1);
    if (r0_6 != 0)
    {
        r0_6 = (0x20001914 + (arg1 * 0xdc));
        uint32_t r1 = *(r0_6 + 4);
        if ((r1 == 0x25 || r1 == 0x15))
        {
            *(r0_6 + 0x64) = (*(r0_6 + 0x64) | 4);
        }
    }
    return r0_6;
}

int32_t sub_8514a(int32_t arg1, int16_t* arg2)
{
    int32_t r0_1 = ((*arg2 >> 0xc) & 7);
    char var_3d = r0_1;
    if (r0_1 != 0)
    {
        int32_t r1 = 0;
        int16_t var_3c;
        do
        {
            void* r2_1 = &arg2[(r1 * 2)];
            *(&var_3c + (r1 << 2)) = (((*(r2_1 + 2) | (*(r2_1 + 3) << 8)) | (*(r2_1 + 4) << 0x10)) | (*(r2_1 + 5) << 0x18));
            r1 = (r1 + 1);
        } while (r0_1 != r1);
        char r4_2 = (r0_1 - 1);
        int32_t r0_2 = var_3c;
        var_3d = r4_2;
        int16_t var_3a;
        void var_38;
        int32_t r6_1;
        if (r0_2 > 0xffffffff)
        {
            int16_t var_40 = (r0_2 & 0x7fff);
            if (*((arg1 * 0xdc) + 0x200019c8) == 0)
            {
                int32_t r4_3 = *(*(0x20001acc + (arg1 << 2)) + 0x34);
                if (r4_3 != 0)
                {
                    r6_1 = r4_3(sub_963d6(arg2), var_3a, &var_40, &var_38, &var_3d);
                    if ((r6_1 & 0xff) != 0)
                    {
                        var_3c = ((var_40 & 0x7fff) | (var_3c & 0x8000));
                    }
                }
                if ((r4_3 == 0 || (r4_3 != 0 && (r6_1 & 0xff) == 0)))
                {
                    r6_1 = 0;
                }
            }
            else
            {
                r6_1 = 0;
                *((arg1 * 0xdc) + 0x200019c8) = 0;
                char r1_4 = (*((arg1 * 0xdc) + 0x20001977) & 0xe7);
                *((arg1 * 0xdc) + 0x2000196c) = 0;
                *((arg1 * 0xdc) + 0x20001977) = r1_4;
                int32_t r9_1 = (*((arg1 * 0xdc) + 0x200019ea) | (*((arg1 * 0xdc) + 0x200019ec) << 0x10));
                if (r9_1 != 0)
                {
                    r6_1 = 0;
                    r9_1(0, sub_963d6(arg2), &var_3c, (r4_2 + 1));
                }
            }
            goto label_85290;
        }
        if ((r0_2 & 0xc0) != 0)
        {
            char r1_8 = (*((arg1 * 0xdc) + 0x20001977) & 0xe7);
            *((arg1 * 0xdc) + 0x2000196c) = 0;
            *((arg1 * 0xdc) + 0x200019c8) = 0;
            *((arg1 * 0xdc) + 0x20001977) = r1_8;
            r0_1 = *((arg1 * 0xdc) + 0x200019ea);
            int32_t r6_2 = (r0_1 | (*((arg1 * 0xdc) + 0x200019ec) << 0x10));
            if (r6_2 != 0)
            {
                r0_1 = r6_2(0, sub_963d6(arg2), &var_3c, (r4_2 + 1));
            }
        }
        else
        {
            r0_1 = *(0x20001acc + (arg1 << 2));
            int32_t r4_4 = *(r0_1 + 0x30);
            if (r4_4 != 0)
            {
                int32_t r0_34 = sub_963d6(arg2);
                uint32_t r3_9 = var_3c;
                r6_1 = r4_4(r0_34, var_3a, ((r3_9 >> 8) & 7), (r3_9 & 0x1f), &var_38, &var_3d);
                uint32_t r0_36 = r6_1;
                int16_t r0_39;
                if (r0_36 == 3)
                {
                    var_3d = 0;
                    r0_39 = (var_3c | 0xc0);
                }
                if (r0_36 == 2)
                {
                    var_3d = 0;
                    r0_39 = ((var_3c & 0xff3f) | 0x80);
                }
                if (r0_36 == 1)
                {
                    r0_39 = ((var_3c & 0xff3f) | 0x40);
                }
                if (((r0_36 == 3 || r0_36 == 2) || r0_36 == 1))
                {
                    var_3c = r0_39;
                label_85296:
                    if (sub_963d6(arg2) != 1)
                    {
                        r0_1 = sub_963d6(arg2);
                        if (r0_1 == 2)
                        {
                            r0_1 = sub_9641a(arg1, 2, 0xf, &var_3c, (4 + (var_3d << 2)));
                        }
                    }
                    else
                    {
                        uint32_t r0_25 = sub_95bac(arg1);
                        int32_t r0_28;
                        uint32_t r2_8;
                        r0_28 = sub_9641a(arg1, 1, 0xf, &var_3c, (4 + (var_3d << 2)));
                        char r1_16;
                        if (r0_25 != 0)
                        {
                            if (r0_28 == 0xfffffffe)
                            {
                                r0_1 = (0x20001914 + (arg1 * 0xdc));
                                r1_16 = 0xf;
                                goto label_85368;
                            }
                            r0_1 = (r0_28 + 3);
                            if (r0_28 == 0xfffffffd)
                            {
                                r0_1 = (0x20001914 + (arg1 * 0xdc));
                                r1_16 = 0x18;
                                goto label_85368;
                            }
                        }
                        else if (r0_28 != 0xfffffffe)
                        {
                            r0_1 = (r0_28 + 3);
                            if (r0_28 == 0xfffffffd)
                            {
                                r0_1 = (0x20001914 + (arg1 * 0xdc));
                                r1_16 = 0xb;
                                goto label_85368;
                            }
                        }
                        else
                        {
                            r0_1 = (0x20001914 + (arg1 * 0xdc));
                            r1_16 = 3;
                        label_85368:
                            sub_9159c(r0_1, r1_16, r2_8);
                        }
                    }
                }
                if (((r0_36 != 3 && r0_36 != 2) && r0_36 != 1))
                {
                label_85290:
                    r0_1 = (r6_1 << 0x18);
                    if (r0_1 != 0)
                    {
                        goto label_85296;
                    }
                }
            }
        }
    }
    return r0_1;
}

int32_t sub_8539c() __pure
{
    return;
}

void* sub_8539e(int32_t arg1)
{
    *((arg1 * 0xdc) + 0x20001978) = (*((arg1 * 0xdc) + 0x20001978) | 1);
    return (0x20001914 + (arg1 * 0xdc));
}

void sub_853ba(char* arg1)
{
    char r1 = 0x14;
    uint32_t r2_1 = *((arg1 * 0xdc) + 0x20001918);
    if (r2_1 > 0x1e)
    {
        return;
    }
    int32_t temp0 = ((1 << r2_1) & 0x4c000020);
    if (temp0 != 0)
    {
        arg1 = ((arg1 * 0xdc) + 0x20001977);
        r1 = (*arg1 & 0x9f);
    }
    if (temp0 != 0)
    {
        *arg1 = (r1 | 0x20);
    }
}

void sub_853f8(char* arg1)
{
    char r1 = 0x14;
    uint32_t r2_1 = *((arg1 * 0xdc) + 0x20001918);
    if (r2_1 > 0x1e)
    {
        return;
    }
    int32_t temp0 = ((1 << r2_1) & 0x4c000020);
    if (temp0 != 0)
    {
        arg1 = ((arg1 * 0xdc) + 0x20001977);
        r1 = (*arg1 & 0x9f);
    }
    if (temp0 != 0)
    {
        *arg1 = (r1 | 0x40);
    }
}

int32_t sub_85436() __pure
{
    return;
}

void sub_85438(char* arg1)
{
    char r1 = 0x14;
    int32_t r2_2 = (*((arg1 * 0xdc) + 0x20001918) - 6);
    if (r2_2 > 0x1a)
    {
        return;
    }
    int32_t temp0 = ((1 << r2_2) & 0x6400001);
    if (temp0 != 0)
    {
        arg1 = ((arg1 * 0xdc) + 0x20001977);
        r1 = (*arg1 | 0x80);
    }
    if (temp0 != 0)
    {
        *arg1 = r1;
    }
}

void* sub_85474(int32_t arg1)
{
    uint32_t r1 = *((arg1 * 0xdc) + 0x20001918);
    if ((r1 != 0x13 && r1 != 7))
    {
        return (0x20001914 + (arg1 * 0xdc));
    }
    *((arg1 * 0xdc) + 0x20001978) = (*((arg1 * 0xdc) + 0x20001978) | 0x10);
    return (0x20001914 + (arg1 * 0xdc));
}

void* sub_8549c(int32_t arg1)
{
    uint32_t r1 = *((arg1 * 0xdc) + 0x20001918);
    if ((r1 != 0x13 && r1 != 7))
    {
        return (0x20001914 + (arg1 * 0xdc));
    }
    *((arg1 * 0xdc) + 0x20001978) = (*((arg1 * 0xdc) + 0x20001978) | 8);
    return (0x20001914 + (arg1 * 0xdc));
}

int32_t sub_854c4(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r3 = 0;
    int32_t r2 = 0;
    uint32_t r1 = *((arg1 * 0xdc) + 0x20001918);
    if (r1 != 7)
    {
        r3 = 1;
    }
    if (r1 != 0x13)
    {
        r2 = 1;
    }
    void* r0_18;
    char r1_7;
    int32_t r2_3;
    if (((r2 & r3) == 0 && (*((arg1 * 0xdc) + 0x20001976) & 1) != 0))
    {
        uint32_t r0_4 = ((*((arg1 * 0xdc) + 0x2000197a) | (*((arg1 * 0xdc) + 0x2000197b) << 8)) | ((*((arg1 * 0xdc) + 0x2000197c) | (*((arg1 * 0xdc) + 0x2000197d) << 8)) << 0x10));
        if (r0_4 == 5)
        {
            int32_t r0_6 = *(*(0x20001acc + (arg1 << 2)) + 0x10);
            uint32_t r0_8;
            int16_t r2_4;
            uint32_t r6_2;
            if (r0_6 != 0)
            {
                r0_8 = r0_6();
                if ((r0_8 != 0 && r0_8 != 2))
                {
                    if (r0_8 == 1)
                    {
                        uint32_t r0_10 = sub_95bac(arg1);
                        int32_t r0_12;
                        uint32_t r2_2;
                        r0_12 = sub_9641a(arg1, 1, 3, nullptr, 0);
                        void* r0_13;
                        char r1_6;
                        if (r0_10 != 0)
                        {
                            if (r0_12 == 0xfffffffe)
                            {
                                r0_13 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0xf;
                                goto label_85614;
                            }
                            if (r0_12 == 0xfffffffd)
                            {
                                r0_13 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0x18;
                                goto label_85614;
                            }
                        }
                        else if (r0_12 == 0xfffffffe)
                        {
                            r0_13 = (0x20001914 + (arg1 * 0xdc));
                            r1_6 = 3;
                        label_85614:
                            sub_9159c(r0_13, r1_6, r2_2);
                        }
                        else if (r0_12 == 0xfffffffd)
                        {
                            r0_13 = (0x20001914 + (arg1 * 0xdc));
                            r1_6 = 0xb;
                            goto label_85614;
                        }
                        /* tailcall */
                        return sub_95b72(arg1);
                    }
                    r6_2 = sub_95bac(arg1);
                    r2_4 = 0xc;
                }
            }
            if (((r0_6 == 0 || (r0_6 != 0 && r0_8 == 0)) || (r0_6 != 0 && r0_8 == 2)))
            {
                r6_2 = sub_95bac(arg1);
                r2_4 = 4;
            }
            int32_t r0_22;
            r0_22 = sub_9641a(arg1, 1, r2_4, nullptr, 0);
            int32_t r0_23;
            if (r6_2 == 0)
            {
                if (r0_22 == 0xfffffffe)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_8558e;
                }
                r0_23 = (r0_22 + 3);
                if (r0_22 == 0xfffffffd)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_855b6;
                }
            }
            else
            {
                if (r0_22 == 0xfffffffe)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_85580;
                }
                r0_23 = (r0_22 + 3);
                if (r0_22 == 0xfffffffd)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    r1_7 = 0x18;
                    goto label_855d4;
                }
            }
            return r0_23;
        }
    }
    int32_t r0_15 = sub_96e0a(arg1, 1, 0);
    uint32_t r0_17;
    r0_17 = sub_95bac(arg1);
    if (r0_15 <= 0xffffffff)
    {
        if (r0_17 == 0)
        {
            r0_18 = (0x20001914 + (arg1 * 0xdc));
        label_855b6:
            r1_7 = 0xb;
            goto label_855d4;
        }
        r0_18 = (0x20001914 + (arg1 * 0xdc));
        r1_7 = 0x17;
    label_855d4:
        /* tailcall */
        return sub_9159c(r0_18, r1_7, r2_3);
    }
    if (r0_17 == 0)
    {
        r0_18 = (0x20001914 + (arg1 * 0xdc));
    label_8558e:
        r1_7 = 3;
        goto label_855d4;
    }
    r0_18 = (0x20001914 + (arg1 * 0xdc));
label_85580:
    r1_7 = 0xf;
    goto label_855d4;
}

int32_t sub_85628(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r3 = 0;
    int32_t r2 = 0;
    uint32_t r1 = *((arg1 * 0xdc) + 0x20001918);
    if (r1 != 7)
    {
        r3 = 1;
    }
    if (r1 != 0x13)
    {
        r2 = 1;
    }
    void* r0_19;
    char r1_7;
    int32_t r2_3;
    if (((r2 & r3) == 0 && (*((arg1 * 0xdc) + 0x20001976) & 1) != 0))
    {
        uint32_t r0_4 = ((*((arg1 * 0xdc) + 0x2000197a) | (*((arg1 * 0xdc) + 0x2000197b) << 8)) | ((*((arg1 * 0xdc) + 0x2000197c) | (*((arg1 * 0xdc) + 0x2000197d) << 8)) << 0x10));
        if (r0_4 == 5)
        {
            int32_t r0_6 = *(*(0x20001acc + (arg1 << 2)) + 0x14);
            uint32_t r0_8;
            int16_t r2_4;
            uint32_t r6_2;
            if (r0_6 != 0)
            {
                r0_8 = r0_6();
                if ((r0_8 != 0 && r0_8 != 2))
                {
                    if (r0_8 == 1)
                    {
                        sub_97014(arg1, 1);
                        uint32_t r0_11 = sub_95bac(arg1);
                        int32_t r0_13;
                        uint32_t r2_2;
                        r0_13 = sub_9641a(arg1, 1, 3, nullptr, 0);
                        void* r0_30;
                        char r1_13;
                        if (r0_11 == 0)
                        {
                            void* r0_27;
                            char r1_12;
                            if (r0_13 == 0xfffffffe)
                            {
                                r0_27 = (0x20001914 + (arg1 * 0xdc));
                                r1_12 = 3;
                            }
                            if (r0_13 == 0xfffffffd)
                            {
                                r0_27 = (0x20001914 + (arg1 * 0xdc));
                                r1_12 = 0xb;
                            }
                            if ((r0_13 == 0xfffffffe || r0_13 == 0xfffffffd))
                            {
                                sub_9159c(r0_27, r1_12, r2_2);
                            }
                            r0_30 = (0x20001914 + (arg1 * 0xdc));
                            r1_13 = 0x20;
                        }
                        else
                        {
                            void* r0_14;
                            char r1_6;
                            if (r0_13 == 0xfffffffe)
                            {
                                r0_14 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0xf;
                            }
                            if (r0_13 == 0xfffffffd)
                            {
                                r0_14 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0x18;
                            }
                            if ((r0_13 == 0xfffffffe || r0_13 == 0xfffffffd))
                            {
                                sub_9159c(r0_14, r1_6, r2_2);
                            }
                            r0_30 = (0x20001914 + (arg1 * 0xdc));
                            r1_13 = 0x21;
                        }
                        /* tailcall */
                        return sub_9158a(r0_30, r1_13, r2_2);
                    }
                    r6_2 = sub_95bac(arg1);
                    r2_4 = 0xc;
                }
            }
            if (((r0_6 == 0 || (r0_6 != 0 && r0_8 == 0)) || (r0_6 != 0 && r0_8 == 2)))
            {
                r6_2 = sub_95bac(arg1);
                r2_4 = 4;
            }
            int32_t r0_23;
            r0_23 = sub_9641a(arg1, 1, r2_4, nullptr, 0);
            int32_t r0_24;
            if (r6_2 == 0)
            {
                if (r0_23 == 0xfffffffe)
                {
                    r0_19 = (0x20001914 + (arg1 * 0xdc));
                    goto label_856fa;
                }
                r0_24 = (r0_23 + 3);
                if (r0_23 == 0xfffffffd)
                {
                    r0_19 = (0x20001914 + (arg1 * 0xdc));
                    goto label_85722;
                }
            }
            else
            {
                if (r0_23 == 0xfffffffe)
                {
                    r0_19 = (0x20001914 + (arg1 * 0xdc));
                    goto label_856ec;
                }
                r0_24 = (r0_23 + 3);
                if (r0_23 == 0xfffffffd)
                {
                    r0_19 = (0x20001914 + (arg1 * 0xdc));
                    r1_7 = 0x18;
                    goto label_85740;
                }
            }
            return r0_24;
        }
    }
    int32_t r0_16 = sub_96e0a(arg1, 1, 0);
    uint32_t r0_18;
    r0_18 = sub_95bac(arg1);
    if (r0_16 <= 0xffffffff)
    {
        if (r0_18 == 0)
        {
            r0_19 = (0x20001914 + (arg1 * 0xdc));
        label_85722:
            r1_7 = 0xb;
            goto label_85740;
        }
        r0_19 = (0x20001914 + (arg1 * 0xdc));
        r1_7 = 0x17;
    label_85740:
        /* tailcall */
        return sub_9159c(r0_19, r1_7, r2_3);
    }
    if (r0_18 == 0)
    {
        r0_19 = (0x20001914 + (arg1 * 0xdc));
    label_856fa:
        r1_7 = 3;
        goto label_85740;
    }
    r0_19 = (0x20001914 + (arg1 * 0xdc));
label_856ec:
    r1_7 = 0xf;
    goto label_85740;
}

int32_t sub_8579e(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r3 = 0;
    int32_t r2 = 0;
    uint32_t r1 = *((arg1 * 0xdc) + 0x20001918);
    if (r1 != 7)
    {
        r3 = 1;
    }
    if (r1 != 0x13)
    {
        r2 = 1;
    }
    void* r0_18;
    char r1_7;
    int32_t r2_3;
    if (((r2 & r3) == 0 && (*((arg1 * 0xdc) + 0x20001976) & 1) != 0))
    {
        uint32_t r0_4 = ((*((arg1 * 0xdc) + 0x2000197a) | (*((arg1 * 0xdc) + 0x2000197b) << 8)) | ((*((arg1 * 0xdc) + 0x2000197c) | (*((arg1 * 0xdc) + 0x2000197d) << 8)) << 0x10));
        if (r0_4 == 5)
        {
            int32_t r0_6 = *(*(0x20001acc + (arg1 << 2)) + 0x18);
            uint32_t r0_8;
            int16_t r2_4;
            uint32_t r6_2;
            if (r0_6 != 0)
            {
                int32_t r0_7 = r0_6();
                r0_8 = r0_7;
                if ((r0_8 != 0 && r0_8 != 2))
                {
                    if (r0_8 == 1)
                    {
                        uint32_t r0_10 = sub_95bac(arg1);
                        int32_t r0_12;
                        uint32_t r2_2;
                        r0_12 = sub_9641a(arg1, 1, 3, nullptr, 0);
                        void* r0_13;
                        char r1_6;
                        if (r0_10 != 0)
                        {
                            if (r0_12 == 0xfffffffe)
                            {
                                r0_13 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0xf;
                                goto label_858f2;
                            }
                            if (r0_12 == 0xfffffffd)
                            {
                                r0_13 = (0x20001914 + (arg1 * 0xdc));
                                r1_6 = 0x18;
                                goto label_858f2;
                            }
                        }
                        else if (r0_12 == 0xfffffffe)
                        {
                            r0_13 = (0x20001914 + (arg1 * 0xdc));
                            r1_6 = 3;
                        label_858f2:
                            sub_9159c(r0_13, r1_6, r2_2);
                        }
                        else if (r0_12 == 0xfffffffd)
                        {
                            r0_13 = (0x20001914 + (arg1 * 0xdc));
                            r1_6 = 0xb;
                            goto label_858f2;
                        }
                        char r1_12;
                        if ((r0_7 << 0x18) < 0)
                        {
                            r1_12 = 0x1c;
                        }
                        else
                        {
                            r1_12 = 0x1d;
                        }
                        /* tailcall */
                        return sub_9158a((0x20001914 + (arg1 * 0xdc)), r1_12, r2_2);
                    }
                    r6_2 = sub_95bac(arg1);
                    r2_4 = 0xc;
                }
            }
            if (((r0_6 == 0 || (r0_6 != 0 && r0_8 == 0)) || (r0_6 != 0 && r0_8 == 2)))
            {
                r6_2 = sub_95bac(arg1);
                r2_4 = 4;
            }
            int32_t r0_22;
            r0_22 = sub_9641a(arg1, 1, r2_4, nullptr, 0);
            int32_t r0_23;
            if (r6_2 == 0)
            {
                if (r0_22 == 0xfffffffe)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_8586c;
                }
                r0_23 = (r0_22 + 3);
                if (r0_22 == 0xfffffffd)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_85894;
                }
            }
            else
            {
                if (r0_22 == 0xfffffffe)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    goto label_8585e;
                }
                r0_23 = (r0_22 + 3);
                if (r0_22 == 0xfffffffd)
                {
                    r0_18 = (0x20001914 + (arg1 * 0xdc));
                    r1_7 = 0x18;
                    goto label_858b2;
                }
            }
            return r0_23;
        }
    }
    int32_t r0_15 = sub_96e0a(arg1, 1, 0);
    uint32_t r0_17;
    r0_17 = sub_95bac(arg1);
    if (r0_15 <= 0xffffffff)
    {
        if (r0_17 == 0)
        {
            r0_18 = (0x20001914 + (arg1 * 0xdc));
        label_85894:
            r1_7 = 0xb;
            goto label_858b2;
        }
        r0_18 = (0x20001914 + (arg1 * 0xdc));
        r1_7 = 0x17;
    label_858b2:
        /* tailcall */
        return sub_9159c(r0_18, r1_7, r2_3);
    }
    if (r0_17 == 0)
    {
        r0_18 = (0x20001914 + (arg1 * 0xdc));
    label_8586c:
        r1_7 = 3;
        goto label_858b2;
    }
    r0_18 = (0x20001914 + (arg1 * 0xdc));
label_8585e:
    r1_7 = 0xf;
    goto label_858b2;
}

void sub_8590e(char* arg1)
{
    char r1 = 0x14;
    uint32_t r2_1 = *((arg1 * 0xdc) + 0x20001918);
    if (r2_1 > 0x1e)
    {
        return;
    }
    int32_t temp0 = ((1 << r2_1) & 0x4c000020);
    if (temp0 != 0)
    {
        arg1 = ((arg1 * 0xdc) + 0x20001977);
        r1 = (*arg1 | 0x60);
    }
    if (temp0 != 0)
    {
        *arg1 = r1;
    }
}

int32_t sub_85948(int32_t arg1, void* arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if (sub_963d6(arg2) != 1)
    {
        return sub_9641a(arg1, sub_963d6(arg2), 3, nullptr, 0);
    }
    sub_9641a(arg1, 1, 3, nullptr, 0);
    char r1;
    if (sub_95bac(arg1) == 0)
    {
        r1 = 3;
    }
    else
    {
        r1 = 0xf;
    }
    /* tailcall */
    return sub_9159c((0x20001914 + (arg1 * 0xdc)), r1, 0x47c);
}

void* sub_859ae(int32_t arg1, int32_t arg2)
{
    sub_97886(((arg2 * 0xdc) + 0x20001977), 0, 7);
    sub_97886(((arg2 * 0xdc) + 0x20001924), 0, 0x52);
    *((arg2 * 0xdc) + 0x20001976) = (*((arg2 * 0xdc) + 0x20001976) & 1);
    sub_97886(((arg2 * 0xdc) + 0x20001980), 0, 0x48);
    return ((arg2 * 0xdc) + 0x20001980);
}

int32_t sub_859f2(int32_t arg1, int32_t arg2)
{
    int32_t r0_1 = **(0x20001acc + (arg2 << 2));
    int32_t r2;
    if (r0_1 != 0)
    {
        int32_t r0_2;
        r0_2 = r0_1();
        if (r0_2 != 0)
        {
            /* tailcall */
            return sub_9158a(arg1, 0xd, r2);
        }
    }
    /* tailcall */
    return sub_9158a(arg1, 1, r2);
}

char* sub_85a24(int32_t arg1, int32_t arg2)
{
    *((arg2 * 0xdc) + 0x2000192c) = 0;
    *((arg2 * 0xdc) + 0x20001975) = 0;
    *((arg2 * 0xdc) + 0x2000193c) = 0;
    *((arg2 * 0xdc) + 0x20001934) = 0;
    *((arg2 * 0xdc) + 0x20001944) = 0;
    sub_97886(((arg2 * 0xdc) + 0x20001977), 0, 7);
    *((arg2 * 0xdc) + 0x20001980) = 0;
    *((arg2 * 0xdc) + 0x200019a0) = 0;
    *((arg2 * 0xdc) + 0x200019c0) = 0;
    *((arg2 * 0xdc) + 0x200019c4) = 0;
    return ((arg2 * 0xdc) + 0x20001977);
}

int32_t j_sub_9158a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_9158a(arg1, 2, r2);
}

int32_t sub_85a6c() __pure
{
    return;
}

void sub_85a6e(int32_t arg1, int32_t arg2)
{
    if ((*((arg2 * 0xdc) + 0x20001976) << 0x1f) != 0)
    {
        /* tailcall */
        return sub_9158a(arg1, 3, (0x20001914 + (arg2 * 0xdc)));
    }
    if ((*((arg2 * 0xdc) + 0x20001924) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001928)) >= 0))
    {
        *((arg2 * 0xdc) + 0x20001924) = 0;
        uint32_t r2_2 = *((arg2 * 0xdc) + 0x20001974);
        if (((*((arg2 * 0xdc) + 0x20001977) & 1) != 0 && r2_2 >= 3))
        {
            arg1 = *(*(0x20001acc + (arg2 << 2)) + 4);
            if (arg1 != 0)
            {
                /* jump -> arg1 */
            }
        }
        if (((*((arg2 * 0xdc) + 0x20001977) & 1) == 0 && r2_2 > 2))
        {
            /* tailcall */
            return sub_9158a(arg1, 0xc, r2_2);
        }
        if ((((*((arg2 * 0xdc) + 0x20001977) & 1) != 0 && r2_2 < 3) || (*((arg2 * 0xdc) + 0x20001977) & 1) == 0))
        {
            /* tailcall */
            return sub_9158a(arg1, 0xa, r2_2);
        }
    }
}

void sub_85b24(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2_1 = (*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8));
    uint32_t lr_1 = (r2_1 | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    char r1_4;
    if ((lr_1 & 0x200) != 0)
    {
        *((arg2 * 0xdc) + 0x20001977) = lr_1;
        *((arg2 * 0xdc) + 0x20001979) = (lr_1 >> 0x10);
        *((arg2 * 0xdc) + 0x20001978) = ((0xfffdff & lr_1) >> 8);
        *((arg2 * 0xdc) + 0x20001934) = 0;
        r1_4 = 4;
    }
    else
    {
        if (*((arg2 * 0xdc) + 0x20001934) != 0)
        {
            r2_1 = (*0x20006064 - *((arg2 * 0xdc) + 0x20001938));
            if (r2_1 >= 0)
            {
                *((arg2 * 0xdc) + 0x20001934) = 0;
                if (*((arg2 * 0xdc) + 0x20001974) > 2)
                {
                    goto label_85c00;
                }
            label_85c02:
                r1_4 = 0xa;
            }
        }
        if ((*((arg2 * 0xdc) + 0x20001934) == 0 || (*((arg2 * 0xdc) + 0x20001934) != 0 && r2_1 < 0)))
        {
            if (*((arg2 * 0xdc) + 0x20001924) == 0)
            {
            label_85c00:
                return;
            }
            if ((*0x20006064 - *((arg2 * 0xdc) + 0x20001928)) < 0)
            {
                goto label_85c00;
            }
            *((arg2 * 0xdc) + 0x20001924) = 0;
            r2_1 = *((arg2 * 0xdc) + 0x20001974);
            if ((lr_1 << 0x1f) != 0)
            {
                if (r2_1 < 3)
                {
                    goto label_85c02;
                }
                arg1 = *(*(0x20001acc + (arg2 << 2)) + 4);
                if (arg1 != 0)
                {
                    /* jump -> arg1 */
                }
                goto label_85c00;
            }
            if (r2_1 <= 2)
            {
                goto label_85c02;
            }
            r1_4 = 0xc;
        }
    }
    /* tailcall */
    return sub_9158a(arg1, r1_4, r2_1);
}

int32_t sub_85c10(int32_t arg1, int32_t arg2)
{
    int32_t r0 = 0;
    char lr = *((arg2 * 0xdc) + 0x20001977);
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x20001924) = 0;
    *((arg2 * 0xdc) + 0x20001974) = 0;
    *((arg2 * 0xdc) + 0x2000197a) = 1;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x20001977) = (lr | 1);
    int32_t r2_2 = *(*(0x20001acc + (arg2 << 2)) + 0x50);
    if (r2_2 != 0)
    {
        r0 = r2_2(((arg2 * 0xdc) + 0x20001984), *((arg2 * 0xdc) + 0x20001980));
    }
    *((arg2 * 0xdc) + 0x200019c4) = r0;
    return r0;
}

int32_t j_sub_9158a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_9158a(arg1, 5, r2);
}

char* sub_85c6e(void* arg1, int32_t arg2)
{
    int32_t r0_2;
    uint32_t r2;
    r0_2 = sub_9641a(arg2, 1, 2, ((arg2 * 0xdc) + 0x200019c4), 4);
    void* r0_4;
    char r1_1;
    if (r0_2 == 0xfffffffd)
    {
        r0_4 = arg1;
        r1_1 = 0xb;
    }
    if (r0_2 == 0xfffffffe)
    {
        r0_4 = arg1;
        r1_1 = 3;
    }
    if ((r0_2 == 0xfffffffd || r0_2 == 0xfffffffe))
    {
        sub_9159c(r0_4, r1_1, r2);
    }
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000197a) = 2;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_2 + 0x1b);
    return ((arg2 * 0xdc) + 0x2000197a);
}

void sub_85ce4(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t lr_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    int32_t r2_2 = ((lr_2 >> 5) & 3);
    if ((r2_2 - 2) < 2)
    {
        uint32_t r2_3 = (lr_2 << 0x1e);
        if (r2_3 < 0)
        {
            *((arg2 * 0xdc) + 0x2000197a) = 4;
            *((arg2 * 0xdc) + 0x2000197d) = 0;
            *((arg2 * 0xdc) + 0x2000197c) = 0;
            *((arg2 * 0xdc) + 0x2000197b) = 0;
            /* tailcall */
            return sub_9158a(arg1, 7, 0);
        }
        /* tailcall */
        return sub_9158a(arg1, 3, r2_3);
    }
    if (r2_2 == 1)
    {
        *((arg2 * 0xdc) + 0x20001978) = (lr_2 >> 8);
        *((arg2 * 0xdc) + 0x20001977) = (0x9f & lr_2);
        *((arg2 * 0xdc) + 0x20001979) = (lr_2 >> 0x10);
        /* tailcall */
        return sub_9158a(arg1, 6, r2_2);
    }
    if ((*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        /* tailcall */
        return sub_9158a(arg1, 0xa, 0);
    }
}

char* sub_85d96(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000197a) = 3;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x2000193c) = 1;
    *((arg2 * 0xdc) + 0x20001940) = (r1 + 0x1f4);
    return ((arg2 * 0xdc) + 0x2000197a);
}

void sub_85dcc(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r4_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r4_2 & 0x80) != 0)
    {
        *((arg2 * 0xdc) + 0x2000193c) = 0;
        *((arg2 * 0xdc) + 0x20001979) = (r4_2 >> 0x10);
        *((arg2 * 0xdc) + 0x20001978) = (r4_2 >> 8);
        *((arg2 * 0xdc) + 0x20001977) = ((r4_2 & 0x7d) | 2);
        *((arg2 * 0xdc) + 0x2000197a) = 5;
        *((arg2 * 0xdc) + 0x2000197d) = 0;
        *((arg2 * 0xdc) + 0x2000197c) = 0;
        *((arg2 * 0xdc) + 0x2000197b) = 0;
        /* tailcall */
        return sub_9158a(arg1, 7, 5);
    }
    if (*((arg2 * 0xdc) + 0x2000193c) != 0)
    {
        int32_t r2_3 = *0x20006064;
        if ((r2_3 - *((arg2 * 0xdc) + 0x20001940)) >= 0)
        {
            *((arg2 * 0xdc) + 0x2000193c) = 0;
            /* tailcall */
            return sub_9158a(arg1, 0xa, r2_3);
        }
    }
}

uint32_t sub_85e58(int32_t arg1, int32_t arg2)
{
    uint32_t r0_4 = ((*((arg2 * 0xdc) + 0x2000197a) | (*((arg2 * 0xdc) + 0x2000197b) << 8)) | ((*((arg2 * 0xdc) + 0x2000197c) | (*((arg2 * 0xdc) + 0x2000197d) << 8)) << 0x10));
    if (r0_4 != 5)
    {
        return r0_4;
    }
    int32_t r0_6 = *(*(0x20001acc + (arg2 << 2)) + 0x54);
    if (r0_6 == 0)
    {
        return r0_6;
    }
    /* jump -> r0_6 */
}

uint32_t sub_85eee(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2 = (0x20001914 + (arg2 * 0xdc));
    char* r5_1 = (r2 + 0x63);
    uint32_t r1_1 = (*r5_1 | (r5_1[1] << 8));
    /* unimplemented  {sbfx r1, r3, #0, #0x18} */;
    char r1_6;
    if (((r1_1 | (r5_1[2] << 0x10)) & 0x200) != 0)
    {
        *r5_1 = r1_1;
        r5_1[2] = (r1_1 >> 0x10);
        r5_1[1] = ((r1_1 & 0xfffdff) >> 8);
        *(r2 + 0x20) = 0;
        r1_6 = 4;
    }
    else
    {
        if (((r1_1 << 0x11) < 0 || (((r1_1 << 0x11) >= 0 && *(r2 + 0x20) != 0) && (*0x20006064 - *((arg2 * 0xdc) + 0x20001938)) >= 0)))
        {
            *(r2 + 0x20) = 0;
            r5_1[2] = (r1_1 >> 0x10);
            *r5_1 = r1_1;
            r2 = &*(nullptr + 1);
            r5_1[1] = ((r1_1 & 0xbf00) >> 8);
            *((arg2 * 0xdc) + 0x2000197a) = 1;
            *((arg2 * 0xdc) + 0x2000197d) = 0;
            *((arg2 * 0xdc) + 0x2000197c) = 0;
            *((arg2 * 0xdc) + 0x2000197b) = 0;
            r1_6 = 5;
        }
        if (((*(r2 + 0x20) == 0 || (*(r2 + 0x20) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001938)) < 0)) && (r1_1 << 0x11) >= 0))
        {
            if ((r1_1 << 0x17) < 0)
            {
                *r5_1 = r1_1;
                r5_1[2] = (r1_1 >> 0x10);
                r2 = 0xfffeff;
                r5_1[1] = ((r1_1 & 0xfffeff) >> 8);
                r1_6 = 6;
            }
            else if ((r1_1 << 0x13) < 0)
            {
                *r5_1 = r1_1;
                r5_1[2] = (r1_1 >> 0x10);
                r2 = 0xffefff;
                r5_1[1] = ((r1_1 & 0xffefff) >> 8);
                r1_6 = 0x26;
            }
            else if ((r1_1 << 0x14) < 0)
            {
                *r5_1 = r1_1;
                r5_1[2] = (r1_1 >> 0x10);
                r2 = 0xfff7ff;
                r5_1[1] = ((r1_1 & 0xfff7ff) >> 8);
                r1_6 = 8;
            }
            else if ((r1_1 << 0xe) < 0)
            {
                *r5_1 = r1_1;
                r2 = (r1_1 >> 8);
                r5_1[1] = r2;
                r5_1[2] = ((r1_1 & 0xfd0000) >> 0x10);
                r1_6 = 9;
            }
            else if ((r1_1 << 0xb) < 0)
            {
                *r5_1 = r1_1;
                r2 = (r1_1 >> 8);
                r5_1[1] = r2;
                r5_1[2] = ((r1_1 & 0xef0000) >> 0x10);
                r1_6 = 0x25;
            }
            else if ((r1_1 << 0xa) < 0)
            {
                *r5_1 = r1_1;
                r2 = (r1_1 >> 8);
                r5_1[1] = r2;
                r5_1[2] = ((r1_1 & 0xdf0000) >> 0x10);
                r1_6 = 0x1e;
            }
            else
            {
                uint32_t r2_9 = (r1_1 << 9);
                if (r2_9 < 0)
                {
                    *r5_1 = r1_1;
                    r2 = (r1_1 >> 8);
                    r5_1[1] = r2;
                    r5_1[2] = ((r1_1 & 0xbf0000) >> 0x10);
                    r1_6 = 0x1a;
                }
                else
                {
                    /* unimplemented  {sbfx r2, r1, #0, #0x18} */;
                    if (r2_9 > 0xffffffff)
                    {
                        uint32_t r0 = (r1_1 << 0x1c);
                        if (r0 < 0)
                        {
                            r5_1[1] = (r1_1 >> 8);
                            *r5_1 = (0xf7 & r1_1);
                            r5_1[2] = (r1_1 >> 0x10);
                            int32_t r0_7 = sub_963dc(arg2, *((arg2 * 0xdc) + 0x200019c8), 0xf, ((arg2 * 0xdc) + 0x200019cc), (*((arg2 * 0xdc) + 0x200019e8) << 2), 0xffffffff);
                            uint32_t r12_1;
                            if (r0_7 != 0)
                            {
                                *((arg2 * 0xdc) + 0x200019c8) = 0;
                                *((arg2 * 0xdc) + 0x2000196c) = 0;
                                *r5_1 = (*r5_1 & 0xe7);
                                r0 = *((arg2 * 0xdc) + 0x200019ec);
                                r12_1 = (*((arg2 * 0xdc) + 0x200019ea) | (r0 << 0x10));
                            }
                            if ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) == 0))
                            {
                                *((arg2 * 0xdc) + 0x200019c8);
                                *((arg2 * 0xdc) + 0x200019c8) = 0;
                                *((arg2 * 0xdc) + 0x2000196c) = 0;
                                *r5_1 = (*r5_1 & 0xe7);
                                r0 = *((arg2 * 0xdc) + 0x200019ec);
                                r12_1 = (*((arg2 * 0xdc) + 0x200019ea) | (r0 << 0x10));
                            }
                            if (((r0_7 != 0 && r12_1 != 0) || ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) == 0) && r12_1 != 0)))
                            {
                                /* jump -> r12_1 */
                            }
                            if ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) != 0))
                            {
                                int32_t r1_27 = *0x20006064;
                                *((arg2 * 0xdc) + 0x2000196c) = 1;
                                *((arg2 * 0xdc) + 0x20001970) = (r1_27 + 0x1b);
                                r0 = (*r5_1 | 0x10);
                                *r5_1 = r0;
                            }
                        }
                        return r0;
                    }
                    r2 = (r1_1 >> 8);
                    *r5_1 = r1_1;
                    r5_1[1] = r2;
                    r5_1[2] = ((r1_1 >> 0x10) & 0x7f);
                    r1_6 = 0x1b;
                }
            }
        }
    }
    /* tailcall */
    return sub_9158a(arg1, r1_6, r2);
}

void* sub_86140(void* arg1, int32_t arg2)
{
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x5c);
    int32_t r0_2;
    int32_t r0_3;
    void* r3;
    if (r1 != 0)
    {
        void var_2c;
        r0_2 = r1(&var_2c);
        if ((r0_2 & 0xff) != 0)
        {
            r3 = &var_2c;
            r0_3 = (0x3fc & (r0_2 << 2));
        }
    }
    if ((r1 == 0 || (r1 != 0 && (r0_2 & 0xff) == 0)))
    {
        r0_3 = 0;
        r3 = nullptr;
    }
    void* r0_5;
    uint32_t r2;
    r0_5 = sub_9641a(arg2, 1, 4, r3, r0_3);
    void* r0_6;
    char r1_2;
    if (r0_5 == 0xfffffffd)
    {
        r0_6 = arg1;
        r1_2 = 0xb;
    }
    else
    {
        r0_6 = (r0_5 + 2);
    }
    if (r0_5 == 0xfffffffe)
    {
        r0_6 = arg1;
        r1_2 = 3;
    }
    if ((r0_5 == 0xfffffffd || r0_5 == 0xfffffffe))
    {
        sub_9159c(r0_6, r1_2, r2);
    }
    return r0_6;
}

int32_t j_sub_9158a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_9158a(arg1, 7, r2);
}

int32_t sub_861a4(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1;
    int32_t r2;
    r0_1 = sub_9641a(arg2, 1, 7, nullptr, 0);
    int32_t r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0xb;
    }
    else
    {
        if (r0_1 != 0xfffffffe)
        {
            return (r0_1 + 2);
        }
        r0_3 = arg1;
        r1_1 = 3;
    }
    /* tailcall */
    return sub_9159c(r0_3, r1_1, r2);
}

int32_t j_sub_9158a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_9158a(arg1, 7, r2);
}

char* sub_861e2(int32_t arg1, int32_t arg2)
{
    sub_96e0a(arg2, 1, 1);
    int32_t r0_2 = *(*(0x20001acc + (arg2 << 2)) + 8);
    if (r0_2 != 0)
    {
        r0_2();
    }
    *((arg2 * 0xdc) + 0x2000197a) = 0;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x20001974) = (*((arg2 * 0xdc) + 0x20001974) + 1);
    return ((arg2 * 0xdc) + 0x2000197a);
}

int32_t j_sub_9158a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_9158a(arg1, 0xb, r2);
}

int32_t sub_86230(int32_t arg1, int32_t arg2)
{
    void* r0 = *(0x20001acc + (arg2 << 2));
    int32_t r1 = *(r0 + 8);
    if (r1 != 0)
    {
        r1();
        r0 = *(0x20001acc + (arg2 << 2));
    }
    int32_t r0_1 = *(r0 + 0x58);
    if (r0_1 != 0)
    {
        r0_1();
    }
    /* tailcall */
    return sub_95b40(arg2, 0);
}

int32_t j_sub_9158a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_9158a(arg1, 1, r2);
}

void* sub_86264(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x20001924) = 1;
    *((arg2 * 0xdc) + 0x20001928) = (r1 + 0x1388);
    return (0x20001914 + (arg2 * 0xdc));
}

int32_t sub_8628a(int32_t arg1, int32_t arg2)
{
    int32_t r0_1 = *(*(0x20001acc + (arg2 << 2)) + 0x60);
    if (r0_1 == 0)
    {
        return r0_1;
    }
    /* jump -> r0_1 */
}

void* sub_862a0(int32_t arg1, int32_t arg2)
{
    char r6 = 0;
    *((arg2 * 0xdc) + 0x2000197a) = 0;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x20001975) = 0;
    if (sub_9702a(arg2) != 1)
    {
        *((arg2 * 0xdc) + 0x2000193c) = 0;
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        *((arg2 * 0xdc) + 0x20001934) = 0;
        sub_97886(((arg2 * 0xdc) + 0x20001977), 0, 7);
        *((arg2 * 0xdc) + 0x20001980) = 0;
        *((arg2 * 0xdc) + 0x200019a0) = 0;
        *((arg2 * 0xdc) + 0x200019c0) = 0;
        *((arg2 * 0xdc) + 0x200019c4) = 0;
    }
    else
    {
        r6 = 1;
        *((arg2 * 0xdc) + 0x20001948) = (*0x20006064 + 0x14);
    }
    *((arg2 * 0xdc) + 0x20001944) = r6;
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_8631a(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    char* r0_3;
    void* r0_7;
    int32_t r2_3;
    if (sub_9702a(arg2) != 1)
    {
        r0_3 = (0x20001914 + (arg2 * 0xdc));
        if ((r0_3[0x62] << 0x1f) == 0)
        {
            goto label_863fe;
        }
        r0_3 = &r0_3[0x30];
        r2_3 = *0x20006064;
        if (*r0_3 == 0)
        {
            *((arg2 * 0xdc) + 0x20001948) = (r2_3 + 0x96);
            *r0_3 = 1;
        label_863fe:
            return r0_3;
        }
        if ((r2_3 - *((arg2 * 0xdc) + 0x20001948)) < 0)
        {
            goto label_863fe;
        }
        *r0_3 = 0;
        r0_7 = *(0x20001acc + (arg2 << 2));
    label_863ce:
        int32_t r0_8 = *(r0_7 + 0xc);
        int32_t r0_9;
        int32_t r0_10;
        char r1_6;
        if (r0_8 != 0)
        {
            r0_9 = r0_8();
            if (r0_9 != 0)
            {
                r0_10 = arg1;
                r1_6 = 0x27;
            }
        }
        if ((r0_8 == 0 || (r0_8 != 0 && r0_9 == 0)))
        {
            r0_10 = arg1;
            r1_6 = 0xf;
        }
        /* tailcall */
        return sub_9158a(r0_10, r1_6, r2_3);
    }
    r0_3 = ((arg2 * 0xdc) + 0x20001944);
    if (*r0_3 == 0)
    {
        goto label_863fe;
    }
    if ((*0x20006064 - *((arg2 * 0xdc) + 0x20001948)) < 0)
    {
        goto label_863fe;
    }
    *r0_3 = 0;
    sub_97014(arg2, 0);
    int32_t r2_2 = *(*(0x20001acc + (arg2 << 2)) + 0x20);
    if (r2_2 != 0)
    {
        r2_2(1, 1);
    }
    r2_3 = sub_95b02(arg2, 1);
    r0_7 = *(0x20001acc + (arg2 << 2));
    goto label_863ce;
}

void* sub_86400(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x20001944) = 1;
    *((arg2 * 0xdc) + 0x20001948) = (r1 + 0x96);
    return (0x20001914 + (arg2 * 0xdc));
}

void sub_86424(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2_6;
    if ((*((arg2 * 0xdc) + 0x20001944) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001948)) >= 0))
    {
        *((arg2 * 0xdc) + 0x20001944) = 0;
        uint32_t r2_2 = *((arg2 * 0xdc) + 0x20001975);
        if (r2_2 <= 0x32)
        {
            /* tailcall */
            return sub_9158a(arg1, 0xf, r2_2);
        }
        r2_6 = *((arg2 * 0xdc) + 0x20001977);
        if ((r2_6 << 0x1f) == 0)
        {
        label_864b4:
            /* tailcall */
            return sub_9158a(arg1, 0x19, r2_6);
        }
        goto label_864b8;
    }
    if (*((arg2 * 0xdc) + 0x20001924) == 0)
    {
    label_864b8:
        return;
    }
    if ((*0x20006064 - *((arg2 * 0xdc) + 0x20001928)) < 0)
    {
        goto label_864b8;
    }
    *((arg2 * 0xdc) + 0x20001924) = 0;
    r2_6 = *((arg2 * 0xdc) + 0x20001974);
    if (((*((arg2 * 0xdc) + 0x20001977) & 1) != 0 && r2_6 >= 3))
    {
        int32_t r0_1 = *(*(0x20001acc + (arg2 << 2)) + 4);
        if (r0_1 == 0)
        {
            return;
        }
        /* jump -> r0_1 */
    }
    if ((((*((arg2 * 0xdc) + 0x20001977) & 1) == 0 && r2_6 <= 2) || (*((arg2 * 0xdc) + 0x20001977) & 1) != 0))
    {
        /* tailcall */
        return sub_9158a(arg1, 0xa, r2_6);
    }
    goto label_864b4;
}

char* sub_864e2(char* arg1, int32_t arg2)
{
    void* r0 = *(0x20001acc + (arg2 << 2));
    int32_t r1 = *(r0 + 0x38);
    void var_3c;
    int32_t r0_2;
    if (r1 == 0)
    {
        *((arg2 * 0xdc) + 0x20001975) = (*((arg2 * 0xdc) + 0x20001975) + 1);
    }
    else
    {
        r0_2 = r1(&var_3c);
        *((arg2 * 0xdc) + 0x20001975) = (*((arg2 * 0xdc) + 0x20001975) + 1);
        if ((r0_2 & 0xff) == 0)
        {
            r0 = *(0x20001acc + (arg2 << 2));
        }
    }
    char* r0_6;
    if ((r1 == 0 || (r1 != 0 && (r0_2 & 0xff) == 0)))
    {
        r0_6 = *(r0 + 4);
        if (r0_6 != 0)
        {
            r0_6 = r0_6();
        }
    }
    if ((r1 != 0 && (r0_2 & 0xff) != 0))
    {
        int32_t r0_3 = (0x3fc & (r0_2 << 2));
        if ((*((arg2 * 0xdc) + 0x20001977) << 0x1f) != 0)
        {
            int32_t r0_8;
            uint32_t r2_4;
            r0_8 = sub_9641a(arg2, 1, 1, &var_3c, r0_3);
            char* r0_10;
            char r1_7;
            if (r0_8 == 0xfffffffd)
            {
                r0_10 = arg1;
                r1_7 = 0x18;
            }
            if (r0_8 == 0xfffffffe)
            {
                r0_10 = arg1;
                r1_7 = 0xf;
            }
            if ((r0_8 == 0xfffffffd || r0_8 == 0xfffffffe))
            {
                sub_9159c(r0_10, r1_7, r2_4);
            }
            r0_6 = (0x20001914 + (arg2 * 0xdc));
            int32_t r1_9 = *0x20006064;
            r0_6[0x18] = 1;
            *(r0_6 + 0x1c) = (r1_9 + 0x1b);
        }
        else
        {
            int32_t r0_5;
            uint32_t r2_1;
            r0_5 = sub_963dc(arg2, 1, 1, &var_3c, r0_3, 0xffffffff);
            if (r0_5 == 0)
            {
                *((arg2 * 0xdc) + 0x20001974) = 0;
                *((arg2 * 0xdc) + 0x20001924) = 0;
                *((arg2 * 0xdc) + 0x20001975) = 0;
                int32_t r2_5 = *0x20006064;
                r0_6 = ((arg2 * 0xdc) + 0x2000197a);
                *r0_6 = 1;
                r0_6[3] = 0;
                r0_6[2] = 0;
                r0_6[1] = 0;
                *(r0_6 - 0x4e) = 1;
                *(r0_6 - 0x4a) = (r2_5 + 0x1b);
            }
            else
            {
                r0_6 = arg1;
                sub_9158a(r0_6, 0xe, r2_1);
            }
        }
    }
    return r0_6;
}

void sub_865f4(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r2_2 & 0x2000) != 0)
    {
        *((arg2 * 0xdc) + 0x20001977) = r2_2;
        *((arg2 * 0xdc) + 0x20001979) = (r2_2 >> 0x10);
        *((arg2 * 0xdc) + 0x20001978) = ((0xffdfff & r2_2) >> 8);
        /* tailcall */
        return sub_9158a(arg1, 0x10, r2_2);
    }
    if (*((arg2 * 0xdc) + 0x2000192c) != 0)
    {
        int32_t r2_6 = (*0x20006064 - *((arg2 * 0xdc) + 0x20001930));
        if (r2_6 >= 0)
        {
            *((arg2 * 0xdc) + 0x2000192c) = 0;
            /* tailcall */
            return sub_9158a(arg1, 0x16, r2_6);
        }
    }
    if ((*((arg2 * 0xdc) + 0x20001924) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001928)) >= 0))
    {
        *((arg2 * 0xdc) + 0x20001924) = 0;
        char r1_5;
        if (*((arg2 * 0xdc) + 0x20001974) <= 2)
        {
            r1_5 = 0xa;
        }
        else
        {
            r1_5 = 0x19;
        }
        /* tailcall */
        return sub_9158a(arg1, r1_5, 0xdc);
    }
}

uint32_t sub_866aa(int32_t arg1, int32_t arg2)
{
    char r2 = *((arg2 * 0xdc) + 0x20001977);
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x2000197a) = 2;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x20001977) = (r2 | 1);
    int32_t r1_1 = *(*(0x20001acc + (arg2 << 2)) + 0x3c);
    int32_t r0_2;
    int32_t r0_3;
    if (r1_1 != 0)
    {
        r0_2 = r1_1(*((arg2 * 0xdc) + 0x200019c0));
        if (r0_2 != 0)
        {
            r0_3 = (0x18000 & (r0_2 << 0xf));
        }
    }
    if ((r1_1 == 0 || (r1_1 != 0 && r0_2 == 0)))
    {
        r0_3 = 0x10000;
    }
    int32_t r0_4 = (r0_3 | (((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10)) & 0xfe7fff));
    *((arg2 * 0xdc) + 0x20001977) = r0_4;
    uint32_t r0_5 = (r0_4 >> 8);
    *((arg2 * 0xdc) + 0x20001979) = (r0_4 >> 0x10);
    *((arg2 * 0xdc) + 0x20001978) = r0_5;
    return r0_5;
}

void sub_86726(int32_t arg1, int32_t arg2)
{
    int32_t r1_3 = ((((*((arg2 * 0xdc) + 0x20001978) << 8) | (*((arg2 * 0xdc) + 0x20001979) << 0x10)) >> 0xf) & 3);
    if ((r1_3 - 2) < 2)
    {
        /* tailcall */
        return sub_9158a(arg1, 0x12, (r1_3 - 2));
    }
    if (r1_3 != 1)
    {
        return;
    }
    /* tailcall */
    return sub_9158a(arg1, 0x11, (r1_3 - 2));
}

char* sub_8675e(void* arg1, int32_t arg2)
{
    uint32_t r1_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    int16_t r2_1;
    if ((r1_2 & 0x40000) != 0)
    {
        *((arg2 * 0xdc) + 0x20001977) = r1_2;
        *((arg2 * 0xdc) + 0x20001978) = (r1_2 >> 8);
        r2_1 = 2;
        *((arg2 * 0xdc) + 0x20001979) = ((r1_2 & 0xfb0000) >> 0x10);
    }
    else
    {
        r2_1 = 3;
    }
    int32_t r0_3;
    uint32_t r2_3;
    r0_3 = sub_9641a(arg2, 1, r2_1, nullptr, 0);
    void* r0_5;
    char r1_6;
    if (r0_3 == 0xfffffffd)
    {
        r0_5 = arg1;
        r1_6 = 0x18;
    }
    if (r0_3 == 0xfffffffe)
    {
        r0_5 = arg1;
        r1_6 = 0xf;
    }
    if ((r0_3 == 0xfffffffd || r0_3 == 0xfffffffe))
    {
        sub_9159c(r0_5, r1_6, r2_3);
    }
    *((arg2 * 0xdc) + 0x2000197a) = 3;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    return ((arg2 * 0xdc) + 0x2000197a);
}

int32_t sub_867e8(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1 = *(*(0x20001acc + (arg2 << 2)) + 0x40);
    int32_t r2;
    if (r0_1 != 0)
    {
        int32_t r0_2;
        r0_2 = r0_1();
        if (r0_2 == 2)
        {
            /* tailcall */
            return sub_9158a(arg1, 0x13, r2);
        }
        if (r0_2 != 0)
        {
            return r0_2;
        }
    }
    /* tailcall */
    return sub_9159c(arg1, 0x16, r2);
}

uint32_t sub_86820(void* arg1, int32_t arg2)
{
    uint32_t r0 = *(arg1 + 5);
    if (r0 != 0x16)
    {
        int32_t r0_2;
        uint32_t r2_1;
        r0_2 = sub_9641a(arg2, 1, 6, nullptr, 0);
        void* r0_4;
        char r1_1;
        if (r0_2 == 0xfffffffd)
        {
            r0_4 = arg1;
            r1_1 = 0x18;
        }
        if (r0_2 == 0xfffffffe)
        {
            r0_4 = arg1;
            r1_1 = 0xf;
        }
        if ((r0_2 == 0xfffffffd || r0_2 == 0xfffffffe))
        {
            sub_9159c(r0_4, r1_1, r2_1);
        }
        uint32_t r1_2 = *((arg2 * 0xdc) + 0x20001977);
        *((arg2 * 0xdc) + 0x2000197b) = 0;
        *((arg2 * 0xdc) + 0x2000197a) = 5;
        *((arg2 * 0xdc) + 0x2000197d) = 0;
        *((arg2 * 0xdc) + 0x2000197c) = 0;
        r0 = (r1_2 | 2);
        *((arg2 * 0xdc) + 0x20001977) = r0;
    }
    return r0;
}

uint32_t sub_86882(void* arg1, int32_t arg2)
{
    int32_t r0_3 = ((((*((arg2 * 0xdc) + 0x20001978) << 8) | (*((arg2 * 0xdc) + 0x20001979) << 0x10)) >> 0xf) & 3);
    int16_t r2_1;
    if (r0_3 == 3)
    {
        r2_1 = 0xc;
    }
    if (r0_3 == 2)
    {
        r2_1 = 4;
    }
    if ((r0_3 == 3 || r0_3 == 2))
    {
        int32_t r0_5;
        uint32_t r2_2;
        r0_5 = sub_9641a(arg2, 1, r2_1, nullptr, 0);
        void* r0_7;
        char r1_2;
        if (r0_5 == 0xfffffffd)
        {
            r0_7 = arg1;
            r1_2 = 0x18;
        }
        if (r0_5 == 0xfffffffe)
        {
            r0_7 = arg1;
            r1_2 = 0xf;
        }
        if ((r0_5 == 0xfffffffd || r0_5 == 0xfffffffe))
        {
            sub_9159c(r0_7, r1_2, r2_2);
        }
    }
    *((arg2 * 0xdc) + 0x2000197a) = 4;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    int32_t r0_13 = (((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10)) & 0xfe7fff);
    uint32_t r0_14 = (r0_13 >> 8);
    *((arg2 * 0xdc) + 0x20001979) = (r0_13 >> 0x10);
    *((arg2 * 0xdc) + 0x20001978) = r0_14;
    return r0_14;
}

int32_t sub_86926(void* arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2 = *((arg2 * 0xdc) + 0x20001977);
    if ((r2 << 0x1e) < 0)
    {
        /* tailcall */
        return sub_9158a(arg1, 0x13, r2);
    }
    sub_9158a(arg1, 0x14, r2);
    int32_t r0_1 = *(*(0x20001acc + (arg2 << 2)) + 0x4c);
    if (r0_1 == 0)
    {
        return r0_1;
    }
    /* jump -> r0_1 */
}

uint32_t sub_8696c(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r1_1 = (*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8));
    uint32_t r2_1 = (r1_1 | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    /* unimplemented  {sbfx r1, r2, #0, #0x18} */;
    char r1_2;
    if ((r2_1 & 0x40000) != 0)
    {
        r1_2 = 0x11;
    }
    else if ((r1_1 << 0x12) < 0)
    {
        *((arg2 * 0xdc) + 0x20001977) = r1_1;
        *((arg2 * 0xdc) + 0x20001979) = (r1_1 >> 0x10);
        r2_1 = 0xffdfff;
        *((arg2 * 0xdc) + 0x20001978) = ((r1_1 & 0xffdfff) >> 8);
        r1_2 = 0x10;
    }
    else
    {
        int32_t r2_4 = 0xf7ffff;
        if (((r1_1 << 0xc) >= 0 && (r1_1 << 0x13) < 0))
        {
            r2_4 = 0xffefff;
        }
        if ((((r1_1 << 0xc) >= 0 && (r1_1 << 0x13) < 0) || (r1_1 << 0xc) < 0))
        {
            int32_t r1_5 = (r1_1 & r2_4);
            *((arg2 * 0xdc) + 0x20001977) = r1_5;
            r2_1 = (r1_5 >> 8);
            *((arg2 * 0xdc) + 0x20001978) = r2_1;
            *((arg2 * 0xdc) + 0x20001979) = (r1_5 >> 0x10);
            r1_2 = 0xf;
        }
        if (((r1_1 << 0xc) >= 0 && (r1_1 << 0x13) >= 0))
        {
            if ((r1_1 << 0x14) < 0)
            {
                *((arg2 * 0xdc) + 0x20001977) = r1_1;
                *((arg2 * 0xdc) + 0x20001979) = (r1_1 >> 0x10);
                r2_1 = 0xfff7ff;
                *((arg2 * 0xdc) + 0x20001978) = ((r1_1 & 0xfff7ff) >> 8);
                r1_2 = 0x24;
            }
            else if ((r1_1 << 0xb) < 0)
            {
                *((arg2 * 0xdc) + 0x20001977) = r1_1;
                r2_1 = (r1_1 >> 8);
                *((arg2 * 0xdc) + 0x20001978) = r2_1;
                *((arg2 * 0xdc) + 0x20001979) = ((r1_1 & 0xef0000) >> 0x10);
                r1_2 = 0x15;
            }
            else if ((r1_1 << 0xe) < 0)
            {
                *((arg2 * 0xdc) + 0x20001977) = r1_1;
                r2_1 = (r1_1 >> 8);
                *((arg2 * 0xdc) + 0x20001978) = r2_1;
                *((arg2 * 0xdc) + 0x20001979) = ((r1_1 & 0xfd0000) >> 0x10);
                r1_2 = 0x23;
            }
            else if ((r1_1 << 0xa) < 0)
            {
                *((arg2 * 0xdc) + 0x20001977) = r1_1;
                r2_1 = (r1_1 >> 8);
                *((arg2 * 0xdc) + 0x20001978) = r2_1;
                *((arg2 * 0xdc) + 0x20001979) = ((r1_1 & 0xdf0000) >> 0x10);
                r1_2 = 0x1e;
            }
            else
            {
                uint32_t r2_9 = (r1_1 << 9);
                if (r2_9 < 0)
                {
                    *((arg2 * 0xdc) + 0x20001977) = r1_1;
                    r2_1 = (r1_1 >> 8);
                    *((arg2 * 0xdc) + 0x20001978) = r2_1;
                    *((arg2 * 0xdc) + 0x20001979) = ((r1_1 & 0xbf0000) >> 0x10);
                    r1_2 = 0x1a;
                }
                else
                {
                    /* unimplemented  {sbfx r2, r1, #0, #0x18} */;
                    if (r2_9 > 0xffffffff)
                    {
                        uint32_t r0 = (r1_1 << 0x1c);
                        if (r0 < 0)
                        {
                            *((arg2 * 0xdc) + 0x20001978) = (r1_1 >> 8);
                            *((arg2 * 0xdc) + 0x20001977) = (0xf7 & r1_1);
                            *((arg2 * 0xdc) + 0x20001979) = (r1_1 >> 0x10);
                            int32_t r0_7 = sub_963dc(arg2, *((arg2 * 0xdc) + 0x200019c8), 0xf, ((arg2 * 0xdc) + 0x200019cc), (*((arg2 * 0xdc) + 0x200019e8) << 2), 0xffffffff);
                            uint32_t r12_1;
                            if (r0_7 != 0)
                            {
                                *((arg2 * 0xdc) + 0x200019c8) = 0;
                                *((arg2 * 0xdc) + 0x2000196c) = 0;
                                *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0xe7);
                                r0 = *((arg2 * 0xdc) + 0x200019ec);
                                r12_1 = (*((arg2 * 0xdc) + 0x200019ea) | (r0 << 0x10));
                            }
                            if ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) == 0))
                            {
                                *((arg2 * 0xdc) + 0x200019c8);
                                *((arg2 * 0xdc) + 0x200019c8) = 0;
                                *((arg2 * 0xdc) + 0x2000196c) = 0;
                                *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0xe7);
                                r0 = *((arg2 * 0xdc) + 0x200019ec);
                                r12_1 = (*((arg2 * 0xdc) + 0x200019ea) | (r0 << 0x10));
                            }
                            if (((r0_7 != 0 && r12_1 != 0) || ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) == 0) && r12_1 != 0)))
                            {
                                /* jump -> r12_1 */
                            }
                            if ((r0_7 == 0 && *((arg2 * 0xdc) + 0x200019e9) != 0))
                            {
                                int32_t r1_21 = *0x20006064;
                                *((arg2 * 0xdc) + 0x2000196c) = 1;
                                *((arg2 * 0xdc) + 0x20001970) = (r1_21 + 0x1b);
                                r0 = (*((arg2 * 0xdc) + 0x20001977) | 0x10);
                                *((arg2 * 0xdc) + 0x20001977) = r0;
                            }
                        }
                        return r0;
                    }
                    r2_1 = (r1_1 >> 8);
                    *((arg2 * 0xdc) + 0x20001977) = r1_1;
                    *((arg2 * 0xdc) + 0x20001978) = r2_1;
                    *((arg2 * 0xdc) + 0x20001979) = ((r1_1 >> 0x10) & 0x7f);
                    r1_2 = 0x1b;
                }
            }
        }
    }
    /* tailcall */
    return sub_9158a(arg1, r1_2, r2_1);
}

void* sub_86b9c(void* arg1, int32_t arg2)
{
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_9641a(arg2, 1, 8, nullptr, 0);
    void* r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0x18;
    }
    if (r0_1 == 0xfffffffe)
    {
        r0_3 = arg1;
        r1_1 = 0xf;
    }
    if ((r0_1 == 0xfffffffd || r0_1 == 0xfffffffe))
    {
        sub_9159c(r0_3, r1_1, r2);
    }
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_2 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

void sub_86bf0(int32_t arg1, int32_t arg2)
{
    if (((*((arg2 * 0xdc) + 0x20001978) << 0x1d) >= 0 && (*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) < 0))))
    {
        return;
    }
    *((arg2 * 0xdc) + 0x2000192c) = 0;
    /* tailcall */
    return sub_9158a(arg1, 0x13, ((arg2 * 0xdc) + 0x2000192c));
}

uint32_t sub_86c34(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = (*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8));
    uint32_t r3_1 = (r0_1 | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r3_1 & 0x400) == 0)
    {
        return r0_1;
    }
    *((arg2 * 0xdc) + 0x20001977) = r3_1;
    *((arg2 * 0xdc) + 0x20001979) = (r3_1 >> 0x10);
    *((arg2 * 0xdc) + 0x20001978) = ((0xfffbff & r3_1) >> 8);
    void* r0_5 = *(0x20001acc + (arg2 << 2));
    int32_t r2_2 = *(r0_5 + 0x48);
    if (r2_2 == 0)
    {
        return r0_5;
    }
    *((arg2 * 0xdc) + 0x200019a0);
    /* jump -> r2_2 */
}

void* sub_86c98(int32_t arg1, int32_t arg2)
{
    sub_96e0a(arg2, 1, 1);
    *((arg2 * 0xdc) + 0x20001974) = (*((arg2 * 0xdc) + 0x20001974) + 1);
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000197a) = 0;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x2000194c) = 1;
    *((arg2 * 0xdc) + 0x20001950) = (r1_2 + 0x19);
    return ((arg2 * 0xdc) + 0x2000197a);
}

void sub_86ce4(int32_t arg1, int32_t arg2)
{
    if ((*((arg2 * 0xdc) + 0x2000194c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001950)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000194c) = 0;
        /* tailcall */
        return sub_9158a(arg1, 0x17, 0);
    }
}

int32_t sub_86d18(int32_t arg1, int32_t arg2)
{
    void* r0 = *(0x20001acc + (arg2 << 2));
    int32_t r1 = *(r0 + 8);
    if (r1 != 0)
    {
        r1();
        r0 = *(0x20001acc + (arg2 << 2));
    }
    int32_t r0_1 = *(r0 + 0x44);
    if (r0_1 != 0)
    {
        r0_1();
    }
    /* tailcall */
    return sub_95b40(arg2, 1);
}

int32_t sub_86d46(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1 = *(*(0x20001acc + (arg2 << 2)) + 0x44);
    int32_t r2;
    if (r0_1 != 0)
    {
        int32_t r0_2;
        r0_2 = r0_1();
        int32_t r0_3 = (r0_2 | 2);
        if (r0_3 != 2)
        {
            return r0_3;
        }
    }
    /* tailcall */
    return sub_9158a(arg1, 0xd, r2);
}

void* sub_86d74(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x20001924) = 1;
    *((arg2 * 0xdc) + 0x20001928) = (r1 + 0x1388);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_86d9a(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000197a) = 0;
    *((arg2 * 0xdc) + 0x2000197d) = 0;
    *((arg2 * 0xdc) + 0x2000197c) = 0;
    *((arg2 * 0xdc) + 0x2000197b) = 0;
    *((arg2 * 0xdc) + 0x2000194c) = 1;
    *((arg2 * 0xdc) + 0x20001950) = (r1 + 0x19);
    return ((arg2 * 0xdc) + 0x2000197a);
}

void sub_86dcc(int32_t arg1, int32_t arg2)
{
    if ((*((arg2 * 0xdc) + 0x2000194c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001950)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000194c) = 0;
        /* tailcall */
        return sub_9158a(arg1, 0x17, 0);
    }
}

char* sub_86e00(int32_t arg1, int32_t arg2)
{
    *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0xfc);
    return ((arg2 * 0xdc) + 0x20001977);
}

int32_t sub_86e1a() __pure
{
    return;
}

void* sub_86e1c(void* arg1, int32_t arg2)
{
    uint32_t r0_1 = sub_95bac(arg2);
    int32_t r0_3;
    uint32_t r2;
    r0_3 = sub_9641a(arg2, 1, 9, nullptr, 0);
    void* r0_4;
    char r1_1;
    if (r0_1 != 0)
    {
        if (r0_3 == 0xfffffffe)
        {
            r0_4 = arg1;
            r1_1 = 0xf;
            goto label_86e6a;
        }
        if (r0_3 == 0xfffffffd)
        {
            r0_4 = arg1;
            r1_1 = 0x18;
            goto label_86e6a;
        }
    }
    else if (r0_3 == 0xfffffffe)
    {
        r0_4 = arg1;
        r1_1 = 3;
    label_86e6a:
        sub_9159c(r0_4, r1_1, r2);
    }
    else if (r0_3 == 0xfffffffd)
    {
        r0_4 = arg1;
        r1_1 = 0xb;
        goto label_86e6a;
    }
    int32_t r1_3 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_3 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_86e96(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if ((*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) < 0)))
    {
        int32_t r1_2 = ((*((arg2 * 0xdc) + 0x20001977) >> 5) & 3);
        int32_t r0_6;
        uint32_t r1_3;
        int32_t r6_1;
        if (r1_2 == 3)
        {
            *((arg2 * 0xdc) + 0x2000192c) = 0;
            r6_1 = *(*(0x20001acc + (arg2 << 2)) + 0x1c);
            if (r6_1 != 0)
            {
                r1_3 = sub_95b5c(arg2);
                r0_6 = 3;
            }
        }
        if (r1_2 == 2)
        {
            *((arg2 * 0xdc) + 0x2000192c) = 0;
            r6_1 = *(*(0x20001acc + (arg2 << 2)) + 0x1c);
            if (r6_1 != 0)
            {
                r1_3 = sub_95b5c(arg2);
                r0_6 = 2;
            }
        }
        if (((r1_2 != 3 && r1_2 != 2) && r1_2 != 1))
        {
            return ((arg2 * 0xdc) + 0x2000192c);
        }
        if (r1_2 == 1)
        {
            *((arg2 * 0xdc) + 0x2000192c) = 0;
            sub_95b72(arg2);
            r6_1 = *(*(0x20001acc + (arg2 << 2)) + 0x1c);
            if (r6_1 != 0)
            {
                r1_3 = sub_95b5c(arg2);
                r0_6 = 1;
            }
        }
        if ((((r1_2 == 3 && r6_1 != 0) || (r1_2 == 2 && r6_1 != 0)) || (r1_2 == 1 && r6_1 != 0)))
        {
            if (r1_3 != 0)
            {
                r1_3 = 1;
            }
            r6_1(r0_6, r1_3);
        }
    }
    if ((*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
    }
    char r1_4;
    if (sub_95bac(arg2) == 0)
    {
        r1_4 = 7;
    }
    else
    {
        r1_4 = 0x13;
    }
    /* tailcall */
    return sub_9158a(arg1, r1_4, 0x47c);
}

char* sub_86f72(int32_t arg1, int32_t arg2)
{
    *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0x9f);
    return ((arg2 * 0xdc) + 0x20001977);
}

void* sub_86f8c(void* arg1, int32_t arg2)
{
    uint32_t r0_1 = sub_95bac(arg2);
    int32_t r0_3;
    uint32_t r2;
    r0_3 = sub_9641a(arg2, 1, 0xb, nullptr, 0);
    void* r0_4;
    char r1_1;
    if (r0_1 != 0)
    {
        if (r0_3 == 0xfffffffe)
        {
            r0_4 = arg1;
            r1_1 = 0xf;
            goto label_86fda;
        }
        if (r0_3 == 0xfffffffd)
        {
            r0_4 = arg1;
            r1_1 = 0x18;
            goto label_86fda;
        }
    }
    else if (r0_3 == 0xfffffffe)
    {
        r0_4 = arg1;
        r1_1 = 3;
    label_86fda:
        sub_9159c(r0_4, r1_1, r2);
    }
    else if (r0_3 == 0xfffffffd)
    {
        r0_4 = arg1;
        r1_1 = 0xb;
        goto label_86fda;
    }
    int32_t r1_3 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_3 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_87006(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_3;
    int32_t r1_1;
    if ((*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        r1_1 = *(*(0x20001acc + (arg2 << 2)) + 0x24);
        if (r1_1 == 0)
        {
            goto label_870c2;
        }
        r0_3 = 4;
    label_870ba:
        r1_1(r0_3);
    label_870c2:
        char r1_4;
        if (sub_95bac(arg2) == 0)
        {
            r1_4 = 7;
        }
        else
        {
            r1_4 = 0x13;
        }
        /* tailcall */
        return sub_9158a(arg1, r1_4, 0x47c);
    }
    uint32_t r2_3 = *((arg2 * 0xdc) + 0x20001977);
    int32_t r1_3 = ((r2_3 >> 5) & 3);
    if (r1_3 == 3)
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        r1_1 = *(*(0x20001acc + (arg2 << 2)) + 0x24);
        if (r1_1 == 0)
        {
            goto label_870c2;
        }
        r0_3 = 3;
        goto label_870ba;
    }
    if (r1_3 != 2)
    {
        if (r1_3 != 1)
        {
            return ((arg2 * 0xdc) + 0x2000192c);
        }
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        int32_t r0_5 = *(*(0x20001acc + (arg2 << 2)) + 0x18);
        if (r0_5 != 0)
        {
            int32_t r0_6;
            r0_6 = r0_5();
            if ((r0_6 & 0x80) != 0)
            {
                /* tailcall */
                return sub_9158a(arg1, 0x1c, r2_3);
            }
        }
        /* tailcall */
        return sub_9158a(arg1, 0x1d, r2_3);
    }
    *((arg2 * 0xdc) + 0x2000192c) = 0;
    r1_1 = *(*(0x20001acc + (arg2 << 2)) + 0x24);
    if (r1_1 == 0)
    {
        goto label_870c2;
    }
    r0_3 = 2;
    goto label_870ba;
}

char* sub_870e0(int32_t arg1, int32_t arg2)
{
    *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0x9f);
    return ((arg2 * 0xdc) + 0x20001977);
}

void* sub_870fa(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x20001954) = 1;
    *((arg2 * 0xdc) + 0x20001958) = (r1 + 0x64);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_8711e(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r3_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r3_2 & 0x80) != 0)
    {
        *((arg2 * 0xdc) + 0x20001978) = (r3_2 >> 8);
        *((arg2 * 0xdc) + 0x20001977) = (0x7f & r3_2);
        *((arg2 * 0xdc) + 0x20001979) = (r3_2 >> 0x10);
        void* r0_9 = *(0x20001acc + (arg2 << 2));
        int32_t r1_6 = *(r0_9 + 0x28);
        if (r1_6 != 0)
        {
            r1_6(0);
            r0_9 = *(0x20001acc + (arg2 << 2));
        }
        int32_t r1_7 = *(r0_9 + 0x24);
        if (r1_7 != 0)
        {
            r1_7(1);
        }
        char r1_8;
        if (sub_95bac(arg2) == 0)
        {
            r1_8 = 7;
        }
        else
        {
            r1_8 = 0x13;
        }
        /* tailcall */
        return sub_9158a(arg1, r1_8, 0x47c);
    }
    if ((*((arg2 * 0xdc) + 0x20001954) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001958)) >= 0))
    {
        *((arg2 * 0xdc) + 0x20001954) = 0;
        int32_t r1_3 = *(*(0x20001acc + (arg2 << 2)) + 0x24);
        if (r1_3 != 0)
        {
            r1_3(4);
        }
        char r1_4;
        if (sub_95bac(arg2) == 0)
        {
            r1_4 = 0xa;
        }
        else
        {
            r1_4 = 0x16;
        }
        /* tailcall */
        return sub_9159c(arg1, r1_4, 0x47c);
    }
    return ((arg2 * 0xdc) + 0x20001954);
}

int32_t sub_871fa(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x28);
    if (r1 != 0)
    {
        r1(1);
    }
    uint32_t r0_2 = sub_95bac(arg2);
    int32_t r0_4;
    int32_t r2;
    r0_4 = sub_9641a(arg2, 1, 6, nullptr, 0);
    int32_t r0_6;
    int32_t r0_5;
    char r1_2;
    if (r0_2 == 0)
    {
        if (r0_4 == 0xfffffffe)
        {
            r0_5 = arg1;
            r1_2 = 3;
        label_87266:
            /* tailcall */
            return sub_9159c(r0_5, r1_2, r2);
        }
        r0_6 = (r0_4 + 3);
        if (r0_4 == 0xfffffffd)
        {
            r0_5 = arg1;
            r1_2 = 0xb;
            goto label_87266;
        }
    }
    else
    {
        if (r0_4 == 0xfffffffe)
        {
            r0_5 = arg1;
            r1_2 = 0xf;
            goto label_87266;
        }
        r0_6 = (r0_4 + 3);
        if (r0_4 == 0xfffffffd)
        {
            r0_5 = arg1;
            r1_2 = 0x18;
            goto label_87266;
        }
    }
    return r0_6;
}

int32_t sub_87272(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x24);
    if (r1 != 0)
    {
        r1(1);
    }
    char r1_1;
    if (sub_95bac(arg2) != 0)
    {
        r1_1 = 0x13;
    }
    else
    {
        r1_1 = 7;
    }
    /* tailcall */
    return sub_9158a(arg1, r1_1, 0x47c);
}

void* sub_872a6(void* arg1, int32_t arg2)
{
    uint32_t r0_1 = sub_95bac(arg2);
    int32_t r0_3;
    uint32_t r2;
    r0_3 = sub_9641a(arg2, 1, 0xa, nullptr, 0);
    void* r0_4;
    char r1_1;
    if (r0_1 != 0)
    {
        if (r0_3 == 0xfffffffe)
        {
            r0_4 = arg1;
            r1_1 = 0xf;
            goto label_872f4;
        }
        if (r0_3 == 0xfffffffd)
        {
            r0_4 = arg1;
            r1_1 = 0x18;
            goto label_872f4;
        }
    }
    else if (r0_3 == 0xfffffffe)
    {
        r0_4 = arg1;
        r1_1 = 3;
    label_872f4:
        sub_9159c(r0_4, r1_1, r2);
    }
    else if (r0_3 == 0xfffffffd)
    {
        r0_4 = arg1;
        r1_1 = 0xb;
        goto label_872f4;
    }
    int32_t r1_3 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_3 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_87320(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r2_3;
    if ((*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        uint32_t r0_3;
        r0_3 = sub_95bac(arg2);
        if (r0_3 != 0)
        {
            goto label_873e8;
        }
        goto label_87402;
    }
    int32_t r1_2 = ((*((arg2 * 0xdc) + 0x20001977) >> 5) & 3);
    int32_t r0_10;
    int32_t r0_14;
    bool cond:0_1;
    if (r1_2 == 3)
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        cond:0_1 = sub_95bac(arg2) == 0;
        r2_3 = *(*(0x20001acc + (arg2 << 2)) + 0x20);
        if (cond:0_1)
        {
            if (r2_3 == 0)
            {
                goto label_87402;
            }
            r0_14 = 3;
        }
        else
        {
            if (r2_3 == 0)
            {
                goto label_873e8;
            }
            r0_10 = 3;
        }
    }
    bool cond:1_1;
    if (r1_2 == 2)
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        cond:1_1 = sub_95bac(arg2) == 0;
        r2_3 = *(*(0x20001acc + (arg2 << 2)) + 0x20);
        if (cond:1_1)
        {
            if (r2_3 == 0)
            {
                goto label_87402;
            }
            r0_14 = 2;
        }
    }
    if (((r1_2 == 3 && cond:0_1) || (r1_2 == 2 && cond:1_1)))
    {
        r2_3 = r2_3(r0_14, 0);
    label_87402:
        /* tailcall */
        return sub_9158a(arg1, 7, r2_3);
    }
    if ((r1_2 == 2 && (!cond:1_1)))
    {
        if (r2_3 == 0)
        {
            goto label_873e8;
        }
        r0_10 = 2;
    }
    if (((r1_2 == 3 && (!cond:0_1)) || (r1_2 == 2 && (!cond:1_1))))
    {
        r2_3 = r2_3(r0_10, 1);
    label_873e8:
        /* tailcall */
        return sub_9158a(arg1, 0x13, r2_3);
    }
    if ((r1_2 != 3 && r1_2 != 2))
    {
        if (r1_2 != 1)
        {
            return ((arg2 * 0xdc) + 0x2000192c);
        }
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        sub_97014(arg2, 1);
        char r1_3;
        if (sub_95bac(arg2) == 0)
        {
            r1_3 = 0x20;
        }
        else
        {
            r1_3 = 0x21;
        }
        /* tailcall */
        return sub_9158a(arg1, r1_3, 0x47c);
    }
}

char* sub_87406(int32_t arg1, int32_t arg2)
{
    *((arg2 * 0xdc) + 0x20001977) = (*((arg2 * 0xdc) + 0x20001977) & 0x9f);
    return ((arg2 * 0xdc) + 0x20001977);
}

void* sub_87420(void* arg1, int32_t arg2)
{
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_9641a(arg2, 1, 6, nullptr, 0);
    void* r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0xb;
    }
    if (r0_1 == 0xfffffffe)
    {
        r0_3 = arg1;
        r1_1 = 3;
    }
    if ((r0_1 == 0xfffffffd || r0_1 == 0xfffffffe))
    {
        sub_9159c(r0_3, r1_1, r2);
    }
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000195c) = 1;
    *((arg2 * 0xdc) + 0x20001960) = (r1_2 + 0x1a4);
    return (0x20001914 + (arg2 * 0xdc));
}

void* sub_87478(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    void* r0_2;
    if ((*((arg2 * 0xdc) + 0x2000195c) == 0 || (*((arg2 * 0xdc) + 0x2000195c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001960)) < 0)))
    {
        r0_2 = ((arg2 * 0xdc) + 0x20001977);
        uint32_t r1_4 = ((*r0_2 | (*(r0_2 + 1) << 8)) | (*(r0_2 + 2) << 0x10));
        if ((r1_4 & 0x80) != 0)
        {
            *(r0_2 + 1) = (r1_4 >> 8);
            *r0_2 = (0x7f & r1_4);
            *(r0_2 + 2) = (r1_4 >> 0x10);
            int32_t r2_7 = *(*(0x20001acc + (arg2 << 2)) + 0x20);
            if (r2_7 != 0)
            {
                r2_7 = r2_7(1, 0);
            }
            /* tailcall */
            return sub_9158a(arg1, 1, r2_7);
        }
    }
    if ((*((arg2 * 0xdc) + 0x2000195c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001960)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000195c) = 0;
        void* r0_1 = *(0x20001acc + (arg2 << 2));
        int32_t r2_3 = *(r0_1 + 0x20);
        if (r2_3 != 0)
        {
            r2_3(4, 1);
            r0_1 = *(0x20001acc + (arg2 << 2));
        }
        r0_2 = *(r0_1 + 4);
        if (r0_2 != 0)
        {
            /* jump -> r0_2 */
        }
    }
    return r0_2;
}

int32_t sub_8751e(int32_t arg1, int32_t arg2)
{
    sub_97014(arg2, 0);
    /* tailcall */
    return sub_95b02(arg2, 1);
}

void* sub_87538(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000195c) = 1;
    *((arg2 * 0xdc) + 0x20001960) = (r1 + 0x2ee);
    return (0x20001914 + (arg2 * 0xdc));
}

void sub_8755e(void* arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if ((*((arg2 * 0xdc) + 0x2000195c) == 0 || (*((arg2 * 0xdc) + 0x2000195c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001960)) < 0)))
    {
        uint32_t r2_5 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
        if ((r2_5 & 0x80) != 0)
        {
            *((arg2 * 0xdc) + 0x20001978) = (r2_5 >> 8);
            uint32_t r2_6 = (r2_5 >> 0x10);
            *((arg2 * 0xdc) + 0x20001977) = (0x7f & r2_5);
            *((arg2 * 0xdc) + 0x20001979) = r2_6;
            sub_9158a(arg1, 0x22, r2_6);
            /* tailcall */
            return sub_87be0(arg2);
        }
    }
    if ((*((arg2 * 0xdc) + 0x2000195c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001960)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000195c) = 0;
        void* r0 = *(0x20001acc + (arg2 << 2));
        int32_t r2_2 = *(r0 + 0x20);
        if (r2_2 != 0)
        {
            r2_2(4, 0);
            r0 = *(0x20001acc + (arg2 << 2));
        }
        arg1 = *(r0 + 4);
        if (arg1 != 0)
        {
            /* jump -> arg1 */
        }
    }
}

void* sub_875f2(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x2c);
    if (r1 != 0)
    {
        r1(0);
    }
    int32_t r1_1 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000195c) = 1;
    *((arg2 * 0xdc) + 0x20001960) = (r1_1 + 0x14);
    return (0x20001914 + (arg2 * 0xdc));
}

char* sub_87630(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if ((*((arg2 * 0xdc) + 0x2000195c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001960)) >= 0))
    {
        *((arg2 * 0xdc) + 0x2000195c) = 0;
        /* tailcall */
        return sub_9158a((0x20001914 + (arg2 * 0xdc)), 0x1f, sub_87be0(arg2));
    }
    return ((arg2 * 0xdc) + 0x2000195c);
}

int32_t sub_8767a() __pure
{
    return;
}

void* sub_8767c(int32_t arg1, int32_t arg2)
{
    void* r0 = *(0x20001acc + (arg2 << 2));
    int32_t r1 = *(r0 + 0x2c);
    if (r1 == 0)
    {
        return r0;
    }
    /* jump -> r1 */
}

int32_t sub_87692(void* arg1, int32_t arg2)
{
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_9641a(arg2, 1, 6, nullptr, 0);
    void* r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0x18;
    }
    if (r0_1 == 0xfffffffe)
    {
        r0_3 = arg1;
        r1_1 = 0xf;
    }
    if ((r0_1 == 0xfffffffd || r0_1 == 0xfffffffe))
    {
        sub_9159c(r0_3, r1_1, r2);
    }
    /* tailcall */
    return sub_9158a(arg1, 0xd, r2);
}

void* sub_876ce(void* arg1, int32_t arg2)
{
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_9641a(arg2, 1, 7, nullptr, 0);
    void* r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0x18;
    }
    if (r0_1 == 0xfffffffe)
    {
        r0_3 = arg1;
        r1_1 = 0xf;
    }
    if ((r0_1 == 0xfffffffd || r0_1 == 0xfffffffe))
    {
        sub_9159c(r0_3, r1_1, r2);
    }
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_2 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

void sub_87722(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r2_2 & 0x60) == 0x40)
    {
        *((arg2 * 0xdc) + 0x20001978) = (r2_2 >> 8);
        *((arg2 * 0xdc) + 0x20001977) = (0x9f & r2_2);
        *((arg2 * 0xdc) + 0x20001979) = (r2_2 >> 0x10);
        *((arg2 * 0xdc) + 0x2000192c) = 0;
    }
    else
    {
        r2_2 = (r2_2 << 0x16);
        if (r2_2 >= 0)
        {
            if (*((arg2 * 0xdc) + 0x2000192c) != 0)
            {
                r2_2 = *0x20006064;
            }
            if ((*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (r2_2 - *((arg2 * 0xdc) + 0x20001930)) < 0)))
            {
                return;
            }
        }
        *((arg2 * 0xdc) + 0x2000192c) = 0;
    }
    /* tailcall */
    return sub_9158a(arg1, 0x13, r2_2);
}

char* sub_8779e(int32_t arg1, int32_t arg2)
{
    uint32_t r1_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r1_2 & 0x200) == 0)
    {
        return ((arg2 * 0xdc) + 0x20001977);
    }
    *((arg2 * 0xdc) + 0x20001977) = r1_2;
    *((arg2 * 0xdc) + 0x20001979) = (r1_2 >> 0x10);
    *((arg2 * 0xdc) + 0x20001978) = ((r1_2 & 0xfffdff) >> 8);
    return ((arg2 * 0xdc) + 0x20001977);
}

void* sub_877da(void* arg1, int32_t arg2)
{
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x5c);
    int32_t r0_2;
    int32_t r0_3;
    void* r3;
    if (r1 != 0)
    {
        void var_2c;
        r0_2 = r1(&var_2c);
        if ((r0_2 & 0xff) != 0)
        {
            r3 = &var_2c;
            r0_3 = (0x3fc & (r0_2 << 2));
        }
    }
    if ((r1 == 0 || (r1 != 0 && (r0_2 & 0xff) == 0)))
    {
        r0_3 = 0;
        r3 = nullptr;
    }
    void* r0_5;
    uint32_t r2;
    r0_5 = sub_9641a(arg2, 1, 4, r3, r0_3);
    void* r0_6;
    char r1_2;
    if (r0_5 == 0xfffffffd)
    {
        r0_6 = arg1;
        r1_2 = 0x18;
    }
    else
    {
        r0_6 = (r0_5 + 2);
    }
    if (r0_5 == 0xfffffffe)
    {
        r0_6 = arg1;
        r1_2 = 0xf;
    }
    if ((r0_5 == 0xfffffffd || r0_5 == 0xfffffffe))
    {
        sub_9159c(r0_6, r1_2, r2);
    }
    return r0_6;
}

int32_t j_sub_9158a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_9158a(arg1, 0x13, r2);
}

void* sub_8783e(void* arg1, int32_t arg2)
{
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_9641a(arg2, 1, 8, nullptr, 0);
    void* r0_3;
    char r1_1;
    if (r0_1 == 0xfffffffd)
    {
        r0_3 = arg1;
        r1_1 = 0xb;
    }
    if (r0_1 == 0xfffffffe)
    {
        r0_3 = arg1;
        r1_1 = 3;
    }
    if ((r0_1 == 0xfffffffd || r0_1 == 0xfffffffe))
    {
        sub_9159c(r0_3, r1_1, r2);
    }
    int32_t r1_2 = *0x20006064;
    *((arg2 * 0xdc) + 0x2000192c) = 1;
    *((arg2 * 0xdc) + 0x20001930) = (r1_2 + 0x1b);
    return (0x20001914 + (arg2 * 0xdc));
}

void sub_87892(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r2_2 = ((*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8)) | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r2_2 & 0x60) == 0x40)
    {
        *((arg2 * 0xdc) + 0x20001978) = (r2_2 >> 8);
        *((arg2 * 0xdc) + 0x20001977) = (0x9f & r2_2);
        *((arg2 * 0xdc) + 0x20001979) = (r2_2 >> 0x10);
        *((arg2 * 0xdc) + 0x2000192c) = 0;
    }
    else
    {
        r2_2 = (r2_2 << 0x15);
        if (r2_2 >= 0)
        {
            if (*((arg2 * 0xdc) + 0x2000192c) != 0)
            {
                r2_2 = *0x20006064;
            }
            if ((*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (r2_2 - *((arg2 * 0xdc) + 0x20001930)) < 0)))
            {
                return;
            }
        }
        *((arg2 * 0xdc) + 0x2000192c) = 0;
    }
    /* tailcall */
    return sub_9158a(arg1, 7, r2_2);
}

uint32_t sub_8790e(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = (*((arg2 * 0xdc) + 0x20001977) | (*((arg2 * 0xdc) + 0x20001978) << 8));
    uint32_t r3_1 = (r0_1 | (*((arg2 * 0xdc) + 0x20001979) << 0x10));
    if ((r3_1 & 0x400) == 0)
    {
        return r0_1;
    }
    *((arg2 * 0xdc) + 0x20001977) = r3_1;
    *((arg2 * 0xdc) + 0x20001979) = (r3_1 >> 0x10);
    *((arg2 * 0xdc) + 0x20001978) = ((0xfffbff & r3_1) >> 8);
    void* r0_5 = *(0x20001acc + (arg2 << 2));
    int32_t r2_2 = *(r0_5 + 0x48);
    if (r2_2 == 0)
    {
        return r0_5;
    }
    *((arg2 * 0xdc) + 0x200019a0);
    /* jump -> r2_2 */
}

void* sub_87972(void* arg1, int32_t arg2)
{
    int32_t r1 = *(*(0x20001acc + (arg2 << 2)) + 0x38);
    int32_t r0_2;
    int32_t r0_3;
    int16_t r2;
    void* r3;
    if (r1 != 0)
    {
        void var_2c;
        r0_2 = r1(&var_2c);
        if ((r0_2 & 0xff) != 0)
        {
            r3 = &var_2c;
            r2 = 1;
            r0_3 = (0x3fc & (r0_2 << 2));
        }
    }
    if ((r1 == 0 || (r1 != 0 && (r0_2 & 0xff) == 0)))
    {
        r0_3 = 0;
        r2 = 4;
        r3 = nullptr;
    }
    void* r0_5;
    uint32_t r2_1;
    r0_5 = sub_9641a(arg2, 1, r2, r3, r0_3);
    void* r0_6;
    char r1_2;
    if (r0_5 == 0xfffffffd)
    {
        r0_6 = arg1;
        r1_2 = 0xb;
    }
    else
    {
        r0_6 = (r0_5 + 2);
    }
    if (r0_5 == 0xfffffffe)
    {
        r0_6 = arg1;
        r1_2 = 3;
    }
    if ((r0_5 == 0xfffffffd || r0_5 == 0xfffffffe))
    {
        sub_9159c(r0_6, r1_2, r2_1);
    }
    return r0_6;
}

int32_t j_sub_9158a(int32_t arg1)
{
    int32_t r2;
    /* tailcall */
    return sub_9158a(arg1, 7, r2);
}

char* sub_879d6(char* arg1, int32_t arg2)
{
    int32_t var_14 = 0xff008001;
    int32_t r0_1;
    uint32_t r2;
    r0_1 = sub_963dc(arg2, 2, 0xf, &var_14, 4, 0xffffffff);
    char* r0_2;
    if (r0_1 == 0)
    {
        r0_2 = ((arg2 * 0xdc) + 0x20001977);
        *r0_2 = (*r0_2 | 0x10);
        int32_t r1_2 = *0x20006064;
        *(r0_2 - 0x4b) = 1;
        *(r0_2 - 0x47) = (r1_2 + 0x1b);
    }
    else
    {
        r0_2 = arg1;
        sub_9158a(r0_2, 0xf, r2);
    }
    return r0_2;
}

void sub_87a3e(int32_t arg1, int32_t arg2)
{
    if (((*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) <= 0xffffffff)) && (*((arg2 * 0xdc) + 0x20001977) << 0x1b) < 0))
    {
        return;
    }
    if (((*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) > 0xffffffff) || ((*((arg2 * 0xdc) + 0x2000192c) == 0 || (*((arg2 * 0xdc) + 0x2000192c) != 0 && (*0x20006064 - *((arg2 * 0xdc) + 0x20001930)) <= 0xffffffff)) && (*((arg2 * 0xdc) + 0x20001977) << 0x1b) >= 0)))
    {
        *((arg2 * 0xdc) + 0x2000192c) = 0;
        /* tailcall */
        return sub_9158a(arg1, 0xf, 0);
    }
}

int32_t sub_87a80()
{
    sub_91424(0x20001ad4, "Plug USB-C", 8, 0x20000440, 0, 0);
    int32_t r0 = sub_91424(0x20001ae4, "Rcpt USB-C", 8, 0x20000440, 0, 1);
    char r1 = *0x20001af4;
    *0x20001af4 = (r1 | 2);
    if (*0x200004fc != 3)
    {
        *0x20001af4 = (r1 | 3);
    }
    return r0;
}

int32_t sub_87af8(int32_t arg1)
{
    int32_t r0_1 = ((1 << arg1) | *0x20001af4);
    *0x20001af4 = r0_1;
    return r0_1;
}

int32_t sub_87b0e()
{
    uint32_t r12;
    sub_91486(0x20001ad4, 0, 6, r12);
    uint32_t r0 = *0x20001ad8;
    *0x20001f24 = ((0x70 & (r0 << 4)) | (*0x20001f24 & 0x8f));
    sub_80746(1, (r0 & 7), *0x20006064);
    sub_91486(0x20001ae4, 1, 6, 0x20000000);
    uint32_t r0_1 = *0x20001ae8;
    *0x20001f25 = ((0x70 & (r0_1 << 4)) | (*0x20001f25 & 0x8f));
    /* tailcall */
    return sub_80746(2, (r0_1 & 7), *0x20006064);
}

void* sub_87b88(int32_t arg1)
{
    if (*((arg1 << 4) + 0x20001ad8) == 0)
    {
        return (0x20001ad4 + (arg1 << 4));
    }
    int32_t r2;
    /* tailcall */
    return sub_9159c((0x20001ad4 + (arg1 << 4)), 0, r2);
}

void* sub_87ba2(int32_t arg1)
{
    if (*((arg1 << 4) + 0x20001ad8) == 7)
    {
        return (0x20001ad4 + (arg1 << 4));
    }
    int32_t r2;
    /* tailcall */
    return sub_9159c((0x20001ad4 + (arg1 << 4)), 7, r2);
}

void* sub_87bbc(int32_t arg1)
{
    int32_t r1 = *0x20006064;
    *(0x20001af8 + (arg1 << 3)) = 1;
    *((arg1 << 3) + 0x20001afc) = (r1 + 0x3e8);
    return (0x20001af8 + (arg1 << 3));
}

uint32_t sub_87be0(int32_t arg1)
{
    uint32_t r0_1 = sub_95b5c(arg1);
    uint32_t r0_2 = *((arg1 << 4) + 0x20001ad8);
    char r1_2;
    if (r0_2 == 6)
    {
        sub_95be0(arg1, 0);
        sub_95b40(arg1, r0_1);
        sub_95b90(arg1, 0);
        r0_2 = (0x20001ad4 + (arg1 << 4));
        r1_2 = 3;
    }
    if (r0_2 == 3)
    {
        sub_95be0(arg1, 1);
        sub_95b40(arg1, r0_1);
        sub_95b90(arg1, 1);
        r0_2 = (0x20001ad4 + (arg1 << 4));
        r1_2 = 6;
    }
    if ((r0_2 == 6 || r0_2 == 3))
    {
        sub_9158a(r0_2, r1_2, 0x20008148);
    }
    *(0x20001b08 + arg1) = 1;
    return r0_2;
}

int32_t sub_87c58(int32_t arg1)
{
    int32_t r6 = (*(0x20001f24 + arg1) & 3);
    uint32_t r0_3;
    int32_t r0_10;
    int32_t r1_1;
    void* const r4_1;
    if (arg1 == 0)
    {
        r4_1 = 0x40021000;
        r0_3 = (sub_90194(0x40021000, 2) | (sub_90194(0x40021000, 1) << 1));
        if (r0_3 == 3)
        {
            r0_10 = 2;
        }
        if (r0_3 == 1)
        {
            r1_1 = 0x200;
            if (r6 == 1)
            {
                r1_1 = 0x80;
            }
        }
    }
    if (((arg1 != 1 && arg1 != 0) || (((arg1 == 0 && r0_3 != 3) && r0_3 != 2) && r0_3 != 1)))
    {
        r0_10 = 0;
    }
    if (arg1 == 1)
    {
        r1_1 = 0x200;
        if (r6 == 1)
        {
            r1_1 = 0x80;
        }
        r4_1 = 0x40020c00;
    }
    if ((arg1 == 1 || (arg1 == 0 && r0_3 == 1)))
    {
        int32_t r0_5 = sub_90194(r4_1, r1_1);
        int32_t r1_2 = 0x100;
        if (r6 == 1)
        {
            r1_2 = 0x40;
        }
        r0_10 = ((sub_90194(r4_1, r1_2) << 1) | r0_5);
    }
    if (((arg1 == 0 && r0_3 == 2) || ((arg1 == 1 || (arg1 == 0 && r0_3 == 1)) && r0_10 == 0)))
    {
        r0_10 = 1;
    }
    if ((((arg1 == 1 || (arg1 == 0 && r0_3 == 1)) && r0_10 != 0) && (r0_10 != 3 && r0_10 != 2)))
    {
        r0_10 = 0;
    }
    return r0_10;
}

int32_t sub_87cfe(int32_t arg1, int32_t arg2)
{
    /* tailcall */
    return sub_95be0(arg2, 8);
}

void sub_87d06(int32_t arg1, int32_t arg2)
{
    int32_t r2 = (1 << arg2);
    uint32_t r3 = *0x20001af4;
    if ((r2 & r3) == 0)
    {
        return;
    }
    int32_t r2_1 = (r3 & (!r2));
    *0x20001af4 = r2_1;
    if ((arg2 == 0 && *0x200004f0 != 0))
    {
        /* tailcall */
        return sub_9158a(arg1, 4, r2_1);
    }
    /* tailcall */
    return sub_9158a(arg1, 1, r2_1);
}

int32_t sub_87d40() __pure
{
    return;
}

uint32_t sub_87d42(uint32_t arg1, int32_t arg2)
{
    uint32_t r2 = sub_95be0(arg2, 0);
    *(0x20001f24 + arg2) = (*(0x20001f24 + arg2) & 0xf8);
    if (arg2 == 0)
    {
        *0x20001b0a = 0;
    }
    uint32_t r0_1 = *(0x20001b08 + arg2);
    if ((r0_1 != 0 && arg2 == 0))
    {
        r0_1 = *0x200004f0;
        if (r0_1 != 0)
        {
            r0_1 = arg1;
            sub_9158a(r0_1, 4, r2);
        }
    }
    *(0x20001b08 + arg2) = 0;
    return r0_1;
}

int32_t sub_87da4(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1;
    int32_t r2;
    r0_1 = sub_96f8c(arg2);
    if ((arg2 == 0 && (r0_1 == 7 && (*0x20001b0a == 0 && *0x200004f8 != 1))))
    {
        r0_1 = sub_8fba2(3, "Are you using CDiags without set…", r2);
        *0x20001b0a = 1;
    label_87e1e:
        return r0_1;
    }
    if (((r0_1 & 3) - 1) <= 1)
    {
        int32_t r2_2 = (*(0x20001f24 + arg2) & 0xf8);
        *(0x20001f24 + arg2) = ((r0_1 & 7) | r2_2);
        /* tailcall */
        return sub_9158a(arg1, 2, r2_2);
    }
    goto label_87e1e;
}

int32_t sub_87e20() __pure
{
    return;
}

void sub_87e22(int32_t arg1, int32_t arg2)
{
    *(0x20001b0c + (arg2 << 3)) = 0;
}

void* sub_87e32(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r6;
    if (sub_9702a(arg2) != 0)
    {
        r6 = 1;
    }
    else
    {
        int32_t r0_2;
        if (arg2 == 0)
        {
            r0_2 = sub_9540a();
        }
        else
        {
            r0_2 = sub_9542c();
        }
        r6 = r0_2;
    }
    int32_t r0_4 = sub_96f8c(arg2);
    void* r0_6 = ((r0_4 & 3) - 1);
    int32_t r2_2 = ((*(0x20001f24 + arg2) & 0xf8) | (r0_4 & 7));
    *(0x20001f24 + arg2) = r2_2;
    int32_t r0_7;
    char r1_2;
    if (r0_6 >= 2)
    {
        r0_7 = arg1;
        r1_2 = 1;
    }
    else
    {
        int32_t r1 = *0x20006064;
        if (*(0x20001b0c + (arg2 << 3)) == 0)
        {
            *(0x20001b0c + (arg2 << 3)) = 1;
            r0_6 = (0x20001b0c + (arg2 << 3));
            *(r0_6 + 4) = (r1 + 0x96);
        }
        if ((*(0x20001b0c + (arg2 << 3)) != 0 && r6 != 0))
        {
            r2_2 = *((arg2 << 3) + 0x20001b10);
        }
        if (((*(0x20001b0c + (arg2 << 3)) == 0 || (*(0x20001b0c + (arg2 << 3)) != 0 && r6 == 0)) || ((*(0x20001b0c + (arg2 << 3)) != 0 && r6 != 0) && (r1 - r2_2) < 0)))
        {
            return r0_6;
        }
        if (((*(0x20001b0c + (arg2 << 3)) != 0 && r6 != 0) && (r1 - r2_2) >= 0))
        {
            *(0x20001b0c + (arg2 << 3)) = 0;
            r0_7 = arg1;
            r1_2 = 3;
        }
    }
    /* tailcall */
    return sub_9158a(r0_7, r1_2, r2_2);
}

int32_t sub_87ed6() __pure
{
    return;
}

uint32_t sub_87ed8(int32_t arg1, int32_t arg2)
{
    uint32_t r0_1 = sub_9702a(arg2);
    if (r0_1 == 0)
    {
        r0_1 = (*(0x20001f24 + arg2) & 3);
        int32_t r0_3;
        int32_t r1;
        if (r0_1 == 2)
        {
            r0_3 = arg2;
            r1 = 2;
        }
        if (r0_1 == 1)
        {
            r0_3 = arg2;
            r1 = 1;
        }
        if ((r0_1 == 2 || r0_1 == 1))
        {
            r0_1 = sub_830f4(r0_3, r1, 0);
        }
    }
    *(0x20001af8 + (arg2 << 3)) = 0;
    return r0_1;
}

uint32_t sub_87f1c(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = sub_9702a(arg2);
    if (r0_1 == 0)
    {
        if (arg2 == 0)
        {
            r0_1 = sub_9540a();
        }
        else
        {
            r0_1 = sub_9542c();
        }
        if (r0_1 == 0)
        {
            r0_1 = sub_9702a(arg2);
            if (r0_1 == 0)
            {
                /* tailcall */
                return sub_9158a(arg1, 1, 0x47c);
            }
        }
    }
    return r0_1;
}

uint32_t sub_87f50(int32_t arg1, int32_t arg2)
{
    uint32_t r0_1 = sub_9702a(arg2);
    if (r0_1 == 0)
    {
        r0_1 = sub_830f4(arg2, 0, 0);
        *(0x20001f24 + arg2) = (*(0x20001f24 + arg2) & 0xf8);
    }
    return r0_1;
}

uint32_t sub_87f7a(uint32_t arg1, int32_t arg2)
{
    uint32_t r2 = sub_95be0(arg2, 1);
    *(0x20001f24 + arg2) = (*(0x20001f24 + arg2) & 0xf8);
    if (arg2 == 0)
    {
        *0x20001b0a = 0;
    }
    uint32_t r0_1 = *(0x20001b08 + arg2);
    if ((r0_1 != 0 && arg2 == 0))
    {
        r0_1 = *0x200004f0;
        if (r0_1 == 0)
        {
            r0_1 = arg1;
            sub_9158a(r0_1, 1, r2);
        }
    }
    *(0x20001b08 + arg2) = 0;
    return r0_1;
}

int32_t sub_87fdc(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1 = sub_96f8c(arg2);
    int32_t r0_3;
    if (arg2 == 0)
    {
        int32_t r2_2 = sub_8b7d0(0);
        if (r0_1 != 7)
        {
            goto label_87ff6;
        }
        if (*0x20001b0a != 0)
        {
            goto label_87ff6;
        }
        if (*0x200004f8 == 1)
        {
            goto label_87ff6;
        }
        r0_3 = sub_8fba2(3, "Are you using CDiags without set…", r2_2);
        *0x20001b0a = 1;
    }
    else
    {
    label_87ff6:
        r0_3 = ((r0_1 & 3) - 1);
        if (r0_3 <= 1)
        {
            int32_t r2_1 = (r0_1 & 7);
            *(0x20001f24 + arg2) = ((*(0x20001f24 + arg2) & 0xf8) | r2_1);
            /* tailcall */
            return sub_9158a(arg1, 5, r2_1);
        }
    }
    return r0_3;
}

int32_t sub_88064() __pure
{
    return;
}

void sub_88066(int32_t arg1, int32_t arg2)
{
    *(0x20001b0c + (arg2 << 3)) = 0;
}

void* sub_88076(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    if (arg2 == 0)
    {
        sub_8b7d0(0);
    }
    int32_t r0_1 = sub_96f8c(arg2);
    int32_t r2_2 = ((*(0x20001f24 + arg2) & 0xf8) | (r0_1 & 7));
    *(0x20001f24 + arg2) = r2_2;
    if (((r0_1 & 3) - 1) >= 2)
    {
        /* tailcall */
        return sub_9158a(arg1, 4, r2_2);
    }
    int32_t r1 = *0x20006064;
    if (*(0x20001b0c + (arg2 << 3)) == 0)
    {
        *(0x20001b0c + (arg2 << 3)) = 1;
        *((arg2 << 3) + 0x20001b10) = (r1 + 0x96);
        return (0x20001b0c + (arg2 << 3));
    }
    int32_t r2_5 = *((arg2 << 3) + 0x20001b10);
    if ((r1 - r2_5) < 0)
    {
        return ((r0_1 & 3) - 1);
    }
    *(0x20001b0c + (arg2 << 3)) = 0;
    /* tailcall */
    return sub_9158a(arg1, 6, r2_5);
}

int32_t sub_88102() __pure
{
    return;
}

uint32_t sub_88104(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = sub_9702a(arg2);
    if (r0_1 == 0)
    {
        r0_1 = (*(0x20001f24 + arg2) & 3);
        int32_t r0_3;
        int32_t r1;
        if (r0_1 == 2)
        {
            r0_3 = arg2;
            r1 = 2;
        }
        if (r0_1 == 1)
        {
            r0_3 = arg2;
            r1 = 1;
        }
        if ((r0_1 == 2 || r0_1 == 1))
        {
            /* tailcall */
            return sub_830f4(r0_3, r1, 1);
        }
    }
    return r0_1;
}

uint32_t sub_8813e(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    *(0x20001f24 + arg2) = ((sub_96f8c(arg2) & 7) | (*(0x20001f24 + arg2) & 0xf8));
    uint32_t r0_5 = sub_9702a(arg2);
    if (r0_5 == 0)
    {
        r0_5 = ((*(0x20001f24 + arg2) & 3) - 1);
        if (r0_5 >= 2)
        {
            /* tailcall */
            return sub_9158a(arg1, 4, 0x47c);
        }
    }
    return r0_5;
}

uint32_t sub_88192(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = sub_9702a(arg2);
    if (r0_1 == 0)
    {
        /* tailcall */
        return sub_830f4(arg2, 0, 1);
    }
    return r0_1;
}

int32_t sub_881b0(int32_t arg1, int32_t arg2)
{
    sub_95be0(arg2, 8);
    int32_t r0_1 = *0x20006064;
    *(0x20001af8 + (arg2 << 3)) = 1;
    *((arg2 << 3) + 0x20001afc) = (r0_1 + 0x23);
    return (r0_1 + 0x23);
}

void sub_881e0(int32_t arg1, int32_t arg2)
{
    if (*(0x20001af8 + (arg2 << 3)) != 0)
    {
        uint32_t r2_1 = *0x20006064;
        if ((r2_1 - *((arg2 << 3) + 0x20001afc)) >= 0)
        {
            sub_9158a(arg1, 0, r2_1);
            *0x20001af4 = ((1 << arg2) | *0x20001af4);
        }
    }
}

int32_t sub_88224() __pure
{
    return;
}

int32_t sub_88228(int32_t arg1, int32_t arg2, char* arg3, char arg4)
{
    uint32_t r0_1 = sub_95b5c(arg1);
    *(0x20001b1c + (arg1 << 3)) = 0;
    uint32_t r6 = ((arg2 >> 6) & 0x1f);
    int32_t r1 = ((arg2 >> 4) & 3);
    int32_t r2 = (arg2 & 0xf);
    int32_t r5_1;
    int32_t* var_4c_1;
    int32_t* var_4c_7;
    uint32_t var_48_1;
    uint32_t var_48_5;
    char var_44;
    uint8_t var_26;
    char var_25;
    int32_t r0_7;
    int32_t r0_10;
    int32_t r1_1;
    int32_t r1_14;
    void* r2_1;
    int32_t r2_6;
    int32_t r2_14;
    int32_t r3_1;
    uint32_t r3_3;
    uint32_t r3_7;
    void* r4_10;
    if (r0_1 == 0)
    {
        var_25 = r6;
        int32_t r0_4 = *(0x20001b44 + (arg1 << 2));
        if (r0_4 > 5)
        {
            goto label_88680;
        }
        if (jump_table_882ae[r0_4] == 0xc9)
        {
            r5_1 = 0;
        }
        if ((((jump_table_882ae[r0_4] == 0xb3 && r1 == 0) && r2 <= 4) && jump_table_8848a[r2] == 5))
        {
            r5_1 = 0;
        }
        if (((((jump_table_882ae[r0_4] == 0xb3 && r1 == 0) && r2 <= 4) && *(&jump_table_8848a + (r2 << 1)) == 5) || (jump_table_882ae[r0_4] == 0xc9 && (r1 | r2) == 0)))
        {
            sub_88f8c(arg1, 0, 1, 0, 0, nullptr, 0);
            *(0x20001b44 + (arg1 << 2)) = 1;
        }
        int32_t r0_15;
        if (jump_table_882ae[r0_4] == 0xb3)
        {
            if (r1 != 0)
            {
                goto label_88416;
            }
            if (r2 > 4)
            {
                goto label_88416;
            }
            switch (*(&jump_table_8848a + (r2 << 1)))
            {
                case 0x2c3:
                {
                    int32_t r4_9 = *arg3;
                    var_26 = r6;
                    if (*(0x20001c78 + arg1) == 2)
                    {
                        r4_10 = (0x20001c30 + (arg1 * 0x24));
                        uint32_t r3_10 = *(r4_10 + 5);
                        sub_88f8c(arg1, 1, 1, r3_10, 0, (r4_10 + 8), ((r3_10 + 3) & 0xfc));
                        r3_1 = *(r4_10 + 0x20);
                        if (r3_1 == 0)
                        {
                            goto label_88680;
                        }
                        goto label_88f1c;
                    }
                    int32_t r5_8 = *(0x20001b34 + (arg1 << 2));
                    int32_t r9_3;
                    if (r5_8 == 0)
                    {
                        r9_3 = 0;
                        var_26 = 0;
                    }
                    else
                    {
                        r5_8(arg1, ((r4_9 >> 0x18) & 7), r4_9, 1, &arg3[4], &var_26);
                        r9_3 = *(0x20001b34 + (arg1 << 2));
                        r4_9 = *arg3;
                        r6 = var_25;
                    }
                    uint32_t r5_13 = 0;
                    sub_97886(&var_44, 0, 0x1c);
                    uint8_t var_27 = r6;
                    if (r9_3 == 0)
                    {
                        var_27 = 0;
                    }
                    else
                    {
                        r9_3(arg1, ((r4_9 >> 0x18) & 7), r4_9, 1, &var_44, &var_27);
                        r5_13 = var_27;
                    }
                    r1_14 = 1;
                    r2_6 = 1;
                    var_4c_7 = &var_44;
                    var_48_5 = (r5_13 >> 2);
                    int32_t var_50_36 = 0;
                    r3_7 = (r5_13 + 4);
                    goto label_88f7c;
                }
                case 0x2ee:
                {
                    int32_t r0_95 = *arg3;
                    var_44 = r6;
                    if (*(0x20001c78 + arg1) != 2)
                    {
                        int32_t r6_17 = *(0x20001b34 + (arg1 << 2));
                        if (r6_17 != 0)
                        {
                            r6_17(arg1, ((r0_95 >> 0x18) & 7), r0_95, 0, &arg3[4], &var_44);
                        }
                    }
                    else if (*((arg1 * 0x24) + 0x20001c50) != 0)
                    {
                        *((arg1 * 0x24) + 0x20001c35) = r6;
                        sub_97f48(((arg1 * 0x24) + 0x20001c38), arg3, r6);
                        *((arg1 * 0x24) + 0x20001c50)(arg1, 1, (0x20001c30 + (arg1 * 0x24)));
                    }
                    r5_1 = 0;
                    r1_1 = 2;
                    r2_14 = 1;
                    var_48_1 = 1;
                    int32_t var_50_25 = 0;
                    var_4c_1 = nullptr;
                    r0_7 = arg1;
                    goto label_88c84;
                }
                case 0x318:
                {
                    int32_t r12_3;
                    if (*(0x20001c2c + arg1) == 0)
                    {
                        int32_t r1_34 = *arg3;
                        int32_t r0_135 = (arg1 * 5);
                        *(0x20001bdc + (r0_135 << 3)) = ((r1_34 >> 0x1c) & 7);
                        *((r0_135 << 3) + 0x20001bdd) = ((r1_34 >> 0x18) & 7);
                        *((r0_135 << 3) + 0x20001be0) = ((r1_34 >> 0x17) & 1);
                        *((r0_135 << 3) + 0x20001be4) = ((r1_34 >> 0x10) & 0xf);
                        *((r0_135 << 3) + 0x20001be6) = r1_34;
                        *((r0_135 << 3) + 0x20001bfc) = (arg4 - 1);
                        sub_97f48(((r0_135 << 3) + 0x20001be8), &arg3[4], (arg4 - 1));
                        *((r0_135 << 3) + 0x20001bfe) = 0;
                        r12_3 = *(0x20001b3c + (arg1 << 2));
                        *((r0_135 << 3) + 0x20001c00) = r12_3;
                    }
                    else
                    {
                        r12_3 = *((arg1 * 0x28) + 0x20001c00);
                    }
                    r5_1 = 0;
                    *(0x20001c2c + arg1) = 0;
                    if ((r12_3 != 0 && r12_3(arg1, (0x20001bdc + (arg1 * 0x28)), 3, 0, 0) == 1))
                    {
                        r5_1 = 0;
                        sub_88f8c(arg1, 3, 1, 0, 0, nullptr, 0);
                        r0_15 = 4;
                        goto label_88438;
                    }
                    r0_7 = arg1;
                    r1_1 = 3;
                    goto label_88dba;
                }
                case 0x32c:
                {
                    r5_1 = 0;
                    r0_7 = arg1;
                    r1_1 = 4;
                    r2_14 = 1;
                    var_48_1 = 0;
                    int32_t var_50_18 = 0;
                    var_4c_1 = nullptr;
                label_88ec0:
                    r3_3 = 0;
                label_88ec2:
                    sub_88f8c(r0_7, r1_1, r2_14, r3_3, 0, var_4c_1, var_48_1);
                    break;
                }
            }
        }
        switch (jump_table_882ae[r0_4])
        {
            case 3:
            {
                if (r1 != 0)
                {
                    goto label_88416;
                }
                if (r2 != 1)
                {
                    if (r2 != 5)
                    {
                        goto label_88416;
                    }
                    r5_1 = 0;
                    sub_88f8c(arg1, 5, 1, 0, 0, nullptr, 0);
                    var_48_1 = 1;
                    *(0x20001b44 + (arg1 << 2)) = 2;
                    *(0x20001bcc + arg1) = 0;
                    *(0x20001bd4 + (arg1 << 2)) = 0;
                    var_4c_1 = (0x20001bd4 + (arg1 << 2));
                label_88302:
                    r0_7 = arg1;
                    r1_1 = 2;
                    int32_t var_50_1 = 0;
                label_88308:
                    r2_14 = 0;
                label_88c84:
                    r3_3 = 4;
                    goto label_88ec2;
                }
                int32_t r8_1 = *arg3;
                uint32_t r4_2 = 0;
                sub_97886(&var_44, 0, 0x1c);
                var_26 = r6;
                int32_t r6_5 = *(0x20001b34 + (arg1 << 2));
                if (r6_5 == 0)
                {
                    var_26 = 0;
                }
                else
                {
                    r6_5(arg1, ((r8_1 >> 0x18) & 7), r8_1, 1, &var_44, &var_26);
                    r4_2 = var_26;
                }
                r1_1 = 1;
                r2_14 = 1;
                var_4c_1 = &var_44;
                var_48_1 = (r4_2 >> 2);
                r5_1 = 0;
                r3_3 = (r4_2 + 4);
                r0_7 = arg1;
                int32_t var_50_19 = 0;
                goto label_88ec2;
            }
            case 0x84:
            {
                if (r1 != 0)
                {
                    goto label_88416;
                }
                if (r2 == 2)
                {
                    r5_1 = 0;
                    sub_88f8c(arg1, 2, 1, 0, 0, nullptr, 0);
                    uint32_t r3_4 = *(0x20001bcc + arg1);
                    if (r3_4 <= 7)
                    {
                        uint32_t r0_40 = *(0x20001bd4 + (arg1 << 2));
                        if (r0_40 == 4)
                        {
                            r5_1 = *(arg3 + 4);
                        }
                        if (r0_40 == 0)
                        {
                            r5_1 = 0;
                            *((0x20001b4c + (arg1 << 5)) + (r3_4 << 2)) = *(arg3 + 4);
                        }
                        int32_t r0_44;
                        if ((r0_40 == 4 || (r0_40 == 0 && *arg3 == 0)))
                        {
                            *((0x20001b8c + (arg1 << 5)) + (r3_4 << 2)) = r5_1;
                            int32_t r6_20 = (0x10000000 + (r3_4 << 0x1c));
                            int32_t r3_17 = (r3_4 + 1);
                            int32_t r0_148;
                            while (((1 << r3_17) & *(0x20001b4c + (arg1 << 5))) == 0)
                            {
                                r0_148 = (r3_17 + 1);
                                bool cond:6_1 = r3_17 <= 7;
                                r6_20 = (r6_20 + 0x10000000);
                                r3_17 = r0_148;
                                if ((!cond:6_1))
                                {
                                    break;
                                }
                            }
                            if (((1 << r3_17) & *(0x20001b4c + (arg1 << 5))) == 0)
                            {
                                *(0x20001bcc + arg1) = (r0_148 - 1);
                            label_88eb2:
                                r5_1 = 0;
                                r0_7 = arg1;
                                r1_1 = 5;
                                goto label_88eb8;
                            }
                            *(0x20001bcc + arg1) = r3_17;
                            if (r3_17 > 7)
                            {
                                goto label_88eb2;
                            }
                            r0_44 = (r6_20 & 0x70000000);
                            r5_1 = 0;
                        }
                        if ((r0_40 == 0 && *arg3 != 0))
                        {
                            r0_44 = (4 | ((r3_4 & 7) << 0x1c));
                        }
                        if ((((r0_40 == 0 && *arg3 != 0) || r0_40 == 4) || (r0_40 == 0 && *arg3 == 0)))
                        {
                            *(0x20001bd4 + (arg1 << 2)) = r0_44;
                            var_4c_1 = (0x20001bd4 + (arg1 << 2));
                            var_48_1 = 1;
                            goto label_88302;
                        }
                        if ((r0_40 != 4 && r0_40 != 0))
                        {
                            goto label_88680;
                        }
                    }
                }
                else
                {
                    if (r2 != 5)
                    {
                        goto label_88416;
                    }
                    r5_1 = 0;
                    sub_88f8c(arg1, 5, 1, 0, 0, nullptr, 0);
                    *(0x20001b44 + (arg1 << 2)) = 3;
                    *(0x20001c78 + arg1) = 0;
                    r3_1 = *(0x20001b2c + (arg1 << 2));
                    if (r3_1 != 0)
                    {
                    label_88402:
                        r1 = (0x20001b4c + (arg1 << 5));
                        r2_1 = (0x20001b8c + (arg1 << 5));
                    label_8867c:
                        r0_10 = arg1;
                    label_8867e:
                        r3_1(r0_10, r1, r2_1);
                        goto label_88680;
                    }
                }
                break;
            }
            case 0xb4:
            {
                goto label_88416;
            }
            case 0xb8:
            {
                char* var_4c_6;
                int32_t var_48_4;
                int32_t r0_14;
                int32_t r1_2;
                void* r1_11;
                int32_t r6_9;
                if (r1 == 0)
                {
                    if (r2 == 2)
                    {
                        if (*((arg1 * 0x28) + 0x20001be0) != 1)
                        {
                            r5_1 = 0;
                            r0_14 = arg1;
                            r1_2 = 2;
                        }
                        else
                        {
                            *((arg1 * 0x28) + 0x20001bfe) = (*((arg1 * 0x28) + 0x20001bfe) + r6);
                            int32_t r5_3 = *((arg1 * 0x28) + 0x20001c00);
                            int32_t r0_52;
                            if (r5_3 != 0)
                            {
                                r0_52 = r5_3(arg1, (0x20001bdc + (arg1 * 0x28)), 2, arg3, &var_25);
                                if (r0_52 == 1)
                                {
                                    r5_1 = 0;
                                    var_48_4 = 0;
                                    var_4c_6 = nullptr;
                                    sub_88f8c(arg1, 2, 1, 0, 0, nullptr, 0);
                                    if (*((arg1 * 0x28) + 0x20001bfe) >= *((arg1 * 0x28) + 0x20001be6))
                                    {
                                        r6_9 = *((arg1 * 0x28) + 0x20001c00);
                                        if (r6_9 == 0)
                                        {
                                            goto label_88d12;
                                        }
                                        r1_11 = (0x20001bdc + (arg1 * 0x28));
                                        goto label_88d0e;
                                    }
                                }
                            }
                            if ((r5_3 == 0 || (r5_3 != 0 && r0_52 != 1)))
                            {
                                r5_1 = 0;
                                r0_7 = arg1;
                                r1_1 = 2;
                            label_88dba:
                                var_48_1 = 0;
                                int32_t var_50_26 = 0;
                                var_4c_1 = nullptr;
                                r2_14 = 2;
                                goto label_88ec0;
                            }
                        }
                    }
                    if (((r2 != 1 && r2 != 2) && r2 == 4))
                    {
                        int32_t r6_1 = *((arg1 * 0x28) + 0x20001c00);
                        if (r6_1 != 0)
                        {
                            int32_t var_50_3 = 0;
                            r6_1(arg1);
                        }
                        r5_1 = 0;
                        sub_88f8c(arg1, 4, 1, 0, 0, nullptr, 0);
                        r0_15 = 3;
                        goto label_88438;
                    }
                }
                if ((r1 != 0 || ((r1 == 0 && r2 != 1) && r2 != 2)))
                {
                    r5_1 = 0;
                    r0_14 = arg1;
                    r1_2 = 1;
                }
                int32_t r2_2;
                if (((r1 != 0 || ((r1 == 0 && r2 != 1) && r2 != 2)) || ((r1 == 0 && r2 == 2) && *((arg1 * 0x28) + 0x20001be0) != 1)))
                {
                    int32_t var_48_2 = 0;
                    int32_t var_50_2 = 0;
                    int32_t var_4c_2 = 0;
                    r2_2 = 3;
                    goto label_88432;
                }
                if ((r1 == 0 && r2 == 1))
                {
                    if (*((arg1 * 0x28) + 0x20001be0) == 0)
                    {
                        var_26 = r6;
                        sub_97886(&var_44, 0, 0x18);
                        int32_t r6_14 = *((arg1 * 0x28) + 0x20001c00);
                        int32_t r0_119;
                        void* r6_16;
                        if (r6_14 != 0)
                        {
                            r0_119 = r6_14(arg1, (0x20001bdc + (arg1 * 0x28)), 1, &var_44, &var_26);
                            if (r0_119 == 1)
                            {
                                uint32_t r3_15 = var_26;
                                r6_16 = ((arg1 * 0x28) + 0x20001bfe);
                                *r6_16 = (*r6_16 + r3_15);
                                var_4c_6 = &var_44;
                                var_48_4 = (((r3_15 + 3) >> 2) & 0x3f);
                                sub_88f8c(arg1, 1, 1, r3_15, 0, var_4c_6, var_48_4);
                            }
                        }
                        if ((r6_14 == 0 || (r6_14 != 0 && r0_119 != 1)))
                        {
                            var_48_4 = 0;
                            var_4c_6 = nullptr;
                            sub_88f8c(arg1, 1, 2, 0, 0, nullptr, 0);
                            r6_16 = ((arg1 * 0x28) + 0x20001bfe);
                        }
                        if (*r6_16 < *((arg1 * 0x28) + 0x20001be6))
                        {
                            goto label_88680;
                        }
                        r6_9 = *((arg1 * 0x28) + 0x20001c00);
                        if (r6_9 == 0)
                        {
                            goto label_88d12;
                        }
                        r1_11 = (0x20001bdc + (arg1 * 0x28));
                    label_88d0e:
                        r6_9(arg1, r1_11, 4, 0, 0, var_4c_6, var_48_4);
                    label_88d12:
                        *(0x20001b44 + (arg1 << 2)) = 3;
                        goto label_88680;
                    }
                    r5_1 = 0;
                    r0_14 = arg1;
                    r1_2 = 0;
                    r2_2 = 0;
                    int32_t var_48_3 = 0;
                    int32_t var_50_8 = 0;
                    int32_t var_4c_5 = 0;
                label_88432:
                    sub_88f8c(r0_14, r1_2, r2_2, 0, 0, nullptr, 0);
                    r0_15 = 5;
                label_88438:
                    *(0x20001b44 + (arg1 << 2)) = r0_15;
                }
                break;
            }
        }
    }
    else if (r0_1 != 1)
    {
    label_88416:
        r5_1 = 0xffffffff;
    }
    else
    {
        var_25 = r6;
        int32_t r3 = *(0x20001b44 + (arg1 << 2));
        if (r3 > 5)
        {
            goto label_88680;
        }
        uint32_t r0_2 = (arg2 >> 4);
        void var_40;
        bool cond:3_1;
        bool cond:4_1;
        bool cond:5_1;
        if (jump_table_88280[r3] == 0x47)
        {
            cond:3_1 = r2 == 5;
            if (r2 == 5)
            {
                cond:3_1 = r1 == 0;
            }
            if (cond:3_1)
            {
                goto label_88eb2;
            }
            cond:4_1 = r2 != 5;
            if (r2 == 5)
            {
                cond:4_1 = r1 != 1;
            }
            if ((!cond:4_1))
            {
                *(0x20001b44 + (arg1 << 2)) = 3;
                r3_1 = *(0x20001b2c + (arg1 << 2));
                if (r3_1 == 0)
                {
                    goto label_88680;
                }
                goto label_88402;
            }
            cond:5_1 = r2 != 2;
            if (r2 == 2)
            {
                cond:5_1 = r1 != 0;
            }
            if (cond:5_1)
            {
                r5_1 = 0;
                if (r1 != 1)
                {
                    r5_1 = 0xffffffff;
                }
            }
            else
            {
                int32_t r9_1 = *arg3;
                r5_1 = 0;
                sub_97886(&var_44, 0, 0x1c);
                var_26 = r6;
                int32_t r4_1 = *(0x20001b34 + (arg1 << 2));
                if (r4_1 != 0)
                {
                    r4_1(arg1, ((r9_1 >> 0x1c) & 7), r9_1, 1, &var_40, &var_26);
                    r6 = var_26;
                }
                var_44 = (0x7700ffff & r9_1);
                uint32_t r0_32 = r6;
                var_48_1 = (1 + (r0_32 >> 2));
                r3_3 = (r0_32 + 4);
                r0_7 = arg1;
                r1_1 = 2;
                int32_t var_50_5 = 0;
                var_4c_1 = &var_44;
            }
        }
        int32_t r0_3;
        int32_t r0_79;
        if (jump_table_88280[r3] == 0x5d)
        {
            char* var_50_6;
            char* var_4c;
            void* r1_7;
            uint32_t r2_4;
            int32_t r6_4;
            if ((r1 != 0 && r1 != 1))
            {
                if (r2 == 3)
                {
                    r1_7 = (0x20001bdc + (arg1 * 0x28));
                    r6_4 = *(r1_7 + 0x24);
                    if (r6_4 == 0)
                    {
                        goto label_88680;
                    }
                    r5_1 = 0;
                    r2_4 = 4;
                    var_50_6 = &var_25;
                label_88b24:
                    r6_4(arg1, r1_7, r2_4, 0, var_50_6, var_4c);
                }
                if (((r2 != 2 && r2 != 3) && r2 != 1))
                {
                    goto label_88680;
                }
                if ((r2 == 2 && *(0x20001c78 + arg1) != 2))
                {
                    goto label_88680;
                }
                if (((r2 != 2 && r2 != 3) || r2 == 2))
                {
                    r2_1 = (0x20001c30 + (arg1 * 0x24));
                    r3_1 = *(r2_1 + 0x20);
                    if (r3_1 == 0)
                    {
                        goto label_88680;
                    }
                    goto label_8867c;
                }
            }
            if (r1 == 1)
            {
                if (r2 == 2)
                {
                    if (*(0x20001c78 + arg1) != 2)
                    {
                        goto label_88680;
                    }
                    r2_1 = (0x20001c30 + (arg1 * 0x24));
                    r3_1 = *(r2_1 + 0x20);
                    if (r3_1 == 0)
                    {
                        goto label_88680;
                    }
                    r0_10 = arg1;
                    r1 = 1;
                    goto label_8867e;
                }
                if (r2 != 0)
                {
                    if (r2 != 3)
                    {
                        if (r2 != 1)
                        {
                            goto label_88416;
                        }
                        uint32_t r0_34 = *(0x20001c78 + arg1);
                        if (r0_34 == 2)
                        {
                            r4_10 = (0x20001c30 + (arg1 * 0x24));
                            if (*(r4_10 + 0x20) == 0)
                            {
                                goto label_88680;
                            }
                            *(r4_10 + 5) = r6;
                            sub_97f48((r4_10 + 8), arg3, r6);
                            r3_1 = *(r4_10 + 0x20);
                        label_88f1c:
                            r0_10 = arg1;
                            r1 = 1;
                            r2_1 = r4_10;
                            goto label_8867e;
                        }
                        if (r0_34 != 0)
                        {
                            goto label_88680;
                        }
                        r6_4 = *(0x20001b34 + (arg1 << 2));
                        if (r6_4 == 0)
                        {
                            goto label_88680;
                        }
                        r5_1 = 0;
                        int32_t r0_35 = *(0x20001bd4 + (arg1 << 2));
                        var_50_6 = arg3;
                        var_4c = &var_25;
                        r1_7 = ((r0_35 >> 0x1c) & 7);
                        r2_4 = r0_35;
                        goto label_88b24;
                    }
                    char* var_4c_10;
                    int32_t var_48_7;
                    int32_t r0_116;
                    int32_t r1_28;
                    uint32_t r3_13;
                    if (*((arg1 * 0x28) + 0x20001be0) != 1)
                    {
                        int32_t r6_21 = *((arg1 * 0x28) + 0x20001c00);
                        var_44 = 0;
                        int32_t r0_151;
                        if (r6_21 != 0)
                        {
                            r0_151 = r6_21(arg1, (0x20001bdc + (arg1 * 0x28)), 3, 0, &var_44);
                            if (r0_151 == 1)
                            {
                                r3_13 = var_44;
                                var_48_7 = 0;
                                int32_t var_50_29 = 0;
                                var_4c_10 = nullptr;
                                r0_116 = arg1;
                                r1_28 = 1;
                            }
                        }
                        if ((r6_21 == 0 || (r6_21 != 0 && r0_151 != 1)))
                        {
                            var_48_7 = 0;
                            int32_t var_50_34 = 0;
                            var_4c_10 = nullptr;
                        label_88ede:
                            r0_116 = arg1;
                            r1_28 = 4;
                            r3_13 = 0;
                        }
                    }
                    else
                    {
                        sub_97886(&var_44, 0, 0x18);
                        int32_t r4_12 = *((arg1 * 0x28) + 0x20001c00);
                        var_26 = 0;
                        int32_t r0_111;
                        if (r4_12 != 0)
                        {
                            r0_111 = r4_12(arg1, (0x20001bdc + (arg1 * 0x28)), 3, &var_44, &var_26);
                            if (r0_111 == 1)
                            {
                                r3_13 = var_26;
                                r1_28 = 2;
                                *((arg1 * 0x28) + 0x20001bfe) = (*((arg1 * 0x28) + 0x20001bfe) + r3_13);
                                var_4c_10 = &var_44;
                                var_48_7 = (((r3_13 + 3) >> 2) & 0x3f);
                                int32_t var_50_21 = 0;
                                r0_116 = arg1;
                            }
                        }
                        if ((r4_12 == 0 || (r4_12 != 0 && r0_111 != 1)))
                        {
                            var_48_7 = 0;
                            int32_t var_50_33 = 0;
                            var_4c_10 = nullptr;
                            goto label_88ede;
                        }
                    }
                    sub_88f8c(r0_116, r1_28, 0, r3_13, 0, var_4c_10, var_48_7);
                    r0_3 = 4;
                    goto label_88658;
                }
            }
            if (r1 == 0)
            {
                if (r2 > 3)
                {
                    goto label_88416;
                }
                switch (jump_table_88470[r2])
                {
                    case 4:
                    {
                    label_88478:
                        r5_1 = 0;
                        r0_7 = arg1;
                        r1_1 = 0;
                        goto label_88eb8;
                    }
                    case 0x22b:
                    {
                        int32_t r4_6 = *arg3;
                        r5_1 = 0;
                        sub_97886(&var_40, 0, 0x18);
                        r3_3 = r6;
                        *(0x20001c78 + arg1) = 0;
                        int32_t r0_74 = (0x7700ffff & r4_6);
                        var_44 = r0_74;
                        *(0x20001bd4 + (arg1 << 2)) = r0_74;
                        r1_1 = 1;
                        var_48_1 = 1;
                        int32_t var_50_14 = 0;
                        var_4c_1 = &var_44;
                        break;
                    }
                    case 0x24f:
                    {
                        int32_t r4_7 = *arg3;
                        sub_97886(&var_44, 0, 0x1c);
                        var_26 = r6;
                        *(0x20001c78 + arg1) = 1;
                        int32_t r6_13 = *(0x20001b34 + (arg1 << 2));
                        if (r6_13 == 0)
                        {
                            var_26 = 0;
                            goto label_88680;
                        }
                        r6_13(arg1, ((r4_7 >> 0x1c) & 7), r4_7, 1, &var_40, &var_26);
                        uint32_t r0_77 = var_26;
                        if (r0_77 == 0)
                        {
                            goto label_88680;
                        }
                        int32_t r1_18 = (0x7700ffff & r4_7);
                        var_44 = r1_18;
                        *(0x20001bd4 + (arg1 << 2)) = r1_18;
                        var_4c_7 = &var_44;
                        var_48_5 = (1 + (r0_77 >> 2));
                        r3_7 = (r0_77 + 4);
                        int32_t var_50_16 = 0;
                    label_88992:
                        r0_79 = arg1;
                        r1_14 = 2;
                        r2_6 = 0;
                    label_88f7e:
                        sub_88f8c(r0_79, r1_14, r2_6, r3_7, 0, var_4c_7, var_48_5);
                        goto label_88680;
                    }
                    case 0x295:
                    {
                        int32_t r0_80 = (arg1 * 5);
                        int32_t r2_8 = *arg3;
                        *(0x20001bdc + (r0_80 << 3)) = ((r2_8 >> 0x1c) & 7);
                        *((r0_80 << 3) + 0x20001bdd) = ((r2_8 >> 0x18) & 7);
                        *((r0_80 << 3) + 0x20001be0) = ((r2_8 >> 0x17) & 1);
                        *((r0_80 << 3) + 0x20001be4) = ((r2_8 >> 0x10) & 0xf);
                        *((r0_80 << 3) + 0x20001be6) = r2_8;
                        *((r0_80 << 3) + 0x20001bfc) = (arg4 - 1);
                        sub_97f48(((r0_80 << 3) + 0x20001be8), &arg3[4], (arg4 - 1));
                        r5_1 = 0;
                        *((r0_80 << 3) + 0x20001bfe) = 0;
                        *((r0_80 << 3) + 0x20001c00) = *(0x20001b3c + (arg1 << 2));
                        uint32_t r0_87 = *((r0_80 << 3) + 0x20001bfc);
                        var_48_1 = (r0_87 + 1);
                        int32_t var_50_17 = 0;
                        var_4c_1 = arg3;
                        r1_1 = 3;
                        r3_3 = (4 + (r0_87 << 2));
                        break;
                    }
                }
                if ((*(&jump_table_88470 + (r2 << 1)) == 0x22b || *(&jump_table_88470 + (r2 << 1)) == 0x295))
                {
                    r0_7 = arg1;
                }
            }
        }
        if (((((jump_table_88280[r3] == 0x47 && (!cond:3_1)) && cond:4_1) && (!cond:5_1)) || (jump_table_88280[r3] == 0x5d && r1 == 0)))
        {
            r2_14 = 0;
            goto label_88ec2;
        }
        switch (jump_table_88280[r3])
        {
            case 3:
            {
                bool cond:2_1 = r2 != 5;
                if (r2 == 5)
                {
                    cond:2_1 = r1 != 1;
                }
                if (cond:2_1)
                {
                    r5_1 = 0xffffffff;
                    if ((r2 == 1 && r1 != 0))
                    {
                        uint32_t r3_2 = *(0x20001bcc + arg1);
                        if (r3_2 > 7)
                        {
                            goto label_88680;
                        }
                        uint32_t r0_21 = *(0x20001bd4 + (arg1 << 2));
                        if (r0_21 == 4)
                        {
                            r5_1 = *arg3;
                        }
                        if (r0_21 == 0)
                        {
                            r5_1 = 0;
                            *((0x20001b4c + (arg1 << 5)) + (r3_2 << 2)) = *arg3;
                        }
                        int32_t r0_25;
                        if ((r0_21 == 4 || (r0_21 == 0 && *arg3 == 0)))
                        {
                            *((0x20001b8c + (arg1 << 5)) + (r3_2 << 2)) = r5_1;
                            int32_t r6_18 = (0x1000000 + (r3_2 << 0x18));
                            int32_t r3_16 = (r3_2 + 1);
                            int32_t r0_130;
                            while (((1 << r3_16) & *(0x20001b4c + (arg1 << 5))) == 0)
                            {
                                r0_130 = (r3_16 + 1);
                                bool cond:9_1 = r3_16 <= 7;
                                r6_18 = (r6_18 + 0x1000000);
                                r3_16 = r0_130;
                                if ((!cond:9_1))
                                {
                                    break;
                                }
                            }
                            if (((1 << r3_16) & *(0x20001b4c + (arg1 << 5))) == 0)
                            {
                                *(0x20001bcc + arg1) = (r0_130 - 1);
                                goto label_88eb2;
                            }
                            *(0x20001bcc + arg1) = r3_16;
                            if (r3_16 > 7)
                            {
                                goto label_88eb2;
                            }
                            r0_25 = (r6_18 & 0x7000000);
                            r5_1 = 0;
                        }
                        if ((r0_21 == 0 && *arg3 != 0))
                        {
                            r0_25 = (4 | ((r3_2 & 7) << 0x18));
                        }
                        if ((((r0_21 == 0 && *arg3 != 0) || r0_21 == 4) || (r0_21 == 0 && *arg3 == 0)))
                        {
                            *(0x20001bd4 + (arg1 << 2)) = r0_25;
                            var_4c_1 = (0x20001bd4 + (arg1 << 2));
                            var_48_1 = 1;
                            int32_t var_50_30 = 0;
                            r0_7 = arg1;
                            r1_1 = 1;
                            goto label_88308;
                        }
                        if ((r0_21 != 4 && r0_21 != 0))
                        {
                            goto label_88680;
                        }
                    }
                }
                else
                {
                    r0_3 = 2;
                label_88658:
                    *(0x20001b44 + (arg1 << 2)) = r0_3;
                label_88680:
                    r5_1 = 0;
                }
                break;
            }
            case 0x7e:
            {
                int32_t r0_11 = (r0_2 & 3);
                if ((r0_11 != 2 && r0_11 != 1))
                {
                label_888aa:
                    r5_1 = 0;
                    sub_88f8c(arg1, 0, 0, 0, 0, nullptr, 0);
                    *(0x20001b44 + (arg1 << 2)) = 5;
                }
                void* r1_4;
                int32_t r6_3;
                if (r0_11 == 1)
                {
                    void* r5_4;
                    if (r2 == 2)
                    {
                        r5_4 = (0x20001bdc + (arg1 * 0x28));
                        if (*(r5_4 + 4) != 1)
                        {
                            goto label_888aa;
                        }
                        if (*(r5_4 + 0x22) < *(r5_4 + 0xa))
                        {
                            sub_97886(&var_44, 0, 0x18);
                            int32_t r4_5 = *(r5_4 + 0x24);
                            var_26 = 0;
                            if ((r4_5 != 0 && r4_5(arg1, r5_4, 2, &var_44, &var_26) == 1))
                            {
                                r3_7 = var_26;
                                *(r5_4 + 0x22) = (*(r5_4 + 0x22) + r3_7);
                                var_4c_7 = &var_44;
                                var_48_5 = (((r3_7 + 3) >> 2) & 0x3f);
                                int32_t var_50_13 = 0;
                                goto label_88992;
                            }
                            var_48_5 = 0;
                            int32_t var_50_31 = 0;
                            var_4c_7 = nullptr;
                            goto label_88e8a;
                        }
                        r6_3 = *(r5_4 + 0x24);
                    }
                    if (((r2 != 1 && r2 != 2) && r2 != 4))
                    {
                        goto label_888aa;
                    }
                    if (r2 == 1)
                    {
                        r5_4 = (0x20001bdc + (arg1 * 0x28));
                        if (*(r5_4 + 4) != 0)
                        {
                            goto label_888aa;
                        }
                        var_44 = r6;
                        *(r5_4 + 0x22) = (*(r5_4 + 0x22) + r6);
                        int32_t r6_10 = *(r5_4 + 0x24);
                        int32_t r0_60;
                        if (r6_10 != 0)
                        {
                            r0_60 = r6_10(arg1, r5_4, 1, arg3, &var_44);
                            if (r0_60 == 1)
                            {
                                if (*(r5_4 + 0x22) < *(r5_4 + 0xa))
                                {
                                    r3_7 = var_44;
                                    r1_14 = 1;
                                    r2_6 = 0;
                                    var_48_5 = 0;
                                    int32_t var_50_11 = 0;
                                    var_4c_7 = nullptr;
                                label_88f7c:
                                    r0_79 = arg1;
                                    goto label_88f7e;
                                }
                                r6_3 = *(r5_4 + 0x24);
                            }
                        }
                        if ((r6_10 == 0 || (r6_10 != 0 && r0_60 != 1)))
                        {
                            var_48_5 = 0;
                            int32_t var_50_27 = 0;
                            var_4c_7 = nullptr;
                        label_88e8a:
                            r0_79 = arg1;
                            r1_14 = 4;
                            r2_6 = 0;
                            r3_7 = 0;
                            goto label_88f7e;
                        }
                    }
                    if ((r2 == 1 || r2 == 2))
                    {
                        if (r6_3 == 0)
                        {
                            goto label_88570;
                        }
                        r1_4 = r5_4;
                    label_8856e:
                        r6_3(arg1, r1_4, 4, 0, 0);
                    label_88570:
                        r0_3 = 3;
                        goto label_88658;
                    }
                }
                if ((r0_11 == 2 && r2 != 4))
                {
                    r5_1 = 0;
                    r0_7 = arg1;
                    r1_1 = 4;
                label_88eb8:
                    var_48_1 = 0;
                    int32_t var_50_32 = 0;
                    var_4c_1 = nullptr;
                    r2_14 = 0;
                    goto label_88ec0;
                }
                if ((r0_11 == 2 || r0_11 == 1))
                {
                    r1_4 = (0x20001bdc + (arg1 * 0x28));
                    r6_3 = *(r1_4 + 0x24);
                    if (r6_3 == 0)
                    {
                        goto label_88570;
                    }
                    goto label_8856e;
                }
                break;
            }
            case 0x90:
            {
                if (r2 != 0)
                {
                    goto label_88680;
                }
                int32_t r0_12 = (r0_2 & 3);
                if (r0_12 != 1)
                {
                    if (r0_12 != 0)
                    {
                        goto label_88680;
                    }
                    goto label_88478;
                }
                break;
            }
            case 0xcb:
            {
                goto label_88416;
            }
        }
        if (((jump_table_88280[r3] == 0x5d && r1 == 1) || jump_table_88280[r3] == 0x90))
        {
            r0_3 = 1;
            goto label_88658;
        }
    }
    return r5_1;
}

int32_t sub_88f8c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t* arg6, int32_t arg7)
{
    int32_t var_40;
    int32_t r11;
    if ((sub_95b5c(arg1) | arg3) == 0)
    {
        r11 = 2;
        var_40 = 0x5ac8106;
    }
    else
    {
        r11 = 1;
    }
    void* r6 = &&var_40[r11];
    sub_97f48(r6, arg6, (arg7 << 2));
    *(r6 - 4) = ((((((0x30 & (arg3 << 4)) | (arg2 & 0xf)) | ((arg4 & 0x1f) << 6)) | ((arg5 & 0xf) << 0xb)) | 0x4000000) | 0x1ac0000);
    sub_84bca(arg1, 1, 0xf, &var_40, (r11 + arg7));
    if (arg3 == 0)
    {
        int32_t r0_12 = *0x20006064;
        *(0x20001b1c + (arg1 << 3)) = 1;
        *((arg1 << 3) + 0x20001b20) = (r0_12 + 0x1e);
    }
    return 0;
}

int32_t sub_8903a(int32_t* arg1, int32_t* arg2, int32_t* arg3)
{
    *0x20001b48 = 0;
    *0x20001b44 = 0;
    *0x20001bd8 = 0;
    *0x20001bd4 = 0;
    *0x20001bcc = 0;
    sub_97886(0x20001b4c, 0, 0x40);
    sub_97886(0x20001b8c, 0, 0x40);
    int32_t r0 = *arg1;
    *0x20001b30 = arg1[1];
    *0x20001b2c = r0;
    int32_t r0_1 = *arg2;
    *0x20001b38 = arg2[1];
    *0x20001b34 = r0_1;
    int32_t r0_2 = *arg3;
    *0x20001b40 = arg3[1];
    *0x20001b3c = r0_2;
    return r0_2;
}

void sub_890c2(int32_t arg1)
{
    if ((*(0x20001b1c + (arg1 << 3)) != 0 && (*0x20006064 - *((arg1 << 3) + 0x20001b20)) >= 0))
    {
        *(0x20001b1c + (arg1 << 3)) = 0;
        /* tailcall */
        return sub_8fba2(4, "UVDM Timeout\n", 0);
    }
}

int32_t sub_890fc()
{
    *0x20001b48 = 0;
    *0x20001b44 = 0;
    *0x20001bd8 = 0;
    *0x20001bd4 = 0;
    *0x20001bcc = 0;
    sub_97886(0x20001b4c, 0, 0x40);
    sub_97886(0x20001b8c, 0, 0x40);
    return 0x20001b8c;
}

int32_t sub_89146(int32_t arg1)
{
    return *(0x20001b44 + (arg1 << 2));
}

int32_t sub_89154(int32_t arg1)
{
    int32_t r4;
    if (*(0x20001b44 + (arg1 << 2)) != 0)
    {
        r4 = 0xffffffff;
    }
    else
    {
        *(0x20001b44 + (arg1 << 2)) = 1;
        r4 = 0;
        if (sub_95b5c(arg1) == 1)
        {
            *(0x20001bcc + arg1) = 0;
            *(0x20001bd4 + (arg1 << 2)) = 0;
            sub_88f8c(arg1, 1, 0, 4, 0, (0x20001bd4 + (arg1 << 2)), 1);
        }
    }
    return r4;
}

int32_t sub_891bc(int32_t arg1, char* arg2)
{
    int32_t r0_17;
    if (*(0x20001b44 + (arg1 << 2)) != 3)
    {
        r0_17 = 0xffffffff;
    }
    else
    {
        int32_t* r1 = arg2;
        int32_t r3_1 = r1[1];
        int32_t r4_1 = r1[2];
        int32_t r5_1 = r1[3];
        int32_t r6_1 = r1[4];
        *(0x20001bdc + (arg1 * 0x28)) = *r1;
        *((arg1 * 0x28) + 0x20001be0) = r3_1;
        *((arg1 * 0x28) + 0x20001be4) = r4_1;
        *((arg1 * 0x28) + 0x20001be8) = r5_1;
        *((arg1 * 0x28) + 0x20001bec) = r6_1;
        int32_t r3_2 = r1[6];
        int32_t r4_2 = r1[7];
        int32_t r5_2 = r1[8];
        int32_t r6_2 = r1[9];
        *((arg1 * 0x28) + 0x20001bf0) = r1[5];
        *((arg1 * 0x28) + 0x20001bf4) = r3_2;
        *((arg1 * 0x28) + 0x20001bf8) = r4_2;
        *((arg1 * 0x28) + 0x20001bfc) = r5_2;
        *((arg1 * 0x28) + 0x20001c00) = r6_2;
        *((arg1 * 0x28) + 0x20001bfe) = 0;
        void var_38;
        sub_97886(&var_38, 0, 0x14);
        int32_t r0_9 = ((((0x800000 & (*(arg2 + 4) << 0x17)) | (((arg2[1] & 7) << 0x18) | ((*arg2 & 7) << 0x1c))) | *(arg2 + 0xa)) | ((arg2[8] & 0xf) << 0x10));
        int32_t var_3c = r0_9;
        uint32_t r6_3 = arg2[0x20];
        if (r6_3 >= 6)
        {
            r6_3 = 5;
            arg2[0x20] = 5;
        }
        sub_97f48(&var_38, &arg2[0xc], (r6_3 << 2));
        sub_88f8c(arg1, 3, 0, (4 + (r6_3 << 2)), 0, &var_3c, (r6_3 + 1));
        if (sub_95b5c(arg1) == 0)
        {
            *(0x20001c2c + arg1) = 1;
        }
        r0_17 = 0;
    }
    return r0_17;
}

int32_t sub_892a4()
{
    *0x20001c80 = 0;
    *0x20001f26 = 0;
    *0x20001c7c = 0;
    *0x20001c84 = 0;
    *0x20001c88 = 0;
    *0x20001c8c = 0;
    *0x20001c90 = 0;
    *0x20001d00 = 0;
    *0x20001d08 = 0;
    *0x20001c94 = 0;
    *0x20001c95 = 0;
    *0x20001c96 = 0;
    *0x20001c97 = 0;
    *0x20001c98 = 0;
    *0x200004e0 = 3;
    sub_80746(7, 0, *0x20006064);
    *0x20001f27 = 0;
    sub_80746(8, 0, *0x20006064);
    *0x20001f28 = 0;
    sub_80746(9, 0, *0x20006064);
    *0x20001f29 = 0;
    sub_80746(0xa, 0, *0x20006064);
    return 0;
}

int32_t sub_89384(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r4;
    if (arg1 == 0)
    {
        r4 = 0xffffffff;
    }
    else
    {
        if (*0x20001c7c != 0)
        {
            /* jump -> arg1 */
        }
        r4 = 0;
        *0x20001c7c = 0;
        *0x20001c80 = arg1;
        sub_84c40(0, sub_8a0f4(), 0x5ac, 0, 0x10, nullptr, 0, sub_893de);  {  // {"@FIF"}}
    }
    return r4;
}

int32_t sub_893de(int32_t arg1, int32_t arg2, int16_t* arg3, int32_t arg4)
{
    char* r0;
    int32_t r0_2;
    if (arg1 == 0)
    {
        *0x200004e0 = 3;
        r0_2 = ((*arg3 >> 6) & 3);
        if ((r0_2 == 2 && *0x20001c7c == 0))
        {
            r0 = 0x20001c97;
        }
        uint32_t r6_1;
        if ((r0_2 == 1 && arg4 >= 2))
        {
            void* r0_3 = &arg3[2];
            int32_t r1_2 = 1;
            uint32_t r2 = *0x20001c7c;
            do
            {
                r6_1 = r2;
                if (r6_1 > 0x17)
                {
                    break;
                }
                int32_t r5_1 = *r0_3;
                if (0 == (r5_1 >> 0x10))
                {
                    break;
                }
                *(0x20001c9e + (r6_1 << 1)) = (r5_1 >> 0x10);
                uint32_t r6_2 = (r2 + 1);
                *0x20001c7c = (r2 + 1);
                if (r6_2 > 0x17)
                {
                    break;
                }
                if (r5_1 == 0)
                {
                    break;
                }
                r1_2 = (r1_2 + 1);
                r2 = (r2 + 2);
                r0_3 = (r0_3 + 4);
                *(0x20001c9e + (r6_2 << 1)) = r5_1;
                *0x20001c7c = r2;
            } while (r1_2 < arg4);
        }
        if (((r0_2 == 2 && *0x20001c7c != 0) || ((r0_2 == 1 && arg4 >= 2) && r6_1 > 0x17)))
        {
            int32_t r0_7 = *0x20001c80;
            if (r0_7 != 0)
            {
                r0_7();
            }
        }
        if ((r0_2 == 1 && (arg4 < 2 || (arg4 >= 2 && r6_1 <= 0x17))))
        {
            sub_84c40(0, sub_8a0f4(), 0x5ac, 0, 0x10, nullptr, 0, sub_893de);  {  // {"@FIF"}}
        }
    }
    if ((arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd))
    {
        r0 = 0x20001c96;
    }
    if (((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe))
    {
        r0 = 0x20001c95;
    }
    if ((((arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd) || ((arg1 == 0 && r0_2 == 2) && *0x20001c7c == 0)) || ((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe)))
    {
        *r0 = 1;
    }
    return 0;
}

int32_t sub_894d6(int32_t arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r4_2;
    if (arg2 == 0)
    {
        r4_2 = 0xffffffff;
    }
    else
    {
        if ((*0x20001c8c == arg1 && *0x20001c84 != 0))
        {
            /* jump -> arg2 */
        }
        *0x20001c8c = arg1;
        int32_t var_14 = arg1;
        *0x20001c88 = arg2;
        r4_2 = 0;
        *0x20001c84 = 0;
        sub_84c40(0, sub_8a0f4(), 0x5ac, 0, 0x11, &var_14, 1, sub_89546);  {  // {"@FIF"}}
    }
    return r4_2;
}

int32_t sub_89546(int32_t arg1, int32_t arg2, int16_t* arg3, int32_t arg4)
{
    char* r0;
    int32_t r0_2;
    if (arg1 == 0)
    {
        *0x200004e0 = 3;
        r0_2 = ((*arg3 >> 6) & 3);
        if ((r0_2 == 2 && *0x20001c84 == 0))
        {
            r0 = 0x20001c97;
        }
        uint32_t r6_1;
        if ((r0_2 == 1 && arg4 >= 2))
        {
            void* r0_3 = &arg3[2];
            int32_t r1_2 = 1;
            uint32_t r2 = *0x20001c84;
            do
            {
                r6_1 = r2;
                if (r6_1 > 0x17)
                {
                    break;
                }
                int32_t r5_1 = *r0_3;
                if (0 == (r5_1 >> 0x10))
                {
                    break;
                }
                *(0x20001cce + (r6_1 << 1)) = (r5_1 >> 0x10);
                uint32_t r6_2 = (r2 + 1);
                *0x20001c84 = (r2 + 1);
                if (r6_2 > 0x17)
                {
                    break;
                }
                if (r5_1 == 0)
                {
                    break;
                }
                r1_2 = (r1_2 + 1);
                r2 = (r2 + 2);
                r0_3 = (r0_3 + 4);
                *(0x20001cce + (r6_2 << 1)) = r5_1;
                *0x20001c84 = r2;
            } while (r1_2 < arg4);
        }
        if (((r0_2 == 2 && *0x20001c84 != 0) || ((r0_2 == 1 && arg4 >= 2) && r6_1 > 0x17)))
        {
            int32_t r0_8 = *0x20001c88;
            if (r0_8 != 0)
            {
                r0_8();
            }
        }
        if ((r0_2 == 1 && (arg4 < 2 || (arg4 >= 2 && r6_1 <= 0x17))))
        {
            uint32_t var_1c = *0x20001c8c;
            sub_84c40(0, sub_8a0f4(), 0x5ac, 0, 0x11, &var_1c, 1, sub_89546);  {  // {"@FIF"}}
        }
    }
    if ((arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd))
    {
        r0 = 0x20001c96;
    }
    if (((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe))
    {
        r0 = 0x20001c95;
    }
    if ((((arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd) || ((arg1 == 0 && r0_2 == 2) && *0x20001c84 == 0)) || ((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe)))
    {
        *r0 = 1;
    }
    return 0;
}

int32_t sub_8964c(int32_t arg1, int32_t arg2, int32_t arg3)
{
    int32_t r4;
    if (arg3 == 0)
    {
        r4 = 0xffffffff;
    }
    else
    {
        int32_t var_14 = (arg1 | arg2);
        *0x20001c90 = arg3;
        r4 = 0;
        sub_84c40(0, sub_8a0f4(), 0x5ac, 0, 0x12, &var_14, 1, sub_89698);  {  // {"@FIF"}}
    }
    return r4;
}

int32_t sub_89698(int32_t arg1, int32_t arg2, int16_t* arg3)
{
    char* r0;
    int32_t r0_2;
    if (arg1 == 0)
    {
        r0_2 = ((*arg3 >> 6) & 3);
        if (r0_2 == 2)
        {
            r0 = 0x20001c97;
        }
        else if (r0_2 == 1)
        {
            int32_t r0_3 = *(arg3 + 0xc);
            int32_t r1_2 = *(arg3 + 0x10);
            *(arg3 + 8);
            sub_8fba2(3, "Got EnterDC response: 0x%08X 0x%…", *(arg3 + 4));
            int32_t r12_1 = *0x20001c90;
            if (r12_1 != 0)
            {
                r12_1(*(arg3 + 4), *(arg3 + 8), *(arg3 + 0xc), *(arg3 + 0x10), r0_3, r1_2);
            }
        }
    }
    if ((arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd))
    {
        r0 = 0x20001c96;
    }
    if (((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe))
    {
        r0 = 0x20001c95;
    }
    if ((((arg1 == 0 && r0_2 == 2) || (arg1 != 0 && (arg1 & 0xfffffffd) == 0xfffffffd)) || ((arg1 & 0xfffffffd) != 0xfffffffd && arg1 == 0xfffffffe)))
    {
        *r0 = 1;
    }
    return 0;
}

int32_t sub_8971a(int32_t arg1, int32_t arg2, int32_t* arg3, int32_t arg4, int32_t arg5)
{
    int32_t r4_1;
    if (arg5 == 0)
    {
        r4_1 = 0xffffffff;
    }
    else
    {
        int32_t var_28 = (arg1 | arg2);
        *0x20001c90 = arg5;
        int32_t r3 = (arg4 << 2);
        if (arg4 > 5)
        {
            r3 = 0x14;
        }
        void var_24;
        sub_97f48(&var_24, arg3, r3);
        r4_1 = 0;
        sub_84c40(0, sub_8a0f4(), 0x5ac, 0, 0x12, &var_28, (arg4 + 1), sub_89698);  {  // {"@FIF"}}
    }
    return r4_1;
}

int32_t sub_8978a()
{
    if (*0x20001f26 >= 4)
    {
        *0x20001f26 = 1;
        sub_80746(7, 1, *0x20006064);
        *0x200004e0 = 3;
        *0x20001c94 = 1;
        sub_89384(sub_8a122, 3);
    }
    return 0;
}

int32_t sub_897dc()
{
    if (*0x20001f28 < 4)
    {
        return 0xffffffff;
    }
    if (*0x20001f27 != 7)
    {
        return 0xffffffff;
    }
    /* tailcall */
    return sub_897f6(0xffffffff, 0x20001f26);
}

int32_t sub_897f6(int32_t arg1, void* arg2)
{
    *(arg2 + 2) = 1;
    sub_80746(9, 1, *0x20006064);
    *0x200004e0 = 3;
    *0x20001c94 = 3;
    sub_89384(sub_8a7d8, 3);
    return 0;
}

int32_t sub_8983a()
{
    if (*0x20001f29 < 4)
    {
        return 0xffffffff;
    }
    /* tailcall */
    return sub_8984e(0x20001f26);
}

int32_t sub_8984e(void* arg1)
{
    *(arg1 + 3) = 1;
    sub_80746(0xa, 1, *0x20006064);
    *0x200004e0 = 3;
    *0x20001c94 = 4;
    sub_89384(sub_8a9ae, 4);
    return 0;
}

int32_t sub_89890()
{
    if (*0x20001f27 >= 4)
    {
        *0x20001f27 = 1;
        sub_80746(8, 1, *0x20006064);
        *0x20001c94 = 2;
        sub_89384(sub_8ab72, 2);
    }
    return 0;
}

int32_t sub_898d8()
{
    int32_t r4 = 0;
    int32_t var_30 = 0;
    *0x20001c90 = sub_89a3e;
    *0x20001c94 = 0xff;
    sub_84c40(0, sub_8a0f4(), 0x5ac, 0, 0x12, &var_30, 1, sub_89698);  {  // {"@FIF"}}
    *0x20001c99 = 0;
    if (*0x20001c99 <= 1)
    {
        int32_t r9_1 = 3;
        while (true)
        {
            int32_t r2_1 = sub_8e930(1);
            if (((*0x20001c96 | *0x20001c95) << 0x18) != 0)
            {
                r9_1 = (r9_1 - 1);
                *0x20001c96 = 0;
                *0x20001c95 = 0;
                if ((r9_1 & 0xff) == 0)
                {
                    r4 = 0xffffffff;
                    break;
                }
                sub_8fba2(4, "Retry Stopping USB\n", r2_1);
                char const* const* r0_7;
                int32_t r1_2;
                if (*0x20001c99 == 0)
                {
                    char* var_2c = nullptr;
                    *0x20001c90 = sub_89a3e;
                    r1_2 = sub_8a0f4();
                    int32_t var_38_2 = 1;
                    void* const var_34_2 = sub_89698;
                    r0_7 = &var_2c;
                }
                else
                {
                    *0x20001c90 = sub_89abe;
                    char const* const var_28 = "%u %u %u\n";
                    r1_2 = sub_8a0f4();
                    int32_t var_38_1 = 1;
                    void* const var_34_1 = sub_89698;
                    r0_7 = &var_28;
                }
                sub_84c40(0, r1_2, 0x5ac, 0, 0x12, r0_7, 1, sub_89698);  {  // {"@FIF"}}
            }
            else if (*0x20001c97 == 1)
            {
                sub_8fba2(4, "Stopping USB NAKed\n", r2_1);
                r4 = 0xfffffff2;
                *0x20001c97 = 0;
                break;
            }
            if (*0x20001c99 >= 2)
            {
                r4 = 0;
                break;
            }
        }
    }
    return r4;
}

int32_t sub_89a3e(int32_t arg1, int32_t arg2)
{
    *0x20001c99 = 1;
    if (arg2 < 0x10000)
    {
        *0x20001c99 = 2;
        *0x20001f27 = 4;
        sub_80746(8, 4, *0x20006064);
    }
    else
    {
        *0x20001c90 = sub_89abe;
        char const* const var_14 = "%u %u %u\n";
        sub_84c40(0, sub_8a0f4(), 0x5ac, 0, 0x12, &var_14, 1, sub_89698);  {  // {"@FIF"}}
    }
    return 0;
}

int32_t sub_89abe()
{
    *0x20001c99 = 2;
    *0x20001f27 = 4;
    sub_80746(8, 4, *0x20006064);
    return 0;
}

int32_t sub_89af0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r0 = 0xffffffff;
    if ((*0x20001f26 >= 4 && (*0x20001f27 >= 4 && (*0x20001f28 >= 4 && *0x20001f29 >= 4))))
    {
        *0x20001c9a = arg1;
        *0x20001c94 = 0xff;
        *0x20001c9b = arg2;
        if (arg3 == 0)
        {
            sub_89384(sub_8ad5e);
        }
        else
        {
            int32_t var_24 = (0x80000000 | (arg1 << 0x10));
            sub_8971a((arg2 | 0x100), 0, &var_24, 1, sub_89c0e);
        }
        *0x20001c9c = 0;
        int32_t r4_1 = (arg4 + *0x20006064);
        if ((*0x20006064 - r4_1) <= 0xffffffff)
        {
            int32_t i = 0;
            do
            {
                if ((i << 0x18) != 0)
                {
                    return 0;
                }
                sub_8e930(1);
                if (((*0x20001c96 | *0x20001c95) << 0x18) != 0)
                {
                    *0x20001c96 = 0;
                    *0x20001c95 = 0;
                    break;
                }
                if (*0x20001c97 == 1)
                {
                    *0x20001c97 = 0;
                    return 0xfffffff2;
                }
                if ((*0x20006064 - r4_1) > 0xffffffff)
                {
                    break;
                }
                i = *0x20001c9c;
            } while (i >= 0);
        }
        r0 = 0xffffffff;
    }
    return r0;
}

int32_t sub_89c0e()
{
    *0x20001c9c = 1;
    return 0;
}

int32_t sub_89c1e()
{
    int32_t r0 = 0;
    if (*0x20001f26 == 5)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_89c32()
{
    int32_t r0 = 0;
    if (*0x20001f26 == 6)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_89c46()
{
    int32_t r0 = 0;
    if (*0x20001f27 == 7)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_89c5a()
{
    int32_t r0 = 0;
    if (*0x20001f28 == 8)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_89c6e()
{
    int32_t r0 = 0;
    if (*0x20001f29 == 0xa)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_89c82()
{
    int32_t r0 = 0;
    int32_t r2_1 = 0;
    if (*0x20001f27 > 3)
    {
        r2_1 = 1;
    }
    int32_t r1_1 = 0;
    if (*0x20001f26 > 3)
    {
        r1_1 = 1;
    }
    int32_t r2_2 = 0;
    if (*0x20001f28 > 3)
    {
        r2_2 = 1;
    }
    if (*0x20001f29 > 3)
    {
        r0 = 1;
    }
    return (r0 & ((r1_1 & r2_1) & r2_2));
}

int32_t sub_89cc8()
{
    if (*0x20001f26 != 0)
    {
        goto label_89da0;
    }
    uint32_t r0_2;
    int32_t r2;
    if ((*0x200004f4 << 0x1f) == 0)
    {
        *0x20001f26 = 4;
        r2 = sub_80746(7, 4, *0x20006064);
    label_89da0:
        r0_2 = *0x20001f27;
    }
    else
    {
        int32_t r1_4;
        if (*0x20001d00 != 1)
        {
            *0x20001d00 = 1;
            r1_4 = (*0x20006064 + *0x2000052c);
            *0x20001d04 = r1_4;
        }
        else
        {
            r1_4 = *0x20001d04;
        }
        r2 = *0x20006064;
        if ((r2 - r1_4) < 0)
        {
            goto label_89da0;
        }
        if (*0x2000052c > *0x20000530)
        {
            r0_2 = *0x20001f27;
        }
        if ((*0x2000052c <= *0x20000530 || (*0x2000052c > *0x20000530 && r0_2 >= 4)))
        {
            int32_t r0_3;
            r0_3 = sub_96dd8(0);
            if (r0_3 >= 0x65)
            {
                *0x20001d00 = 0;
                *0x20001f26 = 1;
                sub_80746(7, 1, *0x20006064);
                *0x200004e0 = 3;
                *0x20001c94 = 1;
                r2 = sub_89384(sub_8a122, 3);
            }
            goto label_89da0;
        }
    }
    if (r0_2 == 0)
    {
        if (*0x20000510 == 0)
        {
            *0x20001f27 = 4;
            r2 = sub_80746(8, 4, *0x20006064);
        }
        else
        {
            int32_t r1_10;
            if (*0x20001d08 != 1)
            {
                *0x20001d08 = 1;
                r1_10 = (*0x20006064 + *0x20000530);
                *0x20001d0c = r1_10;
            }
            else
            {
                r1_10 = *0x20001d0c;
            }
            r2 = *0x20006064;
            if (((r2 - r1_10) >= 0 && (*0x2000052c > *0x20000530 || (*0x2000052c <= *0x20000530 && *0x20001f26 >= 4))))
            {
                int32_t r0_17;
                r0_17 = sub_96dd8(0);
                if (r0_17 >= 0x65)
                {
                    *0x20001d08 = 0;
                    *0x20001f27 = 1;
                    sub_80746(8, 1, *0x20006064);
                    *0x200004e0 = 3;
                    *0x20001c94 = 2;
                    r2 = sub_89384(sub_8ab72, 2);
                }
            }
        }
    }
    if (*0x20001f28 == 0)
    {
        uint32_t r0_9 = *0x20001f27;
        if ((r0_9 >= 4 && *0x20001f26 >= 4))
        {
            if ((r0_9 != 7 || (r0_9 == 7 && *0x20000510 != 2)))
            {
                *0x20001f28 = 4;
                r2 = sub_80746(9, 4, *0x20006064);
            }
            if ((r0_9 == 7 && *0x20000510 == 2))
            {
                int32_t r0_11;
                r0_11 = sub_96dd8(0);
                if (r0_11 >= 0x65)
                {
                    *0x20001f28 = 1;
                    sub_80746(9, 1, *0x20006064);
                    *0x200004e0 = 3;
                    *0x20001c94 = 3;
                    r2 = sub_89384(sub_8a7d8, 3);
                }
            }
        }
    }
    if ((*0x20001f29 == 0 && *0x20001f28 == 4))
    {
        if ((*0x200004f4 << 0x1e) >= 0)
        {
            *0x20001f29 = 4;
            r2 = sub_80746(0xa, 4, *0x20006064);
        }
        else
        {
            int32_t r0_12;
            r0_12 = sub_96dd8(0);
            if (r0_12 >= 0x65)
            {
                *0x20001f29 = 1;
                sub_80746(0xa, 1, *0x20006064);
                *0x200004e0 = 3;
                *0x20001c94 = 4;
                r2 = sub_89384(sub_8a9ae, 4);
            }
        }
    }
    if (*0x20001c96 != 0)
    {
        int32_t r0_14;
        r0_14 = sub_96dd8(0);
        if (r0_14 >= 0x65)
        {
            *0x20001c96 = 0;
            char r1_13 = (*0x200004e0 - 1);
            *0x200004e0 = r1_13;
            if (r1_13 != 0)
            {
                r2 = sub_8ae68();
            }
            else
            {
                sub_8fba2(3, "AVDM Timeout\n", r2);
                int32_t r0_19 = (*0x20001c94 - 1);
                if (r0_19 <= 3)
                {
                    int32_t r0_20;
                    int32_t r2_10;
                    switch (jump_table_89fac[r0_19])
                    {
                        case 2:
                        {
                            *0x20001f26 = 9;
                            r2_10 = *0x20006064;
                            r0_20 = 7;
                            break;
                        }
                        case 0x17:
                        {
                            *0x20001f27 = 9;
                            r2_10 = *0x20006064;
                            r0_20 = 8;
                            break;
                        }
                        case 0x20:
                        {
                            *0x20001f28 = 9;
                            r2_10 = *0x20006064;
                            r0_20 = 9;
                            break;
                        }
                        case 0x29:
                        {
                            *0x20001f29 = 9;
                            r2_10 = *0x20006064;
                            r0_20 = 0xa;
                            break;
                        }
                    }
                    sub_80746(r0_20, 9, r2_10);
                }
                sub_8e71e(2);
                r2 = sub_8e81c(0x50000003);
            }
        }
    }
    if (*0x20001c95 != 0)
    {
        int32_t r0_22;
        r0_22 = sub_96dd8(0);
        if (r0_22 >= 0x65)
        {
            *0x20001c95 = 0;
            sub_8fba2(3, "AVDM Collision Detected\n", r2);
            r2 = sub_8ae68();
        }
    }
    if ((*0x20001c94 != 0xff && *0x20001c97 != 0))
    {
        *0x20001c97 = 0;
        sub_8fba2(3, "AVDM NAKed\n", r2);
        int32_t r0_25 = (*0x20001c94 - 1);
        if (r0_25 <= 3)
        {
            int32_t r0_26;
            int32_t r2_12;
            switch (jump_table_8a08a[r0_25])
            {
                case 2:
                {
                    *0x20001f26 = 9;
                    r2_12 = *0x20006064;
                    r0_26 = 7;
                    break;
                }
                case 0xb:
                {
                    *0x20001f27 = 9;
                    r2_12 = *0x20006064;
                    r0_26 = 8;
                    break;
                }
                case 0x14:
                {
                    *0x20001f28 = 9;
                    r2_12 = *0x20006064;
                    r0_26 = 9;
                    break;
                }
                case 0x1d:
                {
                    *0x20001f29 = 9;
                    r2_12 = *0x20006064;
                    r0_26 = 0xa;
                    break;
                }
            }
            sub_80746(r0_26, 9, r2_12);
        }
        sub_8e71e(2);
        sub_8e81c(0x50000004);
    }
    return 0;
}

int32_t sub_8a0f4()
{
    int32_t r0 = sub_95d12(0);
    int32_t r5 = 8;
    if (sub_95bac(0) == 1)
    {
        r5 = 0x10;
    }
    sub_95cfc(0, (r5 | (r0 & 0xffffffe7)));
    return r5;
}

int32_t sub_8a122()
{
    uint32_t r0 = *0x20001c7c;
    int32_t r0_1;
    int32_t r1_1;
    int32_t r2;
    if (r0 != 0)
    {
        r1_1 = 0;
        r2 = *0x20000508;
        while (*(0x20001c9e + (r1_1 << 1)) != r2)
        {
            r1_1 = (r1_1 + 1);
            if (r1_1 >= r0)
            {
                break;
            }
        }
        if (*(0x20001c9e + (r1_1 << 1)) == r2)
        {
            sub_8fba2(4, "Found target DC (0x%04X)\n", r2);
            *0x20001f26 = 2;
            sub_80746(7, 2, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 1;
            sub_894d6(*0x20000508, sub_8a1f6);
            r0_1 = 0;
        }
    }
    if ((r0 == 0 || (r0 != 0 && *(0x20001c9e + (r1_1 << 1)) != r2)))
    {
        sub_8fba2(3, "Didn't find target DC\n", r2);
        *0x20001f26 = 9;
        sub_80746(7, 9, *0x20006064);
        sub_8e71e(2);
        sub_8e81c(0x50000002);
        r0_1 = 0xffffffff;
    }
    return r0_1;
}

int32_t sub_8a1f6()
{
    if (sub_8fb96() >= 4)
    {
        sub_8a3fc(*0x20000509, *0x20001c84);
    }
    uint32_t r0_2 = *0x20001c84;
    if (r0_2 == 0)
    {
    label_8a3ce:
        *0x20001f26 = 9;
        sub_80746(7, 9, *0x20006064);
        sub_8e71e(2);
        sub_8e81c(0x50000001);
    }
    else
    {
        int32_t r1_2 = 0;
        int32_t r2_1 = 0x212;
        while (*(0x20001cce + (r1_2 << 1)) != 0x212)
        {
            r1_2 = (r1_2 + 1);
            if (r1_2 >= r0_2)
            {
                break;
            }
        }
        if (*(0x20001cce + (r1_2 << 1)) != 0x212)
        {
            int32_t r1_3 = 0;
            r2_1 = 0x221;
            while (*(0x20001cce + (r1_3 << 1)) != 0x221)
            {
                r1_3 = (r1_3 + 1);
                if (r1_3 >= r0_2)
                {
                    break;
                }
            }
            if (*(0x20001cce + (r1_3 << 1)) != 0x221)
            {
                goto label_8a3ce;
            }
        }
        int32_t r2_2 = sub_8fba2(4, "Valid Voltage\n", r2_1);
        uint32_t r0_5;
        if (*0x20000528 != 1)
        {
            r0_5 = *0x20001c84;
            if (r0_5 != 0)
            {
                int32_t r1_7 = 0;
                do
                {
                    r2_2 = (*(0x20001cce + (r1_7 << 1)) & 0xffffff04);
                    if (r2_2 == 0x104)
                    {
                        break;
                    }
                    r1_7 = (r1_7 + 1);
                } while (r1_7 < r0_5);
                char r0_7;
                if (r2_2 == 0x104)
                {
                label_8a2fc:
                    r0_7 = 4;
                label_8a30a:
                    *0x20001c98 = r0_7;
                label_8a316:
                    uint32_t r2_5 = sub_8fba2(4, "Valid Pin Assignment\n", r2_2);
                    uint32_t r0_8 = *0x20000509;
                    char const* const r1_11;
                    if (r0_8 == 3)
                    {
                        int32_t r0_11;
                        r0_11 = sub_8a786();
                        if (r0_11 == 0)
                        {
                            goto label_8a3ce;
                        }
                        r1_11 = "Valid UART Connection possible\n";
                    label_8a36c:
                        sub_8fba2(3, r1_11, r2_5);
                        *0x20001f26 = 3;
                        sub_80746(7, 3, *0x20006064);
                        *0x200004e0 = 3;
                        *0x20001c94 = 1;
                        sub_8964c(*0x20000508, (0x800000 | (*0x20001c98 << 0x10)), sub_8a4f0);
                    }
                    else if (r0_8 == 2)
                    {
                        uint32_t r0_9 = *0x20001c84;
                        int32_t r0_10;
                        if (r0_9 != 0)
                        {
                            int32_t r1_10 = 0;
                            do
                            {
                                r2_5 = *(0x20001cce + (r1_10 << 1));
                                if ((r2_5 & 0xffffff00) == 0x8000)
                                {
                                    r2_5 = r2_5;
                                    if (r2_5 != 0)
                                    {
                                        break;
                                    }
                                }
                                r1_10 = (r1_10 + 1);
                            } while (r1_10 < r0_9);
                            if (((r2_5 & 0xffffff00) == 0x8000 && r2_5 != 0))
                            {
                                r0_10 = 1;
                            }
                        }
                        if ((r0_9 == 0 || (r0_9 != 0 && (!((r2_5 & 0xffffff00) == 0x8000 && r2_5 != 0)))))
                        {
                            r0_10 = 0;
                        }
                        if ((r0_10 | *0x2000053c) == 0)
                        {
                            goto label_8a3ce;
                        }
                        r1_11 = "Valid SWD Connection possible\n";
                        goto label_8a36c;
                    }
                }
                else if ((r0_5 != 0 && *0x200004f8 != 0))
                {
                    int32_t r1_9 = 0;
                    r2_2 = 0x101;
                    while ((*(0x20001cce + (r1_9 << 1)) & 0xffffff01) != 0x101)
                    {
                        r1_9 = (r1_9 + 1);
                        if (r1_9 >= r0_5)
                        {
                            break;
                        }
                    }
                    if ((*(0x20001cce + (r1_9 << 1)) & 0xffffff01) == 0x101)
                    {
                    label_8a300:
                        r0_7 = 1;
                        goto label_8a30a;
                    }
                }
            }
        }
        else
        {
            uint32_t r0_4 = *0x20001c84;
            if ((*0x200004f8 != 0 && r0_4 != 0))
            {
                int32_t r1_5 = 0;
                r2_2 = 0x101;
                while ((*(0x20001cce + (r1_5 << 1)) & 0xffffff01) != 0x101)
                {
                    r1_5 = (r1_5 + 1);
                    if (r1_5 >= r0_4)
                    {
                        break;
                    }
                }
                if ((*(0x20001cce + (r1_5 << 1)) & 0xffffff01) == 0x101)
                {
                    goto label_8a300;
                }
            }
            if (((*0x200004f8 == 0 || (*0x200004f8 != 0 && r0_4 != 0)) && r0_4 != 0))
            {
                int32_t r1_6 = 0;
                do
                {
                    r2_2 = (*(0x20001cce + (r1_6 << 1)) & 0xffffff04);
                    if (r2_2 == 0x104)
                    {
                        break;
                    }
                    r1_6 = (r1_6 + 1);
                } while (r1_6 < r0_4);
                if (r2_2 == 0x104)
                {
                    goto label_8a2fc;
                }
            }
        }
        if ((((*0x20000528 != 1 && r0_5 == 0) || ((*0x20000528 != 1 && r0_5 != 0) && r2_2 != 0x104)) || *0x20000528 == 1))
        {
            if (*0x20001c98 == 0)
            {
                goto label_8a3ce;
            }
            goto label_8a316;
        }
    }
    return 0;
}

void sub_8a3fc(uint32_t arg1, int32_t arg2)
{
    int32_t i_1 = arg2;
    uint32_t r5 = arg1;
    if (i_1 != 0)
    {
        int16_t* r11_1 = 0x20001cce;
        int32_t i;
        do
        {
            uint32_t r10_1 = *r11_1;
            int32_t r2;
            if ((0xffffffff + (r10_1 >> 8)) <= 4)
            {
                char const* const r1;
                uint32_t r2_1;
                switch (*((r10_1 >> 8) + 0x8a439))
                {
                    case 3:
                    {
                        r2_1 = r10_1;
                        r1 = "Found Pairs EDC (0x%02X)\n";
                        break;
                    }
                    case 0xb:
                    {
                        r2 = sub_8fba2(4, "Found Voltage EDC %d (0x%02X)\n", r10_1);
                        break;
                    }
                    case 0x16:
                    {
                        r2_1 = r10_1;
                        r1 = "Found Clock EDC (0x%02X)\n";
                        break;
                    }
                    case 0x1e:
                    {
                        r2_1 = r10_1;
                        r1 = "Found Multiplier EDC (0x%02X)\n";
                        break;
                    }
                    case 0x26:
                    {
                        r2_1 = r10_1;
                        r1 = "Found Orientation EDC (0x%02X)\n";
                        break;
                    }
                }
                if ((((*((r10_1 >> 8) + 0x8a439) == 3 || *((r10_1 >> 8) + 0x8a439) == 0x16) || *((r10_1 >> 8) + 0x8a439) == 0x1e) || *((r10_1 >> 8) + 0x8a439) == 0x26))
                {
                    r2 = sub_8fba2(4, r1, r2_1);
                }
            }
            arg1 = (r10_1 >> 8);
            bool cond:0_1 = r5 != 3;
            if (r5 == 3)
            {
                cond:0_1 = arg1 != 0x80;
            }
            if (cond:0_1)
            {
                bool cond:1_1 = r5 != 2;
                if (r5 == 2)
                {
                    cond:1_1 = arg1 != 0x80;
                }
                if ((!cond:1_1))
                {
                    arg1 = sub_8fba2(4, "Found SWD Dock Channels availabl…", r2);
                }
            }
            else
            {
                uint32_t r3_2 = r10_1;
                int32_t r2_3;
                if (r3_2 > 0x80)
                {
                    r2_3 = (0xff9e5800 + (r3_2 * 0xc350));
                }
                else
                {
                    r2_3 = (r3_2 * &data_2580);
                }
                arg1 = sub_8fba2(4, "Found UART Baud Rate EDC %d (0x%…", r2_3);
            }
            i = i_1;
            i_1 = (i_1 - 1);
            r11_1 = &r11_1[1];
        } while (i != 1);
    }
}

int32_t sub_8a4f0()
{
    uint32_t r2 = *0x20001c84;
    uint32_t r0_1;
    int32_t r4_2;
    if (r2 != 0)
    {
        int32_t r3_1 = 0;
        do
        {
            r0_1 = *(0x20001cce + (r3_1 << 1));
            if ((r0_1 & 0xffffff00) == 0x500)
            {
                break;
            }
            r3_1 = (r3_1 + 1);
        } while (r3_1 < r2);
        if (((r0_1 & 0xffffff00) == 0x500 && (3 & (r0_1 >> 2)) != 0))
        {
            int32_t r1_2 = (*0x20001f24 & 3);
            r4_2 = 1;
            if (r1_2 == 2)
            {
                r4_2 = (1 & (!(r0_1 >> 2)));
            }
            else if (r1_2 == 1)
            {
                r4_2 = (1 & (!(r0_1 >> 3)));
            }
        }
    }
    if (((r2 == 0 || ((r2 != 0 && (r0_1 & 0xffffff00) == 0x500) && (3 & (r0_1 >> 2)) == 0)) || (r2 != 0 && (r0_1 & 0xffffff00) != 0x500)))
    {
        r4_2 = 1;
    }
    uint32_t r0_2 = *0x20000509;
    if (r0_2 == 3)
    {
        int32_t r0_7 = *0x2000050c;
        if (r0_7 == 0xffffffff)
        {
            r0_7 = sub_8a786();
        }
        int32_t r2_2 = sub_81ea6(r0_7);
        uint32_t r0_8 = *0x20001c98;
        int32_t r1_9;
        int32_t r2_3;
        int32_t r3_3;
        if (r0_8 == 4)
        {
            sub_8fba2(3, "Connecting on SBU\n", r2_2);
            uint32_t r0_9 = *0x20001c84;
            int32_t r1_6;
            if (r0_9 != 0)
            {
                r1_6 = 0;
                while (*(0x20001cce + (r1_6 << 1)) != 0x221)
                {
                    r1_6 = (r1_6 + 1);
                    if (r1_6 >= r0_9)
                    {
                        break;
                    }
                }
                if (*(0x20001cce + (r1_6 << 1)) == 0x221)
                {
                    r3_3 = 1;
                }
            }
            if ((r0_9 == 0 || (r0_9 != 0 && *(0x20001cce + (r1_6 << 1)) != 0x221)))
            {
                r3_3 = 0;
            }
            r1_9 = 3;
            r2_3 = r4_2;
        }
        if (r0_8 == 1)
        {
            sub_8fba2(3, "Connecting on Debug USB\n", r2_2);
            uint32_t r0_10 = *0x20001c84;
            r2_3 = (r4_2 ^ 1);
            int32_t r1_7;
            if (r0_10 != 0)
            {
                r1_7 = 0;
                while (*(0x20001cce + (r1_7 << 1)) != 0x221)
                {
                    r1_7 = (r1_7 + 1);
                    if (r1_7 >= r0_10)
                    {
                        break;
                    }
                }
                if (*(0x20001cce + (r1_7 << 1)) == 0x221)
                {
                    r3_3 = 1;
                }
            }
            if ((r0_10 == 0 || (r0_10 != 0 && *(0x20001cce + (r1_7 << 1)) != 0x221)))
            {
                r3_3 = 0;
            }
            r1_9 = 7;
        }
        if ((r0_8 == 1 || r0_8 == 4))
        {
            sub_8b87c(0, r1_9, r2_3, r3_3);
            *0x20001f26 = 6;
            sub_80746(7, 6, *0x20006064);
        }
        int32_t r0_14;
        if (sub_8e756() != 5)
        {
            r0_14 = 4;
        }
        else
        {
            r0_14 = 6;
        }
        sub_8e6ee(r0_14);
    }
    else if (r0_2 == 2)
    {
        if (*0x2000053c == 0)
        {
            sub_81e38();
            int32_t r0_4 = *0x2000050c;
            if (r0_4 == 0xffffffff)
            {
                r0_4 = sub_8a71c();
            }
            int32_t r2_1 = sub_820ce(r0_4);
            uint32_t r0_5 = *0x20001c98;
            int32_t r1_10;
            int32_t r2_4;
            int32_t r3_2;
            if (r0_5 == 4)
            {
                sub_8fba2(3, "Connecting on SBU\n", r2_1);
                uint32_t r0_6 = *0x20001c84;
                int32_t r1_4;
                if (r0_6 != 0)
                {
                    r1_4 = 0;
                    while (*(0x20001cce + (r1_4 << 1)) != 0x221)
                    {
                        r1_4 = (r1_4 + 1);
                        if (r1_4 >= r0_6)
                        {
                            break;
                        }
                    }
                    if (*(0x20001cce + (r1_4 << 1)) == 0x221)
                    {
                        r3_2 = 1;
                    }
                }
                if ((r0_6 == 0 || (r0_6 != 0 && *(0x20001cce + (r1_4 << 1)) != 0x221)))
                {
                    r3_2 = 0;
                }
                r1_10 = 3;
                r2_4 = r4_2;
            }
            if (r0_5 == 1)
            {
                sub_8fba2(3, "Connecting on Debug USB\n", r2_1);
                uint32_t r0_12 = *0x20001c84;
                r2_4 = (r4_2 ^ 1);
                int32_t r1_8;
                if (r0_12 != 0)
                {
                    r1_8 = 0;
                    while (*(0x20001cce + (r1_8 << 1)) != 0x221)
                    {
                        r1_8 = (r1_8 + 1);
                        if (r1_8 >= r0_12)
                        {
                            break;
                        }
                    }
                    if (*(0x20001cce + (r1_8 << 1)) == 0x221)
                    {
                        r3_2 = 1;
                    }
                }
                if ((r0_12 == 0 || (r0_12 != 0 && *(0x20001cce + (r1_8 << 1)) != 0x221)))
                {
                    r3_2 = 0;
                }
                r1_10 = 7;
            }
            if ((r0_5 == 1 || r0_5 == 4))
            {
                sub_8b87c(0, r1_10, r2_4, r3_2);
            }
            sub_8e930(0x64);
            j_sub_94900(1);
            sub_947ba(0xffffffff);
        }
        *0x20001f26 = 5;
        sub_80746(7, 5, *0x20006064);
    }
    return 0;
}

void sub_8a71c()
{
    uint32_t r1 = *0x20001c84;
    if (r1 == 0)
    {
        return;
    }
    int32_t r2 = 0;
    int32_t r0 = 0;
    int32_t r3 = 0xf4240;
    do
    {
        uint32_t r4_3 = *(0x20001cce + (r2 << 1));
        if (4 == (r4_3 >> 8))
        {
            if ((r4_3 << 0x18) == 0)
            {
                r3 = 1;
            }
            else
            {
                r3 = 1;
                do
                {
                    r4_3 = (r4_3 - 1);
                    r3 = (r3 * 0xa);
                } while ((r4_3 & 0xff) != 0);
            }
        }
        else if ((r4_3 >> 8) == 3)
        {
            int32_t r4_2 = (r3 * r4_3);
            if (r4_2 > r0)
            {
                r0 = r4_2;
            }
        }
        r2 = (r2 + 1);
    } while (r2 < r1);
}

int32_t sub_8a786()
{
    uint32_t i = *0x20001c84;
    if (i != 0)
    {
        int32_t r1_1 = 0;
        do
        {
            uint32_t r3_2 = *(0x20001cce + (r1_1 << 1));
            if ((r3_2 & 0xffffff00) == 0x8000)
            {
                uint32_t r0_1 = r3_2;
                if (r0_1 <= 0x80)
                {
                    return (&data_2580 * r0_1);
                }
                return (0xff9e5800 + (r0_1 * 0xc350));
            }
            r1_1 = (r1_1 + 1);
        } while (r1_1 < i);
    }
    /* tailcall */
    return sub_8a71c();
}

int32_t sub_8a7d8()
{
    int32_t r2 = *0x20000508;
    int32_t r0 = *0x20000540;
    if ((r0 & 0xff) != 0)
    {
        r2 = r0;
    }
    uint32_t r0_1 = *0x20001c7c;
    int32_t r1_1;
    uint32_t i;
    if (r0_1 != 0)
    {
        r2 = ((r2 & 0xff) | 0x100);
        r1_1 = 0;
        i = r2;
        while (*(0x20001c9e + (r1_1 << 1)) != i)
        {
            r1_1 = (r1_1 + 1);
            if (r1_1 >= r0_1)
            {
                break;
            }
        }
        if (*(0x20001c9e + (r1_1 << 1)) == i)
        {
            sub_8fba2(4, "Found Force DFU DC (0x%04X)\n", r2);
            *0x20001f28 = 2;
            sub_80746(9, 2, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 3;
            sub_894d6(i, sub_8a89e);
        }
    }
    if ((r0_1 == 0 || (r0_1 != 0 && *(0x20001c9e + (r1_1 << 1)) != i)))
    {
        sub_8fba2(3, "Didn't find Force DFU DC\n", r2);
        *0x20001f28 = 9;
        sub_80746(9, 9, *0x20006064);
    }
    return 0;
}

int32_t sub_8a89e()
{
    uint32_t r0 = *0x20001c84;
    int32_t r1_1;
    if (r0 != 0)
    {
        r1_1 = 0;
        while (*(0x20001cce + (r1_1 << 1)) != &data_8001)
        {
            r1_1 = (r1_1 + 1);
            if (r1_1 >= r0)
            {
                break;
            }
        }
        if (*(0x20001cce + (r1_1 << 1)) == &data_8001)
        {
            char r4_1 = *0x20000508;
            char r5_2 = *0x20000540;
            sub_8fba2(4, "Force DFU action available\n", 0x20001cce);
            *0x20001f28 = 3;
            sub_80746(9, 3, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 3;
            int32_t var_1c = 0x80010000;
            if (r5_2 != 0)
            {
                r4_1 = r5_2;
            }
            sub_8971a((r4_1 | 0x100), 0, &var_1c, 1, sub_8a988);
        }
    }
    if ((r0 == 0 || (r0 != 0 && *(0x20001cce + (r1_1 << 1)) != &data_8001)))
    {
        *0x20001f28 = 9;
        sub_80746(9, 9, *0x20006064);
        sub_8e71e(2);
        sub_8e81c(0x50000001);
    }
    return 0;
}

int32_t sub_8a988()
{
    *0x20001f28 = 8;
    sub_80746(9, 8, *0x20006064);
    return 0;
}

int32_t sub_8a9ae()
{
    uint32_t r0 = *0x20001c7c;
    int32_t r1_1;
    int32_t r2;
    if (r0 != 0)
    {
        r2 = (*0x20000508 | 0x100);
        r1_1 = 0;
        while (*(0x20001c9e + (r1_1 << 1)) != r2)
        {
            r1_1 = (r1_1 + 1);
            if (r1_1 >= r0)
            {
                break;
            }
        }
        if (*(0x20001c9e + (r1_1 << 1)) == r2)
        {
            sub_8fba2(4, "Found Force Diags DC (0x%04X)\n", r2);
            *0x20001f29 = 2;
            sub_80746(0xa, 2, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 4;
            sub_894d6((*0x20000508 | 0x100), sub_8aa7a);
        }
    }
    if ((r0 == 0 || (r0 != 0 && *(0x20001c9e + (r1_1 << 1)) != r2)))
    {
        sub_8fba2(3, "Didn't find Force Diags DC\n", r2);
        *0x20001f29 = 9;
        sub_80746(0xa, 9, *0x20006064);
    }
    return 0;
}

int32_t sub_8aa7a()
{
    uint32_t r0 = *0x20001c84;
    uint32_t r2_1;
    if (r0 != 0)
    {
        int32_t r1_1 = 0;
        do
        {
            r2_1 = *(0x20001cce + (r1_1 << 1));
            if (r2_1 == 0x8002)
            {
                break;
            }
            r1_1 = (r1_1 + 1);
        } while (r1_1 < r0);
        if (r2_1 == 0x8002)
        {
            sub_8fba2(4, "Force Diags action available\n", r2_1);
            *0x20001f29 = 3;
            sub_80746(0xa, 3, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 4;
            int32_t var_14 = 0x80020000;
            sub_8971a((*0x20000508 | 0x100), 0, &var_14, 1, sub_8ab4c);
        }
    }
    if ((r0 == 0 || (r0 != 0 && r2_1 != 0x8002)))
    {
        *0x20001f29 = 9;
        sub_80746(0xa, 9, *0x20006064);
        sub_8e71e(2);
        sub_8e81c(0x50000001);
    }
    return 0;
}

int32_t sub_8ab4c()
{
    *0x20001f29 = 0xa;
    sub_80746(0xa, 0xa, *0x20006064);
    return 0;
}

int32_t sub_8ab72()
{
    int32_t r2 = *0x20000508;
    int32_t r0 = *0x20000540;
    if ((r0 & 0xff) != 0)
    {
        r2 = r0;
    }
    uint32_t r0_1 = *0x20001c7c;
    int32_t r1_1;
    uint32_t i;
    if (r0_1 != 0)
    {
        r2 = ((r2 & 0xff) | 0x600);
        r1_1 = 0;
        i = r2;
        while (*(0x20001c9e + (r1_1 << 1)) != i)
        {
            r1_1 = (r1_1 + 1);
            if (r1_1 >= r0_1)
            {
                break;
            }
        }
        if (*(0x20001c9e + (r1_1 << 1)) == i)
        {
            sub_8fba2(4, "Found target USB DC (0x%04X)\n", r2);
            *0x20001f27 = 2;
            sub_80746(8, 2, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 2;
            sub_894d6(i, sub_8ac38);
        }
    }
    if ((r0_1 == 0 || (r0_1 != 0 && *(0x20001c9e + (r1_1 << 1)) != i)))
    {
        sub_8fba2(3, "Didn't find USB DC\n", r2);
        *0x20001f27 = 9;
        sub_80746(8, 9, *0x20006064);
    }
    return 0;
}

int32_t sub_8ac38()
{
    if (sub_8fb96() >= 4)
    {
        sub_8a3fc(6, *0x20001c84);
    }
    uint32_t r0_1 = *0x20001c84;
    int32_t r1_2;
    if (r0_1 != 0)
    {
        r1_2 = 0;
        while ((*(0x20001cce + (r1_2 << 1)) & 0xffffff02) != 0x102)
        {
            r1_2 = (r1_2 + 1);
            if (r1_2 >= r0_1)
            {
                break;
            }
        }
        if ((*(0x20001cce + (r1_2 << 1)) & 0xffffff02) == 0x102)
        {
            char r4_1 = *0x20000508;
            char r5_1 = *0x20000540;
            sub_8fba2(4, "USB on Mission Pair available\n", 0x20001cce);
            *0x20001f27 = 3;
            sub_80746(8, 3, *0x20006064);
            *0x200004e0 = 3;
            *0x20001c94 = 2;
            if (r5_1 != 0)
            {
                r4_1 = r5_1;
            }
            sub_8964c((r4_1 | 0x600), 0x820000, sub_8ad28);
        }
    }
    if ((r0_1 == 0 || (r0_1 != 0 && (*(0x20001cce + (r1_2 << 1)) & 0xffffff02) != 0x102)))
    {
        *0x20001f27 = 9;
        sub_80746(8, 9, *0x20006064);
        sub_8e71e(2);
        sub_8e81c(0x50000001);
    }
    return 0;
}

int32_t sub_8ad28()
{
    int32_t r0_1;
    if (sub_8e756() != 4)
    {
        r0_1 = 5;
    }
    else
    {
        r0_1 = 6;
    }
    sub_8e6ee(r0_1);
    *0x20001f27 = 7;
    sub_80746(8, 7, *0x20006064);
    return 0;
}

int32_t sub_8ad5e()
{
    uint32_t r0 = *0x20001c7c;
    int32_t r1_2;
    int32_t r2_1;
    if (r0 != 0)
    {
        r2_1 = (*0x20001c9b | 0x100);
        r1_2 = 0;
        while (*(0x20001c9e + (r1_2 << 1)) != r2_1)
        {
            r1_2 = (r1_2 + 1);
            if (r1_2 >= r0)
            {
                break;
            }
        }
        if (*(0x20001c9e + (r1_2 << 1)) == r2_1)
        {
            sub_8fba2(4, "Found target Action DC (0x%04X)\n", r2_1);
            sub_894d6((*0x20001c9b | 0x100), sub_8add0);
        }
    }
    if ((r0 == 0 || (r0 != 0 && *(0x20001c9e + (r1_2 << 1)) != r2_1)))
    {
        *0x20001c9c = 0xff;
    }
    return 0;
}

int32_t sub_8add0()
{
    uint32_t r0 = *0x20001c84;
    uint32_t r4_1;
    if (r0 != 0)
    {
        int32_t r2_1 = 0;
        do
        {
            r4_1 = *(0x20001cce + (r2_1 << 1));
            if (((r4_1 & 0xffffff00) == 0x8000 && *0x20001c9a == r4_1))
            {
                break;
            }
            r2_1 = (r2_1 + 1);
        } while (r2_1 < r0);
        if (((r4_1 & 0xffffff00) == 0x8000 && *0x20001c9a == r4_1))
        {
            sub_8fba2(4, "Requested action available\n", r2_1);
            int32_t var_1c = (0x80000000 | (*0x20001c9a << 0x10));
            sub_8971a((*0x20001c9b | 0x100), 0, &var_1c, 1, sub_89c0e);
        }
    }
    if ((r0 == 0 || (r0 != 0 && (!((r4_1 & 0xffffff00) == 0x8000 && *0x20001c9a == r4_1)))))
    {
        *0x20001c9c = 0xff;
    }
    return 0;
}

uint32_t sub_8ae68()
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0_1 = (*0x20001c94 - 1);
    if (r0_1 <= 3)
    {
        void* const r0_2;
        uint32_t r0_5;
        uint32_t r0_6;
        uint32_t r1;
        int32_t r1_2;
        void* const r1_3;
        uint32_t r2;
        void* const r2_2;
        if (jump_table_8ae84[r0_1] == 2)
        {
            r0_1 = *0x20001f26;
            if (r0_1 == 3)
            {
                r2_2 = sub_8a4f0;
                r1_2 = (0x800000 | (*0x20001c98 << 0x10));
                r0_5 = *0x20000508;
            }
            if (r0_1 == 2)
            {
                r1_3 = sub_8a1f6;
                r0_6 = *0x20000508;
            }
            if (((r0_1 != 3 && r0_1 != 2) && r0_1 == 1))
            {
                r0_2 = sub_8a122;
            label_8af38:
                /* tailcall */
                return sub_89384(r0_2, r1, r2);
            }
        }
        if (jump_table_8ae84[r0_1] == 0x13)
        {
            r1 = *0x20001f27;
            r0_1 = *0x20000508;
            r2 = *0x20000540;
            if ((r2 & 0xff) != 0)
            {
                r0_1 = r2;
            }
            if (r1 == 3)
            {
                r0_5 = ((r0_1 & 0xff) | 0x600);
                r2_2 = sub_8ad28;
                r1_2 = 0x820000;
            }
        }
        if (((jump_table_8ae84[r0_1] == 2 && r0_1 == 3) || (jump_table_8ae84[r0_1] == 0x13 && r1 == 3)))
        {
            /* tailcall */
            return sub_8964c(r0_5, r1_2, r2_2);
        }
        if (jump_table_8ae84[r0_1] == 0x13)
        {
            if (r1 == 2)
            {
                r0_6 = ((r0_1 & 0xff) | 0x600);
                r1_3 = sub_8ac38;
            }
            if (((r1 != 3 && r1 != 2) && r1 == 1))
            {
                r0_2 = sub_8ab72;
                goto label_8af38;
            }
        }
        void* const r1_5;
        int32_t* r2_4;
        if (jump_table_8ae84[r0_1] == 0x2e)
        {
            r1 = *0x20001f28;
            r0_1 = *0x20000508;
            r2 = *0x20000540;
            if ((r2 & 0xff) != 0)
            {
                r0_1 = r2;
            }
            if (r1 == 3)
            {
                int32_t var_c;
                r2_4 = &var_c;
                var_c = 0x80010000;
                r1_5 = sub_8a988;
            }
            if (r1 == 2)
            {
                r0_6 = ((r0_1 & 0xff) | 0x100);
                r1_3 = sub_8a89e;
            }
            if (((r1 != 3 && r1 != 2) && r1 == 1))
            {
                r0_2 = sub_8a7d8;
                goto label_8af38;
            }
        }
        if (jump_table_8ae84[r0_1] == 0x48)
        {
            r0_1 = *0x20001f29;
            if (r0_1 == 3)
            {
                int32_t var_10;
                r2_4 = &var_10;
                r1_5 = sub_8ab4c;
                var_10 = 0x80020000;
                r0_1 = *0x20000508;
            }
        }
        if (((jump_table_8ae84[r0_1] == 0x48 && r0_1 == 3) || (jump_table_8ae84[r0_1] == 0x2e && r1 == 3)))
        {
            r0_1 = sub_8971a(((r0_1 & 0xff) | 0x100), 0, r2_4, 1, r1_5);
        }
        if ((jump_table_8ae84[r0_1] == 0x48 && r0_1 == 2))
        {
            r0_6 = (*0x20000508 | 0x100);
            r1_3 = sub_8aa7a;
        }
        if (((((jump_table_8ae84[r0_1] == 2 && r0_1 == 2) || (jump_table_8ae84[r0_1] == 0x48 && r0_1 == 2)) || (jump_table_8ae84[r0_1] == 0x13 && r1 == 2)) || (jump_table_8ae84[r0_1] == 0x2e && r1 == 2)))
        {
            /* tailcall */
            return sub_894d6(r0_6, r1_3, r2);
        }
        if ((((jump_table_8ae84[r0_1] == 0x48 && r0_1 != 3) && r0_1 != 2) && r0_1 == 1))
        {
            r0_2 = sub_8a9ae;
            goto label_8af38;
        }
    }
    return r0_1;
}

int32_t sub_8b01c()
{
    void* const var_10 = sub_8b060;
    int32_t var_c = 0;
    void* const var_18 = sub_8b0a6;
    int32_t var_14 = 0;
    void* const var_20 = sub_8b0f8;
    int32_t var_1c = 0;
    return sub_8903a(&var_10, &var_18, &var_20);
}

int32_t sub_8b060(int32_t arg1, int32_t arg2)
{
    int32_t i = 1;
    *0x20001d11 = 1;
    do
    {
        if (*(arg2 + (i << 2)) == 4)
        {
            int32_t r2 = sub_8fba2(4, "IECS Protocol available over UVD…", r2);
            *0x20001d10 = i;
        }
        i = (i + 1);
    } while (i != 8);
    return 0;
}

int32_t sub_8b0a6(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t* arg5, char* arg6)
{
    int32_t r0_1;
    void* const r1_1;
    char r1_3;
    uint32_t r3;
    if (arg2 == 1)
    {
        if (arg4 == 0)
        {
        label_8b0d2:
            r0_1 = 0xffffffff;
            r1_3 = 0;
        }
        else
        {
            r3 = *arg6;
            if ((r3 + arg3) > 8)
            {
                goto label_8b0d2;
            }
            r1_1 = &data_99d30;
        }
    }
    else
    {
        if (arg2 != 0)
        {
            goto label_8b0d2;
        }
        if (arg4 == 0)
        {
            goto label_8b0d2;
        }
        r3 = *arg6;
        if ((r3 + arg3) > 8)
        {
            goto label_8b0d2;
        }
        r1_1 = &data_99d28;
    }
    if (((arg2 == 1 && arg4 != 0) || arg2 != 1))
    {
        sub_97f48(arg5, (r1_1 + arg3), r3);
        r1_3 = ((*arg6 + 3) & 0xfc);
        r0_1 = 0;
    }
    *arg6 = r1_3;
    return r0_1;
}

int32_t sub_8b0f8(int32_t arg1, char* arg2, int32_t arg3, int32_t* arg4, uint8_t* arg5)
{
    int32_t* r1_3;
    uint32_t r5_1;
    uint32_t r6_2;
    if ((sub_95b5c(arg1) == 1 && *arg2 == 1))
    {
        if ((arg3 - 1) > 3)
        {
            goto label_8b28a;
        }
        uint32_t r0_7;
        int32_t r0_30;
        switch (arg3)
        {
            case 1:
            {
                uint32_t r0_3 = *arg5;
                uint32_t r2 = *(arg2 + 0xa);
                uint32_t r6_1 = *0x20001d54;
                if ((r0_3 + r6_1) >= r2)
                {
                    r0_3 = (r2 - r6_1);
                }
                uint32_t r4_1 = r0_3;
                sub_97f48((0x20001d14 + r6_1), arg4, r4_1);
                int16_t r0_5 = (r4_1 + r6_1);
                *0x20001d54 = r0_5;
                r0_7 = (*(arg2 + 0xa) - r0_5);
                if (r0_7 >= 0x18)
                {
                    r0_7 = 0x18;
                }
                break;
            }
            case 2:
            {
                uint32_t r0_13 = *(arg2 + 0xa);
                uint32_t r1_4 = *0x20001d58;
                if (r1_4 > r0_13)
                {
                    r1_4 = r0_13;
                }
                r6_2 = *0x20001d54;
                uint32_t r0_14 = r1_4;
                if (r0_14 <= r6_2)
                {
                    goto label_8b28a;
                }
                r5_1 = (r0_14 - r6_2);
                r1_3 = (0x20001d14 + r6_2);
                if (r5_1 >= 0x18)
                {
                    r5_1 = 0x18;
                }
                goto label_8b1ee;
            }
            case 3:
            {
                *0x20001d54 = 0;
                if (*(arg2 + 4) != 0)
                {
                    *0x20001d58 = 0x40;
                    sub_90b7a(*(arg2 + 0xc), 0x20001d14, 0x20001d58);
                    uint32_t r0_19 = *(arg2 + 0xa);
                    uint32_t r2_3 = *0x20001d58;
                    uint32_t r6_3 = *0x20001d54;
                    if (r2_3 > r0_19)
                    {
                        r2_3 = r0_19;
                    }
                    uint32_t r4_3 = r2_3;
                    if (r4_3 >= 0x18)
                    {
                        r4_3 = 0x18;
                    }
                    sub_97f48(arg4, (0x20001d14 + r6_3), r4_3);
                    *0x20001d54 = (r4_3 + r6_3);
                    *arg5 = r4_3;
                    goto label_8b300;
                }
                r0_7 = *(arg2 + 0xa);
                if (r0_7 >= 0x18)
                {
                    r0_7 = 0x18;
                }
                break;
            }
            case 4:
            {
                if (*(arg2 + 4) != 0)
                {
                    goto label_8b28a;
                }
            label_8b282:
                *0x20001d58 = *0x20001d54;
                sub_90bc6(*(arg2 + 0xc), 0x20001d14, 0x20001d58);
            label_8b28a:
                r0_30 = 0;
                break;
            }
        }
        if (((arg3 == 1 || arg3 == 3) || arg3 == 4))
        {
            return r0_30;
        }
        if ((arg3 == 1 || arg3 == 3))
        {
            *arg5 = r0_7;
        label_8b300:
        }
    }
    if (sub_95b5c(arg1) != 0)
    {
        goto label_8b28a;
    }
    if (arg2[1] != 1)
    {
        goto label_8b28a;
    }
    if ((arg3 - 1) > 3)
    {
        goto label_8b28a;
    }
    switch (*(arg3 + 0x8b18d))
    {
        case 2:
        {
            r5_1 = *arg5;
            r6_2 = *0x20001d54;
            r1_3 = (0x20001d14 + r6_2);
            if ((r5_1 + r6_2) >= 0x40)
            {
                r5_1 = (0x40 - r6_2);
            }
        label_8b1ee:
            uint32_t r4_2 = r5_1;
            sub_97f48(arg4, r1_3, r4_2);
            *0x20001d54 = (r4_2 + r6_2);
            *arg5 = r5_1;
            goto label_8b300;
        }
        case 0x80:
        {
            uint32_t r1_6 = *arg5;
            uint32_t r6_4 = *0x20001d54;
            if ((r1_6 + r6_4) >= 0x40)
            {
                r1_6 = (0x40 - r6_4);
            }
            uint32_t r4_4 = r1_6;
            sub_97f48((0x20001d14 + r6_4), arg4, r4_4);
            *0x20001d54 = (r4_4 + r6_4);
            goto label_8b300;
        }
        case 0x99:
        {
            *0x20001d54 = 0;
            if (*(arg2 + 4) == 0)
            {
                *0x20001d58 = 0x40;
                sub_90b7a(*(arg2 + 0xc), 0x20001d14, 0x20001d58);
            }
            goto label_8b300;
        }
        case 0xaf:
        {
            if (*(arg2 + 4) != 1)
            {
                goto label_8b28a;
            }
            goto label_8b282;
        }
    }
}

void sub_8b30a()
{
    *0x20001d10 = 0;
}

int32_t sub_8b318()
{
    sub_84c40(0, 1, 0x5ac, 0, 3, nullptr, 0, 0x83085);  {  // {"@FIF"}}
    int32_t r5 = (0xfffff830 - *0x20006064);
    uint32_t r0_3;
    if ((*0x20006064 + r5) <= 0xffffffff)
    {
        do
        {
            r0_3 = sub_83922();
            if (r0_3 != 0)
            {
                break;
            }
            sub_8e930(1);
        } while ((*0x20006064 + r5) < 0);
    }
    int32_t r0_6;
    if (((*0x20006064 + r5) > 0xffffffff || ((*0x20006064 + r5) <= 0xffffffff && r0_3 == 0)))
    {
        r0_6 = 0xffffffff;
    }
    if (((*0x20006064 + r5) <= 0xffffffff && r0_3 != 0))
    {
        r0_6 = 0;
    }
    return r0_6;
}

int32_t sub_8b37e()
{
    sub_89154(0);
    *0x20001d11 = 0;
    int32_t r6 = (0xfffff830 - *0x20006064);
    if ((*0x20006064 + r6) <= 0xffffffff)
    {
        while (*0x20001d11 == 0)
        {
            sub_8e930(1);
            if ((*0x20006064 + r6) >= 0)
            {
                break;
            }
        }
    }
    int32_t r0_6;
    if (((*0x20006064 + r6) > 0xffffffff || ((*0x20006064 + r6) <= 0xffffffff && *0x20001d11 == 0)))
    {
        r0_6 = 0xffffffff;
    }
    if (((*0x20006064 + r6) <= 0xffffffff && *0x20001d11 != 0))
    {
        r0_6 = 0;
    }
    return r0_6;
}

int32_t sub_8b3d6(int32_t arg1, int32_t* arg2, uint8_t* arg3)
{
    int32_t r0_3;
    if (*0x20001d10 == 0)
    {
        r0_3 = 0xffffffff;
    }
    else
    {
        char var_48;
        if (sub_95b5c(0) != 1)
        {
            *0x20001d12 = 0;
            char var_47_2 = 1;
            int32_t var_44_2 = 1;
            char var_40_2 = 0;
            int16_t var_3e_2 = 0x40;
            int32_t var_2c_2 = 0;
            int32_t var_34_2 = 0;
            int32_t var_30_2 = 0;
            int32_t var_3c_2 = arg1;
            int32_t var_38_2 = 0;
            char var_28_2 = 1;
            int16_t var_26_2 = 0;
            void* const var_24_2 = sub_8b4f0;
            var_48 = *0x20001d10;
        }
        else
        {
            *0x20001d12 = 0;
            var_48 = 1;
            int32_t var_44_1 = 0;
            char var_40_1 = 0;
            int16_t var_3e_1 = 0x40;
            int32_t var_3c_1 = arg1;
            int32_t var_38_1 = 0;
            int32_t var_2c_1 = 0;
            int32_t var_34_1 = 0;
            int32_t var_30_1 = 0;
            char var_28_1 = 1;
            int16_t var_26_1 = 0;
            void* const var_24_1 = sub_8b4f0;
            char var_47_1 = *0x20001d10;
        }
        sub_891bc(0, &var_48);
        int32_t r5_1 = (0xfffff830 - *0x20006064);
        if ((*0x20006064 + r5_1) <= 0xffffffff)
        {
            while (*0x20001d12 == 0)
            {
                sub_8e930(1);
                if ((*0x20006064 + r5_1) >= 0)
                {
                    break;
                }
            }
        }
        if (((*0x20006064 + r5_1) > 0xffffffff || ((*0x20006064 + r5_1) <= 0xffffffff && *0x20001d12 == 0)))
        {
            r0_3 = 0xfffffffe;
        }
        if (((*0x20006064 + r5_1) <= 0xffffffff && *0x20001d12 != 0))
        {
            uint32_t r2 = *0x20001d13;
            *arg3 = r2;
            sub_97f48(arg2, 0x20001d14, r2);
            r0_3 = 0;
        }
    }
    return r0_3;
}

int32_t sub_8b4f0(int32_t arg1, char* arg2, int32_t arg3, int32_t* arg4, uint8_t* arg5)
{
    uint32_t r0 = sub_95b5c(arg1);
    int32_t r0_2;
    int32_t* r0_3;
    uint32_t r1;
    uint32_t r2;
    uint32_t r4_1;
    uint32_t r6_1;
    if ((r0 != 1 || (r0 == 1 && *arg2 != 1)))
    {
        if (sub_95b5c(arg1) != 0)
        {
            goto label_8b690;
        }
        if (arg2[1] != 1)
        {
            goto label_8b690;
        }
        if ((arg3 - 1) > 3)
        {
            goto label_8b690;
        }
        switch (*(arg3 + 0x8b55d))
        {
            case 2:
            {
                r4_1 = *arg5;
                uint32_t r1_1 = *(arg2 + 0xa);
                uint32_t r6_2 = *0x20001d5c;
                if ((r4_1 + r6_2) >= r1_1)
                {
                    r4_1 = (r1_1 - r6_2);
                }
                uint32_t r5_1 = r4_1;
                sub_97f48(arg4, (0x20001d14 + r6_2), r5_1);
                *0x20001d5c = (r5_1 + r6_2);
            label_8b5fa:
                *arg5 = r4_1;
                goto label_8b69a;
            }
            case 0x62:
            {
                r1 = *arg5;
                if (r1 == 0)
                {
                    goto label_8b690;
                }
                r6_1 = *0x20001d5c;
                r0_3 = (0x20001d14 + r6_1);
                r2 = (r6_1 + r1);
                break;
            }
            case 0x82:
            {
                *0x20001d5c = 0;
            label_8b69a:
                r0_2 = 1;
                goto label_8b6a0;
            }
            case 0x89:
            {
                *0x20001d12 = 1;
                *0x20001d13 = *0x20001d5c;
            label_8b690:
                r0_2 = 0;
                goto label_8b6a0;
            }
        }
    }
    int32_t r0_18;
    if ((r0 == 1 && *arg2 == 1))
    {
        r0_2 = (arg3 - 1);
        if (r0_2 > 3)
        {
            goto label_8b690;
        }
        switch (jump_table_8b51e[r0_2])
        {
            case 2:
            {
                r1 = *arg5;
                r6_1 = *0x20001d5c;
                r0_3 = (0x20001d14 + r6_1);
                r2 = (r1 + r6_1);
                break;
            }
            case 0x3d:
            {
                uint32_t r6_3 = *0x20001d5c;
                uint32_t r5_2 = (*(arg2 + 0xa) - r6_3);
                if (r5_2 >= 0x18)
                {
                    r5_2 = 0x18;
                }
                uint32_t r4_2 = r5_2;
                sub_97f48(arg4, (0x20001d14 + r6_3), r4_2);
                *0x20001d5c = (r4_2 + r6_3);
                *arg5 = r5_2;
                goto label_8b69a;
            }
            case 0x58:
            {
                *0x20001d5c = 0;
                if (*(arg2 + 4) == 0)
                {
                    r0_18 = 0x18;
                label_8b696:
                    *arg5 = r0_18;
                    goto label_8b69a;
                }
                r4_1 = *(arg2 + 0xa);
                if (r4_1 >= 0x18)
                {
                    r4_1 = 0x18;
                }
                sub_97f48(arg4, 0x20001d14, r4_1);
                *0x20001d5c = r4_1;
                goto label_8b5fa;
            }
            case 0x71:
            {
                *0x20001d12 = 1;
                *0x20001d13 = *0x20001d5c;
            label_8b6a0:
                return r0_2;
                break;
            }
        }
    }
    if (r2 < 0x40)
    {
        goto label_8b646;
    }
    r1 = (0x40 - r6_1);
label_8b646:
    uint32_t r4_3 = r1;
    sub_97f48(r0_3, arg4, r4_3);
    int16_t r0_16 = (r4_3 + r6_1);
    *0x20001d5c = r0_16;
    r0_18 = (0x40 - r0_16);
    if (r0_18 >= 0x18)
    {
        r0_18 = 0x18;
    }
    goto label_8b696;
}

int32_t sub_8b6a2(int32_t arg1, int32_t* arg2, int32_t arg3)
{
    int32_t r4 = arg3;
    int32_t r0_3;
    if (*0x20001d10 == 0)
    {
        r0_3 = 0xffffffff;
    }
    else
    {
        if (r4 >= 0x40)
        {
            r4 = 0x40;
        }
        char var_48;
        if (sub_95b5c(0) != 1)
        {
            *0x20001d12 = 0;
            *0x20001d13 = r4;
            char var_47_2 = 1;
            int32_t var_44_2 = 0;
            char var_40_2 = 0;
            int16_t var_3e_2 = r4;
            int32_t var_2c_2 = 0;
            int32_t var_34_2 = 0;
            int32_t var_30_2 = 0;
            int32_t var_3c_2 = arg1;
            int32_t var_38_2 = 0;
            char var_28_2 = 1;
            int16_t var_26_2 = 0;
            void* const var_24_2 = sub_8b4f0;
            var_48 = *0x20001d10;
        }
        else
        {
            char var_47_1 = *0x20001d10;
            *0x20001d12 = 0;
            *0x20001d13 = r4;
            var_48 = 1;
            int32_t var_44_1 = 1;
            char var_40_1 = 0;
            int16_t var_3e_1 = r4;
            int32_t var_3c_1 = arg1;
            int32_t var_38_1 = 0;
            int32_t var_2c_1 = 0;
            int32_t var_34_1 = 0;
            int32_t var_30_1 = 0;
            char var_28_1 = 1;
            int16_t var_26_1 = 0;
            void* const var_24_1 = sub_8b4f0;
        }
        sub_97f48(0x20001d14, arg2, r4);
        sub_891bc(0, &var_48);
        int32_t r5_1 = (0xfffff830 - *0x20006064);
        if ((*0x20006064 + r5_1) <= 0xffffffff)
        {
            while (*0x20001d12 == 0)
            {
                sub_8e930(1);
                if ((*0x20006064 + r5_1) >= 0)
                {
                    break;
                }
            }
        }
        if (((*0x20006064 + r5_1) > 0xffffffff || ((*0x20006064 + r5_1) <= 0xffffffff && *0x20001d12 == 0)))
        {
            r0_3 = 0xfffffffe;
        }
        if (((*0x20006064 + r5_1) <= 0xffffffff && *0x20001d12 != 0))
        {
            r0_3 = 0;
        }
    }
    return r0_3;
}

int32_t sub_8b7d0(int32_t arg1)
{
    int32_t r2;
    if (arg1 == 2)
    {
        sub_9018c(0x40020c00, 0x1000);
        sub_90190(0x40020c00, 0x800);
        sub_8fba2(4, "Switching to Chargethru path\n", r2);
    }
    else
    {
        int16_t r1_1;
        if (arg1 != 1)
        {
            sub_90190(0x40020c00, 0x1000);
            r1_1 = 0x800;
        }
        else
        {
            sub_9018c(0x40020c00, 0x800);
            sub_8fba2(4, "Switching to 5V path\n", r2);
            r1_1 = 0x1000;
        }
        sub_90190(0x40020c00, r1_1);
    }
    *0x20001d9a = ((sub_90194(0x40020c00, 0x800) & 3) | (*0x20001d9a & 0xfc));
    int32_t r0_3 = sub_90194(0x40020c00, 0x1000);
    char r1_4 = *0x20001d9a;
    *0x20001d9a = (((r1_4 | (r0_3 << 1)) & 3) | (r1_4 & 0xfc));
    return 0;
}

int32_t sub_8b87c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r5 = arg1;
    int32_t r4_4;
    if (*0x20001ee8 > 4)
    {
        sub_9018c(0x40021000, 0x800);
        sub_9018c(0x40021000, 0x2000);
        sub_9018c(0x40021000, 0x8000);
        if (r5 != 0)
        {
            if (r5 != 1)
            {
                r5 = 0;
            }
            sub_90182(0x40021000, 0x1000, r5);
        }
        if (arg4 != 2)
        {
            sub_90182(0x40020800, 2, arg4);
            sub_916cc(0xa);
        }
        if (arg3 != 2)
        {
            int32_t r2_8 = 0;
            if (arg3 != 1)
            {
                r2_8 = 1;
            }
            sub_90182(0x40020c00, 0x8000, r2_8);
            sub_90190(0x40021000, 0x8000);
        }
        if (arg2 != 0)
        {
            sub_90182(0x40021000, sub_4000, (arg2 & 4));
            sub_90182(0x40021000, 0x2000, (1 & (!(arg2 >> 1))));
            sub_90182(0x40021000, 0x800, (1 & (!arg2)));
        }
        int32_t r1_7 = 0;
        if (sub_90194(0x40021000, 0x1000) == 0)
        {
            r1_7 = 1;
        }
        *0x20001d9a = ((*0x20001d9a & 0xfb) | (r1_7 << 2));
        *0x20001d9a = ((8 & (sub_90194(0x40020800, 2) << 3)) | (*0x20001d9a & 0xf7));
        int32_t r0_21 = sub_90194(0x40021000, 0x8000);
        int32_t r5_1 = (r0_21 << 1);
        if (sub_90194(0x40020c00, 0x8000) == 0)
        {
            r5_1 = (1 | (r0_21 << 1));
        }
        *0x20001d9a = (((*0x20001d9a & 0xcf) & 0xcf) | ((r5_1 & 3) << 4));
        int32_t r0_26 = sub_90194(0x40021000, sub_4000);
        r4_4 = ((sub_90194(0x40021000, 0x2000) << 1) | (r0_26 << 2));
        if (sub_90194(0x40021000, 0x800) == 0)
        {
            r4_4 = (r4_4 | 1);
        }
    }
    else
    {
        sub_90190(0x40021000, 0x800);
        sub_9018c(0x40021000, 0x2000);
        sub_9018c(0x40021000, 0x8000);
        if (r5 != 0)
        {
            int32_t r2 = 0;
            if (r5 != 1)
            {
                r2 = 1;
            }
            sub_90182(0x40021000, 0x1000, r2);
        }
        if (arg4 != 2)
        {
            sub_90182(0x40020800, 2, arg4);
            sub_916cc(0xa);
        }
        if (arg3 != 2)
        {
            sub_90182(0x40020c00, 0x8000, arg3);
            sub_90190(0x40021000, 0x8000);
        }
        if (arg2 != 0)
        {
            sub_90182(0x40021000, sub_4000, (arg2 & 4));
            sub_90182(0x40021000, 0x2000, (1 & (!(arg2 >> 1))));
            sub_90182(0x40021000, 0x800, (arg2 & 1));
        }
        *0x20001d9a = ((4 & (sub_90194(0x40021000, 0x1000) << 2)) | (*0x20001d9a & 0xfb));
        *0x20001d9a = ((8 & (sub_90194(0x40020800, 2) << 3)) | (*0x20001d9a & 0xf7));
        int32_t r0_7 = sub_90194(0x40021000, 0x8000);
        int32_t r0_8 = sub_90194(0x40020c00, 0x8000);
        *0x20001d9a = (((*0x20001d9a & 0xcf) & 0xcf) | (((r0_8 | (r0_7 << 1)) & 3) << 4));
        int32_t r0_10 = sub_90194(0x40021000, sub_4000);
        r4_4 = (((sub_90194(0x40021000, 0x2000) << 1) | (r0_10 << 2)) | sub_90194(0x40021000, 0x800));
    }
    *0x20001d9b = ((r4_4 & 7) | (*0x20001d9b & 0xf8));
    return 0;
}

int32_t sub_8bb32(int32_t arg1)
{
    if (arg1 != 1)
    {
        sub_9018c(0x40021000, 8);
    }
    else
    {
        sub_90190(0x40021000, 8);
    }
    int32_t r0 = sub_90194(0x40021000, 8);
    int32_t r0_2 = (sub_90194(0x40021000, 0x10) | (r0 << 1));
    *0x20001d9b = (((*0x20001d9b & 0xe7) & 0xe7) | ((r0_2 & 3) << 3));
    return 0;
}

int32_t sub_8bb82(int32_t arg1)
{
    if (arg1 != 1)
    {
        sub_9018c(0x40020c00, 8);
    }
    else
    {
        sub_90190(0x40020c00, 8);
    }
    int32_t r0 = sub_90194(0x40020c00, 8);
    int32_t r0_2 = (sub_90194(0x40020c00, 0x10) | (r0 << 1));
    *0x20001d9b = (((*0x20001d9b & 0x9f) & 0x9f) | ((r0_2 & 3) << 5));
    return 0;
}

int32_t sub_8bbd2(int32_t arg1)
{
    if (arg1 == 0)
    {
        sub_90190(0x40021000, 0x10);
    }
    else
    {
        sub_9018c(0x40021000, 0x10);
    }
    int32_t r0 = sub_90194(0x40021000, 8);
    int32_t r0_2 = (sub_90194(0x40021000, 0x10) | (r0 << 1));
    *0x20001d9b = (((*0x20001d9b & 0xe7) & 0xe7) | ((r0_2 & 3) << 3));
    return 0;
}

int32_t sub_8bc22(int32_t arg1)
{
    if (arg1 == 0)
    {
        sub_90190(0x40020c00, 0x10);
    }
    else
    {
        sub_9018c(0x40020c00, 0x10);
    }
    int32_t r0 = sub_90194(0x40020c00, 8);
    int32_t r0_2 = (sub_90194(0x40020c00, 0x10) | (r0 << 1));
    *0x20001d9b = (((*0x20001d9b & 0x9f) & 0x9f) | ((r0_2 & 3) << 5));
    return 0;
}

int32_t sub_8bc74()
{
    sub_90b3c(0x20000544, 0x79);
    sub_90c56(0x2000090c, 0x39);
    int32_t r4 = *0x20004fd8;
    int32_t r5 = *0x20004fdc;
    int32_t r6 = *0x20004fe0;
    *0x20001da0 = *0x20004fd4;
    *0x20001da4 = r4;
    *0x20001da8 = r5;
    *0x20001dac = r6;
    int32_t r1 = *0x20004fe8;
    int32_t r3_1 = *0x20004fec;
    int32_t r4_1 = *0x20004ff0;
    int32_t r5_1 = *0x20004ff4;
    int32_t r6_1 = *0x20004ff8;
    *0x20001eb0 = *0x20004fe4;
    *0x20001eb4 = r1;
    *0x20001eb8 = r3_1;
    *0x20001ebc = r4_1;
    *0x20001ec0 = r5_1;
    *0x20001ec4 = r6_1;
    sub_97f48(0x20001ec8, 0x20004ffc, 6);
    int32_t r6_2 = 0;
    sub_8fd58(0, 0x20001d70, 4);
    sub_8fd58(4, 0x20001ece, 1);
    sub_8fd58(8, 0x20001ecf, 4);
    while (*(0x20001ece + r6_2) == 0xff)
    {
        r6_2 = (r6_2 + 1);
        if (r6_2 > 4)
        {
            sub_97886(0x20001ece, 0, 5);
            sub_8fe1c(4, 0x20001ece, 1);
            sub_8fe1c(8, 0x20001ecf, 4);
            break;
        }
    }
    int32_t i = 0;
    sub_97886(0x20001ed3, 0, 6);
    *0x20001edc = 0;
    *0x20001ee0 = 0;
    *0x20001ee4 = 0;
    *0x20001ee8 = sub_804c4();
    int32_t r2 = *0x20001eb4;
    int32_t r3_2 = *0x20001eb8;
    int32_t r4_2 = *0x20001ebc;
    int32_t r5_2 = *0x20001ec0;
    int32_t r6_3 = *0x20001ec4;
    *0x20001eec = *0x20001eb0;
    *0x20001ef0 = r2;
    *0x20001ef4 = r3_2;
    *0x20001ef8 = r4_2;
    *0x20001efc = r5_2;
    *0x20001f00 = r6_3;
    sub_8082e();
    sub_807c0(0x20001f04, 0x20001f3d);
    void var_74;
    int32_t r0_5 = sub_8085c(&var_74);
    do
    {
        int32_t r1_2 = *(&var_74 + (i << 2));
        if (r1_2 != 0xffffffff)
        {
            *(0x200004f0 + (i << 2)) = r1_2;
        }
        i = (i + 1);
    } while (i != 0x15);
    *0x20001d7c = 2;
    return r0_5;
}

int32_t sub_8bdf0()
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0_1 = sub_90c2e(*0x20001d60);
    if (r0_1 == 0)
    {
        return r0_1;
    }
    *0x20001d64 = 0;
    *0x20001d60;
    uint32_t var_14 = (*0x20001d60 >> 0x18);
    int32_t var_18 = ((*0x20001d60 >> 0x10) & 0xff);
    sub_8fba2(1, "Execute Command: %c%c%c%c\n", *0x20001d60);
    int32_t r0_4;
    int32_t r2_3;
    r0_4 = sub_90c6c(*0x20001d60, *0x20001d68, 0x20001db0);
    *0x20001d60 = r0_4;
    char const* const r1_3;
    if (*0x20001d60 == 0)
    {
        r1_3 = "Command Successful\n";
    }
    else
    {
        if (*0x20001d60 == 0x52524521)
        {
            /* tailcall */
            return sub_8fba2(1, "Command Failed: 0x%08X\n", *0x20001d78);
        }
        r1_3 = "Unknown Command\n";
    }
    /* tailcall */
    return sub_8fba2(1, r1_3, r2_3);
}

int32_t sub_8bea4() __noreturn
{
    *0x40023840 = (*0x40023840 | 0x10000000);
    *0x40007000 = (*0x40007000 | 0x100);
    *0x40023840 = (*0x40023840 & 0xefffffff);
    *0x40002854 = 0;
    sub_8e3e0(*0x20000500, 0);
    sub_916cc(0x64);
    __dsb_SY();
    *0xe000ed0c = ((*0xe000ed0c & 0x700) | 0x5fa0004);
    __dsb_SY();
    while (true)
    {
        /* nop */
    }
}

int32_t sub_8bf12(int32_t arg1) __noreturn
{
    sub_8e3e0(*0x20000500);
    sub_916cc(0x64);
    if (arg1 == 1)
    {
        sub_8f8a0();
        /* no return */
    }
    *0x40023840 = (*0x40023840 | 0x10000000);
    *0x40007000 = (*0x40007000 | 0x100);
    *0x40023840 = (*0x40023840 & 0xefffffff);
    *0x40002850 = 1;
    __dsb_SY();
    *0xe000ed0c = ((*0xe000ed0c & 0x700) | 0x5fa0004);
    __dsb_SY();
    while (true)
    {
        /* nop */
    }
}

int32_t sub_8bf8e()
{
    if (*0x20001d6c != *0x20001da8)
    {
        return 0;
    }
    /* no return */
}

int32_t sub_8bfaa() __noreturn
{
    char var_9 = 0x5a;
    sub_916cc(0x64);
    sub_8fe1c(7, &var_9, 1);
    __dsb_SY();
    *0xe000ed0c = ((*0xe000ed0c & 0x700) | 0x5fa0004);
    __dsb_SY();
    while (true)
    {
        /* nop */
    }
}

int32_t sub_8bfee()
{
    int32_t var_28 = 0;
    int32_t r2;
    sub_8fba2(2, "Checking I2C comms to USB Hub...…", sub_8fba2(2, "Starting Self Test\n", r2));
    int32_t r0;
    int32_t r2_3;
    r0 = sub_902b6(0x40005400, 0x2c, &var_28, 1, nullptr, 0);
    int32_t r2_4;
    int32_t r9;
    if (r0 == 0)
    {
        r2_4 = sub_8fc48(2, "Passed\n", r2_3);
        r9 = 0;
    }
    else
    {
        r2_4 = sub_8fc48(2, "Failed\n", r2_3);
        r9 = 1;
    }
    sub_8fba2(2, "Checking I2C comms to EEPROM... ", r2_4);
    int32_t r0_1;
    int32_t r2_5;
    r0_1 = sub_902b6(0x40005400, 0x50, nullptr, 0, nullptr, 0);
    int32_t r2_6;
    if (r0_1 == 0)
    {
        r2_6 = sub_8fc48(2, "Passed\n", r2_5);
    }
    else
    {
        r2_6 = sub_8fc48(2, "Failed\n", r2_5);
        r9 = (r9 | 2);
    }
    sub_8fba2(2, "Checking SPI connections to PD P…", r2_6);
    sub_87ba2(0);
    sub_87b0e();
    *0x20001f3f = 1;
    int32_t r5 = *0x20006064;
    int32_t r2_7 = sub_8e930(1);
    int32_t r0_4;
    if ((*0x20006064 + (0xfffff63c - r5)) <= 0xffffffff)
    {
        do
        {
            r0_4 = sub_838e4();
            if (r0_4 != 0)
            {
                break;
            }
            r2_7 = sub_8e930(1);
        } while ((*0x20006064 + (0xfffff63c - r5)) < 0);
    }
    if (((*0x20006064 + (0xfffff63c - r5)) > 0xffffffff || ((*0x20006064 + (0xfffff63c - r5)) <= 0xffffffff && r0_4 == 0)))
    {
        sub_8fc48(2, "Failed\n", r2_7);
        r9 = (r9 | 4);
    }
    if (((*0x20006064 + (0xfffff63c - r5)) <= 0xffffffff && r0_4 != 0))
    {
        sub_8fc48(2, "Passed\n", 0x5ac);  {  // {"@FIF"}}
    }
    *0x20001f3f = 0;
    int32_t r0_7;
    int32_t r2_8;
    r0_7 = sub_838e4();
    if (r0_7 != 0)
    {
        sub_8fba2(2, "Checking VBus Power Output and M…", 0x5ac);  {  // {"@FIF"}}
        int32_t r0_8 = sub_8f798(0x40012000, 0xe, 0xa);
        int32_t r0_9;
        int32_t r2_9;
        r0_9 = sub_8f798(0x40012000, 0xf, 0xa);
        char const* const r1_5;
        uint32_t r2_11;
        int32_t r2_12;
        if ((r0_9 | r0_8) <= 0xffffffff)
        {
            sub_8fc48(2, "Failed\n", r2_9);
            r2_11 = r0_8;
            r1_5 = "Target Result: %08X, Charge Resu…";
        }
        else
        {
            int32_t r0_13;
            int32_t r1_1;
            r0_13 = sub_9741c(sub_97518(r0_8));
            int32_t r0_14;
            int32_t r1_2;
            r0_14 = sub_975e0(r0_13, r1_1, 0xa3d70a3d, 0x40183d70);
            uint32_t r0_15 = sub_97490(r0_14, r1_2);
            int32_t r0_18;
            int32_t r1_3;
            r0_18 = sub_9741c(sub_97518(r0_9));
            int32_t r0_19;
            int32_t r1_4;
            r0_19 = sub_975e0(r0_18, r1_3, 0xa3d70a3d, 0x40183d70);
            uint32_t r0_20;
            int32_t r2_10;
            r0_20 = sub_97490(r0_19, r1_4);
            if ((r0_15 < 0xfa0 || (r0_15 >= 0xfa0 && (r0_20 >> 5) <= 0x7c)))
            {
                sub_8fc48(2, "Failed\n", r2_10);
                r2_12 = sub_8fba2(2, "Target Voltage: %d, Charge Volta…", r0_15);
                goto label_8c21a;
            }
            if ((r0_15 >= 0xfa0 && (r0_20 >> 5) > 0x7c))
            {
                int32_t r0_22;
                if (r0_15 > r0_20)
                {
                    r0_22 = (r0_15 - r0_20);
                }
                else
                {
                    r0_22 = (r0_20 - r0_15);
                }
                if (r0_22 <= 0x1f4)
                {
                    r2_12 = sub_8fc48(2, "Passed\n", r2_10);
                    goto label_8c228;
                }
                sub_8fc48(2, "Failed\n", r2_10);
                r2_11 = r0_15;
                r1_5 = "Target Voltage: %d, Charge Volta…";
            }
        }
        r2_12 = sub_8fba2(2, r1_5, r2_11);
    label_8c21a:
        r9 = (r9 | 8);
    label_8c228:
        sub_8fba2(2, "Checking SWD Digital levels... ", r2_12);
        sub_81e38();
        int32_t r5_3 = 0;
        sub_8b87c(0, 3, 1, 1);
        sub_9010a(0x40020000, 4);
        sub_90190(0x40020000, 0x40);
        int32_t r0_25;
        while (true)
        {
            int32_t r4_2 = (r5_3 & 1);
            sub_90182(0x40020000, 2, r4_2);
            sub_8e930(1);
            int32_t r0_23;
            int32_t r2_15;
            r0_23 = sub_9019e(0x40020000, 4);
            bool cond:2_1 = r0_23 != 1;
            if (r0_23 != 1)
            {
                cond:2_1 = r4_2 != 0;
            }
            int32_t r2_16;
            if (cond:2_1)
            {
                sub_8fc48(2, "Failed\n", r2_15);
                r2_16 = r0_23;
            }
            else
            {
                if ((r4_2 != 0 || (r4_2 == 0 && r0_23 == 0)))
                {
                    r5_3 = (r5_3 + 1);
                    if (r5_3 > 9)
                    {
                        r0_25 = 0;
                        break;
                    }
                    continue;
                }
                if ((r4_2 == 0 && r0_23 != 0))
                {
                    sub_8fc48(2, "Failed\n", r2_15);
                    r2_16 = r0_23;
                }
            }
            sub_8fba2(2, "Read %d, expected %d\n", r2_16);
            r9 = (r9 | 0x10);
            r0_25 = 1;
            break;
        }
        sub_9010a(0x40020000, 2);
        sub_90190(0x40020000, 0x10);
        sub_9018c(0x40020000, 0x40);
        sub_9012e(0x40020000, 4);
        int32_t r5_4 = 0;
        int32_t r4_4;
        while (true)
        {
            int32_t r4_3 = (r5_4 & 1);
            sub_90182(0x40020000, 4, r4_3);
            sub_8e930(1);
            int32_t r0_26;
            int32_t r2_18;
            r0_26 = sub_9019e(0x40020000, 2);
            bool cond:3_1 = r0_26 != 1;
            if (r0_26 != 1)
            {
                cond:3_1 = r4_3 != 0;
            }
            int32_t r2_19;
            if (cond:3_1)
            {
                sub_8fc48(2, "Failed\n", r2_18);
                r2_19 = r0_26;
            }
            else
            {
                if ((r4_3 != 0 || (r4_3 == 0 && r0_26 == 0)))
                {
                    r5_4 = (r5_4 + 1);
                    if (r5_4 > 9)
                    {
                        r4_4 = r0_25;
                        break;
                    }
                    continue;
                }
                if ((r4_3 == 0 && r0_26 != 0))
                {
                    sub_8fc48(2, "Failed\n", r2_18);
                    r2_19 = r0_26;
                }
            }
            sub_8fba2(2, "Read %d, expected %d\n", r2_19);
            r9 = (r9 | 0x10);
            r4_4 = 1;
            break;
        }
        uint32_t r9_1 = 0;
        sub_8b87c(0, 0, 2, 2);
        int32_t r2_20 = sub_82040();
        if (r4_4 == 0)
        {
            r2_20 = sub_8fc48(2, "Passed\n", r2_20);
        }
        sub_8fba2(2, "Checking SWD toggle... ", r2_20);
        void var_50;
        sub_97886(&var_50, 0, 0x28);
        sub_8b87c(0, 3, 1, 1);
        sub_90190(0x40021000, 0x8000);
        sub_9007c(&data_99d58, 2);
        sub_90190(0x40020000, 0x40);
        sub_9018c(0x40020000, 0x10);
        sub_92000(8, 1);
        int32_t var_5c;
        sub_920f4(&var_5c);
        int32_t var_58_1 = 0xffffffff;
        int16_t var_54_1 = 0;
        var_5c = 3;
        sub_92060(0x40000c00, &var_5c);
        *0x40000c20 = (*0x40000c20 & 0xfeff);
        int16_t r1_7 = *0x40000c20;
        *0x40000c1c = ((*0x40000c1c & 0xff0c) | 1);
        *0x40000c20 = ((r1_7 & 0xf4ff) | 0x100);
        sub_92128(0x40000c00, 1);
        sub_92000(1, 1);
        sub_920f4(&var_5c);
        int32_t var_58_2 = 9;
        int16_t var_54_2 = 0;
        var_5c = 3;
        sub_92060(0x40000000, &var_5c);
        int32_t var_70;
        sub_921b2(&var_70);
        int32_t var_68_1 = 5;
        var_70 = 0x10030;
        int16_t var_64_1 = 0;
        sub_9213a(0x40000000, &var_70);
        int32_t r2_21 = sub_92128(0x40000000, 1);
        int32_t r4_5 = *0x20006064;
        sub_921d0(0x40000c00, 0x800);
        sub_921d0(0x40000c00, 8);
        int32_t r5_5 = 0;
        while ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff)
        {
            int32_t r0_41;
            do
            {
                r0_41 = sub_921c6(0x40000c00, 8);
                if (r0_41 != 0)
                {
                    break;
                }
                r9_1 = r5_5;
            } while ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff);
            if (r0_41 == 0)
            {
                break;
            }
            *(&var_50 + (r9_1 << 2)) = sub_921c2(0x40000c00);
            sub_921d0(0x40000c00, 0x800);
            sub_921d0(0x40000c00, 8);
            r5_5 = (r5_5 + 1);
            r9_1 = r5_5;
            if (r9_1 >= 0xa)
            {
                break;
            }
        }
        int32_t r4_7;
        if ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff)
        {
            int32_t r1_10 = 2;
            void var_4c;
            void* r0_47 = &var_4c;
            uint32_t i;
            do
            {
                r4_7 = (*(r0_47 + 4) - *r0_47);
                if ((r4_7 - 0x13) >= 3)
                {
                    break;
                }
                r1_10 = (r1_10 + 1);
                r0_47 = (r0_47 + 4);
                i = r1_10;
            } while (i <= 9);
            if ((r4_7 - 0x13) >= 3)
            {
                sub_8fc48(2, "Failed\n", (r4_7 - 0x13));
                sub_8fba2(2, "Diff %d\n", r4_7);
            }
            else
            {
                sub_8fc48(2, "Passed\n", i);
            }
        }
        else
        {
            sub_8fba2(2, "Timout occurred\n", sub_8fc48(2, "Failed\n", r2_21));
        }
        if (((*0x20006064 - (r4_5 + 5)) > 0xffffffff || ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff && (r4_7 - 0x13) >= 3)))
        {
            r9 = (r9 | 0x20);
        }
        if ((((*0x20006064 - (r4_5 + 5)) > 0xffffffff || ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff && (r4_7 - 0x13) >= 3)) || ((*0x20006064 - (r4_5 + 5)) <= 0xffffffff && (r4_7 - 0x13) < 3)))
        {
            sub_92128(0x40000000, 0);
            sub_92128(0x40000c00, 0);
            sub_92000(8, 0);
            sub_92000(1, 0);
            sub_8b87c(0, 0, 2, 2);
            r2_8 = sub_82040();
        }
    }
    *0x20001d78 = (r9 | 0x53000000);
    if (r9 == 0)
    {
        sub_8fba2(2, "Self Test: Passed\n", r2_8);
    }
    else
    {
        sub_8fba2(2, "Self Test: Failed\n", r2_8);
        *0x20006064;
        *0x20001d70;
        sub_8fe42(*0x20001d78);
    }
    *0x20001d64 = 0;
    return 0;
}

int32_t sub_8c61c(int32_t arg1, char* arg2)
{
    sub_97886(arg2, 0, 5);
    sub_8f8d0(0x10400, arg2, 0);
    sub_8fba2(2, "STM: 0x%08X\n", *arg2);
    uint32_t r2_1 = *0x20001ee8;
    arg2[4] = r2_1;
    sub_8fba2(2, "HW: 0x%02X\n", r2_1);
    *0x20001d64 = 5;
    return 0;
}

int32_t sub_8c678(char arg1)
{
    uint32_t r0 = arg1;
    int32_t r0_1;
    if (r0 == 2)
    {
        sub_9018c(0x40020c00, sub_4000);
        sub_8e930(5);
        sub_90190(0x40020c00, sub_4000);
        sub_8e930(0x32);
        sub_80422();
        r0_1 = sub_9308a(0x20005620, 0, 0x9a4b4, 0x20000b5c);
    }
    else
    {
        if (r0 != 1)
        {
            sub_8e81c(0x43000001);
            return 0x52524521;
        }
        sub_80334(0x64);
        sub_92db0(0x40005400, 0x2c, 0x20005074);
        r0_1 = sub_92e14(0x40005400, 0x2c);
    }
    *0x20001d64 = 0;
    return r0_1;
}

int32_t sub_8c726(int32_t arg1, uint8_t* arg2)
{
    sub_8fba2(2, "Attempt I2C transaction to devic…", ((arg1 >> 0x10) & 0xff));
    uint8_t r1 = (arg1 >> 0x10);
    uint8_t* var_20_1;
    uint32_t var_1c_1;
    int16_t* r0_1;
    int32_t r0_4;
    uint32_t r1_1;
    uint32_t r3_1;
    uint32_t r6_1;
    if (2 == (arg1 >> 0x1c))
    {
        r6_1 = arg1;
        r1_1 = r1;
        var_20_1 = arg2;
        var_1c_1 = r6_1;
        r3_1 = ((arg1 >> 8) & 0xff);
        r0_1 = 0x40005c00;
    }
    else if ((arg1 >> 0x1c) != 1)
    {
        r0_4 = 0x43000008;
    }
    else
    {
        r6_1 = arg1;
        r1_1 = r1;
        var_20_1 = arg2;
        var_1c_1 = r6_1;
        r3_1 = ((arg1 >> 8) & 0xff);
        r0_1 = 0x40005400;
    }
    int32_t r0_2;
    int32_t r0_5;
    if ((2 == (arg1 >> 0x1c) || (2 != (arg1 >> 0x1c) && (arg1 >> 0x1c) == 1)))
    {
        r0_2 = sub_902b6(r0_1, r1_1, arg2, r3_1, var_20_1, var_1c_1);
        if (r0_2 == 0)
        {
            *0x20001d64 = r6_1;
            r0_5 = 0;
        }
        else
        {
            if (r0_2 >= 1)
            {
                *0x20001d64 = (r6_1 - r0_2);
            }
            r0_4 = 0x43000002;
        }
    }
    if (((2 != (arg1 >> 0x1c) && (arg1 >> 0x1c) != 1) || ((2 == (arg1 >> 0x1c) || (2 != (arg1 >> 0x1c) && (arg1 >> 0x1c) == 1)) && r0_2 != 0)))
    {
        sub_8e81c(r0_4);
        r0_5 = 0x52524521;
    }
    return r0_5;
}

int32_t sub_8c7ce() __pure
{
    return 0x444d4321;
}

int32_t sub_8c7d8() __pure
{
    return 0x444d4321;
}

int32_t sub_8c7e2() __pure
{
    return 0x444d4321;
}

int32_t sub_8c7ec() __pure
{
    return 0x444d4321;
}

int32_t sub_8c7f6(int32_t arg1, int32_t* arg2, int32_t arg3)
{
    if (*0x20001d6c != 0x12345678)
    {
        sub_8e81c(0x43000007);
        return 0x52524521;
    }
    sub_8fba2(2, "Preparing UUID for write\n", arg3);
    int32_t r0_1 = sub_97f48(0x20004fd4, arg2, 0x10);
    *0x20001d6c = 0;
    return r0_1;
}

int32_t sub_8c84a(int32_t arg1, char* arg2)
{
    int32_t r0_3;
    int32_t r0_5;
    if (*0x20001d6c != 0x12345678)
    {
        r0_5 = 0x43000007;
    }
    else
    {
        int32_t r2;
        sub_8fba2(2, "Preparing Serial Number for writ…", r2);
        void var_21;
        void* r0_1 = &var_21;
        int32_t i = 0x17;
        do
        {
            char r2_1 = arg2[i];
            i = (i - 1);
            *r0_1 = r2_1;
            r0_1 = (r0_1 + 1);
        } while (i != 6);
        r0_3 = sub_8f854(&var_21);
        if (r0_3 == 0)
        {
            r0_5 = 0x4300001a;
        }
    }
    int32_t r0_4;
    if ((*0x20001d6c != 0x12345678 || (*0x20001d6c == 0x12345678 && r0_3 == 0)))
    {
        sub_8e81c(r0_5);
        r0_4 = 0x52524521;
    }
    if ((*0x20001d6c == 0x12345678 && r0_3 != 0))
    {
        r0_4 = sub_97f48(0x20004fe4, arg2, 0x18);
        *0x20001d6c = 0;
    }
    return r0_4;
}

int32_t sub_8c8ca(int32_t arg1, int32_t* arg2, int32_t arg3)
{
    if (*0x20001d6c != 0x12345678)
    {
        sub_8e81c(0x43000007);
        return 0x52524521;
    }
    sub_8fba2(2, "Preparing Build Date for write\n", arg3);
    int32_t r0_1 = sub_97f48(0x20004ffc, arg2, 6);
    *0x20001d6c = 0;
    return r0_1;
}

int32_t sub_8c920()
{
    int32_t r0_2;
    if (*0x20001d6c != 0x12345678)
    {
        sub_8e81c(0x43000007);
        r0_2 = 0x52524521;
    }
    else
    {
        int32_t r2;
        sub_8fba2(2, "Writing to ID page\n", r2);
        *0x20005012 = sub_8fd7e(0x20004fd4);
        sub_8fdc0(0x20004fd4);
        int32_t r3_1 = *0x20004fd8;
        int32_t r5_1 = *0x20004fdc;
        int32_t r6_1 = *0x20004fe0;
        *0x20001da0 = *0x20004fd4;
        *0x20001da4 = r3_1;
        *0x20001da8 = r5_1;
        *0x20001dac = r6_1;
        sub_97f48(0x20001eb0, 0x20004fe4, 0x18);
        r0_2 = sub_97f48(0x20001ec8, 0x20004ffc, 6);
        *0x20001d6c = 0;
    }
    return r0_2;
}

int32_t sub_8c9b8()
{
    int32_t r2;
    sub_8fba2(2, "Setting ICT Pass Bit\n", r2);
    *0x20001ece = (*0x20001ece | 0x80);
    sub_8fe1c(4, 0x20001ece, 1);
    return 0;
}

int32_t sub_8c9e6(int32_t arg1, char* arg2)
{
    sub_8fba2(2, "Incrementing FCT Pass Count to %…", ((*0x20001ece + 1) & 0x7f));
    uint32_t r0_2 = *0x20001ece;
    if ((r0_2 & 0x7f) != 0x7f)
    {
        *0x20001ece = (r0_2 + 1);
    }
    char r0_4 = *arg2;
    char r2_1 = arg2[2];
    char r3 = arg2[3];
    *0x20001ed0 = arg2[1];
    *0x20001ecf = r0_4;
    *0x20001ed2 = r3;
    *0x20001ed1 = r2_1;
    sub_8fe1c(4, 0x20001ece, 1);
    sub_8fe1c(8, 0x20001ecf, 4);
    return 0;
}

int32_t sub_8ca44() __pure
{
    return 0x444d4321;
}

int32_t sub_8ca4e() __pure
{
    return 0x444d4321;
}

int32_t sub_8ca58() __pure
{
    return 0x444d4321;
}

int32_t sub_8ca62(char arg1, int32_t arg2)
{
    uint32_t r5 = arg1;
    sub_8fba2(2, "Read Status Log Entry %d\n", r5);
    sub_8fd58(0x100, arg2, 1);
    sub_8fd58((0x101 + (r5 * 0xc)), (arg2 + 1), 0xc);
    *0x20001d64 = 0xd;
    return 0;
}

int32_t sub_8caaa(int32_t arg1, int32_t arg2)
{
    int32_t r5 = (arg1 & 3);
    if (r5 != 3)
    {
        sub_8fba2(2, "Dump Status Log Page %d\n", r5);
        sub_8fd58((0x101 + (r5 << 8)), arg2, 0x100);
        *0x20001d64 = 0x100;
    }
    return 0;
}

int32_t sub_8caee(int32_t arg1, int32_t arg2)
{
    sub_8fba2(2, "Write %d bytes to User Page at 0…", (arg1 + 1));
    sub_8fefe((arg1 >> 0x10), arg2, (arg1 + 1));
    return 0;
}

int32_t sub_8cb22(int32_t arg1, int32_t arg2)
{
    uint32_t r4 = arg1;
    sub_8fba2(2, "Read %d bytes from User Page at …", (r4 + 1));
    sub_8ff24((arg1 >> 0x10), arg2, (r4 + 1));
    *0x20001d64 = r4;
    return 0;
}

int32_t sub_8cb60(int32_t arg1, char* arg2)
{
    uint32_t r0 = *arg2;
    if (r0 >= 8)
    {
        r0 = 7;
        *arg2 = 7;
    }
    sub_8fb8a(r0);
    int32_t r1;
    if (*arg2 == 0)
    {
        r1 = 0;
    }
    else
    {
        r1 = 1;
    }
    sub_80bd4(0xa, r1);
    if ((arg1 << 0x1f) != 0)
    {
        sub_8feb2(0, arg2, 1);
    }
    return 0;
}

int32_t sub_8cb9a(int32_t arg1, char* arg2)
{
    int32_t r0_1;
    int32_t r0_2;
    int32_t r0_3;
    if (*0x20001f3e == 0)
    {
        int32_t r8_1 = (arg1 & 0xf);
        if ((arg1 & 0x80) != 0)
        {
            int32_t r2;
            sub_8fba2(2, "Turn off all LEDs\n", r2);
            sub_90e5a(0x20004f44);
            sub_90e5a(0x20004f74);
            sub_90e5a(0x20004fa4);
        }
        r0_3 = ((arg1 >> 8) & 0xf);
        if (((r0_3 != 2 && r0_3 != 1) && r0_3 != 0))
        {
            r0_1 = 0x43000004;
        }
        if (r0_3 == 0)
        {
            sub_8fba2(2, "Turn off LEDs: %d\n", r8_1);
            if ((arg1 << 0x1f) != 0)
            {
                sub_90e5a(0x20004f44);
            }
            if ((arg1 << 0x1e) < 0)
            {
                sub_90e5a(0x20004f74);
            }
            if ((arg1 << 0x1d) < 0)
            {
                sub_90e5a(0x20004fa4);
            }
        }
        if (r0_3 == 1)
        {
            sub_8fba2(2, "Turn on LEDs: %d\n", r8_1);
            if ((arg1 << 0x1f) != 0)
            {
                sub_90e6a(0x20004f44);
            }
            if ((arg1 << 0x1e) < 0)
            {
                sub_90e6a(0x20004f74);
            }
            if ((arg1 << 0x1d) < 0)
            {
                sub_90e6a(0x20004fa4);
            }
        }
        if (r0_3 == 2)
        {
            int32_t var_1c;
            sub_8f8f6(arg2, &var_1c, 0);
            sub_8fba2(2, "Turn blink LEDs: %d (period: %d)…", r8_1);
            if ((arg1 << 0x1f) != 0)
            {
                sub_90e8c(0x20004f44, var_1c);
            }
            if ((arg1 << 0x1e) < 0)
            {
                sub_90e8c(0x20004f74, var_1c);
            }
            if ((arg1 << 0x1d) < 0)
            {
                sub_90e8c(0x20004fa4, var_1c);
            }
        }
        if (((r0_3 == 2 || r0_3 == 1) || r0_3 == 0))
        {
            r0_2 = 0;
        }
    }
    else
    {
        r0_1 = 0x4300000a;
    }
    if ((*0x20001f3e != 0 || (((*0x20001f3e == 0 && r0_3 != 2) && r0_3 != 1) && r0_3 != 0)))
    {
        sub_8e81c(r0_1);
        r0_2 = 0x52524521;
    }
    return r0_2;
}

int32_t sub_8cd00(int16_t arg1, char* arg2)
{
    uint32_t r4 = arg1;
    int32_t r0 = sub_8f798(0x40012000, 0xe, r4);
    int32_t r0_1 = sub_8f798(0x40012000, 0xf, r4);
    int32_t r0_16;
    if (r0 <= 0xffffffff)
    {
        r0_16 = 0x43000005;
    }
    if ((r0 > 0xffffffff && r0_1 <= 0xffffffff))
    {
        r0_16 = 0x43000006;
    }
    int32_t r4_1;
    if ((r0 <= 0xffffffff || (r0 > 0xffffffff && r0_1 <= 0xffffffff)))
    {
        sub_8e81c(r0_16);
        r4_1 = 0x52524521;
    }
    if ((r0 > 0xffffffff && r0_1 > 0xffffffff))
    {
        int32_t r0_4;
        int32_t r1;
        r0_4 = sub_9741c(sub_97518(r0));
        int32_t r0_5;
        int32_t r1_1;
        r0_5 = sub_975e0(r0_4, r1, 0xa3d70a3d, 0x40183d70);
        uint32_t r0_6 = sub_97490(r0_5, r1_1);
        int32_t r0_9;
        int32_t r1_2;
        r0_9 = sub_9741c(sub_97518(r0_1));
        int32_t r0_10;
        int32_t r1_3;
        r0_10 = sub_975e0(r0_9, r1_2, 0xa3d70a3d, 0x40183d70);
        uint32_t r0_11 = sub_97490(r0_10, r1_3);
        sub_8fba2(2, "Target VBus: %dmV, Charge VBus: …", r0_6);
        r4_1 = 0;
        sub_8f8d0(r0_6, arg2, 0);
        sub_8f8d0(r0_11, &arg2[4], 0);
        sub_8f8d0(r0, &arg2[8], 0);
        sub_8f8d0(r0_1, &arg2[0xc], 0);
        *0x20001d64 = 0x10;
    }
    return r4_1;
}

int32_t sub_8cdf0(char arg1, int32_t arg2)
{
    uint32_t r2 = arg1;
    char var_9 = arg1;
    if (r2 <= 0x20)
    {
        sub_8feb2(2, arg2, r2);
    }
    sub_8feb2(1, &var_9, 1);
    return 0;
}

int32_t sub_8ce16()
{
    int32_t r2;
    sub_8fba2(2, "Save current environment\n", r2);
    sub_80868(0x200004f0);
    return 0;
}

int32_t sub_8ce38(char arg1)
{
    int32_t r11;
    int32_t var_18 = r11;
    int32_t r4 = 0x52524521;
    if (sub_8e3e0(*0x20000500) >= 0)
    {
        uint32_t r5_1 = arg1;
        int32_t r9;
        int32_t pc;
        if (sub_8e3a4(r5_1, 0x52524521, 0x200004f0, r9, r11, pc) >= 0)
        {
            r4 = 0;
            *0x20000500 = r5_1;
        }
    }
    return r4;
}

int32_t sub_8ce74(int32_t arg1, int32_t arg2)
{
    int32_t r4 = 0x52524521;
    int32_t r0 = *0x20000500;
    if (r0 == 0)
    {
        sub_8e81c(0x43000009);
    }
    else
    {
        r4 = (0x52524521 & (sub_8e41e(r0, arg1, arg2) >> 0x1f));
    }
    return r4;
}

int32_t sub_8cea8()
{
    int32_t r2;
    sub_8fba2(2, "Start AVDM process\n", r2);
    sub_8978a();
    int32_t r5 = (0xfffff830 - *0x20006064);
    int32_t r0_3;
    if ((*0x20006064 + r5) <= 0xffffffff)
    {
        do
        {
            r0_3 = sub_89c82();
            if (r0_3 != 0)
            {
                break;
            }
            sub_8e930(1);
        } while ((*0x20006064 + r5) < 0);
    }
    int32_t r0_10;
    if (((*0x20006064 + r5) > 0xffffffff || ((*0x20006064 + r5) <= 0xffffffff && r0_3 == 0)))
    {
        r0_10 = 0x4300001f;
    }
    if (((*0x20006064 + r5) <= 0xffffffff && r0_3 != 0))
    {
        int32_t r0_7 = sub_89c1e();
        int32_t r0_8;
        if (r0_7 == 0)
        {
            r0_8 = sub_89c32();
            if (r0_8 == 0)
            {
                r0_10 = 0x43000020;
            }
        }
        if ((r0_7 != 0 || (r0_7 == 0 && r0_8 != 0)))
        {
            return 0;
        }
    }
    sub_8e81c(r0_10);
    return 0x52524521;
}

int32_t sub_8cf1e()
{
    int32_t r2;
    sub_8fba2(2, "Start AVDM USB process\n", r2);
    sub_89890();
    int32_t r5 = (0xfffff830 - *0x20006064);
    int32_t r0_3;
    if ((*0x20006064 + r5) <= 0xffffffff)
    {
        do
        {
            r0_3 = sub_89c82();
            if (r0_3 != 0)
            {
                break;
            }
            sub_8e930(1);
        } while ((*0x20006064 + r5) < 0);
    }
    int32_t r0_9;
    if (((*0x20006064 + r5) > 0xffffffff || ((*0x20006064 + r5) <= 0xffffffff && r0_3 == 0)))
    {
        r0_9 = 0x43000021;
    }
    if (((*0x20006064 + r5) <= 0xffffffff && r0_3 != 0))
    {
        if (sub_89c46() != 0)
        {
            return 0;
        }
        r0_9 = 0x43000022;
    }
    sub_8e81c(r0_9);
    return 0x52524521;
}

int32_t sub_8cf8e()
{
    int32_t r2;
    sub_8fba2(2, "Stop AVDM USB\n", r2);
    if (sub_898d8() > 0xffffffff)
    {
        return 0;
    }
    sub_8e81c(0x43000024);
    return 0x52524521;
}

int32_t sub_8cfc2()
{
    int32_t r2;
    sub_8fba2(2, "Send force DFU\n", r2);
    int32_t r0 = sub_897dc();
    int32_t r0_4;
    int32_t r0_7;
    int32_t r5_1;
    if (r0 > 0xffffffff)
    {
        r5_1 = (0xfffff830 - *0x20006064);
        if ((*0x20006064 + r5_1) <= 0xffffffff)
        {
            do
            {
                r0_4 = sub_89c82();
                if (r0_4 != 0)
                {
                    break;
                }
                sub_8e930(1);
            } while ((*0x20006064 + r5_1) < 0);
        }
        if (((*0x20006064 + r5_1) > 0xffffffff || ((*0x20006064 + r5_1) <= 0xffffffff && r0_4 == 0)))
        {
            r0_7 = 0x43000023;
        }
        if ((((*0x20006064 + r5_1) <= 0xffffffff && r0_4 != 0) && sub_89c5a() != 0))
        {
            return 0;
        }
    }
    if ((r0 <= 0xffffffff || ((r0 > 0xffffffff && (*0x20006064 + r5_1) <= 0xffffffff) && r0_4 != 0)))
    {
        r0_7 = 0x43000012;
    }
    sub_8e81c(r0_7);
    return 0x52524521;
}

int32_t sub_8d038(int32_t arg1)
{
    if (*0x20001f3e != 0)
    {
        *0x20001f3e = 0;
    }
    int32_t r0 = *0x20000ad4;
    int32_t r2;
    if (r0 >= 0)
    {
        r2 = sub_9161e(r0);
        *0x20000ad4 = 0xffffffff;
    }
    int32_t r4_1;
    if ((arg1 << 0x1f) != 0)
    {
        r4_1 = 0;
    }
    else
    {
        sub_8fba2(2, "Heartbeat Tick\n", r2);
        r4_1 = 0;
        int32_t r0_3 = j_sub_915ba(sub_8e7a4, 0, *0x20000514);
        *0x20000ad4 = r0_3;
        if (r0_3 <= 0xffffffff)
        {
            sub_8e81c(0x4300000b);
            r4_1 = 0x52524521;
        }
    }
    return r4_1;
}

int32_t sub_8d0b6(int32_t arg1, int32_t* arg2)
{
    *arg2 = sub_94a3c(*arg2);
    *0x20001d64 = 4;
    return 0;
}

int32_t sub_8d0d4(int32_t arg1)
{
    uint32_t r4 = (arg1 >> 0x1c);
    if (0 != (arg1 >> 0x1c))
    {
        r4 = 1;
    }
    sub_8fba2(2, "USB-C disconnect port %d for %dm…", r4);
    if (((*(0x20001f24 + r4) & 0x70) != 0 || ((*(0x20001f24 + r4) & 0x70) == 0 && *(0x20001f40 + r4) != 0)))
    {
        sub_87b88(r4);
        *(0x20001f40 + r4) = 1;
        if ((arg1 << 0x10) != 0)
        {
            sub_8e930(arg1);
            sub_87af8(r4);
            *(0x20001f40 + r4) = 0;
        }
    }
    return 0;
}

int32_t sub_8d150(int32_t arg1, int32_t arg2)
{
    int32_t i = 0;
    do
    {
        int32_t* r0 = *(0x99d90 + (i << 2));
        int32_t r1 = 0;
        int32_t j = 0;
        int16_t r4_1 = 0;
        int32_t r2_1 = 0;
        do
        {
            uint32_t r5_2 = (*r0 >> r1);
            r1 = (r1 + 2);
            int32_t r5_4 = (1 << j);
            j = (j + 1);
            int32_t r6_1;
            if ((r5_2 & 3) != 1)
            {
                r6_1 = r0[4];
            }
            else
            {
                r2_1 = (r2_1 | r5_4);
                r6_1 = r0[5];
            }
            if ((r6_1 & r5_4) != 0)
            {
                r4_1 = (r5_4 | r4_1);
            }
        } while (j != 0x10);
        sub_8f8d0((r4_1 | (r2_1 << 0x10)), (arg2 + (i << 2)), 0);
        i = (i + 1);
    } while (i != 5);
    *0x20001d64 = 0x14;
    return 0;
}

int32_t sub_8d1d4(int32_t arg1)
{
    int32_t r4 = (arg1 & 0xf0);
    int32_t r5 = 0;
    if (r4 != 0)
    {
        r4 = 1;
    }
    if (sub_95bac(0) != r4)
    {
        sub_84b4c(0, r4);
        int32_t r2_1 = sub_8e930(5);
        int32_t r6_1 = (0xfffffc18 - *0x20006064);
        while (true)
        {
            int32_t r0_6;
            if ((*0x20006064 + r6_1) > 0xffffffff)
            {
                sub_8fba2(2, "PR_Swap timeout\n", r2_1);
                r0_6 = 0x43000014;
            }
            else
            {
                sub_8e930(1);
                int32_t r0_4;
                r0_4 = sub_849b6(0);
                if (r0_4 == 0)
                {
                    continue;
                }
                else
                {
                    if (sub_95bac(0) == r4)
                    {
                        sub_8fba2(2, "PR_Swap complete\n", 0x47c);
                        r5 = 0;
                        break;
                    }
                    sub_8fba2(2, "PR_Swap failed\n", 0x47c);
                    r0_6 = 0x43000013;
                }
            }
            sub_8e81c(r0_6);
            r5 = 0x52524521;
            break;
        }
    }
    return r5;
}

int32_t sub_8d28c(int32_t arg1)
{
    int32_t r0_11;
    int32_t r0_3;
    if (*0x20001d90 != 0x13)
    {
        r0_3 = 0x43000017;
    label_8d320:
        sub_8e81c(r0_3);
        r0_11 = 0x52524521;
    }
    else
    {
        if (sub_8393a(arg1) != 0)
        {
            goto label_8d2ae;
        }
        int32_t r2_1 = sub_8e930(5);
        int32_t r6_1 = (0xfffffc18 - *0x20006064);
        int32_t r0_7;
        if ((*0x20006064 + r6_1) <= 0xffffffff)
        {
            do
            {
                sub_8e930(1);
                r0_7 = sub_849b6(0);
                if ((r0_7 != 0 && *0x20001d99 == 4))
                {
                    break;
                }
            } while ((*0x20006064 + r6_1) <= 0xffffffff);
        }
        if (((*0x20006064 + r6_1) > 0xffffffff || ((*0x20006064 + r6_1) <= 0xffffffff && (!(r0_7 != 0 && *0x20001d99 == 4)))))
        {
            sub_8fba2(2, "Renegotiate timeout\n", r2_1);
            r0_3 = 0x43000016;
            goto label_8d320;
        }
        if ((((*0x20006064 + r6_1) <= 0xffffffff && r0_7 != 0) && *0x20001d99 == 4))
        {
            int32_t r2_2 = (arg1 << 0x18);
            int32_t r1_1 = *0x20001d84;
            int32_t r0_12 = ((r1_1 >> 0x1c) & 7);
            if (r2_2 != 0)
            {
                r2_2 = 0xff800;
                if ((r1_1 & 0xff800) > 0x6400)
                {
                label_8d370:
                    sub_8fba2(2, "Renegotiate complete\n", r2_2);
                    r0_11 = 0;
                }
                else if (r0_12 == 2)
                {
                    goto label_8d370;
                }
            }
            else if ((((r1_1 >> 0xb) & 0x1ff) <= 0xc && r0_12 == 1))
            {
                goto label_8d370;
            }
            if (((r2_2 != 0 && (r1_1 & 0xff800) <= 0x6400) || r2_2 == 0))
            {
                sub_8fba2(2, "Renegotiate failed\n", r2_2);
            label_8d2ae:
                r0_3 = 0x43000015;
                goto label_8d320;
            }
        }
    }
    return r0_11;
}

int32_t sub_8d388(int32_t arg1)
{
    int32_t r0_13;
    int32_t r0_14;
    if (*0x20001d90 != 7)
    {
        r0_13 = 0x43000019;
    }
    else
    {
        *0x200004e8 = arg1;
        *0x200004ea = (arg1 >> 0x10);
        sub_839f6();
        sub_84a8a(0);
        int32_t r2_1 = sub_8e930(0xa);
        int32_t r6_1 = (0xfffffc18 - *0x20006064);
        if ((*0x20006064 + r6_1) <= 0xffffffff)
        {
            do
            {
                sub_8e930(1);
                int32_t r0_4;
                r0_4 = sub_849b6(0);
                if ((r0_4 != 0 && *0x200004ea == (((*0x20001d84 >> 0xa) & 0x3ff) * 0xa)))
                {
                    int32_t r0_6 = *0x20001d80;
                    uint32_t r1_4;
                    if (2 != (r0_6 >> 0x1e))
                    {
                        r1_4 = (r0_6 >> 0x1e);
                        if ((r1_4 != 1 && (r1_4 == 0 && (((r0_6 >> 0xa) & 0x3ff) * 0x32) == *0x200004e8)))
                        {
                            goto label_8d490;
                        }
                    }
                    if ((2 == (r0_6 >> 0x1e) || (2 != (r0_6 >> 0x1e) && r1_4 == 1)))
                    {
                        r2_1 = (((r0_6 >> 0x14) & 0x3ff) * 0x32);
                        uint32_t r1_7 = *0x200004e8;
                        if ((r2_1 >= r1_7 && (((r0_6 >> 0xa) & 0x3ff) * 0x32) <= r1_7))
                        {
                        label_8d490:
                            sub_8fba2(2, "Request complete\n", r2_1);
                            r0_14 = 0;
                            goto label_8d484;
                        }
                    }
                }
            } while ((*0x20006064 + r6_1) < 0);
        }
        sub_8fba2(2, "Request timeout\n", r2_1);
        r0_13 = 0x43000018;
    }
    sub_8e81c(r0_13);
    r0_14 = 0x52524521;
label_8d484:
    return r0_14;
}

int32_t sub_8d498(int32_t arg1)
{
    int32_t r0_10;
    int32_t r0_5;
    if (*0x200004f8 != 3)
    {
        r0_5 = 0x4300001b;
    label_8d594:
        sub_8e81c(r0_5);
        r0_10 = 0x52524521;
    }
    else
    {
        int32_t r6;
        int32_t r9;
        if ((arg1 << 0x1f) != 0)
        {
            if (sub_898d8() <= 0xffffffff)
            {
                r0_5 = 0x4300001c;
                goto label_8d594;
            }
            if ((sub_95b5c(0) == 1 && sub_83a04(0, 0x1f4, r6, r9) <= 0xffffffff))
            {
            label_8d57a:
                r0_5 = 0x4300001d;
                goto label_8d594;
            }
            uint32_t r3_1 = (arg1 >> 0x10);
            char var_11 = 1;
            int32_t r0_9 = sub_8f938(0x40005c00, 0x1c, 0x664e4f43, r3_1, &var_11, 1, 0, (r3_1 + 0x3e8));
            if (r0_9 > 0xffffffff)
            {
                goto label_8d566;
            }
            sub_8fba2(2, "Banana transaction failed (0x%08…", r0_9);
        label_8d592:
            r0_5 = 0x4300001e;
            goto label_8d594;
        }
        char var_12 = 0;
        if (sub_8f938(0x40005c00, 0x1c, 0x664e4f43, 0, &var_12, 1, 0, 0x3e8) <= 0xffffffff)
        {
            goto label_8d592;
        }
        if (sub_95b5c(0) == 0)
        {
            if (sub_83a04(1, 0x1f4, r6, r9) > 0xffffffff)
            {
                goto label_8d566;
            }
            goto label_8d57a;
        }
    label_8d566:
        r0_10 = 0;
    }
    return r0_10;
}

int32_t sub_8d5a4()
{
    int32_t r0_12;
    int32_t r0_2;
    if (*0x20001d90 != 0x13)
    {
        r0_2 = 0x43000025;
    label_8d658:
        sub_8e81c(r0_2);
        r0_12 = 0x52524521;
    }
    else
    {
        if (sub_83aac() != 0)
        {
            r0_2 = 0x43000026;
            goto label_8d658;
        }
        int32_t r2_1 = sub_8e930(5);
        int32_t r5_1 = (0xfffffc18 - *0x20006064);
        int32_t r0_6;
        int32_t r0_8;
        if ((*0x20006064 + r5_1) <= 0xffffffff)
        {
            do
            {
                sub_8e930(1);
                r0_6 = sub_849b6(0);
                if ((r0_6 != 0 && *0x20001d99 == 4))
                {
                    r0_8 = *0x20001d84;
                    if ((r0_8 & 0x70000000) == 0x20000000)
                    {
                        break;
                    }
                    if (((r0_8 & 0x70000000) != 0x20000000 && (r0_8 & 0xff800) > 0x6400))
                    {
                        break;
                    }
                }
            } while ((*0x20006064 + r5_1) < 0);
        }
        if (((*0x20006064 + r5_1) > 0xffffffff || ((*0x20006064 + r5_1) <= 0xffffffff && (!((r0_6 != 0 && *0x20001d99 == 4) && (r0_8 & 0x70000000) == 0x20000000)))))
        {
            sub_8fba2(2, "Low-to-high switch timeout\n", r2_1);
            r0_2 = 0x43000027;
            goto label_8d658;
        }
        if (((((*0x20006064 + r5_1) <= 0xffffffff && r0_6 != 0) && *0x20001d99 == 4) && (r0_8 & 0x70000000) == 0x20000000))
        {
            sub_8fba2(2, "Low-to-high switch complete\n", r2_1);
            r0_12 = 0;
        }
    }
    return r0_12;
}

int32_t sub_8d67c(char arg1, int32_t* arg2)
{
    uint32_t r0 = sub_83922();
    int32_t r0_3;
    int32_t r0_4;
    int32_t r0_6;
    if (r0 == 0)
    {
        int32_t r2_3;
        r0_4 = sub_8b318();
        if (r0_4 <= 0xffffffff)
        {
            sub_8fba2(2, "Failed to enter UVDM mode\n", r2_3);
            r0_6 = 0x43000028;
        label_8d708:
            sub_8e81c(r0_6);
            r0_3 = 0x52524521;
        }
        else
        {
            int32_t r0_5;
            int32_t r2_4;
            r0_5 = sub_8b37e();
            if (r0_5 <= 0xffffffff)
            {
                sub_8fba2(2, "Failed to enumerate UVDM mode\n", r2_4);
                r0_6 = 0x43000029;
                goto label_8d708;
            }
        }
    }
    if ((r0 != 0 || (r0 == 0 && r0_4 > 0xffffffff)))
    {
        uint8_t var_11;
        int32_t r0_2;
        int32_t r2_2;
        r0_2 = sub_8b3d6(arg1, arg2, &var_11);
        if (r0_2 <= 0xffffffff)
        {
            sub_8fba2(2, "Failed to read IECS register\n", r2_2);
            r0_6 = 0x4300002a;
            goto label_8d708;
        }
        *0x20001d64 = var_11;
        r0_3 = 0;
    }
    return r0_3;
}

int32_t sub_8d718(int32_t arg1, int32_t* arg2)
{
    uint32_t r0 = sub_83922();
    int32_t r0_4;
    int32_t r0_5;
    int32_t r0_7;
    if (r0 == 0)
    {
        int32_t r2_3;
        r0_5 = sub_8b318();
        if (r0_5 <= 0xffffffff)
        {
            sub_8fba2(2, "Failed to enter UVDM mode\n", r2_3);
            r0_7 = 0x4300002b;
        label_8d7aa:
            sub_8e81c(r0_7);
            r0_4 = 0x52524521;
        }
        else
        {
            int32_t r0_6;
            int32_t r2_4;
            r0_6 = sub_8b37e();
            if (r0_6 <= 0xffffffff)
            {
                sub_8fba2(2, "Failed to enumerate UVDM mode\n", r2_4);
                r0_7 = 0x4300002c;
                goto label_8d7aa;
            }
        }
    }
    if ((r0 != 0 || (r0 == 0 && r0_5 > 0xffffffff)))
    {
        uint32_t r6_1 = (arg1 >> 8);
        uint32_t r2_1 = r6_1;
        if (r6_1 >= 0x40)
        {
            r2_1 = 0x40;
        }
        int32_t r0_3;
        int32_t r2_2;
        r0_3 = sub_8b6a2(arg1, arg2, r2_1);
        if (r0_3 <= 0xffffffff)
        {
            sub_8fba2(2, "Failed to write IECS register\n", r2_2);
            r0_7 = 0x4300002d;
            goto label_8d7aa;
        }
        *0x20001d64 = r6_1;
        r0_4 = 0;
    }
    return r0_4;
}

int32_t sub_8d7bc(int32_t arg1, char* arg2)
{
    int32_t r0_1;
    int32_t r2_1;
    r0_1 = sub_89af0(*arg2, arg2[1], (arg1 & 1), (arg1 >> 0x10));
    if (r0_1 > 0xffffffff)
    {
        return 0;
    }
    sub_8fba2(2, "Failed to send action\n", r2_1);
    sub_8e81c(0x4300002e);
    return 0x52524521;
}

int32_t sub_8d7fe(int32_t arg1)
{
    int32_t r2 = *0x200004e4;
    int32_t r0_1 = 0x6b62704c;
    char const* const r1;
    if ((arg1 << 0x1f) == 0)
    {
        r0_1 = 0x20505041;
        if (r2 != 0x6b62704c)
        {
            r1 = "Not in loopback mode\n";
        }
    }
    if (((arg1 << 0x1f) != 0 && r2 != 0x20505041))
    {
        r1 = "Cannot enter Loopback mode while…";
    }
    if ((((arg1 << 0x1f) != 0 && r2 != 0x20505041) || ((arg1 << 0x1f) == 0 && r2 != 0x6b62704c)))
    {
        sub_8fba2(2, r1, r2);
        sub_8e81c(0x4300002f);
        return 0x52524521;
    }
    if ((((arg1 << 0x1f) != 0 && r2 == 0x20505041) || ((arg1 << 0x1f) == 0 && r2 == 0x6b62704c)))
    {
        *0x200004e4 = r0_1;
        return 0;
    }
}

int32_t sub_8d85c(int32_t arg1, char* arg2)
{
    int32_t r11 = 0x52524521;
    if (sub_95b5c(0) == 1)
    {
        uint32_t r0_1 = arg1;
        int32_t r0_6;
        if (r0_1 > 7)
        {
            r0_6 = 0x43000034;
        label_8daac:
            sub_8e81c(r0_6);
        }
        else
        {
            int32_t r0_33;
            uint32_t r1_5;
            switch (jump_table_8d888[r0_1])
            {
                case 8:
                {
                    int32_t r0_2 = *0x200004f8;
                    if (r0_2 != 2)
                    {
                        if (r0_2 != 0)
                        {
                            goto label_8da9e;
                        }
                        if (sub_8392e() != 0)
                        {
                            goto label_8da9e;
                        }
                    }
                    if (sub_83b2e(arg2) == 0)
                    {
                        goto label_8daaa;
                    }
                    *0x20001d64 = 0x10;
                label_8da96:
                    r11 = 0;
                    break;
                }
                case 0x29:
                {
                    int32_t r0_7 = *0x200004f8;
                    if (r0_7 != 2)
                    {
                        if (r0_7 != 0)
                        {
                            goto label_8da9e;
                        }
                        if (sub_8392e() != 0)
                        {
                            goto label_8da9e;
                        }
                    }
                    if (sub_83c3c(0x5ac) != 0)  {  // {"@FIF"}}
                    {
                        char r0_10 = sub_83cd4(0x5ac, 5, 0xffffffff, nullptr);  {  // {"@FIF"}}
                        if (r0_10 != 0)
                        {
                            uint32_t r10_1 = r0_10;
                            if (sub_83d7c(0x5ac, r10_1) == 0)  {  // {"@FIF"}}
                            {
                                goto label_8daaa;
                            }
                            uint32_t r6_1 = *arg2;
                            char r4_1 = 0;
                            int32_t r0_14;
                            uint32_t i;
                            do
                            {
                                uint32_t r4_2 = r4_1;
                                void* r8_1 = &arg2[r4_2];
                                char i_1;
                                char var_25;
                                r0_14 = sub_83e48(r10_1, r6_1, &var_25, &i_1, (r8_1 + 2));
                                if (r0_14 == 0)
                                {
                                    break;
                                }
                                r6_1 = (r6_1 + 1);
                                arg2[r4_2] = var_25;
                                i = i_1;
                                *(r8_1 + 1) = i;
                                r4_1 = ((r4_2 + i) + 2);
                            } while (i != 0);
                            if (r0_14 == 0)
                            {
                                sub_8e81c(0x43000033);
                                r1_5 = r10_1;
                                goto label_8daea;
                            }
                            sub_83de2(0x5ac, r10_1);  {  // {"@FIF"}}
                            *0x20001d64 = r4_1;
                            goto label_8da96;
                        }
                    }
                    r0_6 = 0x43000032;
                    goto label_8daac;
                }
                case 0x82:
                {
                    if (*0x200004f8 == 2)
                    {
                        if (sub_83d7c(0x5ac, 2) == 0)  {  // {"@FIF"}}
                        {
                        label_8daaa:
                            r0_6 = 0x43000031;
                            goto label_8daac;
                        }
                        *arg2;
                        if (sub_83eea() == 0)
                        {
                            sub_8e81c(0x43000031);
                        }
                        else
                        {
                            r11 = 0;
                        }
                        r1_5 = 2;
                        goto label_8daea;
                    }
                label_8da9e:
                    r0_6 = 0x43000030;
                    goto label_8daac;
                }
                case 0x9a:
                {
                    if (*0x200004f8 != 2)
                    {
                        goto label_8da9e;
                    }
                    if (sub_83d7c(0x5ac, 3) == 0)  {  // {"@FIF"}}
                    {
                        goto label_8daaa;
                    }
                    if (sub_83f50(arg2) != 0)
                    {
                        *0x20001d64 = 4;
                    label_8da14:
                        r11 = 0;
                        goto label_8dad4;
                    }
                    break;
                }
                case 0xb4:
                {
                    if (*0x200004f8 != 2)
                    {
                        goto label_8da9e;
                    }
                    if (sub_83d7c(0x5ac, 3) == 0)  {  // {"@FIF"}}
                    {
                        goto label_8daaa;
                    }
                    if (sub_84010() != 0)
                    {
                        goto label_8da14;
                    }
                    break;
                }
                case 0xc9:
                {
                    if (*0x200004f8 != 2)
                    {
                        goto label_8da9e;
                    }
                    if (sub_83d7c(0x4b4, 1) == 0)
                    {
                        goto label_8daaa;
                    }
                    uint32_t r0_30 = sub_840d0();
                    if (r0_30 <= 0xffffffff)
                    {
                        goto label_8daaa;
                    }
                    if (r0_30 == 0)
                    {
                        goto label_8da96;
                    }
                    sub_841a8();
                    sub_8e930(0x3e8);
                    if (sub_840d0() <= 0xffffffff)
                    {
                        goto label_8daaa;
                    }
                    if (sub_840d0() != 0)
                    {
                        goto label_8daaa;
                    }
                    r0_33 = sub_841cc();
                    break;
                }
                case 0xed:
                {
                    if (*0x200004f8 != 2)
                    {
                        goto label_8da9e;
                    }
                    r0_33 = sub_84212((arg1 >> 0x10), ((arg1 >> 8) & 0xff), arg2);
                    break;
                }
                case 0xfb:
                {
                    if (*0x200004f8 != 2)
                    {
                        goto label_8da9e;
                    }
                    r0_33 = sub_842aa(*arg2);
                    break;
                }
            }
            if ((*(&jump_table_8d888 + (r0_1 << 1)) == 0x9a || *(&jump_table_8d888 + (r0_1 << 1)) == 0xb4))
            {
                sub_8e81c(0x43000031);
            label_8dad4:
                r1_5 = 3;
            label_8daea:
                sub_83de2(0x5ac, r1_5);  {  // {"@FIF"}}
            }
            if (((*(&jump_table_8d888 + (r0_1 << 1)) == 0xc9 || *(&jump_table_8d888 + (r0_1 << 1)) == 0xed) || *(&jump_table_8d888 + (r0_1 << 1)) == 0xfb))
            {
                if (r0_33 != 1)
                {
                    goto label_8daaa;
                }
                goto label_8da96;
            }
        }
    }
    return r11;
}

int32_t sub_8db04()
{
    int32_t r2;
    sub_8fba2(2, "Send force Diags\n", r2);
    int32_t r0 = sub_8983a();
    int32_t r0_4;
    int32_t r0_7;
    int32_t r5_1;
    if (r0 > 0xffffffff)
    {
        r5_1 = (0xfffff830 - *0x20006064);
        if ((*0x20006064 + r5_1) <= 0xffffffff)
        {
            do
            {
                r0_4 = sub_89c82();
                if (r0_4 != 0)
                {
                    break;
                }
                sub_8e930(1);
            } while ((*0x20006064 + r5_1) < 0);
        }
        if (((*0x20006064 + r5_1) > 0xffffffff || ((*0x20006064 + r5_1) <= 0xffffffff && r0_4 == 0)))
        {
            r0_7 = 0x43000036;
        }
        if ((((*0x20006064 + r5_1) <= 0xffffffff && r0_4 != 0) && sub_89c6e() != 0))
        {
            return 0;
        }
    }
    if ((r0 <= 0xffffffff || ((r0 > 0xffffffff && (*0x20006064 + r5_1) <= 0xffffffff) && r0_4 != 0)))
    {
        r0_7 = 0x43000035;
    }
    sub_8e81c(r0_7);
    return 0x52524521;
}

int32_t sub_8db7a(int32_t arg1, int32_t* arg2)
{
    int32_t r0_5;
    int32_t r0_6;
    if (*0x200004f8 != 3)
    {
        r0_6 = 0x43000037;
    label_8dc28:
        sub_8e81c(r0_6);
        r0_5 = 0x52524521;
    }
    else
    {
        int32_t var_24;
        if (sub_8f938(0x40005c00, 0x1c, 0x72504555, 0x1000003, &var_24, 0, 4, 0x64) != 4)
        {
            r0_6 = 0x43000038;
            goto label_8dc28;
        }
        int32_t r0_2 = var_24;
        if (r0_2 == 0xffffffff)
        {
            r0_2 = 0;
            var_24 = 0;
        }
        if ((arg1 << 0x1f) != 0)
        {
            var_24 = (r0_2 + 1);
            if (sub_8f938(0x40005c00, 0x1c, 0x77504555, 0x1000003, &var_24, 4, 0, 0x64) < 0)
            {
                r0_6 = 0x43000039;
                goto label_8dc28;
            }
            r0_2 = var_24;
        }
        *arg2 = r0_2;
        *0x20001d64 = 4;
        r0_5 = 0;
    }
    return r0_5;
}

int32_t sub_8dc46(int32_t arg1, int32_t* arg2)
{
    int32_t r5 = (arg1 & 3);
    if (r5 != 3)
    {
        sub_8fba2(2, "Dump State Info Page %d\n", r5);
        sub_97f48(arg2, (0x20000c76 + (r5 << 8)), 0x100);
        *0x20001d64 = 0x100;
    }
    return 0;
}

int32_t sub_8dc8c(int32_t arg1, char* arg2)
{
    char* r4 = arg2;
    int16_t r1_30;
    if (arg1 != 0)
    {
        if (arg1 > 0x19)
        {
            r1_30 = 0;
        }
        else
        {
            int32_t* var_30 = nullptr;
            int32_t* r0;
            int32_t r0_62;
            if ((arg1 - 1) > 4)
            {
                uint32_t r3_1 = ((arg1 - 6) >> 1);
                uint32_t r0_61;
                int32_t* r1_34;
                int32_t** r2_5;
                if ((arg1 & 1) != 0)
                {
                    r1_34 = &var_30;
                    r0_61 = r3_1;
                    r2_5 = nullptr;
                }
                else
                {
                    r2_5 = &var_30;
                    r0_61 = r3_1;
                    r1_34 = nullptr;
                }
                r0_62 = sub_948c6(r0_61, r1_34, r2_5);
                if (r0_62 == 0)
                {
                    *0x20001d64 = 0;
                    var_30[2];
                }
                else
                {
                    r0 = var_30;
                }
            }
            else
            {
                switch (jump_table_8dcb0[(arg1 - 1)])
                {
                    case 5:
                    {
                        r0 = 0x20000b00;
                        break;
                    }
                    case 0x112:
                    {
                        r0 = 0x20000aec;
                        break;
                    }
                    case 0x117:
                    {
                        r0 = 0x20000b28;
                        break;
                    }
                    case 0x11c:
                    {
                        r0 = 0x20000b14;
                        break;
                    }
                    case 0x121:
                    {
                        r0 = 0x20000b3c;
                        break;
                    }
                }
                var_30 = r0;
            }
            if ((((arg1 - 1) > 4 && r0_62 != 0) || (arg1 - 1) <= 4))
            {
                int32_t r0_59 = sub_8ff62(r0);
                int32_t* r1_32;
                int32_t r2_3;
                if (r0_59 >= 0x100)
                {
                    r0_59 = 0x100;
                    *0x20001d64 = 0x100;
                    r1_32 = var_30;
                    r2_3 = r1_32[2];
                }
                else
                {
                    *0x20001d64 = r0_59;
                    r1_32 = var_30;
                    r2_3 = r1_32[2];
                }
                if ((r0_59 >= 0x100 || (r0_59 < 0x100 && (r0_59 & 0xffff) != 0)))
                {
                    do
                    {
                        r0_59 = (r0_59 - 1);
                        *r4 = r1_32[4][r2_3];
                        r4 = &r4[1];
                        r2_3 = ((r2_3 + 1) & *r1_32);
                    } while ((r0_59 & 0xffff) != 0);
                }
            }
        }
    }
    else
    {
        int32_t r0_1 = sub_8ff62(0x20000b00);
        *r4 = r0_1;
        r4[1] = (r0_1 >> 8);
        int32_t r0_3 = *0x20000b08;
        r4[2] = r0_3;
        r4[3] = (r0_3 >> 8);
        int32_t r0_5 = *0x20000b04;
        r4[4] = r0_5;
        r4[5] = (r0_5 >> 8);
        uint32_t r0_7 = *0x20000b0d;
        uint32_t r1_1 = *0x20000b0c;
        r4[7] = 0;
        r4[6] = ((((4 & (r1_1 << 2)) & 0xfd) | ((r0_7 & 1) << 1)) | 1);
        int32_t r0_9 = sub_8ff62(0x20000aec);
        r4[8] = r0_9;
        r4[9] = (r0_9 >> 8);
        int32_t r0_11 = *0x20000af4;
        r4[0xa] = r0_11;
        r4[0xb] = (r0_11 >> 8);
        int32_t r0_13 = *0x20000af0;
        r4[0xc] = r0_13;
        r4[0xd] = (r0_13 >> 8);
        uint32_t r0_15 = *0x20000af9;
        uint32_t r1_4 = *0x20000af8;
        r4[0xf] = 0;
        r4[0xe] = ((((4 & (r1_4 << 2)) & 0xfd) | ((r0_15 & 1) << 1)) | 1);
        int32_t r0_17 = sub_8ff62(0x20000b28);
        r4[0x10] = r0_17;
        r4[0x11] = (r0_17 >> 8);
        int32_t r0_19 = *0x20000b30;
        r4[0x12] = r0_19;
        r4[0x13] = (r0_19 >> 8);
        int32_t r0_21 = *0x20000b2c;
        r4[0x14] = r0_21;
        r4[0x15] = (r0_21 >> 8);
        uint32_t r0_23 = *0x20000b35;
        uint32_t r1_7 = *0x20000b34;
        r4[0x17] = 0;
        r4[0x16] = ((((4 & (r1_7 << 2)) & 0xfd) | ((r0_23 & 1) << 1)) | 1);
        int32_t r0_25 = sub_8ff62(0x20000b14);
        r4[0x18] = r0_25;
        r4[0x19] = (r0_25 >> 8);
        int32_t r0_27 = *0x20000b1c;
        r4[0x1a] = r0_27;
        r4[0x1b] = (r0_27 >> 8);
        int32_t r0_29 = *0x20000b18;
        r4[0x1c] = r0_29;
        r4[0x1d] = (r0_29 >> 8);
        uint32_t r0_31 = *0x20000b21;
        uint32_t r1_10 = *0x20000b20;
        r4[0x1f] = 0;
        r4[0x1e] = ((((4 & (r1_10 << 2)) & 0xfd) | ((r0_31 & 1) << 1)) | 1);
        int32_t r0_33 = sub_8ff62(0x20000b3c);
        r4[0x20] = r0_33;
        int32_t i = 0;
        r4[0x21] = (r0_33 >> 8);
        int32_t r0_35 = *0x20000b44;
        r4[0x22] = r0_35;
        r4[0x23] = (r0_35 >> 8);
        int32_t r0_37 = *0x20000b40;
        r4[0x24] = r0_37;
        r4[0x25] = (r0_37 >> 8);
        uint32_t r0_39 = *0x20000b49;
        uint32_t r1_13 = *0x20000b48;
        r4[0x27] = 0;
        int32_t r5_1 = 0;
        r4[0x26] = ((((4 & (r1_13 << 2)) & 0xfd) | ((r0_39 & 1) << 1)) | 1);
        do
        {
            int32_t* var_2c;
            int32_t* var_28;
            int32_t r0_58;
            int32_t r1_27;
            if (sub_948c6(r5_1, &var_28, &var_2c) == 0)
            {
                void* r1_28 = &r4[(i << 3)];
                r0_58 = 0;
                *(r1_28 + 0x2f) = 0;
                *(r1_28 + 0x2e) = 0;
                r1_27 = (6 + (r5_1 << 1));
            }
            else
            {
                void* r9_1 = &r4[(i << 3)];
                int32_t r0_44 = sub_8ff62(var_2c);
                *(r9_1 + 0x28) = r0_44;
                *(r9_1 + 0x29) = (r0_44 >> 8);
                int32_t* r0_46 = var_2c;
                int32_t r1_17 = r0_46[2];
                *(r9_1 + 0x2a) = r1_17;
                *(r9_1 + 0x2b) = (r1_17 >> 8);
                int32_t r1_19 = r0_46[1];
                *(r9_1 + 0x2c) = r1_19;
                *(r9_1 + 0x2d) = (r1_19 >> 8);
                uint32_t r1_21 = *(r0_46 + 0xd);
                uint32_t r0_47 = r0_46[3];
                *(r9_1 + 0x2f) = 0;
                *(r9_1 + 0x2e) = ((((4 & (r0_47 << 2)) & 0xfd) | ((r1_21 & 1) << 1)) | 1);
                int32_t r0_52 = sub_8ff62(var_28);
                *(r9_1 + 0x30) = r0_52;
                *(r9_1 + 0x31) = (r0_52 >> 8);
                int32_t* r0_54 = var_28;
                int32_t r1_22 = r0_54[2];
                *(r9_1 + 0x32) = r1_22;
                *(r9_1 + 0x33) = (r1_22 >> 8);
                int32_t r1_24 = r0_54[1];
                *(r9_1 + 0x34) = r1_24;
                *(r9_1 + 0x35) = (r1_24 >> 8);
                r1_27 = (i + 6);
                r0_58 = ((((4 & (r0_54[3] << 2)) & 0xfffffffd) | ((*(r0_54 + 0xd) & 1) << 1)) | 1);
            }
            i = (i + 2);
            void* r1_29 = &r4[(r1_27 << 3)];
            r5_1 = (r5_1 + 1);
            *(r1_29 + 7) = (r0_58 >> 8);
            *(r1_29 + 6) = r0_58;
        } while (i != 0x14);
        r1_30 = 0xc8;
    }
    if (((arg1 != 0 && arg1 > 0x19) || arg1 == 0))
    {
        *0x20001d64 = r1_30;
    }
    return 0;
}

int32_t sub_8df90()
{
    __builtin_strncpy(0x200004e4, "boot", 4);
    int32_t r1 = 0x8000;
    if (*0x20001d7c == 1)
    {
        r1 = 0x80000;
    }
    *0x20001f2c = r1;
    return 0;
}

int32_t sub_8dfc6(int32_t arg1, int32_t* arg2)
{
    int32_t r0_5;
    int32_t r0_4;
    if (*0x200004e4 != 0x746f6f62)
    {
        r0_4 = 0x4300000c;
    label_8e052:
        sub_8e81c(r0_4);
        r0_5 = 0x52524521;
    }
    else
    {
        sub_91b06();
        sub_91c0c(0xf3);
        int32_t var_24;
        int32_t r0_2 = sub_806f6(*0x20001f2c, &var_24);
        int32_t r0_3 = var_24;
        if ((r0_3 | 8) == 8)
        {
        label_8e03e:
            __builtin_strncpy(0x200004e4, "APP ", 4);
            r0_4 = 0x4300000f;
            goto label_8e052;
        }
        uint32_t r2_2 = *0x20001d7c;
        if (((r0_3 - 0x10) <= 0x28 && r2_2 == 1))
        {
            goto label_8e03e;
        }
        if (((r0_3 - 0x40) <= 0x18 && r2_2 == 2))
        {
            goto label_8e03e;
        }
        if (r0_2 != 0)
        {
            if (sub_91b40(r0_3, 2) != 8)
            {
                sub_91b2e();
                __builtin_strncpy(0x200004e4, "APP ", 4);
                r0_4 = 0x43000010;
                goto label_8e052;
            }
            sub_916cc(0xa);
        }
        int32_t r5_1 = (arg1 & 0x1ff);
        if (r5_1 != 0)
        {
            void* r0_7 = *0x20001f2c;
            int32_t r6_1 = 0;
            int32_t r0_9;
            do
            {
                r0_9 = sub_91bc4((r0_7 + 0x8000000), *(arg2 + r6_1));
                if (r0_9 != 8)
                {
                    break;
                }
                r6_1 = (r6_1 + 4);
                r0_7 = (*0x20001f2c + 4);
                *0x20001f2c = r0_7;
            } while (r6_1 < r5_1);
            if (r0_9 != 8)
            {
                sub_91b2e();
                __builtin_strncpy(0x200004e4, "APP ", 4);
                r0_4 = 0x43000011;
                goto label_8e052;
            }
        }
        sub_91b2e();
        r0_5 = 0;
    }
    return r0_5;
}

int32_t sub_8e0e0()
{
    int32_t r0_1;
    int32_t r0_5;
    if (*0x200004e4 != 0x746f6f62)
    {
        r0_5 = 0x4300000d;
    }
    else
    {
        __builtin_strncpy(0x200004e4, "APP ", 4);
        int32_t* r0 = &data_8000;
        if (*0x20001d7c == 1)
        {
            r0 = &data_80000;
        }
        r0_1 = sub_80688(r0, 0x78000);
        if (r0_1 == 0)
        {
            r0_5 = 0x4300000e;
        }
    }
    int32_t r0_4;
    if ((*0x200004e4 != 0x746f6f62 || (*0x200004e4 == 0x746f6f62 && r0_1 == 0)))
    {
        sub_8e81c(r0_5);
        r0_4 = 0x52524521;
    }
    if ((*0x200004e4 == 0x746f6f62 && r0_1 != 0))
    {
        char r0_3 = 1;
        if (*0x20001d7c == 1)
        {
            r0_3 = 2;
        }
        char var_11 = r0_3;
        sub_8fe1c(5, &var_11, 1);
        r0_4 = 0;
    }
    return r0_4;
}

int32_t sub_8e3a4(int32_t arg1, void* arg2 @ r4, int32_t* arg3 @ r6, int32_t arg4 @ r9, int32_t arg5 @ r11, int32_t arg6 @ pc)
{
    if (arg1 > 4)
    {
        return 0xffffffff;
    }
    void* r2_1;
    int32_t r12;
    r2_1 = sub_8fba2(2, "Enabling driver: %d\n", arg1);
    if (arg1 == 0)
    {
        return 0;
    }
    void* r0_2 = *(0x99dac + (arg1 * 0xc));
    int32_t r5;
    int32_t r7;
    int32_t r8;
    switch (r0_2)
    {
        case sub_4000:
        {
            /* tailcall */
            return sub_4000(r0_2, &jump_table_99dac, r2_1, arg2, arg3, arg4, arg5, r12, arg6);
        }
        case 0x8e168:
        {
            int32_t var_8_1 = r7;
            int32_t* var_c_1 = arg3;
            void* var_10_1 = arg2;
            if (sub_92418(0x40005c00, 0x70, 1) < 0)
            {
                return 0xffffffff;
            }
            if (sub_92468(0x40005c00, 0x70, 0) < 0)
            {
                return 0xfffffffe;
            }
            if (sub_92488(0x40005c00, 0x70, 8) < 0)
            {
                return 0xfffffffd;
            }
            return (0xfffffffc & (sub_92440(0x40005c00, 0x70, 1, 0) >> 0x1f));
            break;
        }
        case 0x8e1c6:
        {
            int32_t var_8_2 = r7;
            int32_t* var_c_2 = arg3;
            void* var_10_2 = arg2;
            if (sub_92488(0x40005c00, 0x70, 0) < 0)
            {
                return 0xffffffff;
            }
            if (sub_92440(0x40005c00, 0x70, 0, 0) < 0)
            {
                return 0xfffffffe;
            }
            return (0xfffffffd & (sub_92418(0x40005c00, 0x70, 0) >> 0x1f));
            break;
        }
        case 0x8e210:
        {
            int32_t var_8_3 = r7;
            int32_t* var_c_3 = arg3;
            int32_t var_10_3 = r5;
            void* var_14 = arg2;
            int32_t var_18 = r8;
            int32_t r6_10 = 0;
            int32_t r0_19;
            while (true)
            {
                uint32_t r3_1 = *(0x99dac + r6_10);
                uint32_t r2_2 = *(0x99da4 + r6_10);
                int32_t r0_18;
                if (r3_1 > 0xf)
                {
                    r0_18 = sub_924aa(0x40005c00, 0x70, r2_2, 0);
                }
                else
                {
                    r0_18 = sub_924d8(0x40005c00, 0x70, r2_2, r3_1);
                }
                if (r0_18 < 0)
                {
                    r0_19 = 0xffffffff;
                    break;
                }
                r6_10 = (r6_10 + 1);
                if (r6_10 >= 4)
                {
                    r0_19 = 0;
                    break;
                }
            }
            return r0_19;
            break;
        }
        case 0x8e25c:
        {
            int32_t var_8_4 = r7;
            int32_t* var_c_4 = arg3;
            int32_t var_10_4 = r5;
            void* var_14_1 = arg2;
            int32_t var_18_1 = r8;
            int32_t r6_12 = 0;
            int32_t r0_21;
            while (true)
            {
                if (sub_92518(0x40005c00, 0x70, *(0x99da8 + r6_12), *(0x99dac + r6_12)) <= 0xffffffff)
                {
                    r0_21 = 0xffffffff;
                    break;
                }
                r6_12 = (r6_12 + 1);
                if (r6_12 > 3)
                {
                    r0_21 = 0;
                    break;
                }
            }
            return r0_21;
            break;
        }
        case 0x8e2a0:
        {
            int32_t var_8_5 = r7;
            int32_t* var_c_5 = arg3;
            void* var_10_5 = arg2;
            if (sub_8e470(0x40005c00, 0x20) < 0)
            {
                return 0xffffffff;
            }
            return (0xfffffffe & (sub_8e5cc(0x40005c00, 0x20) >> 0x1f));
            break;
        }
        case 0x8e2d0:
        {
            return 0;
            break;
        }
        case 0x8e2d4:
        {
            int32_t var_8_6 = r7;
            return (sub_8e5dc(0x40005c00, 0x20, (r0_2 & 1), &jump_table_99dac) >> 0x1f);
            break;
        }
        case 0x8e2f0:
        {
            int32_t var_8_7 = r7;
            int32_t* var_c_6 = arg3;
            void* var_10_6 = arg2;
            sub_90820(0x40005c00);
            sub_9022c(0x40005c00, 0x61a80, 0);
            return 0;
            break;
        }
        case 0x8e316:
        {
            int32_t var_8_8 = r7;
            int32_t* var_c_7 = arg3;
            void* var_10_7 = arg2;
            sub_90820(0x40005c00);
            sub_9022c(0x40005c00, 0x186a0, 0);
            return 0;
            break;
        }
        case 0x8e33c:
        {
            int32_t var_8_9 = r7;
            int32_t var_c_8 = r5;
            void* var_10_8 = arg2;
            uint32_t r3_3 = r0_2;
            int32_t r4_17 = 0;
            int32_t r0_32 = sub_8f938(0x40005c00, 0x1c, 0x7359454b, r3_3, &jump_table_99dac, 7, 0, (r3_3 + 0x5dc));
            if (r0_32 <= 0xffffffff)
            {
                if (r0_32 != 0xfffffffc)
                {
                    *0x20001d78 = 0;
                }
                else
                {
                    sub_90d08(0x40005c00, 0x1c, 0x1c, 4, 0x20001d78);
                }
                r4_17 = 0xffffffff;
            }
            return r4_17;
            break;
        }
    }
}

int32_t sub_8e3e0(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    if (arg1 > 4)
    {
        return 0xffffffff;
    }
    sub_8fba2(2, "Disabling driver: %d\n", arg1);
    if (arg1 == 0)
    {
        return 0;
    }
    /* jump -> *((arg1 * 0xc) + 0x99db0) */
}

int32_t sub_8e41e(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0;
    if (arg1 > 4)
    {
        r0 = 0xffffffff;
    }
    else
    {
        sub_8fba2(2, "Writing to driver: %d\n", arg1);
        if (arg1 != 0)
        {
            /* jump -> *((arg1 * 0xc) + 0x99db4) */
        }
        r0 = 0;
    }
    return r0;
}

int32_t sub_8e470(int16_t* arg1, int32_t arg2)
{
    sub_925ae(arg1, arg2);
    sub_925da(arg1, arg2, 7);
    sub_92640(arg1, arg2, 1);
    sub_92640(arg1, arg2, 2);
    if (sub_8e532(arg1, arg2, 0, 3) >= 0)
    {
        sub_91756(0x1388);
        if (sub_8e532(arg1, arg2, 0, 3) >= 0)
        {
            sub_91756(0x1388);
            if (((((sub_8e532(arg1, arg2, 0, 3) >= 0 && sub_8e532(arg1, arg2, 0, 2) >= 0) && sub_8e596(arg1, arg2, 0, 0x28) >= 0) && sub_8e596(arg1, arg2, 0, 0xc) >= 0) && sub_8e596(arg1, arg2, 0, 1) >= 0))
            {
                return (sub_8e596(arg1, arg2, 0, 6) >> 0x1f);
            }
        }
    }
    return 0xffffffff;
}

int32_t sub_8e532(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r0 = sub_925d0(arg1, arg2, 1, arg3);
    if (r0 >= 0)
    {
        r0 = sub_926a8(arg1, arg2, ((sub_926d6(arg1, arg2) & 0x83) | (0x78 & (arg4 << 3))));
        if (r0 >= 0)
        {
            r0 = sub_925da(arg1, arg2, 2);
            if (r0 >= 0)
            {
                sub_91756(1);
                uint32_t r0_7 = sub_92640(arg1, arg2, 2);
                r0 = (r0_7 & (r0_7 >> 0x1f));
            }
        }
    }
    return r0;
}

int32_t sub_8e596(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0 = sub_8e532(arg1, arg2, arg3, (arg4 >> 4));
    if (r0 < 0)
    {
        return r0;
    }
    /* tailcall */
    return sub_8e532(arg1, arg2, arg3, (arg4 & 0xf));
}

int32_t sub_8e5cc(int16_t* arg1, int32_t arg2)
{
    return (sub_8e596(arg1, arg2, 0, 2) >> 0x1f);
}

int32_t sub_8e5dc(int16_t* arg1, int32_t arg2, int32_t arg3, char* arg4)
{
    char* r0 = &jump_table_99dac[0xf];
    if (arg3 != 0)
    {
        r0 = &*jump_table_99dac[0xf][1];
    }
    int32_t r9 = (*r0 | 0x80);
    int32_t r4 = sub_97edc(arg4);
    int32_t r0_6 = (sub_8e596(arg1, arg2, 0, r9) >> 0x1f);
    if (r4 >= 0x10)
    {
        r4 = 0x10;
    }
    if (r0_6 >= 0)
    {
        if (r4 != 0)
        {
            uint32_t r0_7 = 0;
            int32_t r5_1 = 0;
            do
            {
                r0_6 = (sub_8e596(arg1, arg2, 1, arg4[r0_7]) >> 0x1f);
                if (r0_6 <= 0xffffffff)
                {
                    return r0_6;
                }
                r5_1 = (r5_1 + 1);
                r0_7 = r5_1;
            } while (r4 > r0_7);
        }
        r0_6 = 0;
    }
    return r0_6;
}

int32_t sub_8e64c()
{
    sub_90e20(0x20005044, 0x40020000, 0x800, 0);
    /* tailcall */
    return sub_90e20(0x20005014, 0x40020000, 0x1000, 0);
}

int32_t sub_8e682()
{
    sub_90ee8(0x20005044);
    /* tailcall */
    return sub_90ee8(0x20005014);
}

int32_t sub_8e6a2()
{
    if ((*0x20001f34 != 0 || (*0x20001f34 == 0 && *0x20001f30 == 0)))
    {
        sub_90ebc(0x20005044, *0x20000ad8, 0x3e8);
        *0x20001f30 = 1;
    }
    int32_t r0_2 = sub_90e5a(0x20005014);
    *0x20001f34 = 0;
    return r0_2;
}

void sub_8e6ee(int32_t arg1)
{
    if (*0x20000ad8 == arg1)
    {
        return;
    }
    *0x20000ad8 = arg1;
    *0x20001f30 = 0;
    if (*0x20001f34 == 0)
    {
        /* tailcall */
        return sub_8e6a2();
    }
}

int32_t sub_8e71e(int32_t arg1)
{
    int32_t r0 = *0x20001f34;
    if (r0 == arg1)
    {
        return r0;
    }
    sub_90ebc(0x20005014, arg1, 0x3e8);
    int32_t r0_1 = sub_90e5a(0x20005044);
    *0x20001f34 = arg1;
    return r0_1;
}

int32_t sub_8e756()
{
    return *0x20000ad8;
}

int32_t sub_8e764()
{
    *0x20001d70 = (*0x20001d70 + 1);
    sub_8fe1c(0, 0x20001d70, 4);
    *0x20001ee8;
    /* tailcall */
    return sub_8fba2(1, "Potassium FW 0x%08X HW %d - Minu…", 0x10400);
}

uint32_t sub_8e7a4()
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0 = *0x20001f3e;
    if (r0 == 0)
    {
        sub_90e8c(0x20004f44, 0x1f4);
        sub_90e5a(0x20004f74);
        sub_90e5a(0x20004fa4);
        *0x20001d78 = 0x45000002;
        *0x20006064;
        *0x20001d70;
        int32_t r2_1 = sub_8fe42(0x45000002);
        *0x20001f3e = 1;
        /* tailcall */
        return sub_8fba2(1, "Heartbeat timeout!\n", r2_1);
    }
    return r0;
}

int32_t sub_8e81c(int32_t arg1)
{
    *0x20001d78 = arg1;
    *0x20006064;
    *0x20001d70;
    /* tailcall */
    return sub_8fe42(arg1);
}

int32_t sub_8e83e()
{
    sub_90ee8(0x20004fa4);
    sub_90ee8(0x20004f74);
    sub_90ee8(0x20004f44);
    /* tailcall */
    return sub_8e682();
}

int32_t sub_8e86e()
{
    int32_t r0;
    int32_t r1;
    uint32_t r2;
    r0 = sub_8ff62(0x20000b14);
    if (r0 != 0)
    {
        int32_t i;
        do
        {
            if (sub_90d5c(0x20005174, 0, sub_8fff6(0x20000b14, r1, r2), 0x20005178, 0x200051f8) != 0)
            {
                sub_805cc(0x20000b28, 0x20005178, *0x200051f8);
                break;
            }
            i = sub_8ff62(0x20000b14);
        } while (i != 0);
    }
    return 0;
}

int32_t sub_8e8ec()
{
    sub_87b0e();
    char r0 = sub_84dd2(0);
    *0x20001d90 = r0;
    sub_80746(3, r0, *0x20006064);
    char r0_1 = sub_84dd2(1);
    *0x20001d91 = r0_1;
    sub_80746(4, r0_1, *0x20006064);
    /* tailcall */
    return sub_83384();
}

int32_t sub_8e930(int32_t arg1)
{
    int32_t r5 = (*0x20006064 + arg1);
    int32_t i = (*0x20006064 - r5);
    if (i <= 0xffffffff)
    {
        do
        {
            if (*0x200004e4 != 0x54494e49)
            {
                sub_94b5c();
                sub_8e86e();
                sub_8f286();
                sub_80cf2();
                sub_8e8ec();
                sub_8e83e();
            }
            i = (*0x20006064 - r5);
        } while (i < 0);
    }
    return i;
}

int32_t sub_8e98c()
{
    int32_t r4 = sub_849b6(0);
    if (r4 != 0)
    {
        r4 = 1;
    }
    if (j_sub_89c1e() != 0)
    {
        r4 = 2;
    }
    return r4;
}

int32_t sub_8e9ac(char* arg1, int32_t arg2)
{
    if (sub_80cd8(0xa) != 0)
    {
        sub_8ffd0(0x20000b3c, arg1, arg2);
        sub_8e9d4();
    }
    return 0;
}

uint32_t sub_8e9d4()
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r4 = *0x20006064;
    uint32_t i = sub_8ff92(0x20000b3c);
    if (i == 0)
    {
        do
        {
            if ((*0x20006064 + (0xfffffffe - r4)) >= 0)
            {
                /* tailcall */
                return sub_9006e(0x20000b3c);
            }
            sub_80cf2();
            sub_8f286();
            i = sub_8ff92(0x20000b3c);
        } while (i == 0);
    }
    return i;
}

int32_t sub_8ea36() __noreturn
{
    sub_91952();
    int32_t r0_1;
    int32_t r1;
    r1 = HIGHD((*0x20000ba0 * 0x10624dd3));
    r0_1 = LOWD((*0x20000ba0 * 0x10624dd3));
    if (0 == ((0xffffffff + (r1 >> 6)) >> 0x18))
    {
        *0xe000e014 = (0xffffffff + (r1 >> 6));
        *0xe000ed23 = 0xf0;
        *0xe000e018 = 0;
        *0xe000e010 = 7;
    }
    *0xe000ed23 = 0x50;
    *0xe000ed1f = 0x40;
    sub_916f0();
    sub_90820(0x40005400);
    sub_9007c(sub_99dec, 0x3e);
    sub_91fe8(0x1e0, 0);
    sub_90e20(0x20004fa4, 0x40020400, 0x8000, 1);
    sub_90e20(0x20004f74, 0x40020000, 0x200, 1);
    sub_90e20(0x20004f44, 0x40020000, 0x400, 1);
    sub_8e64c();
    sub_9022c(0x40005400, 0x186a0, 0);
    sub_9022c(0x40005c00, 0x186a0, 0);
    int32_t r0_3 = sub_8fcc4(0x20004fd4);
    if (r0_3 <= 0xffffffff)
    {
        sub_8e71e(1);
        while (true)
        {
            sub_90ee8(0x20005014);
        }
    }
    else
    {
        sub_8bc74();
        uint32_t r0_4 = *0x20001ee8;
        char var_8c;
        if (r0_4 <= 3)
        {
            int32_t* r0_5 = &data_8000;
            if (*0x20001d7c == 1)
            {
                r0_5 = &data_80000;
            }
            if (sub_80688(r0_5, 0x78000) != 0)
            {
                char r0_8 = 1;
                if (*0x20001d7c == 1)
                {
                    r0_8 = 2;
                }
                var_8c = r0_8;
                sub_8fe1c(5, &var_8c, 1);
                sub_8bea4();
                /* no return */
            }
            sub_8e71e(5);
            while (true)
            {
                sub_90ee8(0x20005014);
            }
        }
        else
        {
            if (r0_4 > 4)
            {
                sub_9018c(0x40021000, 0x800);
            }
            else
            {
                sub_90190(0x40021000, 0x800);
            }
            sub_9012e(0x40021000, 0x800);
            if (r0_3 == 0)
            {
                int32_t i = 0x17;
                char* r1_4 = &var_8c;
                do
                {
                    char r3_1 = *(0x20001eec + i);
                    i = (i - 1);
                    *r1_4 = r3_1;
                    r1_4 = &r1_4[1];
                } while (i != 6);
                if (sub_8f854(&var_8c) == 0)
                {
                    sub_8e71e(4);
                    while (true)
                    {
                        sub_90ee8(0x20005014);
                    }
                }
            }
            j_sub_915ba(sub_8e764, 0, 0xea60);
            sub_80422();
            sub_9308a(0x20005620, 0, 0x9a4b4, 0x20000b5c);
            sub_80334(0);
            sub_916cc(1);
            sub_80362();
            sub_92db0(0x40005400, 0x2c, 0x20005074);
            sub_92e14(0x40005400, 0x2c);
            sub_8f718(0x40012000);
            sub_8fb7c(sub_8e9ac);
            sub_9006e(0x20000aec);
            sub_9006e(0x20000b00);
            sub_9483a(0x20000b00, 0x20000aec);
            sub_94a3c(*0x20000518);
            sub_9006e(0x20000b14);
            sub_9006e(0x20000b28);
            sub_9006e(0x20000b3c);
            sub_80b7e(0xa, 0x20000b3c, 0, &data_115d);
            if (sub_8fb96() != 0)
            {
                sub_80bd4(0xa, 1);
            }
            sub_80c64(1);
            if (*0x20001f3c != 0)
            {
                while (true)
                {
                    if (sub_80cd8(0xa) != 0)
                    {
                        break;
                    }
                    sub_80cf2();
                    sub_8f286();
                }
            }
            int32_t pc;
            sub_8e3a4(*0x20000500, 0x20000b3c, 0x20000b00, 0xe000ed1f, 0x200004f0, pc);
            int32_t r1_5 = *0x20000500;
            bool cond:3 = r1_5 != 4;
            if (r1_5 == 4)
            {
                cond:3 = *0x200004f8 != 3;
            }
            int32_t var_f4;
            void var_d4;
            void var_bc;
            void var_b6;
            void var_b1;
            int32_t* r0_28;
            int32_t r1_7;
            if (cond:3)
            {
                int32_t var_f0_1 = 0xa27;
                var_f4 = 1;
                int32_t var_ec_1 = 0xd0020003;
                int32_t var_e8_1 = *0x20001da0;
                int32_t var_e4_1 = *0x20001da4;
                int32_t var_e0_1 = *0x20001da8;
                int32_t var_dc_1 = *0x20001dac;
                int32_t var_d8_1 = 0x10400;
                sub_97f48(&var_d4, 0x20001eb0, 0x18);
                sub_97f48(&var_bc, 0x20001ec8, 6);
                sub_97f48(&var_b6, 0x20001ece, 5);
                sub_97f48(&var_b1, 0x20001ed3, 6);
                char var_ab_1 = *0x20001ee8;
                sub_92a56();
                uint32_t r0_35 = sub_92704(&var_8c, 0x4a);
                int32_t r0_37;
                if (r0_35 == 0x4a)
                {
                    r0_37 = sub_97894(&var_8c, &var_f4, 0x4a);
                }
                if ((r0_35 != 0x4a || (r0_35 == 0x4a && r0_37 != 0)))
                {
                    r0_28 = &var_f4;
                    r1_7 = 0x4a;
                label_8eeb8:
                    sub_928d0(r0_28, r1_7);
                }
            }
            else
            {
                int32_t var_f0 = 0xa27;
                var_f4 = 3;
                int32_t var_ec = 0xd0020003;
                int32_t var_e8 = *0x20001da0;
                int32_t var_e4 = *0x20001da4;
                int32_t var_e0 = *0x20001da8;
                int32_t var_dc = *0x20001dac;
                int32_t var_d8 = 0x10400;
                sub_97f48(&var_d4, 0x20001eb0, 0x18);
                sub_97f48(&var_bc, 0x20001ec8, 6);
                sub_97f48(&var_b6, 0x20001ece, 5);
                sub_97f48(&var_b1, 0x20001ed3, 6);
                char var_ab = *0x20001ee8;
                void var_aa;
                sub_97886(&var_aa, 0, 0x1c);
                sub_90d08(0x40005c00, 0x1c, 0xf, 4, &var_aa);
                void var_a6;
                sub_90d08(0x40005c00, 0x1c, 0x17, 0x18, &var_a6);
                sub_92a56();
                uint32_t r0_25 = sub_92704(&var_8c, 0x66);
                int32_t r0_27;
                if (r0_25 == 0x66)
                {
                    r0_27 = sub_97894(&var_8c, &var_f4, 0x66);
                }
                if ((r0_25 != 0x66 || (r0_25 == 0x66 && r0_27 != 0)))
                {
                    r0_28 = &var_f4;
                    r1_7 = 0x66;
                    goto label_8eeb8;
                }
            }
            sub_92aa0();
            if ((*0x200004f8 - 1) > 1)
            {
                sub_90190(0x40021000, 4);
            }
            else
            {
                sub_9018c(0x40021000, 4);
            }
            *0xe000e423 = 0x20;
            *0xe000e433 = 0x30;
            *0xe000ed22 = 0x40;
            sub_95a98();
            sub_87a80();
            sub_84d7c(0x20000adc, 0x20000ae4);
            sub_83318();
            if (*0x200004f8 == 1)
            {
                sub_95bc4(0, 1);
                sub_95cfc(0, (sub_95d12(0) | 2));
            }
            int32_t r2_2 = sub_8e6a2();
            __builtin_strncpy(0x200004e4, "APP ", 4);
            sub_8fba2(1, "Potassium Entered App\n", r2_2);
            while (true)
            {
                sub_94b5c();
                if (j_sub_89c32() != 0)
                {
                    sub_82004();
                }
                sub_8e86e();
                sub_8f286();
                sub_80cf2();
                sub_8e8ec();
                sub_8bdf0();
                sub_8e83e();
                sub_91640();
                __wfi();
            }
        }
    }
}

int32_t sub_8efb0()
{
    if (*0x2000562a != 0)
    {
        *0xe000ed10 = (*0xe000ed10 & 0xfffffff9);
        sub_91838(1);
        sub_93d84(0x20005620);
    }
    /* tailcall */
    return sub_91afa(0x100000);
}

int32_t sub_8efee()
{
    /* tailcall */
    return sub_93da0(0x20005620);
}

int32_t sub_8f004()
{
    int32_t var_2c = 0;
    int32_t var_28 = 0;
    sub_91fe8(7, 1);
    sub_91cee(0x40020000, 3, 0xa);
    sub_91cee(0x40020000, 5, 0xa);
    sub_91cee(0x40020400, 0, 0xa);
    sub_91cee(0x40020400, 1, 0xa);
    sub_91cee(0x40020400, 5, 0xa);
    sub_91cee(0x40020400, 0xa, 0xa);
    sub_91cee(0x40020400, 0xb, 0xa);
    sub_91cee(0x40020400, 0xc, 0xa);
    sub_91cee(0x40020400, 0xd, 0xa);
    sub_91cee(0x40020800, 3, 0xa);
    sub_91cee(0x40020800, 2, 0xa);
    sub_91cee(0x40020800, 0, 0xa);
    int32_t var_30 = 3;
    int32_t var_38 = 0x20;
    int32_t var_34 = 2;
    sub_91c50(0x40020000, &var_38);
    int32_t var_30_1 = 3;
    var_38 = 8;
    int32_t var_34_1 = 2;
    int32_t var_2c_1 = 0;
    int32_t var_28_1 = 0;
    sub_91c50(0x40020000, &var_38);
    int32_t var_30_2 = 3;
    var_38 = 0x3c23;
    int32_t var_34_2 = 2;
    int32_t var_2c_2 = 0;
    int32_t var_28_2 = 0;
    sub_91c50(0x40020400, &var_38);
    int32_t var_30_3 = 3;
    var_38 = 1;
    int32_t var_34_3 = 2;
    sub_91c50(0x40020800, &var_38);
    int32_t var_30_4 = 3;
    var_38 = 8;
    int32_t var_34_4 = 2;
    sub_91c50(0x40020800, &var_38);
    int32_t var_30_5 = 3;
    var_38 = 4;
    int32_t var_34_5 = 2;
    sub_91c50(0x40020800, &var_38);
    return sub_91fe8(0x60000000, 1);
}

void sub_8f140()
{
    *0xe000e44d = 0x50;
    *0xe000e44a = 0x50;
    *0xe000e44b = 0x50;
    *0xe000e108 = 0x2000;
    *0xe000e108 = 0x400;
    *0xe000e108 = 0x800;
}

int32_t sub_8f16e(int32_t arg1, char* arg2)
{
    if (arg1 == 0x21)
    {
        int32_t r0_5 = *0x20000b54;
        *arg2 = r0_5;
        arg2[1] = (r0_5 >> 8);
        arg2[2] = (r0_5 >> 0x10);
        arg2[3] = (r0_5 >> 0x18);
        arg2[4] = *0x20005200;
        arg2[5] = *0x20005204;
        arg2[6] = *0x20000b58;
    }
    else if (arg1 == 0x20)
    {
        *0x20000b54 = (((*arg2 | (arg2[1] << 8)) | (arg2[2] << 0x10)) | (arg2[3] << 0x18));
        *0x20005200 = arg2[4];
        *0x20005204 = arg2[5];
        *0x20000b58 = arg2[6];
    }
    return 0;
}

int32_t sub_8f1fc(char* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r5;
    uint32_t r12;
    if ((*0x200004e4 != 0x6b62704c && arg2 != 0))
    {
        r5 = 0;
        do
        {
            if (sub_8ff8e(0x20000b00) != 0)
            {
                break;
            }
            uint32_t r6_1 = arg1[r5];
            int32_t r0_4;
            if (arg3 == 1)
            {
                r0_4 = sub_80874(r6_1);
            }
            if ((arg3 != 1 || (arg3 == 1 && r0_4 == 0)))
            {
                sub_8ff96(0x20000b00, r6_1, r12);
            }
            r5 = (r5 + 1);
        } while (arg2 != r5);
    }
    if (((*0x200004e4 != 0x6b62704c && arg2 == 0) || (*0x200004e4 == 0x6b62704c && arg2 == 0)))
    {
        r5 = 0;
    }
    if ((*0x200004e4 == 0x6b62704c && arg2 != 0))
    {
        r5 = 0;
        do
        {
            if (sub_8ff8e(0x20000aec) != 0)
            {
                break;
            }
            sub_8ff96(0x20000aec, arg1[r5], r12);
            r5 = (r5 + 1);
        } while (arg2 != r5);
    }
    return r5;
}

uint32_t sub_8f286()
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r0 = *0x2000521c;
    if (r0 != 0)
    {
        int32_t r0_1 = sub_8ff62(0x20000aec);
        uint32_t r2_1;
        r0 = sub_8ff62(0x2000002c);
        if (r0 != (-r0_1))
        {
            int32_t i = 0;
            char* r5_1 = 0x2000521e;
            int32_t r0_3;
            int32_t i_2;
            if (*0x200004e4 == 0x6b62704c)
            {
                i_2 = 0x200;
            }
            else
            {
                do
                {
                    r0_3 = sub_9002e(0x2000002c, (0x2000521e + i), r2_1);
                    if (r0_3 != 0)
                    {
                        break;
                    }
                    i = (i + 1);
                } while (i != 0x200);
                if (r0_3 != 0)
                {
                    i_2 = (0x200 - i);
                    r5_1 = (0x2000521e + i);
                }
            }
            if ((*0x200004e4 == 0x6b62704c || (*0x200004e4 != 0x6b62704c && r0_3 != 0)))
            {
                int32_t i_1;
                do
                {
                    if (sub_9002e(0x20000aec, r5_1, r2_1) != 0)
                    {
                        break;
                    }
                    i_1 = i_2;
                    i_2 = (i_2 - 1);
                    r5_1 = &r5_1[1];
                    i = (i + 1);
                } while (i_1 != 1);
            }
            *0x2000521c = 0;
            sub_94394(0x20005620, 0x82, 0x2000521e, i);
            int32_t r0_5 = sub_8ff62(0x20000aec);
            r0 = sub_8ff62(0x2000002c);
            if ((i == 0x200 && r0 == (0 - r0_5)))
            {
                *0x2000521d = 1;
            }
        }
    }
    *0x200051fc = 0;
    int32_t r1_4 = *0x20005208;
    if (r1_4 != 0)
    {
        int32_t r0_7 = sub_8f1fc(*0x20000b50, r1_4, 1);
        *0x20000b50 = (*0x20000b50 + r0_7);
        int32_t r1_7 = *0x20005208;
        r0 = (r1_7 - r0_7);
        *0x20005208 = r0;
        if (r1_7 == r0_7)
        {
            *0x20000b50 = 0x2000541e;
            /* tailcall */
            return sub_9434a(0x20005620, 2, 0x2000541e, 0x200);
        }
    }
    return r0;
}

int32_t sub_8f3d8(void* arg1)
{
    if (*0x20005c84 == 1)
    {
        sub_8f454(arg1);
    }
    sub_942d2(arg1, 0x82, 0x200, 2);
    sub_942d2(arg1, 2, 0x200, 2);
    sub_942d2(arg1, 0x83, 0x10, 3);
    *0x2000521c = 1;
    *0x2000521d = 0;
    sub_9434a(arg1, 2, 0x2000541e, 0x200);
    *0x20005c84 = 1;
    return 0;
}

int32_t sub_8f454(void* arg1)
{
    sub_94462(arg1, 0x82);
    sub_94462(arg1, 0x83);
    *0x2000521d = 0;
    *0x2000521c = 0;
    sub_9431a(arg1, 0x82);
    sub_9431a(arg1, 2);
    sub_9431a(arg1, 0x83);
    *0x20005c84 = 0;
    return 0;
}

uint32_t sub_8f4a4(void* arg1, char* arg2)
{
    uint32_t r1 = *arg2;
    int32_t r0 = (r1 & 0x60);
    char r6;
    int32_t r1_2;
    uint32_t r2_1;
    if (r0 == 0x40)
    {
        uint32_t r0_3 = arg2[1];
        if (r0_3 != 0x40)
        {
            if (r0_3 != 0xa0)
            {
                goto label_8f5ca;
            }
            uint32_t r0_4 = *(arg2 + 2);
            if (r0_4 == 3)
            {
                uint32_t r2_5 = *(arg2 + 6);
                if ((r2_5 - 1) >= 4)
                {
                    goto label_8f5ca;
                }
                sub_930f4(arg1, 0x20005c8c, r2_5);
                uint32_t r0_12 = *0x20005c8c;
                if ((r0_12 == 8 || r0_12 == 4))
                {
                    *0x20005cd4 = 1;
                }
                goto label_8f574;
            }
            if (r0_4 == 2)
            {
                *0x20005c8c = 2;
                uint32_t r1_5 = *(arg2 + 6);
                *0x20005c8e = r1_5;
                uint32_t r0_13 = *(arg2 + 4);
                *0x20005c8f = r0_13;
                if ((r1_5 - 1) >= 0x40)
                {
                    goto label_8f5ca;
                }
                *0x20005cd0 = r1_5;
                sub_90b7a(r0_13, 0x20005c90, 0x20005cd0);
                int32_t r0_16 = *0x20005cd0;
                uint32_t r2_8 = *(arg2 + 6);
                if (r0_16 < r2_8)
                {
                    r2_8 = r0_16;
                }
                sub_930f4(arg1, 0x20005c90, r2_8);
                *0x20005c8c = 4;
                *0x20005c8d = *0x20005cd0;
                goto label_8f574;
            }
            if (r0_4 != 1)
            {
                goto label_8f5ca;
            }
            *0x20005c8c = 1;
            r2_1 = *(arg2 + 6);
            *0x20005c8e = r2_1;
            *0x20005c8f = arg2[4];
            if (r2_1 >= 0x41)
            {
                goto label_8f5ca;
            }
            r1_2 = 0x20005c90;
        label_8f4ee:
            sub_93126(arg1, r1_2, r2_1);
            goto label_8f574;
        }
        *(arg2 + 2);
        sub_8fba2(4, "Got AEPP Message: U0EP: %dmA U3E…", *(arg2 + 4));
        sub_93158(arg1);
    label_8f574:
        r6 = 0;
    }
    else if (r0 != 0x20)
    {
    label_8f5ca:
        sub_933de(arg1);
        r6 = 2;
    }
    else
    {
        r2_1 = *(arg2 + 6);
        if (r2_1 != 0)
        {
            uint32_t r0_1 = arg2[1];
            if ((r1 << 0x18) < 0)
            {
                sub_8f16e(r0_1, 0x2000520c);
                sub_930f4(arg1, 0x2000520c, *(arg2 + 6));
                goto label_8f574;
            }
            *0x20000b78 = r0_1;
            if (r2_1 >= 0x10)
            {
                r2_1 = 0x10;
            }
            r1_2 = 0x2000520c;
            *0x20005c88 = r2_1;
            goto label_8f4ee;
        }
        r6 = 0;
        sub_8f16e(arg2[1], arg2);
        sub_93158(arg1);
    }
    return r6;
}

int32_t sub_8f618()
{
    if (*0x20005cd4 == 1)
    {
        *0x20005c8c = 0;
    }
    *0x20005cd4 = 0;
    return 0;
}

int32_t sub_8f63a()
{
    int32_t r0 = *0x20000b78;
    if (r0 != 0xff)
    {
        *0x20005c88;
        sub_8f16e(r0, 0x2000520c);
        *0x20000b78 = 0xff;
    }
    else
    {
        uint32_t r0_1 = *0x20005c8f;
        *0x20005cd0 = *0x20005c8e;
        uint32_t r0_2 = sub_90bc6(r0_1, 0x20005c90, 0x20005cd0);
        char r2 = 8;
        *0x20005c8d = *0x20005cd0;
        if (r0_2 == *0x20005c8e)
        {
            r2 = 4;
        }
        *0x20005c8c = r2;
    }
    return 0;
}

int32_t sub_8f6a0(void* arg1, int32_t arg2)
{
    if (arg2 == 2)
    {
        if (*0x2000521d == 0)
        {
            *0x2000521c = 1;
        }
        else
        {
            sub_94394(arg1, 2, 0, 0);
            *0x2000521d = 0;
        }
    }
    return 0;
}

int32_t sub_8f6d4(void* arg1, int32_t arg2)
{
    if (arg2 == 2)
    {
        int32_t r1 = *(arg1 + 0x424);
        *0x20005208 = r1;
        if (r1 == 0)
        {
            sub_9434a(arg1, 2, 0x2000541e, 0x200);
        }
    }
    return 0;
}

int32_t sub_8f708() __pure
{
    return;
}

int32_t sub_8f70a() __pure
{
    return;
}

int32_t sub_8f70c() __pure
{
    return;
}

int32_t sub_8f70e() __pure
{
    return;
}

int32_t sub_8f710() __pure
{
    return;
}

int32_t sub_8f712() __pure
{
    return;
}

int32_t sub_8f714() __pure
{
    return;
}

void* sub_8f718(void* arg1)
{
    int32_t r0;
    if (arg1 == 0x40012200)
    {
        r0 = 0x400;
    }
    if (arg1 == 0x40012100)
    {
        r0 = 0x200;
    }
    if (arg1 == 0x40012000)
    {
        r0 = 0x100;
    }
    if (((arg1 == 0x40012200 || arg1 == 0x40012100) || arg1 == 0x40012000))
    {
        sub_92018(r0, 1);
    }
    void var_34;
    sub_97886(&var_34, 0, 0x18);
    char var_1c = 1;
    int32_t var_3c = 0;
    int32_t var_38 = 0;
    int32_t var_44 = 0;
    int32_t var_40 = 0;
    sub_91a2a(&var_44);
    sub_919d0(arg1, &var_34);
    sub_91a5e(arg1, 1);
    return arg1;
}

int32_t sub_8f798(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    sub_91a70(arg1, arg2, 1, 5);
    int32_t r11 = 0;
    int32_t r0_2;
    int32_t r0_10;
    int32_t r6_1;
    if (arg3 != 0)
    {
        int32_t r4_1 = 0;
        do
        {
            sub_91ada(arg1);
            r6_1 = *0x20006064;
            r0_2 = sub_91aee(arg1, 2);
            if (r0_2 == 0)
            {
                while ((*0x20006064 + (0xffffff9c - r6_1)) <= 0xffffffff)
                {
                    if (sub_91aee(arg1, 2) != 0)
                    {
                        break;
                    }
                }
                if ((*0x20006064 + (0xffffff9c - r6_1)) > 0xffffffff)
                {
                    break;
                }
            }
            r4_1 = (r4_1 + 1);
            r11 = (r11 + sub_91ae6(arg1));
        } while (r4_1 < arg3);
        if ((r0_2 == 0 && (*0x20006064 + (0xffffff9c - r6_1)) > 0xffffffff))
        {
            r0_10 = 0xffffffff;
        }
    }
    if ((arg3 == 0 || (arg3 != 0 && (!(r0_2 == 0 && (*0x20006064 + (0xffffff9c - r6_1)) > 0xffffffff)))))
    {
        r0_10 = (r11 / arg3);
    }
    return r0_10;
}

uint32_t sub_8f818(char arg1) __pure
{
    char r0;
    if ((arg1 - 0x30) <= 9)
    {
        r0 = (arg1 - 0x30);
    }
    else if ((arg1 - 0x41) <= 7)
    {
        r0 = (arg1 - 0x37);
    }
    else if ((arg1 - 0x4a) <= 4)
    {
        r0 = (arg1 - 0x38);
    }
    else if ((arg1 - 0x50) <= 0xa)
    {
        r0 = (arg1 - 0x39);
    }
    else
    {
        r0 = 0;
    }
    return r0;
}

int32_t sub_8f854(char* arg1)
{
    int32_t i = 0;
    int32_t r5 = 0;
    do
    {
        uint32_t r0_1 = sub_8f818(arg1[i]);
        bool cond:0_1 = (i & 1) != 0;
        i = (i + 1);
        if (cond:0_1)
        {
            r0_1 = (r0_1 * 3);
        }
        r5 = (r5 + r0_1);
    } while (i != 0x11);
    int32_t r0_5 = 0;
    if ((r5 % 0x22) == 0)
    {
        r0_5 = 1;
    }
    return r0_5;
}

int32_t sub_8f8a0() __noreturn
{
    uint32_t r4 = *0x1fff0000;
    int32_t r5 = *0x1fff0004;
    sub_91f08();
    *0xe000e010 = 0;
    *0xe000e014 = 0;
    *0xe000e018 = 0;
    __msr(1);
    __msr(r4);
    r5(1, 0);
    while (true)
    {
        /* nop */
    }
}

uint32_t sub_8f8d0(int32_t arg1, char* arg2, int32_t arg3)
{
    if (arg3 == 0)
    {
        *arg2 = arg1;
        uint32_t r0 = (arg1 >> 0x18);
        arg2[1] = (arg1 >> 8);
        arg2[2] = (arg1 >> 0x10);
        arg2[3] = r0;
        return r0;
    }
    /* tailcall */
    return sub_8f8d2(arg1, arg2);
}

uint32_t sub_8f8d2(int32_t arg1, char* arg2)
{
    arg2[3] = arg1;
    uint32_t r0 = (arg1 >> 0x18);
    arg2[1] = (arg1 >> 0x10);
    arg2[2] = (arg1 >> 8);
    *arg2 = r0;
    return r0;
}

uint32_t sub_8f8f6(char* arg1, uint32_t* arg2, int32_t arg3)
{
    if (arg3 == 0)
    {
        uint32_t r0_2 = (((*arg1 | (arg1[1] << 8)) | (arg1[2] << 0x10)) | (arg1[3] << 0x18));
        *arg2 = r0_2;
        return r0_2;
    }
    /* tailcall */
    return sub_8f8f8(arg1, arg2);
}

uint32_t sub_8f8f8(char* arg1, uint32_t* arg2)
{
    uint32_t r0_1 = (((arg1[3] | (arg1[2] << 8)) | (arg1[1] << 0x10)) | (*arg1 << 0x18));
    *arg2 = r0_1;
    return r0_1;
}

int32_t sub_8f928()
{
    return syscall();
}

int32_t sub_8f92c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    /* jump -> arg4 */
}

int32_t sub_8f938(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t* arg5, int32_t arg6, int32_t arg7, int32_t arg8)
{
    int32_t var_2c = arg4;
    int32_t var_28 = arg3;
    int32_t r9_2;
    if (sub_90cb8(arg1, arg2, 0x11, 4, &var_2c) < 0)
    {
    label_8faa8:
        r9_2 = 0xfffffffd;
    }
    else
    {
        int32_t r0_2 = arg6;
        int32_t r6_1;
        int32_t r9_1;
        int32_t r10_1;
        if (r0_2 >= 0xc1)
        {
            r9_1 = (r0_2 + 0x40);
            r10_1 = 0x40;
            r6_1 = 0x40;
        }
        if ((r0_2 < 0xc1 && r0_2 >= 0x81))
        {
            r10_1 = (r0_2 + 0x80);
            r6_1 = 0x40;
            r9_1 = 0;
        }
        if ((r0_2 >= 0xc1 || (r0_2 < 0xc1 && r0_2 >= 0x81)))
        {
            r0_2 = 0x40;
        label_8f990:
            if (sub_90cb8(arg1, arg2, 0x12, r0_2, arg5) < 0)
            {
                goto label_8faa8;
            }
            if (((r6_1 << 0x18) != 0 && sub_90cb8(arg1, arg2, 0x13, r6_1, &arg5[0x10]) < 0))
            {
                goto label_8faa8;
            }
            if (((r10_1 << 0x18) != 0 && sub_90cb8(arg1, arg2, 0x14, r10_1, &arg5[0x20]) < 0))
            {
                goto label_8faa8;
            }
            if ((r9_1 << 0x18) == 0)
            {
                goto label_8fa24;
            }
            if (sub_90cb8(arg1, arg2, 0x15, r9_1, &arg5[0x30]) < 0)
            {
                goto label_8faa8;
            }
            goto label_8fa24;
        }
        if ((r0_2 < 0xc1 && r0_2 < 0x81))
        {
            if (r0_2 >= 0x41)
            {
                r6_1 = (r0_2 + 0xc0);
                r0_2 = 0x40;
                r9_1 = 0;
                r10_1 = 0;
                goto label_8f990;
            }
            if ((r0_2 & 0xff) != 0)
            {
                r9_1 = 0;
                r10_1 = 0;
                r6_1 = 0;
                goto label_8f990;
            }
        label_8fa24:
            if (sub_90cb8(arg1, arg2, 0x10, 4, &var_28) < 0)
            {
                goto label_8faa8;
            }
            int32_t r6_2 = (*0x20006064 + arg8);
            while (true)
            {
                sub_91756(0x1f4);
                if ((*0x20006064 - r6_2) > 0xffffffff)
                {
                    r9_2 = 0xffffffff;
                    break;
                }
                int32_t var_30;
                if (sub_90d08(arg1, arg2, 0x10, 4, &var_30) >= 0)
                {
                    int32_t r0_24 = var_30;
                    if (r0_24 == 0x52524521)
                    {
                        r9_2 = 0xfffffffc;
                        break;
                    }
                    if (r0_24 == 0x444d4321)
                    {
                        r9_2 = 0xfffffff8;
                        break;
                    }
                    if (r0_24 != 0)
                    {
                        continue;
                    }
                    else
                    {
                        r9_2 = arg7;
                        if (r9_2 == 0)
                        {
                            r9_2 = 0;
                            break;
                        }
                        char r0_25;
                        int32_t* r6_3;
                        int32_t r8_2;
                        int32_t r10_2;
                        int32_t r11_1;
                        if (r9_2 >= 0xc1)
                        {
                            r6_3 = arg5;
                            r8_2 = (r9_2 + 0x40);
                            r0_25 = 0x40;
                            r11_1 = 0x40;
                            r10_2 = 0x40;
                        }
                        else if (r9_2 >= 0x81)
                        {
                            r6_3 = arg5;
                            r10_2 = (r9_2 + 0x80);
                            r8_2 = 0;
                            r0_25 = 0x40;
                            r11_1 = 0x40;
                        }
                        else
                        {
                            r6_3 = arg5;
                            if (r9_2 < 0x41)
                            {
                                r11_1 = 0;
                                r0_25 = r9_2;
                                r10_2 = 0;
                            }
                            else
                            {
                                r11_1 = (r9_2 + 0xc0);
                                r10_2 = 0;
                                r0_25 = 0x40;
                            }
                            r8_2 = 0;
                        }
                        if (sub_90d08(arg1, arg2, 0x12, r0_25, r6_3) >= 0)
                        {
                            uint32_t r0_32;
                            if ((r11_1 << 0x18) != 0)
                            {
                                r0_32 = sub_90d08(arg1, arg2, 0x13, r11_1, &r6_3[0x10]);
                            }
                            if (((r11_1 << 0x18) == 0 || ((r11_1 << 0x18) != 0 && r0_32 >= 0)))
                            {
                                uint32_t r0_36;
                                if ((r10_2 << 0x18) != 0)
                                {
                                    r0_36 = sub_90d08(arg1, arg2, 0x14, r10_2, &r6_3[0x20]);
                                }
                                if (((r10_2 << 0x18) == 0 || ((r10_2 << 0x18) != 0 && r0_36 >= 0)))
                                {
                                    if ((r8_2 << 0x18) == 0)
                                    {
                                        break;
                                    }
                                    if (sub_90d08(arg1, arg2, 0x15, r8_2, &r6_3[0x30]) >= 0)
                                    {
                                        break;
                                    }
                                }
                            }
                        }
                    }
                }
                r9_2 = 0xfffffffe;
                break;
            }
        }
    }
    return r9_2;
}

int32_t sub_8fb7c(int32_t arg1)
{
    *0x20005d4c = arg1;
    return 0;
}

void sub_8fb8a(int32_t arg1)
{
    *0x20005d50 = arg1;
}

uint32_t sub_8fb96()
{
    return *0x20005d50;
}

int32_t sub_8fba2(int32_t arg1, char* arg2, int32_t arg3)
{
    int32_t r3;
    int32_t var_4 = r3;
    int32_t var_8 = arg3;
    int32_t r2 = 0xfffffff2;
    if ((*0x20005d50 >= arg1 && *0x20005d4c != 0))
    {
        int32_t* var_14_1 = &var_8;
        r2 = sub_8fbe4(arg1, arg2, &var_8);
    }
    return r2;
}

int32_t sub_8fbe4(int32_t arg1, char* arg2, char* arg3)
{
    char var_12a = 0;
    int32_t var_130 = arg1;
    sub_97ea4(&var_12a, 0x12, "%d [%d]: ", *0x20006064);
    sub_97e34(&&var_12a[sub_97edc(&var_12a)], 0xff, arg2, arg3);
    return *0x20005d4c(&var_12a, sub_97edc(&var_12a));
}

int32_t sub_8fc48(int32_t arg1, char* arg2, int32_t arg3)
{
    int32_t r3;
    int32_t var_4 = r3;
    int32_t var_8 = arg3;
    int32_t r0 = 0xfffffff2;
    if ((*0x20005d50 >= arg1 && *0x20005d4c != 0))
    {
        int32_t* var_14_1 = &var_8;
        r0 = sub_8fc8c(arg2, &var_8);
    }
    return r0;
}

int32_t sub_8fc8c(char* arg1, char* arg2)
{
    char var_122 = 0;
    sub_97e34(&var_122, 0xff, arg1, arg2);
    return *0x20005d4c(&var_122, sub_97edc(&var_122));
}

int32_t sub_8fcc4(char* arg1)
{
    int32_t r0_2;
    if (sub_80298(0, arg1, 0x40) < 0)
    {
        r0_2 = 0xfffffffc;
    }
    else
    {
        char var_11;
        sub_80298(0x47, &var_11, 1);
        if (var_11 == 0x5a)
        {
            r0_2 = 0xfffffff0;
        }
        else
        {
            uint32_t r12_1 = *(arg1 + 0x3e);
            if ((r12_1 != 0xffff || (r12_1 == 0xffff && *(arg1 + 0x28) != 0xffff)))
            {
                uint32_t r3_1 = 0xffff;
                int32_t i = 0;
                do
                {
                    uint32_t r4_1 = (r3_1 ^ arg1[i]);
                    int32_t j_1 = 0xfffffff8;
                    int32_t j;
                    do
                    {
                        r3_1 = ((r4_1 >> 1) & 0x7fff);
                        if ((r4_1 & 1) != 0)
                        {
                            r3_1 = (r3_1 ^ 0xa001);
                        }
                        j = j_1;
                        j_1 = (j_1 + 1);
                        r4_1 = r3_1;
                    } while (j != 0xffffffff);
                    i = (i + 1);
                } while (i != 0x3e);
                r0_2 = 0xfffffff7;
                if (r12_1 == r3_1)
                {
                    r0_2 = 0;
                }
            }
            if ((r12_1 == 0xffff && *(arg1 + 0x28) == 0xffff))
            {
                sub_97886(arg1, 0, 0x40);
                r0_2 = 1;
            }
        }
    }
    return r0_2;
}

int32_t sub_8fd58(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + 0x40) + arg3) >= 0x1000)
    {
        arg3 = 0;
        if (0 == ((arg1 + 0x40) >> 0xc))
        {
            arg3 = (0xfbf - arg1);
        }
    }
    /* tailcall */
    return sub_80298((arg1 + 0x40), arg2, arg3);
}

uint32_t sub_8fd7e(void* arg1)
{
    uint32_t r1 = 0xffff;
    int32_t i = 0;
    do
    {
        uint32_t r3_1 = (r1 ^ *(arg1 + i));
        int32_t j_1 = 0xfffffff8;
        int32_t j;
        do
        {
            r1 = ((r3_1 >> 1) & 0x7fff);
            if ((r3_1 & 1) != 0)
            {
                r1 = (r1 ^ 0xa001);
            }
            j = j_1;
            j_1 = (j_1 + 1);
            r3_1 = r1;
        } while (j != 0xffffffff);
        i = (i + 1);
    } while (i != 0x3e);
    return r1;
}

int32_t sub_8fdc0(void* arg1)
{
    uint32_t r3 = 0xffff;
    int32_t i = 0;
    do
    {
        uint32_t r0_1 = (*(arg1 + i) ^ r3);
        int32_t j_1 = 0xfffffff8;
        int32_t j;
        do
        {
            r3 = ((r0_1 >> 1) & 0x7fff);
            if ((r0_1 & 1) != 0)
            {
                r3 = (r3 ^ 0xa001);
            }
            j = j_1;
            j_1 = (j_1 + 1);
            r0_1 = r3;
        } while (j != 0xffffffff);
        i = (i + 1);
    } while (i != 0x3e);
    if (*(arg1 + 0x3e) != r3)
    {
        return 0xfffffff7;
    }
    int32_t r0_4 = sub_80200(0, arg1, 0x40);
    if (r0_4 != 0)
    {
        r0_4 = 0xfffffffd;
    }
    return r0_4;
}

int32_t sub_8fe1c(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + 0x40) + arg3) >= 0x1000)
    {
        arg3 = 0;
        if (0 == ((arg1 + 0x40) >> 0xc))
        {
            arg3 = (0xfbf - arg1);
        }
    }
    /* tailcall */
    return sub_80200((arg1 + 0x40), arg2, arg3);
}

int32_t sub_8fe42(int32_t arg1)
{
    int32_t var_18 = arg1;
    int32_t r1;
    int32_t var_14 = r1;
    int32_t r2;
    int32_t var_10 = r2;
    char var_9;
    int32_t r0_7;
    if (sub_80298(0x140, &var_9, 1) < 0)
    {
        r0_7 = 0xfffffffe;
    }
    else
    {
        uint32_t r0_1 = var_9;
        if (r0_1 >= 0x40)
        {
            r0_1 = 0;
            var_9 = 0;
        }
        if (sub_8fe1c((0x101 + (r0_1 * 0xc)), &var_18, 0xc) < 0)
        {
            r0_7 = 0xfffffffd;
        }
        else
        {
            char r0_6 = (var_9 + 1);
            if (r0_6 > 0x3f)
            {
                r0_6 = 0;
            }
            var_9 = r0_6;
            r0_7 = sub_80200(0x140, &var_9, 1);
        }
    }
    return r0_7;
}

int32_t sub_8feb2(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + 0x1000) + arg3) >= sub_4000)
    {
        arg3 = 0;
        if (0 == ((arg1 + 0x1000) >> 0xe))
        {
            arg3 = (0x2fff - arg1);
        }
    }
    /* tailcall */
    return sub_80200((arg1 + 0x1000), arg2, arg3);
}

int32_t sub_8fed8(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + 0x1000) + arg3) >= sub_4000)
    {
        arg3 = 0;
        if (0 == ((arg1 + 0x1000) >> 0xe))
        {
            arg3 = (0x2fff - arg1);
        }
    }
    /* tailcall */
    return sub_80298((arg1 + 0x1000), arg2, arg3);
}

int32_t sub_8fefe(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + sub_4000) + arg3) >= 0x8000)
    {
        arg3 = 0;
        if (0 == ((arg1 + sub_4000) >> 0xf))
        {
            arg3 = (0x3fff - arg1);
        }
    }
    /* tailcall */
    return sub_80200((arg1 + sub_4000), arg2, arg3);
}

int32_t sub_8ff24(int32_t arg1, int32_t arg2, int32_t arg3)
{
    if (((arg1 + sub_4000) + arg3) >= 0x8000)
    {
        arg3 = 0;
        if (0 == ((arg1 + sub_4000) >> 0xf))
        {
            arg3 = (0x3fff - arg1);
        }
    }
    /* tailcall */
    return sub_80298((arg1 + sub_4000), arg2, arg3);
}

int32_t sub_8ff4c(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    arg1[3] = 1;
    *(arg1 + 0xd) = 0;
    arg1[2] = 0;
    arg1[4] = arg2;
    *arg1 = (arg3 - 1);
    arg1[1] = 0;
    return 0;
}

int32_t sub_8ff62(int32_t* arg1)
{
    if (*(arg1 + 0xd) == 0)
    {
        return (*arg1 & (arg1[1] - arg1[2]));
    }
    return (*arg1 + 1);
}

int32_t sub_8ff78(int32_t* arg1)
{
    if (arg1[3] == 0)
    {
        return (*arg1 & (arg1[2] - arg1[1]));
    }
    return (*arg1 + 1);
}

uint32_t sub_8ff8e(void* arg1)
{
    return *(arg1 + 0xd);
}

uint32_t sub_8ff92(void* arg1)
{
    return *(arg1 + 0xc);
}

void sub_8ff96(int32_t* arg1, char arg2, uint32_t arg3 @ r12)
{
    /* unimplemented  {mrs r12, primask} */;
    /* unimplemented  {cpsid I} */;
    arg1[3] = 0;
    if (*(arg1 + 0xd) != 0)
    {
        arg1[2] = ((arg1[2] + 1) & *arg1);
    }
    arg1[4][arg1[1]] = arg2;
    arg1[1] = (*arg1 & (arg1[1] + 1));
    if (arg1[1] == arg1[2])
    {
        *(arg1 + 0xd) = 1;
    }
    __msr(arg3);
}

void sub_8ffd0(int32_t* arg1, char* arg2, int32_t arg3)
{
    int32_t i_1 = arg3;
    char* r5 = arg2;
    if (i_1 != 0)
    {
        int32_t i;
        do
        {
            char r1 = *r5;
            r5 = &r5[1];
            uint32_t r12;
            sub_8ff96(arg1, r1, r12);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
}

void sub_8fff6(uint32_t arg1, int32_t arg2, uint32_t arg3)
{
    int32_t* r1 = arg1;
    /* unimplemented  {mrs r2, primask} */;
    /* unimplemented  {cpsid I} */;
    *(r1 + 0xd) = 0;
    if (r1[3] == 0)
    {
        *(r1[4] + r1[2]);
        r1[2] = ((r1[2] + 1) & *r1);
        if (r1[1] == r1[2])
        {
            r1[3] = 1;
        }
    }
    __msr(arg3);
}

int32_t sub_9002e(int32_t* arg1, char* arg2, uint32_t arg3)
{
    /* unimplemented  {mrs r2, primask} */;
    /* unimplemented  {cpsid I} */;
    *(arg1 + 0xd) = 0;
    int32_t r0;
    if (arg1[3] != 0)
    {
        r0 = 0xffffffff;
    }
    else
    {
        *arg2 = arg1[4][arg1[2]];
        arg1[2] = (*arg1 & (arg1[2] + 1));
        if (arg1[1] == arg1[2])
        {
            arg1[3] = 1;
        }
        r0 = 0;
    }
    __msr(arg3);
    return r0;
}

void sub_9006e(void* arg1)
{
    *(arg1 + 4) = 0;
    *(arg1 + 8) = 0;
    *(arg1 + 0xd) = 0;
    *(arg1 + 0xc) = 1;
}

void* sub_9007c(void* arg1, int32_t arg2)
{
    int32_t i_1 = arg2;
    void* r0 = sub_91fe8(0x1ff, 1);
    if (i_1 != 0)
    {
        void* r5_1 = (arg1 + 0xc);
        int32_t i;
        do
        {
            int32_t r6_1 = *(r5_1 - 4);
            uint32_t r9_1 = *(r5_1 + 0xc);
            int32_t r0_1 = *(r5_1 + 8);
            int32_t r1 = *(r5_1 + 4);
            int32_t r2_1 = *r5_1;
            int32_t* r10_1 = *(r5_1 - 0xc);
            uint32_t j_1 = *(r5_1 - 8);
            uint32_t j_2 = j_1;
            int32_t var_34_1 = r6_1;
            int32_t var_30_1 = r2_1;
            int32_t var_2c_1 = r1;
            int32_t var_28_1 = r0_1;
            if (r6_1 != 1)
            {
                r0 = sub_91c50(r10_1, &j_2);
                if (r6_1 == 2)
                {
                    int32_t temp0_1 = 0;
                    uint32_t j = j_1;
                    while (j != 0)
                    {
                        j = (j >> 1);
                        temp0_1 = (temp0_1 + 1);
                    }
                    r0 = sub_91cee(r10_1, (0x1f - (0x20 - temp0_1)), r9_1);
                }
            }
            else
            {
                int16_t j_3 = j_1;
                if (r9_1 == 0)
                {
                    sub_91ce8(r10_1, j_3);
                }
                else
                {
                    sub_91ce4(r10_1, j_3);
                }
                r0 = sub_91c50(r10_1, &j_2);
            }
            r5_1 = (r5_1 + 0x1c);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
    return r0;
}

void sub_9010a(int32_t* arg1, uint32_t arg2)
{
    int32_t temp0 = 0;
    uint32_t i = arg2;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    *arg1 = (*arg1 & (!(3 << (0xfffffffe + (((0x20 * 0) + temp0) << 1)))));
    *arg1 = *arg1;
}

void sub_9012e(int32_t* arg1, uint32_t arg2)
{
    int32_t temp0 = 0;
    uint32_t i = arg2;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    *arg1 = (*arg1 & (!(3 << (0xfffffffe + (((0x20 * 0) + temp0) << 1)))));
    *arg1 = ((1 << (0xfffffffe + (((0x20 * 0) + temp0) << 1))) | *arg1);
}

void sub_90158(int32_t* arg1, uint32_t arg2)
{
    int32_t temp0 = 0;
    uint32_t i = arg2;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    *arg1 = (*arg1 & (!(3 << (0xfffffffe + (((0x20 * 0) + temp0) << 1)))));
    *arg1 = ((2 << (0xfffffffe + (((0x20 * 0) + temp0) << 1))) | *arg1);
}

void sub_90182(void* arg1, int16_t arg2, int32_t arg3)
{
    if (arg3 == 0)
    {
        *(arg1 + 0x1a) = arg2;
    }
    else
    {
        *(arg1 + 0x18) = arg2;
    }
}

void sub_9018c(void* arg1, int16_t arg2)
{
    *(arg1 + 0x18) = arg2;
}

void sub_90190(void* arg1, int16_t arg2)
{
    *(arg1 + 0x1a) = arg2;
}

int32_t sub_90194(void* arg1, int32_t arg2)
{
    int32_t r0 = (*(arg1 + 0x10) & arg2);
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_9019e(void* arg1, uint32_t arg2)
{
    int32_t temp0 = 0;
    uint32_t i = arg2;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    int32_t r6 = (3 << (0xfffffffe + (((0x20 * 0) + temp0) << 1)));
    *(arg1 + 0xc) = (*(arg1 + 0xc) & (!r6));
    *(arg1 + 0xc) = ((1 << (0xfffffffe + (((0x20 * 0) + temp0) << 1))) | *(arg1 + 0xc));
    sub_916cc(5);
    int32_t r8 = *(arg1 + 0x10);
    *(arg1 + 0xc) = (*(arg1 + 0xc) & (!r6));
    *(arg1 + 0xc) = ((2 << (0xfffffffe + (((0x20 * 0) + temp0) << 1))) | *(arg1 + 0xc));
    sub_916cc(5);
    int32_t r0_10 = *(arg1 + 0x10);
    *(arg1 + 0xc) = (*(arg1 + 0xc) & (!r6));
    *(arg1 + 0xc) = *(arg1 + 0xc);
    if (((r0_10 | r8) & arg2) == 0)
    {
        return 0;
    }
    int32_t r0_11 = 2;
    if ((r0_10 & arg2) != 0)
    {
        r0_11 = 1;
    }
    if ((r8 & arg2) == 0)
    {
        r0_11 = 2;
    }
    return r0_11;
}

int16_t* sub_9022c(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r0;
    if (arg1 == 0x40005c00)
    {
        r0 = 0x800000;
    }
    if (arg1 == 0x40005800)
    {
        r0 = 0x400000;
    }
    if (arg1 == 0x40005400)
    {
        r0 = 0x200000;
    }
    if (((arg1 == 0x40005c00 || arg1 == 0x40005800) || arg1 == 0x40005400))
    {
        sub_92000(r0, 1);
    }
    sub_91e50(arg1, 0);
    int32_t var_28 = arg2;
    int32_t var_24 = 0xbfff0000;
    int16_t var_20 = (arg3 << 1);
    int16_t var_1e = 0x400;
    int16_t var_1c = 0x4000;
    sub_91d7e(arg1, &var_28);
    sub_91e50(arg1, 1);
    return arg1;
}

int32_t sub_902b6(int16_t* arg1, int32_t arg2, char* arg3, uint32_t arg4, uint8_t* arg5, uint32_t arg6)
{
    int32_t lr;
    int32_t var_4 = lr;
    if (sub_90304(arg1, arg2, arg3, arg4, arg5, arg6) == 0)
    {
        return 0;
    }
    sub_904b8(arg1);
    sub_916cc(5);
    /* tailcall */
    return sub_90304(arg1, arg2, arg3, arg4, arg5, arg6);
}

uint32_t sub_90304(int16_t* arg1, int32_t arg2, char* arg3, uint32_t arg4, uint8_t* arg5, uint32_t arg6)
{
    uint32_t i_2 = arg4;
    char* r10 = arg3;
    int32_t r5 = *0x20006064;
    if (sub_91ed0(arg1, "%u %u %u\n") == 1)
    {
        int32_t i;
        do
        {
            if ((*0x20006064 + (0xfffffffb - r5)) >= 0)
            {
                sub_904b8(arg1);
                sub_916cc(2);
                break;
            }
            i = sub_91ed0(arg1, "%u %u %u\n");
        } while (i == 1);
    }
    int32_t r5_2 = *0x20006064;
    int32_t r0_6 = sub_91ed0(arg1, "%u %u %u\n");
    if (r0_6 == 1)
    {
        while ((*0x20006064 + (0xfffffffb - r5_2)) <= 0xffffffff)
        {
            if (sub_91ed0(arg1, "%u %u %u\n") != 1)
            {
                break;
            }
        }
    }
    if ((r0_6 != 1 || (r0_6 == 1 && (*0x20006064 + (0xfffffffb - r5_2)) <= 0xffffffff)))
    {
        uint32_t i_3 = arg6;
        if ((i_3 | i_2) == 0)
        {
            int32_t r0_26 = sub_90872(arg1, arg2, 1);
            sub_9093e(arg1);
            i_2 = (r0_26 >> 0x1f);
        }
        else
        {
            int32_t var_28_1;
            if (i_2 == 0)
            {
                var_28_1 = arg2;
            }
            else if (i_2 < 0)
            {
            label_90438:
                i_2 = 0xfffffff1;
            }
            else
            {
                if (sub_90872(arg1, arg2, 0) <= 0xffffffff)
                {
                    goto label_904aa;
                }
                if (sub_90988(arg1) == 0)
                {
                    goto label_904aa;
                }
                var_28_1 = arg2;
                uint32_t i_1;
                do
                {
                    sub_91eac(arg1, *r10);
                    int32_t r5_4 = *0x20006064;
                    if (sub_91ed0(arg1, 0x10000080) == 0)
                    {
                        while ((*0x20006064 + (0xfffffffb - r5_4)) < 0)
                        {
                            if (sub_91ed0(arg1, 0x10000080) != 0)
                            {
                                break;
                            }
                        }
                        if ((*0x20006064 + (0xfffffffb - r5_4)) >= 0)
                        {
                            goto label_904aa;
                        }
                    }
                    if (sub_90988(arg1) == 0)
                    {
                        goto label_904aa;
                    }
                    r10 = &r10[1];
                    i_1 = i_2;
                    i_2 = (i_2 - 1);
                } while (i_1 > 1);
            }
            if ((i_2 == 0 || (i_2 != 0 && i_2 >= 0)))
            {
                if (i_3 == 0)
                {
                label_904aa:
                    sub_9093e(arg1);
                }
                else
                {
                    int32_t r5_7 = (i_3 + 1);
                    if (i_3 == 0xffffffff)
                    {
                        i_3 = 1;
                    }
                    else if (i_3 < 1)
                    {
                        goto label_90438;
                    }
                    if ((sub_90872(arg1, var_28_1, 1) > 0xffffffff && sub_90988(arg1) != 0))
                    {
                        uint8_t* r6_1 = arg5;
                        if (r5_7 == 0)
                        {
                            sub_91e86(arg1, 1);
                            i_2 = sub_909bc(arg1);
                            *r6_1 = i_2;
                            r6_1 = &r6_1[1];
                        }
                        else
                        {
                            i_2 = i_3;
                        }
                        if ((r5_7 != 0 || (r5_7 == 0 && i_2 >= 1)))
                        {
                            do
                            {
                                uint32_t i_4 = i_2;
                                i_2 = (i_2 - 1);
                                int32_t r1_4;
                                if (i_4 == 1)
                                {
                                    r1_4 = 0;
                                }
                                else
                                {
                                    r1_4 = 1;
                                }
                                sub_91e86(arg1, r1_4);
                                *r6_1 = sub_909bc(arg1);
                                r6_1 = &r6_1[1];
                            } while ((i_2 + 1) > 1);
                        }
                        goto label_904aa;
                    }
                    sub_9093e(arg1);
                    i_2 = i_3;
                }
            }
        }
    }
    if ((r0_6 == 1 && (*0x20006064 + (0xfffffffb - r5_2)) > 0xffffffff))
    {
        i_2 = 0xfffffffb;
    }
    return i_2;
}

int32_t sub_904b8(int16_t* arg1)
{
    int16_t r0 = sub_91eb8(arg1, 0);
    int16_t r0_2 = sub_91eb8(arg1, 4);
    int16_t r0_4 = sub_91eb8(arg1, 8);
    int16_t r0_6 = sub_91eb8(arg1, 0xc);
    int16_t r0_8 = sub_91eb8(arg1, 0x1c);
    int16_t r0_10 = sub_91eb8(arg1, 0x20);
    sub_91e98(arg1, 1);
    sub_91756(0x64);
    sub_91e98(arg1, 0);
    arg1[2] = r0_2;
    arg1[4] = r0_4;
    arg1[6] = r0_6;
    arg1[0xe] = r0_8;
    arg1[0x10] = r0_10;
    *arg1 = (0xfcfe & r0);
    int32_t r0_15 = (*arg1 | 1);
    *arg1 = r0_15;
    return r0_15;
}

uint32_t sub_9053e(int32_t* arg1, int32_t arg2, char* arg3, int32_t arg4, char* arg5, int32_t arg6)
{
    int32_t r11 = arg6;
    int32_t r6 = arg4;
    char* r5 = arg3;
    uint32_t r0_28;
    if ((r11 | r6) == 0)
    {
        if (sub_90694(arg1) < 0)
        {
        label_90644:
            r0_28 = 0xfffffffb;
        }
        else
        {
            int32_t r0_25 = sub_9070e(arg1, (1 | (arg2 << 1)));
            sub_9075e(arg1);
            if (r0_25 == 1)
            {
                goto label_90640;
            }
            r0_28 = ((0xfffffff9 & (r0_25 >> 0x1f)) + 1);
        }
    }
    else
    {
        int32_t r0_2;
        int32_t r0_5;
        int32_t r4_1;
        bool cond:0_1;
        if (r6 != 0)
        {
            r0_2 = sub_90694(arg1);
            if (r0_2 < 0)
            {
                goto label_90644;
            }
            r0_5 = sub_9070e(arg1, (arg2 << 1));
            if (r0_5 != 1)
            {
                sub_9075e(arg1);
                r0_28 = r6;
                cond:0_1 = r0_5 < 0;
            }
            else if ((r6 << 0x18) != 0)
            {
                do
                {
                    r4_1 = sub_9070e(arg1, *r5);
                    if (r4_1 != 1)
                    {
                        break;
                    }
                    r6 = (r6 - 1);
                    r5 = &r5[1];
                } while ((r6 & 0xff) != 0);
                if (r4_1 != 1)
                {
                    sub_9075e(arg1);
                    r0_28 = r6;
                    goto label_90678;
                }
            }
        }
        int32_t r0_10;
        if (((r6 == 0 || ((r6 != 0 && r0_2 >= 0) && r0_5 == 1)) && r11 != 0))
        {
            r0_10 = sub_90694(arg1);
            if (r0_10 >= 0)
            {
                r4_1 = sub_9070e(arg1, (1 | (arg2 << 1)));
                if (r4_1 != 1)
                {
                    sub_9075e(arg1);
                    r0_28 = r11;
                label_90678:
                    cond:0_1 = r4_1 < 0;
                }
            }
        }
        if (((((r6 != 0 && r0_2 >= 0) && r0_5 != 1) || ((((r6 == 0 || ((r6 != 0 && r0_2 >= 0) && r0_5 == 1)) && r11 != 0) && r0_10 >= 0) && r4_1 != 1)) && cond:0_1))
        {
            r0_28 = 0xfffffffa;
        }
        if ((r6 == 0 || ((r6 != 0 && r0_2 >= 0) && r0_5 == 1)))
        {
            if (r11 != 0)
            {
                if ((r0_10 >= 0 && r4_1 == 1))
                {
                    if ((r11 << 0x18) == 0)
                    {
                        goto label_90616;
                    }
                    char* r8_1 = arg5;
                    int32_t r0_16;
                    int32_t r0_19;
                    int32_t i;
                    do
                    {
                        r11 = (r11 - 1);
                        int32_t r6_1 = 8;
                        int32_t r4_2 = 0;
                        do
                        {
                            char var_25;
                            r0_16 = sub_90a90(arg1, &var_25);
                            if (r0_16 < 0)
                            {
                                break;
                            }
                            r6_1 = (r6_1 - 1);
                            r4_2 = ((0x1fe & (r4_2 << 1)) + var_25);
                        } while ((r6_1 & 0xff) != 0);
                        if (r0_16 < 0)
                        {
                            break;
                        }
                        i = (r11 << 0x18);
                        int32_t r1_5 = 0;
                        if (i == 0)
                        {
                            r1_5 = 1;
                        }
                        r0_19 = sub_90a10(arg1, r1_5);
                        if (r0_19 <= 0xffffffff)
                        {
                            break;
                        }
                        *r8_1 = r4_2;
                        r8_1 = &r8_1[1];
                    } while (i != 0);
                    if ((!(r0_16 >= 0 && r0_19 <= 0xffffffff)))
                    {
                        goto label_90616;
                    }
                    sub_9075e(arg1);
                    r0_28 = 0xfffffffa;
                }
                if (r0_10 < 0)
                {
                    goto label_90644;
                }
            }
            else
            {
            label_90616:
                sub_9075e(arg1);
            label_90640:
                r0_28 = 0;
            }
        }
    }
    return r0_28;
}

int32_t sub_90694(int32_t* arg1)
{
    sub_91ce4(*arg1, arg1[1]);
    sub_91ce4(arg1[2], arg1[3]);
    int32_t r6 = *0x20006064;
    int32_t r0_3 = sub_91cd8(*arg1, arg1[1]);
    if (r0_3 == 0)
    {
        while ((*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)
        {
            if (sub_91cd8(*arg1, arg1[1]) != 0)
            {
                break;
            }
        }
    }
    int32_t r0_10;
    if ((r0_3 != 0 || (r0_3 == 0 && (*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)))
    {
        sub_91756(5);
        sub_91ce8(arg1[2], arg1[3]);
        sub_91756(5);
        sub_91ce8(*arg1, arg1[1]);
        sub_91756(2);
        r0_10 = 0;
    }
    if ((r0_3 == 0 && (*0x20006064 + (0xfffffffb - r6)) > 0xffffffff))
    {
        r0_10 = 0xffffffff;
    }
    return r0_10;
}

int32_t sub_9070e(int32_t* arg1, uint32_t arg2)
{
    uint32_t r5 = arg2;
    int32_t r6 = 8;
    int32_t r0_5;
    while (true)
    {
        if (sub_90a10(arg1, (r5 & 0x80)) == 0)
        {
            r6 = (r6 - 1);
            r5 = (r5 << 1);
            char var_19;
            if ((r6 & 0xff) != 0)
            {
                continue;
            }
            else if (sub_90a90(arg1, &var_19) >= 0)
            {
                r0_5 = 0;
                if (var_19 != 1)
                {
                    r0_5 = 1;
                }
                break;
            }
        }
        r0_5 = 0xfffffffa;
        break;
    }
    return r0_5;
}

int32_t sub_9075e(int32_t* arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    sub_91ce8(arg1[2], arg1[3]);
    sub_91756(3);
    sub_91ce4(*arg1, arg1[1]);
    int32_t r6 = *0x20006064;
    if (sub_91cd8(*arg1, arg1[1]) == 0)
    {
        int32_t i;
        do
        {
            int32_t r0_5 = (*0x20006064 + (0xfffffffb - r6));
            if (r0_5 > 0xffffffff)
            {
                return r0_5;
            }
            i = sub_91cd8(*arg1, arg1[1]);
        } while (i == 0);
    }
    sub_91756(5);
    /* tailcall */
    return sub_91ce4(arg1[2], arg1[3]);
}

int32_t sub_907ca(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    sub_90694(arg1);
    int32_t r0_2 = sub_9070e(arg1, (arg2 << 1));
    int32_t r0_4;
    if (r0_2 != 1)
    {
        sub_9075e(arg1);
        r0_4 = ((0xfffffff9 & (r0_2 >> 0x1f)) + 1);
    }
    else
    {
        while (((*0x20006064 * 0) - arg3) < 0)
        {
            /* nop */
        }
        sub_9075e(arg1);
        r0_4 = 0;
    }
    return r0_4;
}

int32_t sub_90820(int16_t* arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    sub_91e50(arg1, 0);
    int32_t r0_1 = sub_91d1c(arg1);
    int32_t r0_2;
    if (arg1 == 0x40005c00)
    {
        r0_2 = 0x800000;
    }
    else if (arg1 == 0x40005800)
    {
        r0_2 = 0x400000;
    }
    else
    {
        if (arg1 != 0x40005400)
        {
            return r0_1;
        }
        r0_2 = 0x200000;
    }
    /* tailcall */
    return sub_92000(r0_2, 0);
}

int32_t sub_90872(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r9 = arg2;
    sub_91e62(arg1, 1);
    int32_t r5 = *0x20006064;
    int32_t r0_1 = sub_91ed0(arg1, 0x10000001);
    if (r0_1 == 0)
    {
        while ((*0x20006064 + (0xfffffffb - r5)) < 0)
        {
            if (sub_91ed0(arg1, 0x10000001) != 0)
            {
                break;
            }
        }
    }
    int32_t r0_14;
    if ((r0_1 != 0 || (r0_1 == 0 && (*0x20006064 + (0xfffffffb - r5)) < 0)))
    {
        if (arg3 == 0)
        {
            r9 = (r9 << 1);
        }
        else if (arg3 == 1)
        {
            r9 = (1 | (r9 << 1));
        }
        sub_91eac(arg1, r9);
        int32_t r6_1 = *0x20006064;
        if (sub_91ed0(arg1, 0x10000002) == 0)
        {
            while ((*0x20006064 + (0xfffffffb - r6_1)) < 0)
            {
                if (sub_91ed0(arg1, 0x10000002) != 0)
                {
                    break;
                }
            }
            if ((*0x20006064 + (0xfffffffb - r6_1)) >= 0)
            {
                sub_91f02(arg1, 0x10000400);
                goto label_90932;
            }
        }
        uint32_t var_28_1 = arg1[0xc];
        r0_14 = 0;
    }
    if ((r0_1 == 0 && (*0x20006064 + (0xfffffffb - r5)) >= 0))
    {
        sub_91eac(arg1, 0);
    label_90932:
        r0_14 = 0xffffffff;
    }
    return r0_14;
}

int32_t sub_9093e(int16_t* arg1)
{
    sub_91e74(arg1, 1);
    int32_t r6 = *0x20006064;
    int32_t i = sub_91ed0(arg1, "%u %u %u\n");
    if (i == 1)
    {
        do
        {
            i = (*0x20006064 + (0xfffffffb - r6));
            if (i >= 0)
            {
                break;
            }
            i = sub_91ed0(arg1, "%u %u %u\n");
        } while (i == 1);
    }
    return i;
}

int32_t sub_90988(void* arg1)
{
    int32_t r0 = sub_91ed0(arg1, 0x10000400);
    if (r0 == 1)
    {
        sub_91f02(arg1, 0x10000400);
    }
    int32_t r0_2 = 0;
    if (r0 != 1)
    {
        r0_2 = 1;
    }
    return r0_2;
}

uint32_t sub_909bc(void* arg1)
{
    int32_t r6 = *0x20006064;
    int32_t r0 = sub_91ed0(arg1, 0x10000040);
    if (r0 == 0)
    {
        while ((*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)
        {
            if (sub_91ed0(arg1, 0x10000040) != 0)
            {
                break;
            }
        }
    }
    uint32_t r0_6;
    if ((r0 != 0 || (r0 == 0 && (*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)))
    {
        r0_6 = sub_91eb0(arg1);
    }
    if ((r0 == 0 && (*0x20006064 + (0xfffffffb - r6)) > 0xffffffff))
    {
        r0_6 = 0xffffffff;
    }
    return r0_6;
}

int32_t sub_90a10(int32_t* arg1, int32_t arg2)
{
    void* r0 = arg1[2];
    int16_t r2 = arg1[3];
    if (arg2 == 0)
    {
        sub_91ce8(r0, r2);
    }
    else
    {
        sub_91ce4(r0, r2);
    }
    sub_91756(3);
    sub_91ce4(*arg1, arg1[1]);
    int32_t r6 = *0x20006064;
    int32_t r0_3 = sub_91cd8(*arg1, arg1[1]);
    if (r0_3 == 0)
    {
        while ((*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)
        {
            if (sub_91cd8(*arg1, arg1[1]) != 0)
            {
                break;
            }
        }
    }
    int32_t r0_9;
    if ((r0_3 != 0 || (r0_3 == 0 && (*0x20006064 + (0xfffffffb - r6)) <= 0xffffffff)))
    {
        sub_91756(5);
        sub_91ce8(*arg1, arg1[1]);
        sub_91756(2);
        r0_9 = 0;
    }
    if ((r0_3 == 0 && (*0x20006064 + (0xfffffffb - r6)) > 0xffffffff))
    {
        r0_9 = 0xffffffff;
    }
    return r0_9;
}

int32_t sub_90a90(int32_t* arg1, char* arg2)
{
    sub_91ce4(arg1[2], arg1[3]);
    sub_91756(3);
    sub_91ce4(*arg1, arg1[1]);
    int32_t r5 = *0x20006064;
    int32_t r0_3 = sub_91cd8(*arg1, arg1[1]);
    if (r0_3 == 0)
    {
        while ((*0x20006064 + (0xfffffffb - r5)) <= 0xffffffff)
        {
            if (sub_91cd8(*arg1, arg1[1]) != 0)
            {
                break;
            }
        }
    }
    int32_t r0_11;
    if ((r0_3 != 0 || (r0_3 == 0 && (*0x20006064 + (0xfffffffb - r5)) <= 0xffffffff)))
    {
        sub_91756(3);
        int32_t r0_9 = sub_91cd8(arg1[2], arg1[3]);
        if (r0_9 != 0)
        {
            r0_9 = 1;
        }
        *arg2 = r0_9;
        sub_91756(2);
        sub_91ce8(*arg1, arg1[1]);
        sub_91756(2);
        r0_11 = 0;
    }
    if ((r0_3 == 0 && (*0x20006064 + (0xfffffffb - r5)) > 0xffffffff))
    {
        r0_11 = 0xffffffff;
    }
    return r0_11;
}

int32_t sub_90b1c(int32_t arg1, int32_t arg2) __pure
{
    int32_t r3 = (arg2 ^ arg1);
    int32_t i_1 = 0xfffffff8;
    int32_t r0;
    int32_t i;
    do
    {
        r0 = ((r3 >> 1) & 0x7fff);
        if ((r3 & 1) != 0)
        {
            r0 = (r0 ^ 0xa001);
        }
        i = i_1;
        i_1 = (i_1 + 1);
        r3 = r0;
    } while (i != 0xffffffff);
    return r0;
}

void sub_90b3c(int32_t arg1, int32_t arg2)
{
    *0x20005d58 = arg2;
    *0x20005d54 = arg1;
}

int32_t sub_90b52(int32_t arg1)
{
    int32_t r1 = 0x20000b98;
    if (*0x20005d58 > arg1)
    {
        r1 = (*0x20005d54 + (arg1 << 3));
    }
    return r1;
}

uint32_t sub_90b7a(int32_t arg1, char* arg2, int32_t* arg3)
{
    uint32_t r6 = *arg3;
    int32_t* r0 = sub_90b52(arg1);
    uint32_t r1 = r0[1];
    *arg3 = r1;
    if (r6 > r1)
    {
        r6 = r1;
    }
    uint32_t r1_3 = 0;
    if (((*(r0 + 6) << 0x1e) >= 0 && r6 != 0))
    {
        int32_t r2 = 0;
        do
        {
            arg2[r2] = *r0[r2];
            if ((*(r0 + 6) << 0x1c) < 0)
            {
                *r0[r2] = 0;
            }
            r2 = (r2 + 1);
        } while (r2 < r6);
        r1_3 = r6;
    }
    return r1_3;
}

uint32_t sub_90bc6(int32_t arg1, char* arg2, int32_t* arg3)
{
    uint32_t r4 = *arg3;
    int32_t* r0 = sub_90b52(arg1);
    uint32_t r1 = r0[1];
    *arg3 = r1;
    if (r4 > r1)
    {
        r4 = r1;
    }
    uint32_t r1_1 = *(r0 + 6);
    if ((r1_1 & 4) == 0)
    {
        if ((r1_1 << 0x1f) != 0)
        {
            r4 = 0;
        }
        else if (r4 != 0)
        {
            int32_t r1_3 = 0;
            do
            {
                *r0[r1_3] = arg2[r1_3];
                r1_3 = (r1_3 + 1);
            } while (r1_3 < r4);
            goto label_90c20;
        }
    }
    else if (r4 != 0)
    {
        int32_t r1_4 = 0;
        do
        {
            char* r3_2 = *r0;
            r3_2[r1_4] = (r3_2[r1_4] & (!arg2[r1_4]));
            r1_4 = (r1_4 + 1);
        } while (r1_4 < r4);
        goto label_90c20;
    }
    if (((r1_1 & 4) != 0 || ((r1_1 & 4) == 0 && (r1_1 << 0x1f) == 0)))
    {
        r4 = 0;
    label_90c20:
        *(r0 + 6) = (*(r0 + 6) | 0x8000);
    }
    return r4;
}

int32_t sub_90c2e(int32_t arg1) __pure
{
    int32_t r0 = 0;
    if (arg1 != 0)
    {
        if (arg1 == 0x52524521)
        {
            return 0;
        }
        r0 = 0;
        if (arg1 != 0x444d4321)
        {
            r0 = 1;
        }
    }
    return r0;
}

void sub_90c56(int32_t arg1, int32_t arg2)
{
    *0x20005d60 = arg2;
    *0x20005d5c = arg1;
}

int32_t sub_90c6c(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r12 = *0x20005d60;
    if (r12 != 0)
    {
        int32_t lr_1 = *0x20005d5c;
        int32_t r3_1 = 0;
        do
        {
            if (*(lr_1 + (r3_1 << 3)) == arg1)
            {
                /* jump -> *((lr_1 + (r3_1 << 3)) + 4) */
            }
            r3_1 = (r3_1 + 1);
        } while (r3_1 < r12);
    }
    return 0x444d4321;
}

uint32_t sub_90cb8(int16_t* arg1, int32_t arg2, char arg3, int32_t arg4, int32_t* arg5)
{
    char var_59 = arg4;
    char var_5a = arg3;
    void var_58;
    sub_97f48(&var_58, arg5, arg4);
    uint32_t r4_1 = (arg4 + 2);
    if (sub_902b6(arg1, arg2, &var_5a, r4_1, nullptr, 0) != 0)
    {
        r4_1 = 0xfffffffd;
    }
    return r4_1;
}

uint32_t sub_90d08(int16_t* arg1, int32_t arg2, uint8_t arg3, uint32_t arg4, int32_t* arg5)
{
    uint8_t var_59 = arg3;
    uint32_t r2 = (arg4 + 1);
    if (arg4 == 0)
    {
        r2 = 0xffffffff;
    }
    uint32_t r6;
    if (sub_902b6(arg1, arg2, &var_59, 1, &var_59, r2) != 0)
    {
        r6 = 0xfffffffe;
    }
    else
    {
        r6 = var_59;
        if (arg4 != 0)
        {
            r6 = arg4;
        }
        void var_58;
        sub_97f48(arg5, &var_58, r6);
    }
    return r6;
}

int32_t sub_90d5c(int32_t* arg1, int32_t arg2, int32_t arg3, char* arg4, char* arg5)
{
    int32_t lr = *arg1;
    if (lr > 3)
    {
        goto label_90e0e;
    }
    int32_t r1;
    int32_t r1_1;
    switch (lr)
    {
        case 0:
        {
            r1 = 0;
            if (arg3 == 0xfe)
            {
                *arg5 = 0;
                *arg1 = 1;
            }
            break;
        }
        case 1:
        {
            *arg1 = 0;
            if (arg3 != 0xfe)
            {
                bool cond:2_1 = arg2 == 1;
                if (arg2 == 1)
                {
                    cond:2_1 = arg3 == 4;
                }
                if (cond:2_1)
                {
                label_90de0:
                    *arg4 = arg3;
                    goto label_90e06;
                }
                if ((arg2 == 0 && arg3 == 5))
                {
                    goto label_90de0;
                }
                bool cond:3_1 = arg2 != 2;
                if (arg2 == 2)
                {
                    cond:3_1 = arg3 != 1;
                }
                if ((!cond:3_1))
                {
                    goto label_90de0;
                }
                r1 = 0;
                *arg1 = 0;
            }
            else
            {
                r1_1 = 1;
            label_90e0c:
                *arg1 = r1_1;
            label_90e0e:
                r1 = 0;
            }
            break;
        }
        case 2:
        {
            if (arg3 == 0xfe)
            {
                r1_1 = 3;
                goto label_90e0c;
            }
            arg4[*arg5] = arg3;
            char r1_8 = (*arg5 + 1);
            *arg5 = r1_8;
            r1 = 0;
            if (r1_8 >= 0x46)
            {
                *arg1 = 0;
            }
            break;
        }
        case 3:
        {
            r1 = 0;
            *arg1 = 0;
            if (arg3 == 4)
            {
                *arg4 = 4;
            label_90e06:
                *arg5 = 1;
                r1_1 = 2;
                goto label_90e0c;
            }
            if (arg3 == 0x40)
            {
                r1 = 1;
            }
            else if (arg3 == 0xfe)
            {
                arg4[*arg5] = 0xfe;
                int32_t r2 = 2;
                char r1_4 = (*arg5 + 1);
                *arg5 = r1_4;
                if (r1_4 > 0x45)
                {
                    r2 = 0;
                }
                *arg1 = r2;
                goto label_90e0e;
            }
            break;
        }
    }
    return r1;
}

int32_t sub_90e20(int32_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    arg1[1] = arg3;
    *arg1 = arg2;
    arg1[2] = arg4;
    arg1[3] = 0;
    arg1[4] = 0;
    sub_97886(&arg1[6], 0, 0x15);
    sub_90e48(arg1);
    return 0;
}

int32_t sub_90e48(int32_t* arg1)
{
    int32_t r0 = *arg1;
    int16_t r1 = arg1[1];
    if (arg1[2] == 0)
    {
        /* tailcall */
        return sub_9018c(r0, r1);
    }
    /* tailcall */
    return sub_90190(r0, r1);
}

int32_t sub_90e5a(int32_t* arg1)
{
    arg1[3] = 0;
    sub_90e48(arg1);
    return 0;
}

int32_t sub_90e6a(int32_t* arg1)
{
    arg1[3] = 1;
    sub_90e7a(arg1);
    return 0;
}

int32_t sub_90e7a(int32_t* arg1)
{
    int32_t r0 = *arg1;
    int16_t r1 = arg1[1];
    if (arg1[2] == 0)
    {
        /* tailcall */
        return sub_90190(r0, r1);
    }
    /* tailcall */
    return sub_9018c(r0, r1);
}

int32_t sub_90e8c(int32_t* arg1, int32_t arg2)
{
    arg1[3] = 2;
    arg1[0xb] = 0;
    arg1[6] = (arg2 >> 1);
    arg1[4] = 1;
    arg1[5] = (*0x20006064 + (arg2 >> 1));
    sub_90e48(arg1);
    return 0;
}

int32_t sub_90ebc(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    arg1[6] = arg2;
    arg1[3] = 4;
    arg1[7] = arg3;
    arg1[0xb] = (arg2 << 1);
    arg1[4] = 1;
    arg1[5] = (*0x20006064 + 0xc8);
    sub_90e48(arg1);
    return 0;
}

int32_t sub_90ee8(int32_t* arg1)
{
    int32_t r0 = arg1[3];
    if (r0 > 8)
    {
    label_91032:
        sub_90e48(arg1);
    }
    else
    {
        int32_t r0_59;
        int32_t r1_11;
        if (((jump_table_90efa[r0] == 5 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            if (arg1[0xb] == 0)
            {
                sub_90e7a(arg1);
            }
            else
            {
                sub_90e48(arg1);
            }
            arg1[0xb] = (arg1[0xb] ^ 1);
            r0_59 = *0x20006064;
            arg1[4] = 1;
            r1_11 = arg1[6];
        }
        int32_t r0_43;
        char r0_53;
        int32_t r0_70;
        if (((jump_table_90efa[r0] == 0x1c && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            if ((arg1[0xb] << 0x1f) != 0)
            {
                sub_90e48(arg1);
            }
            else
            {
                sub_90e7a(arg1);
            }
            char r0_42 = (arg1[0xb] - 1);
            arg1[0xb] = r0_42;
            if (r0_42 != 0)
            {
                r0_43 = *0x20006064;
            label_9106c:
                r0_70 = (r0_43 + 0xc8);
                arg1[4] = 1;
                goto label_91132;
            }
            r0_53 = 0;
            arg1[3] = 0;
        }
        char r0_67;
        if (((jump_table_90efa[r0] == 0x32 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            if ((arg1[0xb] << 0x1f) != 0)
            {
                sub_90e48(arg1);
            }
            else
            {
                sub_90e7a(arg1);
            }
            char r1_9 = (arg1[0xb] - 1);
            arg1[0xb] = r1_9;
            r0_43 = *0x20006064;
            if (r1_9 != 0)
            {
                goto label_9106c;
            }
            arg1[4] = 1;
            int32_t r1_13 = arg1[6];
            arg1[5] = (r0_43 + arg1[7]);
            r0_67 = (r1_13 << 1);
        }
        if (((jump_table_90efa[r0] == 0x48 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            void* r0_23;
            if (arg1[0xb] == 0)
            {
                sub_90e7a(arg1);
                r0_23 = &arg1[6];
            }
            else
            {
                sub_90e48(arg1);
                r0_23 = &arg1[7];
            }
            arg1[4] = 1;
            arg1[5] = (*r0_23 + *0x20006064);
            r0_67 = (arg1[0xb] ^ 1);
        }
        if ((((jump_table_90efa[r0] == 0x48 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0) || ((jump_table_90efa[r0] == 0x32 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0)))
        {
            arg1[0xb] = r0_67;
        }
        if (((jump_table_90efa[r0] == 0x61 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            if ((arg1[9] << 0x1f) != 0)
            {
                sub_90e7a(arg1);
            }
            else
            {
                sub_90e48(arg1);
            }
            char r0_48 = (arg1[0xb] - 1);
            arg1[0xb] = r0_48;
            if (r0_48 == 0)
            {
                r0_53 = 0;
            }
            else
            {
                arg1[9] = (arg1[9] >> 1);
                arg1[5] = (*0x20006064 + arg1[8]);
                r0_53 = 1;
            }
        }
        if ((((jump_table_90efa[r0] == 0x61 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0) || ((jump_table_90efa[r0] == 0x1c && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0)))
        {
            arg1[4] = r0_53;
        }
        if (((jump_table_90efa[r0] == 0x77 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0))
        {
            if ((arg1[0xa] << 0x1f) != 0)
            {
                sub_90e7a(arg1);
            }
            else
            {
                sub_90e48(arg1);
            }
            char r0_56 = (arg1[0xb] - 1);
            arg1[0xb] = r0_56;
            if (r0_56 == 0)
            {
                arg1[4] = 1;
                char r2_2 = arg1[7];
                r0_70 = (*0x20006064 + arg1[9]);
                arg1[0xa] = arg1[6];
                arg1[0xb] = r2_2;
                goto label_91132;
            }
            arg1[0xa] = (arg1[0xa] >> 1);
            r0_59 = *0x20006064;
            arg1[4] = 1;
            r1_11 = arg1[8];
        }
        if ((((jump_table_90efa[r0] == 5 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0) || ((jump_table_90efa[r0] == 0x77 && arg1[4] != 0) && (*0x20006064 - arg1[5]) >= 0)))
        {
            r0_70 = (r0_59 + r1_11);
        label_91132:
            arg1[5] = r0_70;
        }
        if (jump_table_90efa[r0] == 0x9b)
        {
            goto label_91032;
        }
        if (jump_table_90efa[r0] == 0x8d)
        {
            int32_t r0_37 = sub_90194(arg1[6], arg1[7]);
            int32_t r1_8 = arg1[8];
            if (r0_37 == 0)
            {
                if (r1_8 != 0)
                {
                    goto label_91032;
                }
            }
            else if (r1_8 != 1)
            {
                goto label_91032;
            }
        }
        if ((jump_table_90efa[r0] == 0x95 || jump_table_90efa[r0] == 0x8d))
        {
            sub_90e7a(arg1);
        }
    }
    return 0;
}

int32_t sub_9113a(int32_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6)
{
    int32_t r12;
    if (arg2 == 0)
    {
        r12 = 0;
    }
    else
    {
        r12 = 0;
        int32_t r11_1 = ((arg4 / 0xa) & 0x3ff);
        int32_t r6_3 = 0x10000000;
        int32_t i;
        do
        {
            int32_t r8_1 = *arg1;
            if ((0 == (r8_1 >> 0x1e) && (((r8_1 >> 0xa) & 0x3ff) * 0x32) == arg3))
            {
                int32_t r8_2 = (r8_1 & 0x3ff);
                int32_t r12_1 = ((r12 & 0x8fffffff) | (((r6_3 >> 0x1c) & 7) << 0x1c));
                if ((r8_2 * 0xa) < arg4)
                {
                    r12 = ((((0xfbf00000 & r12_1) | r11_1) | (r8_2 << 0xa)) | 0x4000000);
                }
                else
                {
                    int32_t r5_13 = ((0xf3f00000 & r12_1) | (r11_1 << 0xa));
                    if (arg5 == 0)
                    {
                        r12 = (r5_13 | r11_1);
                    }
                    else
                    {
                        r12 = ((r5_13 | ((arg5 / 0xa) & 0x3ff)) | 0x8000000);
                    }
                }
            }
            i = arg2;
            arg2 = (arg2 - 1);
            arg1 = &arg1[1];
            r6_3 = (r6_3 + 0x10000000);
        } while (i != 1);
    }
    if ((r12 & 0x70000000) == 0)
    {
        r12 = ((r12 & 0x8bf00000) | 0x1400280a);
    }
    return (arg6 | r12);
}

int32_t sub_9121e(int32_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4, int32_t arg5, int32_t arg6, int32_t arg7)
{
    int32_t r11;
    if (arg2 == 0)
    {
        r11 = 0;
    }
    else
    {
        r11 = 0;
        int32_t r5_4 = (arg5 * arg4);
        int32_t r6_5 = ((arg5 / 0xa) & 0x3ff);
        int32_t r8_1 = 0x10000000;
        int32_t r5_6 = ((r5_4 / 0x3d090) & 0x3ff);
        int32_t i;
        do
        {
            int32_t r12_1 = *arg1;
            uint32_t r4_9;
            int32_t r4_11;
            int32_t r4_19;
            int32_t r4_28;
            int32_t r5_15;
            int32_t r12_2;
            if (2 != (r12_1 >> 0x1e))
            {
                r4_9 = (r12_1 >> 0x1e);
                if (r4_9 == 0)
                {
                    r4_11 = (((r12_1 >> 0xa) & 0x3ff) * 0x32);
                }
                if ((r4_9 == 1 && ((((r12_1 >> 0x14) & 0x3ff) * 0x32) <= arg4 && (((r12_1 >> 0xa) & 0x3ff) * 0x32) >= arg3)))
                {
                    r12_2 = (r12_1 & 0x3ff);
                    int32_t r11_2 = ((r11 & 0x8fffffff) | (((r8_1 >> 0x1c) & 7) << 0x1c));
                    if ((r12_2 * 0xfa) < (r5_4 / 0x3e8))
                    {
                        r4_19 = ((0xfbf00000 & r11_2) | r5_6);
                        goto label_91350;
                    }
                    r4_28 = ((r5_6 << 0xa) | (0xf3f00000 & r11_2));
                    if (arg6 != 0)
                    {
                        r5_15 = (((arg6 * arg3) / 0x3d090) & 0x3ff);
                        goto label_91388;
                    }
                    r11 = (r4_28 | r5_6);
                }
            }
            if ((2 == (r12_1 >> 0x1e) && (((r12_1 >> 0x14) & 0x3ff) * 0x32) <= arg4))
            {
                r4_11 = (((r12_1 >> 0xa) & 0x3ff) * 0x32);
            }
            if ((((2 == (r12_1 >> 0x1e) && (((r12_1 >> 0x14) & 0x3ff) * 0x32) <= arg4) || ((2 != (r12_1 >> 0x1e) && r4_9 == 0) && r4_11 <= arg4)) && r4_11 >= arg3))
            {
                r12_2 = (r12_1 & 0x3ff);
                int32_t r11_1 = ((r11 & 0x8fffffff) | (((r8_1 >> 0x1c) & 7) << 0x1c));
                if ((r12_2 * 0xa) >= arg5)
                {
                    r4_28 = ((r6_5 << 0xa) | (0xf3f00000 & r11_1));
                    if (arg6 == 0)
                    {
                        r11 = (r4_28 | r6_5);
                    }
                    else
                    {
                        r5_15 = ((arg6 / 0xa) & 0x3ff);
                    label_91388:
                        r11 = ((r5_15 | r4_28) | 0x8000000);
                    }
                }
                else
                {
                    r4_19 = ((0xfbf00000 & r11_1) | r6_5);
                label_91350:
                    r11 = ((r4_19 | (r12_2 << 0xa)) | 0x4000000);
                }
            }
            i = arg2;
            arg2 = (arg2 - 1);
            arg1 = &arg1[1];
            r8_1 = (r8_1 + 0x10000000);
        } while (i != 1);
    }
    if ((r11 & 0x70000000) == 0)
    {
        r11 = ((r11 & 0x8bf00000) | 0x1400280a);
    }
    return (arg7 | r11);
}

int32_t sub_913c0() __pure
{
    return 0;
}

int32_t sub_913c4() __noreturn
{
    sub_97f48(0x20000000, &data_9ab64, 0xc74);
    sub_97886(0x20000c74, 0, 0x8370);
    sub_8ea36();
    /* no return */
}

int32_t sub_91424(int32_t* arg1, int32_t arg2, int32_t arg3, char* arg4, int32_t arg5, int32_t arg6)
{
    int32_t r5 = 0;
    arg1[1] = arg5;
    *arg1 = arg2;
    *(arg1 + 5) = arg5;
    arg1[2] = arg4;
    *(arg1 + 6) = arg3;
    if (arg3 != 0)
    {
        char* r6_1 = arg4;
        while (*r6_1 != arg5)
        {
            r5 = (r5 + 1);
            r6_1 = &r6_1[0x14];
            if (r5 >= arg3)
            {
                r5 = arg3;
                break;
            }
        }
    }
    int32_t r0_5 = *((arg4 + (r5 * 0x14)) + 8)(arg1, arg6);
    arg1[3] = 0;
    return r0_5;
}

int32_t sub_91486(int32_t* arg1, int32_t arg2, int32_t arg3, uint32_t arg4 @ r12)
{
    /* unimplemented  {mrs r12, primask} */;
    /* unimplemented  {cpsid I} */;
    int32_t r9 = 0;
    uint32_t r6 = 0;
    uint32_t i = arg1[1];
    uint32_t i_1 = *(arg1 + 5);
    uint32_t r4 = *(arg1 + 6);
    if (i != i_1)
    {
        r9 = 1;
    }
    uint32_t r5_2;
    if (r4 == 0)
    {
        r5_2 = 0;
    }
    else
    {
        char* r0 = arg1[2];
        r6 = 0;
        char* r3_1 = r0;
        while (*r3_1 != i)
        {
            r6 = (r6 + 1);
            r3_1 = &r3_1[0x14];
            if (r6 >= r4)
            {
                r6 = r4;
                break;
            }
        }
        r5_2 = 0;
        while (*r0 != i_1)
        {
            r5_2 = (r5_2 + 1);
            r0 = &r0[0x14];
            if (r5_2 >= r4)
            {
                r5_2 = r4;
                break;
            }
        }
    }
    __msr(arg4);
    uint32_t r6_1 = r6;
    uint32_t r0_1 = *(arg1 + 6);
    if (r6_1 != r0_1)
    {
        uint32_t r5_3 = r5_2;
        if (r5_3 != r0_1)
        {
            if (i == i_1)
            {
                *((arg1[2] + (r6_1 * 0x14)) + 0xc)(arg1, arg2);
            }
            else
            {
                if (arg3 != 0)
                {
                    int32_t r1 = arg1[2];
                    *((r1 + (r6_1 * 0x14)) + 4);
                    int32_t var_28_1 = *((r1 + (r5_3 * 0x14)) + 4);
                    sub_8fba2(arg3, "%s: %s -> %s\n", *arg1);
                }
                arg1[1] = *(arg1 + 5);
                int32_t r0_9 = arg1[2];
                int32_t r2_1 = *((r0_9 + (r6_1 * 0x14)) + 0x10);
                if (r2_1 != 0)
                {
                    r2_1(arg1, arg2);
                    r0_9 = arg1[2];
                }
                int32_t r2_2 = *((r0_9 + (r5_3 * 0x14)) + 8);
                if (r2_2 != 0)
                {
                    r2_2(arg1, arg2);
                }
                arg1[3] = 0;
            }
            return r9;
        }
    }
    while (true)
    {
        /* nop */
    }
}

void sub_9158a(void* arg1, char arg2, uint32_t arg3)
{
    /* unimplemented  {mrs r2, primask} */;
    /* unimplemented  {cpsid I} */;
    if (*(arg1 + 0xc) == 0)
    {
        *(arg1 + 5) = arg2;
    }
    __msr(arg3);
}

void sub_9159c(void* arg1, char arg2, uint32_t arg3)
{
    /* unimplemented  {mrs r2, primask} */;
    /* unimplemented  {cpsid I} */;
    if (*(arg1 + 0xc) == 0)
    {
        *(arg1 + 5) = arg2;
    }
    *(arg1 + 0xc) = 1;
    __msr(arg3);
}

int32_t j_sub_915ba(int32_t arg1, int32_t arg2, int32_t arg3)
{
    /* tailcall */
    return sub_915ba(arg1, arg2, arg3, 0);
}

int32_t sub_915ba(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t* lr = 0x20005d78;
    int32_t r0 = 0;
    while (*(lr - 0x14) != 0)
    {
        bool cond:0_1 = r0 >= 0x1f;
        lr = &lr[6];
        r0 = (r0 + 1);
        if (cond:0_1)
        {
            return 0xfffffffb;
        }
    }
    *(lr - 0x10) = arg2;
    *(lr - 0x14) = arg1;
    *(lr - 0xc) = arg3;
    int32_t r1 = *0x20006064;
    *(lr - 8) = 1;
    if (arg4 <= 0)
    {
        arg4 = 0;
    }
    if (arg4 >= 0x64)
    {
        arg4 = 0x64;
    }
    *lr = arg4;
    *(lr - 4) = (r1 + arg3);
    return r0;
}

int32_t sub_9161e(int32_t arg1)
{
    int32_t r0 = (arg1 * 3);
    *(0x20005d64 + (r0 << 3)) = 0;
    *((r0 << 3) + 0x20005d70) = 0;
    *((r0 << 3) + 0x20005d6c) = 0;
    *((r0 << 3) + 0x20005d68) = 0;
    *((r0 << 3) + 0x20005d78) = 0;
    return 0;
}

int32_t sub_91640()
{
    /* tailcall */
    return sub_91648(0xffffffff);
}

int32_t sub_91648(int32_t arg1)
{
    int32_t i = 0;
    int32_t r4 = 0;
    int32_t r8 = 0;
    do
    {
        int32_t r1_1 = *(0x20005d64 + i);
        if ((r1_1 != 0 && (*(i + 0x20005d78) >= arg1 && (*(i + 0x20005d70) != 0 && (*0x20006064 - *(i + 0x20005d74)) >= 0))))
        {
            *(i + 0x20005d74) = (*0x20006064 + *(i + 0x20005d6c));
            *(i + 0x20005d70) = 1;
            r1_1(*(i + 0x20005d68));
            r8 = (r8 | (1 << r4));
        }
        i = (i + 0x18);
        r4 = (r4 + 1);
    } while (i != 0x300);
    return r8;
}

void sub_916bc()
{
    *0x20006064 = (*0x20006064 + 1);
}

int32_t sub_916cc(int32_t arg1)
{
    int32_t r0 = (arg1 + *0x20006064);
    if ((*0x20006064 - r0) > 0xffffffff)
    {
        return r0;
    }
    do
    {
        __wfi();
    } while ((*0x20006064 - r0) < 0);
    return r0;
}

int32_t sub_916f0()
{
    void var_20;
    sub_91f40(&var_20);
    sub_92000(0x10, 1);
    int32_t var_18;
    sub_92104(0x40001000, (-1 + ((var_18 / 0xf4240) << 1)), 1);
    sub_9210e(0x40001000, 0xffff);
    sub_92116(0x40001000, 1);
    sub_921d0(0x40001000, 1);
    sub_92128(0x40001000, 1);
    return 0x40001000;
}

int32_t sub_91756(int32_t arg1)
{
    sub_9210a(0x40001000, 0);
    int32_t r0;
    do
    {
        r0 = sub_92112(0x40001000);
    } while (r0 < arg1);
    return r0;
}

void sub_91778(int32_t* arg1)
{
    *0xe000e010 = 5;
    int32_t r2 = *0xe000e018;
    int32_t r12 = *0x20006064;
    int32_t lr = *0xe000ed04;
    *0xe000e010 = 7;
    int32_t r1 = *0xe000e014;
    *arg1 = (r1 - r2);
    int32_t r3_1 = 0;
    if (r2 > (r1 >> 1))
    {
        r3_1 = 1;
    }
    arg1[1] = ((r3_1 & (lr >> 0x1a)) + r12);
}

int32_t sub_917c2(int16_t* arg1, int16_t arg2)
{
    int32_t r5 = *0x20006064;
    if (sub_923ca(arg1, 0x80) == 0)
    {
        while ((*0x20006064 + (0xffffffec - r5)) <= 0xffffffff)
        {
            if (sub_923ca(arg1, 0x80) != 0)
            {
                break;
            }
        }
        if ((*0x20006064 + (0xffffffec - r5)) > 0xffffffff)
        {
            goto label_9182e;
        }
    }
    sub_92388(arg1, arg2);
    int32_t r5_2 = *0x20006064;
    int32_t r0_7 = sub_923ca(arg1, 0x80);
    if (r0_7 == 0)
    {
        while ((*0x20006064 + (0xffffffec - r5_2)) < 0)
        {
            if (sub_923ca(arg1, 0x80) != 0)
            {
                break;
            }
        }
    }
    int32_t r0_12;
    if ((r0_7 != 0 || (r0_7 == 0 && (*0x20006064 + (0xffffffec - r5_2)) < 0)))
    {
        r0_12 = 1;
    }
    if ((r0_7 == 0 && (*0x20006064 + (0xffffffec - r5_2)) >= 0))
    {
    label_9182e:
        r0_12 = 0xffffffff;
    }
    return r0_12;
}

int32_t sub_91838(int32_t arg1)
{
    *0x40023800 = (*0x40023800 | 1);
    *0x40023808 = 0;
    *0x40023800 = (0xfef6ffff & *0x40023800);
    *0x40023804 = 0x24003010;
    *0x40023800 = (*0x40023800 & 0xfffbffff);
    *0x4002380c = 0;
    if (arg1 == 0)
    {
        *0x40023800 = (*0x40023800 | 0x40000);
    }
    int32_t i = 0;
    int32_t var_10 = 0;
    *0x40023800 = (*0x40023800 | 0x10000);
    do
    {
        i = (i + 1);
        if ((*0x40023800 & "%u %u %u\n") != 0)
        {
            break;
        }
    } while (i != 0x5000);
    int32_t r0_11;
    if ((*0x40023800 & "%u %u %u\n") == 0)
    {
        r0_11 = 0;
    }
    else
    {
        r0_11 = 1;
    }
    int32_t r0_12 = r0_11;
    if (r0_12 == 1)
    {
        *0x40023840 = (*0x40023840 | 0x10000000);
        *0x40007000 = (*0x40007000 | sub_4000);
        *0x40023808 = *0x40023808;
        *0x40023808 = (*0x40023808 | 0x8000);
        *0x40023808 = (*0x40023808 | 0x1400);
        *0x40023804 = 0x7405418;
        *0x40023800 = (*0x40023800 | 0x1000000);
        while ((*0x40023800 & 0x2000000) == 0)
        {
            /* nop */
        }
        *0x40023c00 = 0x605;
        *0x40023808 = (*0x40023808 & 0xfffffffc);
        *0x40023808 = (*0x40023808 | 2);
        while ((*0x40023808 & 0xc) != 8)
        {
            /* nop */
        }
        r0_12 = (*0x40023800 & 0xfffffffe);
        *0x40023800 = r0_12;
    }
    *0xe000ed08 = 0x8000000;
    return r0_12;
}

uint32_t sub_91952()
{
    int32_t r2 = (*0x40023808 & 0xc);
    uint32_t r1_1 = 0xf42400;
    if (r2 == 8)
    {
        int32_t r3_1 = 0x16e3600;
        if ((*0x40023804 & 0x400000) == 0)
        {
            r3_1 = 0xf42400;
        }
        r1_1 = ((((*0x40023804 >> 6) & 0x1ff) * (r3_1 / (*0x40023804 & 0x3f))) / (2 + (((*0x40023804 >> 0x10) & 3) << 1)));
    }
    else if (r2 == 4)
    {
        r1_1 = 0x16e3600;
    }
    *0x20000ba0 = r1_1;
    uint32_t r0_3 = (r1_1 >> *(0x9a584 + ((*0x40023808 >> 4) & 0xf)));
    *0x20000ba0 = r0_3;
    return r0_3;
}

void sub_919d0(void* arg1, int32_t* arg2)
{
    *(arg1 + 4) = ((*arg2 | (*(arg1 + 4) & 0xfcfffeff)) | (arg2[1] << 8));
    *(arg1 + 8) = (((arg2[4] | (arg2[5] | (*(arg1 + 8) & 0xc0fff7fd))) | arg2[3]) | (arg2[2] << 1));
    *(arg1 + 0x2c) = ((*(arg1 + 0x2c) & 0xff0fffff) | ((arg2[6] - 1) << 0x14));
}

int32_t sub_91a2a(int32_t* arg1)
{
    int32_t r0_1 = (arg1[3] | ((arg1[1] | (*arg1 | (*0x40012304 & 0xfffc30e0))) | arg1[2]));
    *0x40012304 = r0_1;
    return r0_1;
}

void sub_91a5e(void* arg1, int32_t arg2)
{
    int32_t r2 = *(arg1 + 8);
    int32_t r3 = (r2 | 1);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfffffffe);
    }
    *(arg1 + 8) = r3;
}

void* sub_91a70(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r12 = (arg2 * 3);
    int32_t* r4 = (arg1 + 0x10);
    if (arg2 > 9)
    {
        r12 = (r12 - 0x1e);
    }
    if (arg2 > 9)
    {
        r4 = (arg1 + 0xc);
    }
    *r4 = ((arg4 << r12) | (*r4 & (!(7 << r12))));
    void* r0;
    int32_t r3_2;
    if (arg3 <= 6)
    {
        r0 = (arg1 + 0x34);
        r3_2 = 0xfffffffb;
    }
    else if (arg3 > 0xc)
    {
        r0 = (arg1 + 0x2c);
        r3_2 = 0xffffffbf;
    }
    else
    {
        r0 = (arg1 + 0x30);
        r3_2 = 0xffffffdd;
    }
    int32_t r2_1 = ((arg3 * 5) + r3_2);
    *r0 = ((arg2 << r2_1) | (*r0 & (!(0x1f << r2_1))));
    return r0;
}

void sub_91ada(void* arg1)
{
    *(arg1 + 8) = (*(arg1 + 8) | 0x40000000);
}

uint32_t sub_91ae6(void* arg1)
{
    return *(arg1 + 0x4c);
}

int32_t sub_91aee(int32_t* arg1, int32_t arg2)
{
    int32_t r0 = (*arg1 & arg2);
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

void sub_91afa(int32_t arg1)
{
    *0x40013c14 = arg1;
}

void sub_91b06()
{
    if (*0x40023c10 > 0xffffffff)
    {
        return;
    }
    *0x40023c04 = 0x45670123;
    *0x40023c04 = 0xcdef89ab;
}

void sub_91b2e()
{
    *0x40023c10 = (*0x40023c10 | 0x80000000);
}

int32_t sub_91b40(int32_t arg1, int32_t arg2)
{
    int32_t r0 = sub_91ba8();
    if (r0 == 8)
    {
        *0x40023c10 = (*0x40023c10 & 0xfffffcff);
        int32_t r0_3 = 0x300;
        if (arg2 < 3)
        {
            r0_3 = (arg2 << 8);
        }
        *0x40023c10 = (r0_3 | *0x40023c10);
        *0x40023c10 = (*0x40023c10 & 0xffffff07);
        *0x40023c10 = ((*0x40023c10 | arg1) | 2);
        *0x40023c10 = (*0x40023c10 | 0x10000);
        r0 = sub_91ba8();
        *0x40023c10 = (*0x40023c10 & 0xfffffffd);
        *0x40023c10 = (*0x40023c10 & 0xffffff07);
    }
    return r0;
}

int32_t sub_91ba8()
{
    int32_t var_c = 8;
    int32_t i;
    do
    {
        i = sub_91c18();
    } while (i == 1);
    return i;
}

int32_t sub_91bc4(int32_t* arg1, int32_t arg2)
{
    int32_t r0 = sub_91ba8();
    if (r0 == 8)
    {
        *0x40023c10 = (*0x40023c10 & 0xfffffcff);
        *0x40023c10 = (*0x40023c10 | 0x200);
        *0x40023c10 = (*0x40023c10 | 1);
        *arg1 = arg2;
        r0 = sub_91ba8();
        *0x40023c10 = (*0x40023c10 & 0xfffffffe);
    }
    return r0;
}

void sub_91c0c(int32_t arg1)
{
    *0x40023c0c = arg1;
}

int32_t sub_91c18()
{
    if ((*0x40023c0c & 0x10000) != 0)
    {
        return 1;
    }
    if ((*0x40023c0c & 0x10) != 0)
    {
        return 5;
    }
    int32_t r0_2;
    if ((*0x40023c0c & 0xef) != 0)
    {
        r0_2 = 6;
    }
    else
    {
        r0_2 = (8 - ((*0x40023c0c >> 1) & 1));
    }
    return r0_2;
}

void sub_91c50(int32_t* arg1, int32_t* arg2)
{
    int32_t r8 = *arg2;
    int32_t r3 = 0;
    int32_t i = 0;
    do
    {
        int32_t r10_1 = (1 << i);
        if ((r8 & r10_1) != 0)
        {
            int32_t r6_1 = (3 << r3);
            int32_t r6_2 = (!r6_1);
            *arg1 = (*arg1 & (!r6_1));
            int32_t r2_3 = arg2[1];
            *arg1 = (*arg1 | (r2_3 << r3));
            if ((r2_3 - 1) <= 1)
            {
                arg1[2] = (arg1[2] & r6_2);
                arg1[2] = ((arg2[2] << r3) | arg1[2]);
                arg1[1] = (arg1[1] & (!r10_1));
                arg1[1] = ((arg2[3] << i) | arg1[1]);
            }
            arg1[3] = (arg1[3] & r6_2);
            arg1[3] = ((arg2[4] << r3) | arg1[3]);
        }
        i = (i + 1);
        r3 = (r3 + 2);
    } while (i != 0x10);
}

int32_t sub_91cd8(void* arg1, int32_t arg2)
{
    int32_t r0 = (*(arg1 + 0x10) & arg2);
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

void sub_91ce4(void* arg1, int16_t arg2)
{
    *(arg1 + 0x18) = arg2;
}

void sub_91ce8(void* arg1, int16_t arg2)
{
    *(arg1 + 0x1a) = arg2;
}

void* sub_91cee(void* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r12 = (0x1c & (arg2 << 2));
    void* r0 = (arg1 + (0x7ffc & (arg2 >> 1)));
    *(r0 + 0x20) = (*(r0 + 0x20) & (!(0xf << r12)));
    *(r0 + 0x20) = ((arg3 << r12) | *(r0 + 0x20));
    return r0;
}

void sub_91d1c(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r0;
    if (arg1 == 0x40005c00)
    {
        sub_92030(0x800000, 1);
        r0 = 0x800000;
    }
    else if (arg1 == 0x40005800)
    {
        sub_92030(0x400000, 1);
        r0 = 0x400000;
    }
    else
    {
        if (arg1 != 0x40005400)
        {
            return;
        }
        sub_92030(0x200000, 1);
        r0 = 0x200000;
    }
    /* tailcall */
    return sub_92030(r0, 0);
}

uint32_t sub_91d7e(int16_t* arg1, int32_t* arg2)
{
    int16_t r6 = arg1[2];
    void var_28;
    sub_91f40(&var_28);
    int32_t var_20;
    arg1[2] = ((r6 & 0xffc0) | (var_20 / 0xf4240));
    *arg1 = (*arg1 & 0xfffe);
    uint32_t r0_6 = (var_20 / 0xf4240);
    int32_t r2_1 = *arg2;
    uint32_t r1_1;
    if (r2_1 <= 0x186a0)
    {
        r1_1 = (var_20 / (r2_1 << 1));
        if ((0xfffc & r1_1) < 4)
        {
            r1_1 = 4;
        }
    }
    else
    {
        uint32_t r1_2;
        if (*(arg2 + 6) != 0xbfff)
        {
            r1_2 = ((var_20 / (0x19 * r2_1)) | sub_4000);
        }
        else
        {
            r1_2 = (var_20 / (r2_1 * 3));
        }
        if ((r1_2 & 0xfff) == 0)
        {
            r1_2 = (r1_2 | 1);
        }
        r1_1 = (r1_2 | 0x8000);
        r0_6 = ((0x12c * r0_6) / 0x3e8);
    }
    arg1[0x10] = (r0_6 + 1);
    arg1[0xe] = r1_1;
    *arg1 = (*arg1 | 1);
    *arg1 = (((*arg1 & 0xfbf5) | arg2[1]) | *(arg2 + 0xa));
    uint32_t r0_17 = (arg2[3] | arg2[2]);
    arg1[4] = r0_17;
    return r0_17;
}

void sub_91e50(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 1);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfffe);
    }
    *arg1 = r3;
}

void sub_91e62(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 0x100);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfeff);
    }
    *arg1 = r3;
}

void sub_91e74(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 0x200);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfdff);
    }
    *arg1 = r3;
}

void sub_91e86(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 0x400);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfbff);
    }
    *arg1 = r3;
}

void sub_91e98(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3_1 = (r2 & 0x7fff);
    if (arg2 != 0)
    {
        r3_1 = (r2 | 0x8000);
    }
    *arg1 = r3_1;
}

void sub_91eac(void* arg1, int16_t arg2)
{
    *(arg1 + 0x10) = arg2;
}

uint32_t sub_91eb0(void* arg1)
{
    return *(arg1 + 0x10);
}

uint32_t sub_91eb8(void* arg1, int32_t arg2)
{
    int32_t var_4 = 0;
    return *(arg1 + arg2);
}

int32_t sub_91ed0(void* arg1, int32_t arg2)
{
    int32_t var_4 = 0;
    int32_t var_8 = 0;
    uint32_t r0_1 = (arg2 & 0xffffff);
    int32_t* r1_2;
    if ((arg2 >> 0x1c) == 0)
    {
        r0_1 = (r0_1 >> 0x10);
        r1_2 = (arg1 + 0x18);
    }
    else
    {
        r1_2 = (arg1 + 0x14);
    }
    int32_t r0_2 = (r0_1 & *r1_2);
    if (r0_2 != 0)
    {
        r0_2 = 1;
    }
    return r0_2;
}

void sub_91f02(void* arg1, int32_t arg2)
{
    *(arg1 + 0x14) = (!arg2);
}

void sub_91f08()
{
    *0x40023800 = (*0x40023800 | 1);
    *0x40023808 = 0;
    *0x40023800 = (*0x40023800 & 0xfef6ffff);
    *0x40023804 = 0x24003010;
    *0x40023800 = (*0x40023800 & 0xfffbffff);
    *0x4002380c = 0;
}

void sub_91f40(int32_t* arg1)
{
    int32_t r3 = (*0x40023808 & 0xc);
    uint32_t r2_1 = 0xf42400;
    if (r3 == 8)
    {
        int32_t r3_1 = 0x16e3600;
        if ((*0x40023804 & 0x400000) == 0)
        {
            r3_1 = 0xf42400;
        }
        r2_1 = ((((*0x40023804 >> 6) & 0x1ff) * (r3_1 / (*0x40023804 & 0x3f))) / (2 + (((*0x40023804 >> 0x10) & 3) << 1)));
    }
    else if (r3 == 4)
    {
        r2_1 = 0x16e3600;
    }
    *arg1 = r2_1;
    uint32_t r2_6 = (r2_1 >> *(0x9a594 + ((*0x40023808 >> 4) & 0xf)));
    arg1[1] = r2_6;
    arg1[2] = (r2_6 >> *(0x9a594 + ((*0x40023808 >> 0xa) & 7)));
    arg1[3] = (r2_6 >> *(0x9a594 + ((*0x40023808 >> 0xd) & 7)));
}

int32_t sub_91fe8(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023830;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023830 = r0;
    return r0;
}

int32_t sub_92000(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023840;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023840 = r0;
    return r0;
}

int32_t sub_92018(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023844;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023844 = r0;
    return r0;
}

int32_t sub_92030(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023820;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023820 = r0;
    return r0;
}

int32_t sub_92048(int32_t arg1, int32_t arg2)
{
    int32_t r1 = *0x40023824;
    int32_t r0;
    if (arg2 == 0)
    {
        r0 = (r1 & (!arg1));
    }
    else
    {
        r0 = (arg1 | r1);
    }
    *0x40023824 = r0;
    return r0;
}

void sub_92060(int16_t* arg1, int16_t* arg2)
{
    uint32_t r12 = *arg1;
    if (arg1 == 0x40000c00)
    {
    label_920b4:
        r12 = (arg2[1] | (r12 & 0xffffff8f));
    }
    int32_t r3_1;
    if ((arg1 > 0x40000bff && arg1 != 0x40000c00))
    {
        if (arg1 == 0x40010400)
        {
            goto label_920b4;
        }
        r3_1 = 0x40010000;
    }
    if (arg1 <= 0x40000bff)
    {
        if (arg1 == 0x40000000)
        {
            goto label_920b4;
        }
        if (arg1 == 0x40000400)
        {
            goto label_920b4;
        }
        r3_1 = 0x40000800;
    }
    if ((arg1 == 0x40000c00 || (((arg1 > 0x40000bff && arg1 != 0x40000c00) || arg1 <= 0x40000bff) && arg1 != r3_1)))
    {
        int32_t r3_3 = (arg1 | 0x400);
        if (r3_3 != 0x40001400)
        {
            r12 = ((r12 & 0xfffffcff) | arg2[4]);
        }
        *arg1 = r12;
        *(arg1 + 0x2c) = *(arg2 + 4);
        arg1[0x14] = *arg2;
        if (r3_3 == 0x40010400)
        {
            arg1[0x18] = arg2[5];
        }
        arg1[0xa] = 1;
        return;
    }
    if ((((arg1 > 0x40000bff && arg1 != 0x40000c00) || arg1 <= 0x40000bff) && arg1 == r3_1))
    {
        goto label_920b4;
    }
}

void sub_920f4(int32_t* arg1)
{
    arg1[1] = 0xffffffff;
    arg1[2] = 0;
    *arg1 = 0;
    *(arg1 + 0xa) = 0;
}

void sub_92104(void* arg1, int16_t arg2, int16_t arg3)
{
    *(arg1 + 0x28) = arg2;
    *(arg1 + 0x14) = arg3;
}

void sub_9210a(void* arg1, int32_t arg2)
{
    *(arg1 + 0x24) = arg2;
}

void sub_9210e(void* arg1, int32_t arg2)
{
    *(arg1 + 0x2c) = arg2;
}

int32_t sub_92112(void* arg1)
{
    return *(arg1 + 0x24);
}

void sub_92116(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 2);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfffd);
    }
    *arg1 = r3;
}

void sub_92128(int16_t* arg1, int32_t arg2)
{
    int16_t r2 = *arg1;
    int16_t r3 = (r2 | 1);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xfffe);
    }
    *arg1 = r3;
}

void sub_9213a(void* arg1, int16_t* arg2)
{
    *(arg1 + 0x20) = (*(arg1 + 0x20) & 0xffef);
    uint32_t lr = *(arg1 + 4);
    int16_t r12 = ((*(arg1 + 0x18) & 0x8cff) | (*arg2 << 8));
    int32_t r2_5 = (((*(arg1 + 0x20) & 0xffffffdf) | (arg2[6] << 4)) | (arg2[1] << 4));
    if ((arg1 | 0x400) == 0x40010400)
    {
        r2_5 = (((r2_5 & 0xff3f) | (0xffb0 & (arg2[7] << 4))) | (arg2[2] << 4));
        lr = (((lr & 0xfffff3ff) | (arg2[8] << 2)) | (arg2[9] << 2));
    }
    *(arg1 + 4) = lr;
    *(arg1 + 0x18) = r12;
    *(arg1 + 0x38) = *(arg2 + 8);
    *(arg1 + 0x20) = r2_5;
}

void sub_921b2(int32_t* arg1)
{
    arg1[1] = 0;
    *arg1 = 0;
    arg1[4] = 0;
    arg1[3] = 0;
    arg1[2] = 0;
}

int32_t sub_921c2(void* arg1)
{
    return *(arg1 + 0x3c);
}

int32_t sub_921c6(void* arg1, int32_t arg2)
{
    int32_t r0 = (*(arg1 + 0x10) & arg2);
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

void sub_921d0(void* arg1, int32_t arg2)
{
    *(arg1 + 0x10) = (!arg2);
}

void sub_921d8(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    char const* const r0;
    if (arg1 > 0x40004fff)
    {
        if (arg1 != 0x40005000)
        {
            int32_t r0_1;
            if (arg1 == 0x40011400)
            {
                sub_92048(0x20, 1);
                r0_1 = 0x20;
            }
            else
            {
                if (arg1 != 0x40011000)
                {
                    return;
                }
                sub_92048(0x10, 1);
                r0_1 = 0x10;
            }
            /* tailcall */
            return sub_92048(r0_1, 0);
        }
        sub_92030(0x100000, 1);
        r0 = __builtin_memcpy;
    }
    else if (arg1 == 0x40004400)
    {
        sub_92030("%u %u %u\n", 1);
        r0 = "%u %u %u\n";
    }
    else if (arg1 == 0x40004800)
    {
        sub_92030(0x40000, 1);
        r0 = &data_40000;
    }
    else
    {
        if (arg1 != 0x40004c00)
        {
            return;
        }
        sub_92030(0x80000, 1);
        r0 = &data_80000;
    }
    /* tailcall */
    return sub_92030(r0, 0);
}

int32_t sub_9229c(void* arg1, int32_t* arg2)
{
    *(arg1 + 0x10) = ((*(arg1 + 0x10) & 0xcfff) | *(arg2 + 6));
    *(arg1 + 0xc) = ((((*(arg1 + 0xc) & 0xe9f3) | arg2[1]) | arg2[2]) | *(arg2 + 0xa));
    *(arg1 + 0x14) = ((*(arg1 + 0x14) & 0xfcff) | arg2[3]);
    void var_28;
    sub_91f40(&var_28);
    int32_t r2 = 2;
    void* r0_13;
    void var_20;
    void var_1c;
    if ((arg1 | 0x400) != 0x40011400)
    {
        r0_13 = &var_20;
    }
    else
    {
        r0_13 = &var_1c;
    }
    int32_t r6 = 4;
    if (*(arg1 + 0xc) < 0)
    {
        r2 = 1;
    }
    uint32_t r0_16 = ((0x19 * *r0_13) / (*arg2 << r2));
    uint32_t r2_2 = (r0_16 / 0x64);
    int32_t r3_1 = *(arg1 + 0xc);
    if (r3_1 < 0)
    {
        r6 = 3;
    }
    int32_t r0_21 = 0xf;
    if (r3_1 < 0)
    {
        r0_21 = 7;
    }
    int32_t r0_23 = ((r0_21 & ((((r0_16 + (r2_2 * 0xffffff9c)) << r6) + 0x32) / 0x64)) | (r2_2 << 4));
    *(arg1 + 8) = r0_23;
    return r0_23;
}

void sub_92360(void* arg1, int32_t arg2)
{
    int16_t r2 = *(arg1 + 0xc);
    int16_t r3 = (r2 | 0x2000);
    if (arg2 == 0)
    {
        r3 = (r2 & 0xdfff);
    }
    *(arg1 + 0xc) = r3;
}

void sub_92372(void* arg1, int32_t arg2)
{
    int16_t r2 = *(arg1 + 0xc);
    int16_t r3_1 = (r2 & 0x7fff);
    if (arg2 != 0)
    {
        r3_1 = (r2 | 0x8000);
    }
    *(arg1 + 0xc) = r3_1;
}

void sub_92388(void* arg1, int16_t arg2)
{
    *(arg1 + 4) = (arg2 & 0x1ff);
}

void sub_92390(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r12 = (arg2 & 0xe0);
    int32_t r3 = 0x14;
    if (2 == (r12 >> 5))
    {
        r3 = 0x10;
    }
    int32_t r1_1 = (1 << (arg2 & 0x1f));
    if (1 == (r12 >> 5))
    {
        r3 = 0xc;
    }
    int32_t r2 = *(arg1 + r3);
    int32_t r1_2;
    if (arg3 == 0)
    {
        r1_2 = (r2 & (!r1_1));
    }
    else
    {
        r1_2 = (r1_1 | r2);
    }
    *(arg1 + r3) = r1_2;
}

int32_t sub_923ca(int16_t* arg1, int32_t arg2)
{
    int32_t r0 = (*arg1 & arg2);
    if (r0 != 0)
    {
        r0 = 1;
    }
    return r0;
}

int32_t sub_923d6(int16_t* arg1, int32_t arg2)
{
    int32_t r3 = ((arg2 >> 5) & 7);
    int16_t* r3_1;
    if (r3 == 2)
    {
        r3_1 = &arg1[8];
    }
    else if (r3 != 1)
    {
        r3_1 = &arg1[0xa];
    }
    else
    {
        r3_1 = &arg1[6];
    }
    int32_t r2_1 = ((1 << (arg2 & 0x1f)) & *r3_1);
    if (r2_1 != 0)
    {
        r2_1 = 1;
    }
    int32_t r0_1 = (*arg1 & (1 << (arg2 >> 8)));
    if (r0_1 != 0)
    {
        r0_1 = 1;
    }
    return (r0_1 & r2_1);
}

int32_t sub_92418(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    char r3 = 0x20;
    if (arg3 != 0)
    {
        r3 = 0x21;
    }
    char var_9 = r3;
    return sub_902b6(arg1, arg2, &var_9, 1, nullptr, 0);
}

int32_t sub_92440(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    if (arg3 != 0)
    {
        arg4 = (arg4 | 1);
    }
    char var_9 = (arg4 | 0x80);
    return sub_902b6(arg1, arg2, &var_9, 1, nullptr, 0);
}

int32_t sub_92468(int16_t* arg1, int32_t arg2, char arg3)
{
    char var_9 = (arg3 | 0xa0);
    return sub_902b6(arg1, arg2, &var_9, 1, nullptr, 0);
}

int32_t sub_92488(int16_t* arg1, int32_t arg2, char arg3)
{
    char var_9 = ((arg3 & 0xf) | 0xe0);
    return sub_902b6(arg1, arg2, &var_9, 1, nullptr, 0);
}

int32_t sub_924aa(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    char var_b = (0x1e & (arg3 << 1));
    char var_a = arg4;
    uint8_t var_9 = (arg4 >> 8);
    return sub_902b6(arg1, arg2, &var_b, 3, nullptr, 0);
}

int32_t sub_924d8(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    uint32_t r12_1 = *(0x20000ba4 + ((arg4 & 0xf) << 1));
    uint8_t var_a = r12_1;
    char var_b = (0x1e & (arg3 << 1));
    uint8_t var_9 = (r12_1 >> 8);
    return sub_902b6(arg1, arg2, &var_b, 3, nullptr, 0);
}

int32_t sub_92518(int16_t* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    uint32_t r3_1;
    uint8_t r12_5;
    if ((arg4 - 0x30) <= 9)
    {
        r3_1 = *((arg4 << 1) + 0x20000b64);
    }
    else if ((arg4 - 0x41) <= 0x19)
    {
        r3_1 = *((arg4 << 1) + 0x20000b62);
    }
    else if ((arg4 - 0x61) > 0x19)
    {
        r3_1 = 0;
        r12_5 = 0;
    }
    else
    {
        r3_1 = *((arg4 << 1) + 0x20000b22);
    }
    if ((((arg4 - 0x30) <= 9 || ((arg4 - 0x30) > 9 && (arg4 - 0x41) <= 0x19)) || (((arg4 - 0x30) > 9 && (arg4 - 0x41) > 0x19) && (arg4 - 0x61) <= 0x19)))
    {
        r12_5 = (r3_1 >> 8);
    }
    uint8_t var_a = r3_1;
    uint8_t var_9 = r12_5;
    char var_b = (0x1e & (arg3 << 1));
    return sub_902b6(arg1, arg2, &var_b, 3, nullptr, 0);
}

int32_t sub_925ae(int16_t* arg1, int32_t arg2)
{
    char r2;
    char var_9 = r2;
    char var_a = 0;
    return sub_902b6(arg1, arg2, &var_a, 2, nullptr, 0);
}

int32_t sub_925d0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    if (arg4 == 0)
    {
        /* tailcall */
        return sub_92640(arg1, arg2, arg3);
    }
    /* tailcall */
    return sub_925da(arg1, arg2, arg3);
}

uint32_t sub_925da(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    int16_t var_1a = 0xa;
    uint32_t r0_2 = sub_902b6(arg1, arg2, &var_1a, 1, (&var_1a | 1), 1);
    if (r0_2 >= 0)
    {
        *var_1a[1] = ((1 << arg3) | *var_1a[1]);
        r0_2 = sub_902b6(arg1, arg2, &var_1a, 2, nullptr, 0);
        if (r0_2 >= 0)
        {
            r0_2 = *var_1a[1];
        }
    }
    return r0_2;
}

uint32_t sub_92640(int16_t* arg1, int32_t arg2, int32_t arg3)
{
    int16_t var_1a = 0xa;
    uint32_t r0_2 = sub_902b6(arg1, arg2, &var_1a, 1, (&var_1a | 1), 1);
    if (r0_2 >= 0)
    {
        *var_1a[1] = (*var_1a[1] & (!(1 << arg3)));
        r0_2 = sub_902b6(arg1, arg2, &var_1a, 2, nullptr, 0);
        if (r0_2 >= 0)
        {
            r0_2 = *var_1a[1];
        }
    }
    return r0_2;
}

uint32_t sub_926a8(int16_t* arg1, int32_t arg2, char arg3)
{
    char var_a = 0xa;
    uint32_t r0 = sub_902b6(arg1, arg2, &var_a, 2, nullptr, 0);
    if (r0 >= 0)
    {
        r0 = arg3;
    }
    return r0;
}

uint32_t sub_926d6(int16_t* arg1, int32_t arg2)
{
    int16_t var_a = 9;
    int32_t r0 = sub_902b6(arg1, arg2, &var_a, 1, (&var_a | 1), 1);
    char r1 = *var_a[1];
    if (r0 < 0)
    {
        r1 = r0;
    }
    return r1;
}

uint32_t sub_92704(int32_t* arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t __saved_r7_1;
    int32_t __saved_r7 = __saved_r7_1;
    int32_t __saved_r6_1;
    int32_t __saved_r6 = __saved_r6_1;
    int32_t __saved_r5_1;
    int32_t __saved_r5 = __saved_r5_1;
    int32_t __saved_r4_1;
    int32_t __saved_r4 = __saved_r4_1;
    int32_t __saved_r11_1;
    int32_t __saved_r11 = __saved_r11_1;
    int32_t __saved_r10_1;
    int32_t __saved_r10 = __saved_r10_1;
    int32_t __saved_r9_1;
    int32_t __saved_r9 = __saved_r9_1;
    int32_t __saved_r8_1;
    int32_t __saved_r8 = __saved_r8_1;
    uint32_t r4;
    if (sub_92b16() != 0)
    {
        r4 = 0;
    }
    else
    {
        r4 = 0;
        if (sub_92bf0() == 0)
        {
            int32_t var_30_1 = 2;
            int32_t var_30_2 = 0;
            int32_t var_2c_1 = 0;
            sub_9053e(0x20000c18, 0x56, 0x2000606a, sub_92850(0xb0, 0, 0xffffffff, nullptr, 2), nullptr, 0);
            sub_916cc(0x64);
            void var_28;
            void* r5 = (&var_28 - ((arg2 + 0x10) & 0xfffffff8));
            *(r5 - 8) = r5;
            *(r5 - 4) = 7;
            sub_9053e(0x20000c18, 0x56, 0, 0);
            if (sub_92a18(r5, 7) == 0)
            {
                if (*(r5 + 3) != 0x90)
                {
                    r4 = 0;
                }
                else
                {
                    r4 = (*(r5 + 2) | (*(r5 + 1) << 8));
                }
            }
            uint32_t r11 = 0;
            if ((arg2 + 4) == r4)
            {
                *(r5 - 8) = r4;
                int32_t r0_12 = sub_92850(0xb0, 2, 0xffffffff, 0);
                *(r5 - 8) = 0;
                *(r5 - 4) = 0;
                sub_9053e(0x20000c18, 0x56, 0x2000606a, r0_12);
                sub_916cc(0x64);
                *(r5 - 8) = r5;
                *(r5 - 4) = (r4 + 5);
                sub_9053e(0x20000c18, 0x56, 0, 0);
                if (sub_92a18(r5, (r4 + 5)) == 0)
                {
                    if (*((r5 + r4) + 1) != 0x90)
                    {
                        r11 = 0;
                    }
                    else
                    {
                        sub_97f48(arg1, (r5 + 5), (r4 - 4));
                        r11 = (r4 + 0xfffc);
                    }
                }
                sub_907ca(0x20000c18, 0x56, 0x28);
            }
            r4 = r11;
        }
    }
    return r4;
}

uint32_t sub_92850(int32_t arg1, int32_t arg2, int32_t arg3, int32_t* arg4, int32_t arg5)
{
    *0x2000606c = arg1;
    *0x2000606e = arg2;
    *0x2000606b = (arg1 >> 8);
    *0x2000606d = (arg2 >> 8);
    char r1_1 = (*0x20000c29 ^ 1);
    *0x20000c29 = r1_1;
    *0x2000606a = (r1_1 | 2);
    int32_t r6;
    if (arg3 < 0)
    {
        r6 = 5;
    }
    else
    {
        *0x2000606f = arg3;
        sub_97f48(0x20006070, arg4, arg3);
        r6 = (arg3 + 6);
    }
    if (arg5 > 0xffffffff)
    {
        *(0x2000606a + r6) = arg5;
        r6 = (r6 + 1);
    }
    uint32_t r5_1 = r6;
    uint32_t r0_4 = sub_92a18(0x2000606a, r5_1);
    *(0x2000606a + r5_1) = r0_4;
    *(0x2000606a + (r6 + 1)) = (r0_4 >> 8);
    return (r6 + 2);
}

int32_t sub_928d0(int32_t* arg1, int32_t arg2)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t __saved_r7_1;
    int32_t __saved_r7 = __saved_r7_1;
    int32_t __saved_r6_1;
    int32_t __saved_r6 = __saved_r6_1;
    int32_t __saved_r5_1;
    int32_t __saved_r5 = __saved_r5_1;
    int32_t __saved_r4_1;
    int32_t __saved_r4 = __saved_r4_1;
    int32_t __saved_r10_1;
    int32_t __saved_r10 = __saved_r10_1;
    int32_t __saved_r9_1;
    int32_t __saved_r9 = __saved_r9_1;
    int32_t __saved_r8_1;
    int32_t __saved_r8 = __saved_r8_1;
    int32_t r0 = sub_92b16();
    int32_t r0_1;
    int32_t r4_1;
    if (r0 == 0)
    {
        r0_1 = sub_92bf0();
        if (r0_1 == 0)
        {
            void var_30;
            void* r6 = (&var_30 - ((arg2 + 0xd) & 0xfffffff8));
            *(r6 + 1) = (arg2 + 4);
            *r6 = ((arg2 + 4) >> 8);
            *(r6 + 2) = 0xd5;
            *(r6 + 3) = 0;
            *(r6 + 4) = arg2;
            *(r6 + 5) = 0;
            sub_97f48((r6 + 6), arg1, arg2);
            *(r6 - 8) = 0xffffffff;
            int32_t r0_10 = sub_92850(0xd6, 0, (arg2 + 6), r6);
            *(r6 - 8) = 0;
            *(r6 - 4) = 0;
            sub_9053e(0x20000c18, 0x56, 0x2000606a, r0_10);
            sub_916cc(0x64);
            *(r6 - 4) = 5;
            char var_29;
            *(r6 - 8) = &var_29;
            sub_9053e(0x20000c18, 0x56, 0, 0);
            char var_28;
            if (var_29 >= 0xc0)
            {
                *0x2000606a = 0xf2;
                *0x2000606b = var_28;
                uint32_t r0_15 = sub_92a18(0x2000606a, 2);
                *0x2000606c = r0_15;
                *0x2000606d = (r0_15 >> 8);
                *(r6 - 8) = 0;
                *(r6 - 4) = 0;
                sub_9053e(0x20000c18, 0x56, 0x2000606a, 4);
                sub_916cc(0x64);
                *(r6 - 8) = &var_29;
                *(r6 - 4) = 5;
                sub_9053e(0x20000c18, 0x56, 0, 0);
            }
            if (sub_92a18(&var_29, 5) != 0)
            {
                r4_1 = 1;
            }
            else
            {
                r4_1 = 0;
                char var_27;
                if ((var_27 | (var_28 << 8)) != 0x9000)
                {
                    r4_1 = 1;
                }
            }
            sub_907ca(0x20000c18, 0x56, 0x28);
        }
    }
    if ((r0 != 0 || (r0 == 0 && r0_1 != 0)))
    {
        r4_1 = 1;
    }
    return r4_1;
}

uint32_t sub_92a18(char* arg1, int32_t arg2)
{
    int32_t lr = 0x6363;
    int32_t i;
    do
    {
        uint32_t r12_1 = *arg1;
        arg1 = &arg1[1];
        i = arg2;
        arg2 = (arg2 - 1);
        uint32_t r3_2 = (lr ^ r12_1);
        uint32_t r2_3 = ((r3_2 << 4) ^ r3_2);
        lr = (((r2_3 >> 4) ^ (r2_3 << 3)) ^ (((lr >> 8) & 0xff) | (r2_3 << 8)));
    } while (i != 1);
    return lr;
}

int32_t sub_92a56()
{
    int32_t var_38 = 1;
    int32_t var_34 = 1;
    int32_t var_30 = 1;
    int32_t var_2c = 1;
    char var_28 = 1;
    int32_t var_1c = 1;
    int32_t var_18 = 1;
    int32_t var_14 = 1;
    int32_t var_10 = 1;
    char var_c = 1;
    int32_t r2 = *0x20000c1c;
    int32_t r3 = *0x20000c20;
    int32_t r0 = *0x20000c24;
    int32_t var_40 = *0x20000c18;
    int32_t var_3c = r2;
    int32_t var_24 = r3;
    int32_t var_20 = r0;
    sub_9007c(&var_40, 2);
    return sub_91756(0x64);
}

int32_t sub_92aa0()
{
    if (*0x20000c28 == 0)
    {
        int32_t var_38_1 = 0;
        int32_t var_34_1 = 1;
        int32_t var_30_1 = 0;
        int32_t var_2c_1 = 0;
        char var_28_1 = 0;
        int32_t var_1c_1 = 0;
        int32_t var_18_1 = 1;
        int32_t var_14_1 = 0;
        int32_t var_10_1 = 0;
        char var_c_1 = 0;
    }
    else
    {
        int32_t var_38 = 2;
        int32_t var_34 = 1;
        int32_t var_30 = 0;
        int32_t var_2c = 0;
        char var_28 = 0;
        int32_t var_1c = 2;
        int32_t var_18 = 1;
        int32_t var_14 = 0;
        int32_t var_10 = 0;
        char var_c = 0;
    }
    int32_t r2 = *0x20000c1c;
    int32_t r3 = *0x20000c20;
    int32_t r0_1 = *0x20000c24;
    int32_t var_40 = *0x20000c18;
    int32_t var_3c = r2;
    int32_t var_24 = r3;
    int32_t var_20 = r0_1;
    sub_9007c(&var_40, 2);
    return sub_91756(0x64);
}

int32_t sub_92b16()
{
    char var_25 = 0x52;
    sub_9053e(0x20000c18, 0x56, &var_25, 1, nullptr, 0);
    int32_t r6 = 0x64;
    int32_t r0_8;
    while (true)
    {
        sub_91756(0xa);
        if (sub_9053e(0x20000c18, 0x56, nullptr, 0, nullptr, 0) == 0)
        {
            void var_1f;
            sub_97f48(&var_1f, &data_9a5a6, 7);
            int32_t r4_1 = 0;
            sub_9053e(0x20000c18, 0x56, 0x2000606a, sub_92850(0xa4, 0x400, 7, &var_1f, 0), nullptr, 0);
            sub_916cc(0x64);
            void var_24;
            sub_9053e(0x20000c18, 0x56, nullptr, 0, &var_24, 5);
            if (sub_92a18(&var_24, 5) == 0)
            {
                char var_23;
                char var_22;
                if ((var_22 | (var_23 << 8)) != 0x9000)
                {
                    r4_1 = 1;
                }
                r0_8 = r4_1;
                break;
            }
        }
        else
        {
            r6 = (r6 - 1);
            if ((r6 & 0xff) != 0)
            {
                continue;
            }
        }
        r0_8 = 1;
        break;
    }
    return r0_8;
}

int32_t sub_92bf0()
{
    int16_t var_1a = 0x100;
    int32_t r4 = 0;
    sub_9053e(0x20000c18, 0x56, 0x2000606a, sub_92850(0xa4, 0xc, 2, &var_1a, 0xffffffff), nullptr, 0);
    sub_916cc(0x64);
    void var_1f;
    sub_9053e(0x20000c18, 0x56, nullptr, 0, &var_1f, 5);
    char var_1e;
    char var_1d;
    if (sub_92a18(&var_1f, 5) != 0)
    {
        r4 = 1;
    }
    else if ((var_1d | (var_1e << 8)) != 0x9000)
    {
        r4 = 1;
    }
    return r4;
}

int32_t sub_92c80(int32_t arg1, char* arg2)
{
    sub_97886(&arg2[0x11], 0, 0xef);
    char r1 = -0x65;
    arg2[1] = 4;
    *arg2 = 0x24;
    arg2[3] = ((arg1 | 0x2500) >> 8);
    arg2[2] = arg1;
    int32_t r0_4 = 0;
    if ((arg1 - 0x15) < 3)
    {
        r0_4 = 0xba0;
    }
    arg2[4] = r0_4;
    if (arg1 == 0x12)
    {
        r1 = -0x75;
    }
    arg2[6] = r1;
    arg2[7] = 0x20;
    arg2[8] = 2;
    char r1_1 = 0;
    arg2[9] = 0;
    if (arg1 == 0x12)
    {
        r1_1 = 8;
    }
    arg2[0xa] = r1_1;
    arg2[0xb] = r1_1;
    arg2[0xc] = 1;
    arg2[0xd] = 0x32;
    arg2[0xe] = 1;
    arg2[0xf] = 0x32;
    arg2[0x10] = 0x32;
    arg2[5] = (r0_4 >> 8);
    return 0;
}

int32_t sub_92d04(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    arg1[2] = arg3;
    *arg1 = arg2;
    arg1[4] = arg4;
    arg1[3] = (arg3 >> 8);
    arg1[1] = (arg2 >> 8);
    arg1[5] = (arg4 >> 8);
    return 0;
}

int32_t sub_92d1a(void* arg1, char* arg2)
{
    int32_t r0_1 = sub_97edc(arg2);
    if (r0_1 >= 0x1f)
    {
        r0_1 = 0x1f;
    }
    if (r0_1 != 0)
    {
        uint32_t r6_1 = 0;
        int32_t r4_1 = 0;
        do
        {
            r4_1 = (r4_1 + 1);
            (arg1 + 0x16)[(r6_1 << 1)] = arg2[r6_1];
            int32_t r2_2 = (1 | (r6_1 << 1));
            r6_1 = r4_1;
            (arg1 + 0x16)[r2_2] = 0;
        } while (r0_1 > r6_1);
    }
    *(arg1 + 0x13) = r0_1;
    return 0;
}

int32_t sub_92d64(void* arg1, char* arg2)
{
    int32_t r0_1 = sub_97edc(arg2);
    if (r0_1 >= 0x1f)
    {
        r0_1 = 0x1f;
    }
    if (r0_1 != 0)
    {
        uint32_t r6_1 = 0;
        int32_t r4_1 = 0;
        do
        {
            r4_1 = (r4_1 + 1);
            (arg1 + 0x54)[(r6_1 << 1)] = arg2[r6_1];
            int32_t r2_2 = (1 | (r6_1 << 1));
            r6_1 = r4_1;
            (arg1 + 0x54)[r2_2] = 0;
        } while (r0_1 > r6_1);
    }
    *(arg1 + 0x14) = r0_1;
    return 0;
}

int32_t sub_92db0(int16_t* arg1, int32_t arg2, int32_t* arg3)
{
    int32_t* r4 = arg3;
    uint32_t r6 = 0;
    char var_45 = 0x20;
    int16_t r0 = 0;
    int32_t r0_4;
    while (true)
    {
        char var_46 = r0;
        void var_44;
        sub_97f48(&var_44, r4, 0x20);
        if (sub_902b6(arg1, arg2, &var_46, 0x22, nullptr, 0) != 0)
        {
            r0_4 = 0xffffffff;
            break;
        }
        r0 = (r6 + 0x20);
        r4 = &r4[8];
        r6 = r0;
        if (r6 >= 0x100)
        {
            r0_4 = 0;
            break;
        }
    }
    return r0_4;
}

int32_t sub_92e14(int16_t* arg1, int32_t arg2)
{
    char var_a = 1;
    int16_t var_c = 0x1ff;
    return sub_902b6(arg1, arg2, &var_c, 3, nullptr, 0);
}

int32_t sub_92e3c(void* arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        int32_t r2_1 = *(*(arg1 + 0x65c) + 0x18);
        if ((r2_1 != 0 && *(arg1 + 0x112) == 3))
        {
            r2_1(arg1);
        }
    }
    else if (*(arg1 + 0x111) == 3)
    {
        int32_t r0_4 = *(arg1 + 0x3b8);
        int32_t r1 = *(arg1 + 0x3d0);
        if (r1 <= r0_4)
        {
            int32_t r1_2 = *(*(arg1 + 0x65c) + 0x10);
            if ((r1_2 != 0 && *(arg1 + 0x112) == 3))
            {
                r1_2(arg1);
            }
            sub_93158(arg1);
        }
        else
        {
            int32_t r2_2 = (r1 - r0_4);
            *(arg1 + 0x3d0) = r2_2;
            int32_t r1_1 = *(arg1 + 0x3c0);
            if (*(arg1 + 3) == 1)
            {
                r1_1 = (r1_1 + r0_4);
                *(arg1 + 0x3c0) = r1_1;
            }
            if (r2_2 < r0_4)
            {
                r0_4 = r2_2;
            }
            sub_93146(arg1, r1_1, r0_4);
        }
    }
    return 0;
}

int32_t sub_92eb2(void* arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        int32_t r2_1 = *(*(arg1 + 0x65c) + 0x14);
        if ((r2_1 != 0 && *(arg1 + 0x112) == 3))
        {
            r2_1(arg1);
        }
    }
    else
    {
        if (*(arg1 + 0x111) != 2)
        {
            int32_t r2_4 = *(*(arg1 + 0x65c) + 0x14);
            if ((r2_4 != 0 && *(arg1 + 0x112) == 3))
            {
                r2_4(arg1, 0);
            }
        }
        else
        {
            int32_t r0_4 = *(arg1 + 0x124);
            int32_t r1 = *(arg1 + 0x13c);
            if (r1 <= r0_4)
            {
                int32_t r1_2 = *(arg1 + 0x140);
                if (((r1_2 < r0_4 || (r1_2 >= r0_4 && (r1_2 % r0_4) != 0)) || ((r1_2 >= r0_4 && (r1_2 % r0_4) == 0) && r1_2 >= *(arg1 + 0x144))))
                {
                    int32_t r1_3 = *(*(arg1 + 0x65c) + 0xc);
                    if ((r1_3 != 0 && *(arg1 + 0x112) == 3))
                    {
                        r1_3(arg1);
                    }
                    sub_9317a(arg1);
                }
                if (((r1_2 >= r0_4 && (r1_2 % r0_4) == 0) && r1_2 < *(arg1 + 0x144)))
                {
                    sub_93114(arg1, 0, 0);
                    *(arg1 + 0x144) = 0;
                }
            }
            else
            {
                int32_t r2_2 = (r1 - r0_4);
                *(arg1 + 0x13c) = r2_2;
                int32_t r1_1 = *(arg1 + 0x128);
                if (*(arg1 + 3) == 1)
                {
                    r1_1 = (r1_1 + r0_4);
                    *(arg1 + 0x128) = r1_1;
                }
                sub_93114(arg1, r1_1, r2_2);
            }
        }
        if (*(arg1 + 0x116) == 1)
        {
            *(*(arg1 + 0x10) + 4) = *0x2000616c;
            *(arg1 + 0x116) = 0;
        }
    }
    return 0;
}

int32_t sub_92f84(void* arg1)
{
    char var_18;
    sub_934da(arg1, &var_18);
    uint32_t r0 = var_18;
    int32_t r1_1 = (r0 & 0x60);
    bool cond:0 = r1_1 == 0x40;
    if (r1_1 != 0x40)
    {
        cond:0 = r1_1 == 0x20;
    }
    if (cond:0)
    {
        *(*(arg1 + 0x65c) + 8)(arg1, &var_18);
    }
    else
    {
        int32_t r1_2;
        if (r1_1 == 0)
        {
            r1_2 = (r0 & 3);
            if (r1_2 == 2)
            {
                sub_93438(arg1, &var_18);
            }
            if (r1_2 == 1)
            {
                sub_933fc(arg1, &var_18);
            }
            if (r1_2 == 0)
            {
                sub_9319c(arg1, &var_18);
            }
        }
        if ((r1_1 != 0 || (((r1_1 == 0 && r1_2 != 2) && r1_2 != 1) && r1_2 != 0)))
        {
            sub_943d8(arg1, (r0 & 0x80));
        }
    }
    return 0;
}

int32_t sub_92fee(void* arg1)
{
    int32_t r1 = *(*(arg1 + 0x65c) + 0x1c);
    if (r1 != 0)
    {
        r1();
    }
    return 0;
}

int32_t sub_93004(void* arg1)
{
    sub_942d2(arg1, 0, 0x40, 0);
    sub_942d2(arg1, 0x80, 0x40, 0);
    *(arg1 + 0x112) = 1;
    *(*(arg1 + 0x660) + 4)(*(arg1 + 2));
    return 0;
}

int32_t sub_93034(void* arg1)
{
    *(arg1 + 0x113) = *(arg1 + 0x112);
    *(arg1 + 0x112) = 4;
    *(*(arg1 + 0x660) + 0xc)();
    return 0;
}

int32_t sub_93052(void* arg1)
{
    *(*(arg1 + 0x660) + 0x10)();
    *(arg1 + 0x112) = 3;
    return 0;
}

int32_t sub_9306a(void* arg1)
{
    *(*(arg1 + 0x65c) + 0x20)();
    return 0;
}

int32_t sub_9307a(void* arg1)
{
    *(*(arg1 + 0x65c) + 0x24)();
    return 0;
}

int32_t sub_9308a(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    sub_8f004();
    *(arg1 + 0x660) = arg4;
    *(arg1 + 0x65c) = arg3;
    sub_94248(arg1);
    **(arg1 + 0x660)();
    /* tailcall */
    return sub_8f140();
}

int32_t sub_930c4() __pure
{
    return 0;
}

int32_t sub_930c8(void* arg1)
{
    **(arg1 + 0x65c)(arg1);
    *(*(arg1 + 0x660) + 8)();
    return 0;
}

int32_t sub_930e4(void* arg1)
{
    *(*(arg1 + 0x65c) + 4)();
    return 0;
}

int32_t sub_930f4(void* arg1, int32_t arg2, int32_t arg3)
{
    *(arg1 + 0x13c) = arg3;
    *(arg1 + 0x140) = arg3;
    *(arg1 + 0x111) = 2;
    sub_94394(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_93114(void* arg1, int32_t arg2, int32_t arg3)
{
    sub_94394(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_93126(void* arg1, int32_t arg2, int32_t arg3)
{
    *(arg1 + 0x3d0) = arg3;
    *(arg1 + 0x3d4) = arg3;
    *(arg1 + 0x111) = 3;
    sub_9434a(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_93146(void* arg1, int32_t arg2, int32_t arg3)
{
    sub_9434a(arg1, 0, arg2, arg3);
    return 0;
}

int32_t sub_93158(void* arg1)
{
    *(arg1 + 0x111) = 4;
    sub_94394(arg1, 0, 0, 0);
    sub_93d60(arg1);
    return 0;
}

int32_t sub_9317a(void* arg1)
{
    *(arg1 + 0x111) = 5;
    sub_9434a(arg1, 0, 0, 0);
    sub_93d60(arg1);
    return 0;
}

int32_t sub_9319c(void* arg1, void* arg2)
{
    uint32_t r0 = *(arg2 + 1);
    if (r0 > 9)
    {
    label_93362:
        sub_933de(arg1);
    }
    else
    {
        int32_t r0_8;
        uint32_t r0_9;
        if (jump_table_931b2[r0] == 0x26)
        {
            r0_9 = *(arg2 + 2);
            if (r0_9 == 1)
            {
                r0_8 = 1;
            }
            if (r0_9 == 2)
            {
                uint32_t r0_24 = *(arg2 + 4);
                if ((r0_24 & 0xff) == 0)
                {
                    uint32_t r1_5 = (-1 + (r0_24 >> 8));
                    int32_t r0_27 = *(*(arg1 + 0x10) + 4);
                    if (r1_5 <= 4)
                    {
                        r0_27 = ((r0_27 & 0xffffff8f) | (0x10 + (r1_5 << 4)));
                    }
                    *0x2000616c = r0_27;
                    *(arg1 + 0x116) = 1;
                    goto label_933d8;
                }
            }
        }
        if (((jump_table_931b2[r0] == 0x19 && (*(arg1 + 0x112) & 0xfe) == 2) && *(arg2 + 2) == 1))
        {
            r0_8 = 0;
        }
        if ((((jump_table_931b2[r0] == 0x19 && (*(arg1 + 0x112) & 0xfe) == 2) && *(arg2 + 2) == 1) || (jump_table_931b2[r0] == 0x26 && r0_9 == 1)))
        {
            *(arg1 + 0x118) = r0_8;
            *(*(arg1 + 0x65c) + 8)(arg1, arg2);
        label_933d8:
            sub_93158(arg1);
        }
        if ((jump_table_931b2[r0] == 0x19 && (*(arg1 + 0x112) & 0xfe) != 2))
        {
            goto label_93362;
        }
        void* r0_4;
        void* r1;
        uint32_t r2_1;
        switch (jump_table_931b2[r0])
        {
            case 5:
            {
                if ((*(arg1 + 0x112) & 0xfe) != 2)
                {
                    goto label_93362;
                }
                int32_t r0_3 = *(arg1 + 0x118);
                r2_1 = 2;
                r1 = 0x2000617c;
                if (r0_3 != 0)
                {
                    r0_3 = 2;
                }
                *0x2000617c = r0_3;
                r0_4 = arg1;
                goto label_933c0;
            }
            case 0x36:
            {
                if (*(arg2 + 4) != 0)
                {
                    goto label_93362;
                }
                if (*(arg2 + 6) != 0)
                {
                    goto label_93362;
                }
                if (*(arg1 + 0x112) == 3)
                {
                    goto label_93362;
                }
                int32_t r5_1 = (*(arg2 + 2) & 0x7f);
                *(arg1 + 0x114) = r5_1;
                sub_94450(arg1, r5_1);
                sub_93158(arg1);
                char r0_18 = 2;
                if (r5_1 == 0)
                {
                    r0_18 = 1;
                }
                *(arg1 + 0x112) = r0_18;
                break;
            }
            case 0x56:
            {
                uint32_t r1_3 = *(arg2 + 2);
                if ((0xffffffff + (r1_3 >> 8)) > 6)
                {
                    goto label_93362;
                }
                uint16_t var_16;
                uint32_t r0_32;
                int32_t r3_1;
                switch (*((r1_3 >> 8) + 0x93271))
                {
                    case 4:
                    {
                        r1 = &data_9a4e4;
                        break;
                    }
                    case 0x4b:
                    {
                        r3_1 = *(*(arg1 + 0x65c) + 0x28);
                        break;
                    }
                    case 0x59:
                    {
                        uint32_t r0_33 = r1_3;
                        if (7 <= r0_33)
                        {
                            goto label_93362;
                        }
                        r1 = *(0x20000b7c + (r0_33 << 2));
                        if (r1 == 0)
                        {
                            goto label_93362;
                        }
                        r0_32 = *r1;
                        if (r0_32 == 0)
                        {
                            goto label_93362;
                        }
                        var_16 = r0_32;
                    label_933ae:
                        r2_1 = *(arg2 + 6);
                        if (r2_1 != 0)
                        {
                            if (r0_32 < r2_1)
                            {
                                r2_1 = r0_32;
                            }
                            r0_4 = arg1;
                            var_16 = r2_1;
                            goto label_933c0;
                        }
                        break;
                    }
                    case 0x6d:
                    {
                        if (*(arg1 + 2) != 0)
                        {
                            goto label_93362;
                        }
                        r1 = &data_9a539;
                        break;
                    }
                    case 0x75:
                    {
                        if (*(arg1 + 2) != 0)
                        {
                            goto label_93362;
                        }
                        break;
                    }
                    case 0x77:
                    {
                        goto label_93362;
                    }
                }
                if ((*((r1_3 >> 8) + 0x93271) == 4 || *((r1_3 >> 8) + 0x93271) == 0x6d))
                {
                    r0_32 = *r1;
                }
                if ((*((r1_3 >> 8) + 0x93271) == 0x4b && r3_1 != 0))
                {
                    r1 = r3_1(*(arg1 + 2), r1_3, &var_16);
                    r0_32 = var_16;
                }
                if (((*((r1_3 >> 8) + 0x93271) == 0x4b && r3_1 == 0) || *((r1_3 >> 8) + 0x93271) == 0x75))
                {
                    r1 = &data_9a4f6;
                    r0_32 = 0x43;
                }
                if ((((*((r1_3 >> 8) + 0x93271) == 4 || *((r1_3 >> 8) + 0x93271) == 0x6d) || (*((r1_3 >> 8) + 0x93271) == 0x4b && r3_1 == 0)) || *((r1_3 >> 8) + 0x93271) == 0x75))
                {
                    var_16 = r0_32;
                }
                if (((((((*((r1_3 >> 8) + 0x93271) == 0x4b && r3_1 != 0) || *((r1_3 >> 8) + 0x93271) == 4) || *((r1_3 >> 8) + 0x93271) == 0x6d) || (*((r1_3 >> 8) + 0x93271) == 0x4b && r3_1 == 0)) || *((r1_3 >> 8) + 0x93271) == 0x75) && r0_32 != 0))
                {
                    goto label_933ae;
                }
                break;
            }
            case 0x69:
            {
                if (*(arg2 + 6) != 1)
                {
                    goto label_93362;
                }
                uint32_t r0_21 = *(arg1 + 0x112);
                if (r0_21 == 3)
                {
                    r1 = (arg1 + 0x110);
                }
                else
                {
                    if (r0_21 != 2)
                    {
                        goto label_93362;
                    }
                    r1 = 0x20006178;
                }
                r0_4 = arg1;
                r2_1 = 1;
            label_933c0:
                sub_930f4(r0_4, r1, r2_1);
                break;
            }
            case 0x77:
            {
                char r0_22 = *(arg2 + 2);
                uint32_t r1_4 = r0_22;
                *0x20006174 = r0_22;
                if (r1_4 >= 2)
                {
                    goto label_93362;
                }
                uint32_t r0_23 = *(arg1 + 0x112);
                if (r0_23 == 3)
                {
                    if (r1_4 == 0)
                    {
                        *(arg1 + 0x110) = r1_4;
                        *(arg1 + 0x112) = 2;
                        sub_930e4(arg1);
                        goto label_933d8;
                    }
                    if (r1_4 == *(arg1 + 0x110))
                    {
                        goto label_933d8;
                    }
                    sub_930e4(arg1);
                    r1_4 = *0x20006174;
                }
                else
                {
                    if (r0_23 != 2)
                    {
                        goto label_93362;
                    }
                    if (r1_4 == 0)
                    {
                        goto label_933d8;
                    }
                    *(arg1 + 0x112) = 3;
                }
                *(arg1 + 0x110) = r1_4;
                sub_930c8(arg1);
                goto label_933d8;
            }
            case 0xd7:
            {
                goto label_93362;
            }
        }
    }
    return 0;
}

int32_t sub_933de(int32_t arg1)
{
    sub_943d8(arg1, 0x80);
    sub_943d8(arg1, 0);
    /* tailcall */
    return sub_93d60(arg1);
}

int32_t sub_933fc(void* arg1, void* arg2)
{
    if ((*(arg1 + 0x112) != 3 || (*(arg1 + 0x112) == 3 && (*(arg2 + 4) & 0xfe) > 1)))
    {
        sub_933de(arg1);
    }
    if ((*(arg1 + 0x112) == 3 && (*(arg2 + 4) & 0xfe) <= 1))
    {
        *(*(arg1 + 0x65c) + 8)(arg1, arg2);
        if (*(arg2 + 6) == 0)
        {
            sub_93158(arg1);
        }
    }
    return 0;
}

int32_t sub_93438(void* arg1, void* arg2)
{
    uint32_t r0 = *(arg1 + 0x112);
    uint32_t r1 = *(arg2 + 4);
    if (r0 == 3)
    {
        uint32_t r0_3 = *(arg2 + 1);
        if (r0_3 == 0)
        {
            void* r0_10 = (((arg1 + 0x110) + ((r1 & 0x7f) * 0x2c)) + 0xc);
            if ((r1 & 0x80) == 0)
            {
                r0_10 = (((arg1 + 0x110) + (r1 * 0x2c)) + 0x2a0);
            }
            uint32_t r0_11 = *(r0_10 + 2);
            if (r0_11 != 0)
            {
                r0_11 = 1;
            }
            *0x20006170 = r0_11;
            sub_930f4(arg1, 0x20006170, 2);
        }
        else
        {
            if (((r0_3 == 1 && *(arg2 + 2) == 0) && (r1 | 0x80) != 0x80))
            {
                sub_94414(arg1, r1);
            }
            if ((r0_3 == 3 && ((r1 << 0x19) != 0 && *(arg2 + 2) == 0)))
            {
                sub_943d8(arg1, r1);
            }
            if (((r0_3 == 1 && *(arg2 + 2) == 0) || r0_3 == 3))
            {
                sub_93158(arg1);
            }
        }
    }
    else if (r0 != 2)
    {
        sub_933de(arg1);
    }
    else if ((r1 << 0x19) != 0)
    {
        sub_943d8(arg1, r1);
    }
    return 0;
}

void sub_934da(void* arg1, char* arg2)
{
    *arg2 = *(arg1 + 0x644);
    arg2[1] = *(arg1 + 0x645);
    *(arg2 + 2) = (*(arg1 + 0x646) | (*(arg1 + 0x647) << 8));
    *(arg2 + 4) = (*(arg1 + 0x648) | (*(arg1 + 0x649) << 8));
    int32_t r2_6 = (*(arg1 + 0x64a) | (*(arg1 + 0x64b) << 8));
    *(arg2 + 6) = r2_6;
    *(arg1 + 0x111) = 1;
    *(arg1 + 0x144) = r2_6;
}

int32_t sub_9351e() __pure
{
    return;
}

void sub_93520(int32_t arg1)
{
    int32_t i_1 = arg1;
    if (i_1 != 0)
    {
        int32_t i;
        do
        {
            sub_916cc(1);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
}

int32_t sub_93534(void* arg1, char* arg2, int32_t arg3, int32_t arg4)
{
    if ((*(arg1 + 3) == 0 && arg4 != 0))
    {
        int32_t i = (arg4 + 4);
        int32_t* r0_1 = *((arg1 + (arg3 << 2)) + 0xd0);
        do
        {
            i = (i - 4);
            int32_t var_14;
            void* r3_3;
            if (i == 1)
            {
                r3_3 = &var_14;
            }
            else
            {
                void* r3_2;
                if (i == 2)
                {
                    r3_2 = &var_14;
                }
                else
                {
                    char* r3;
                    if (i == 3)
                    {
                        r3 = &var_14;
                    }
                    else
                    {
                        char r3_1 = *arg2;
                        arg2 = &arg2[1];
                        var_14 = r3_1;
                        r3 = (&var_14 | 1);
                    }
                    char r4_1 = *arg2;
                    arg2 = &arg2[1];
                    *r3 = r4_1;
                    r3_2 = &r3[1];
                }
                char r4_2 = *arg2;
                arg2 = &arg2[1];
                *r3_2 = r4_2;
                r3_3 = (r3_2 + 1);
            }
            char r4_3 = *arg2;
            arg2 = &arg2[1];
            *r3_3 = r4_3;
            *r0_1 = var_14;
        } while (i > 4);
    }
    return 0;
}

char* sub_9359c(void* arg1, char* arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        int32_t* r0 = *(arg1 + 0xd0);
        int32_t i = (arg3 + 4);
        do
        {
            uint32_t r3_1 = *r0;
            i = (i - 4);
            uint32_t var_14 = r3_1;
            char* r4_2;
            if (i == 2)
            {
                r4_2 = &var_14;
            }
            else
            {
                uint32_t* r4_1;
                if (i == 3)
                {
                    r4_1 = &var_14;
                }
                else
                {
                    if (i == 1)
                    {
                        *arg2 = r3_1;
                        arg2 = &arg2[1];
                        break;
                    }
                    *arg2 = r3_1;
                    arg2 = &arg2[1];
                    r4_1 = (&var_14 | 1);
                    r3_1 = *var_14[1];
                }
                *arg2 = r3_1;
                arg2 = &arg2[1];
                r4_2 = (r4_1 + 1);
                r3_1 = *r4_2;
            }
            *arg2 = r3_1;
            arg2[1] = r4_2[1];
            arg2 = &arg2[2];
        } while (i > 4);
    }
    return arg2;
}

int32_t sub_935f6(char* arg1, int32_t arg2)
{
    char r3 = 1;
    arg1[2] = 1;
    arg1[3] = 0;
    *(arg1 + 4) = 0x40;
    uint32_t r2;
    char r4_1;
    int32_t r6;
    char r12_1;
    int16_t lr_1;
    if (arg2 == 0)
    {
        r12_1 = 1;
        lr_1 = 0x500;
        r2 = 6;
        r4_1 = 0xc;
        r3 = 0;
        r6 = 0x40040000;
    }
    if ((arg2 != 0 && arg2 != 1))
    {
        r2 = arg1[1];
        r6 = 0;
    }
    if (arg2 == 1)
    {
        r12_1 = 2;
        r6 = 0x50000000;
        lr_1 = 0x140;
        r2 = 4;
        r4_1 = 8;
    }
    if ((arg2 == 0 || arg2 == 1))
    {
        *arg1 = r4_1;
        arg1[0xb] = r3;
        arg1[1] = r2;
        *(arg1 + 6) = lr_1;
        arg1[8] = r12_1;
    }
    *(arg1 + 0xc) = r6;
    *(arg1 + 0x10) = (r6 + 0x800);
    if (r2 != 0)
    {
        int32_t r3_1 = (r6 + 0x900);
        int32_t r4_2 = 0;
        do
        {
            void* r1_1 = &arg1[(r4_2 << 2)];
            r4_2 = (r4_2 + 1);
            *(r1_1 + 0x54) = (r3_1 + 0x200);
            *(r1_1 + 0x18) = r3_1;
            r3_1 = (r3_1 + 0x20);
        } while (r4_2 < r2);
    }
    *(arg1 + 0xcc) = (r6 + 0x440);
    *(arg1 + 0x14) = (r6 + 0x400);
    uint32_t i_1 = *arg1;
    if (i_1 != 0)
    {
        int32_t r4_3 = (r6 + 0x500);
        int32_t r1_4 = 0;
        do
        {
            *((arg1 + 0x90) + (r1_4 << 2)) = r4_3;
            r1_4 = (r1_4 + 1);
            r4_3 = (r4_3 + 0x20);
        } while (r1_4 < i_1);
        if (i_1 != 0)
        {
            void* r3_3 = &arg1[0xd0];
            int32_t r4_4 = (r6 + 0x1000);
            uint32_t i;
            do
            {
                *r3_3 = r4_4;
                r3_3 = (r3_3 + 4);
                i = i_1;
                i_1 = (i_1 - 1);
                r4_4 = (r4_4 + 0x1000);
            } while (i != 1);
        }
    }
    *(arg1 + 0x10c) = (r6 + 0xe00);
    return 0;
}

int32_t sub_936c2(void* arg1)
{
    void* r0 = *(arg1 + 0xc);
    if (*(arg1 + 8) != 1)
    {
        *(r0 + 0xc) = (*(r0 + 0xc) | 0x40);
        sub_93744(arg1);
        int32_t r1_6 = 0x3d0000;
        if (*(arg1 + 9) == 0)
        {
            r1_6 = 0x2d0000;
        }
        *(*(arg1 + 0xc) + 0x38) = r1_6;
        sub_93520(0x14);
    }
    else
    {
        int32_t r1_1 = *(r0 + 0x38);
        int32_t r3_2 = ((r1_1 & 0xffeeffff) | 0x100000);
        if (*(arg1 + 9) == 0)
        {
            r3_2 = (r1_1 & 0xfffeffff);
        }
        *(r0 + 0x38) = r3_2;
        *(r0 + 0xc) = (*(r0 + 0xc) & 0xffb5ffbf);
        sub_93744(arg1);
        if (*(arg1 + 3) == 1)
        {
            *(*(arg1 + 0xc) + 8) = 0x2a;
        }
    }
    if (((*(arg1 + 8) == 1 && *(arg1 + 3) == 1) || (*(arg1 + 8) != 1 && *(arg1 + 3) == 1)))
    {
        void* r0_8 = *(arg1 + 0xc);
        *(r0_8 + 8) = ((*(r0_8 + 8) & 0xffffffc1) | 0x2a);
    }
    return 0;
}

void* const sub_93744(void* arg1)
{
    int32_t r6 = 0xffffffff;
    int32_t var_1c = 0;
    void* const r0_1;
    while (true)
    {
        r0_1 = *(arg1 + 0xc);
        r6 = (r6 + 1);
        int32_t r1_1 = *(r0_1 + 0x10);
        if (r6 > 0x30d3f)
        {
            break;
        }
        if (r1_1 <= 0xffffffff)
        {
            *(r0_1 + 0x10) = (r1_1 | 1);
            int32_t r1_6 = 0xffffffff;
            do
            {
                r1_6 = (r1_6 + 1);
                if (r1_6 > 0x30d3f)
                {
                    break;
                }
            } while ((*(r0_1 + 0x10) & 1) != 0);
            r0_1 = &data_3;
            break;
        }
    }
    return r0_1;
}

int32_t sub_937aa(void* arg1)
{
    void* r0_1 = *(arg1 + 0xc);
    *(r0_1 + 8) = (*(r0_1 + 8) | 1);
    return 0;
}

int32_t sub_937b8(void* arg1)
{
    void* r0_1 = *(arg1 + 0xc);
    *(r0_1 + 8) = (*(r0_1 + 8) & 0xfffffffe);
    return 0;
}

int32_t sub_937c6(void* arg1, int32_t arg2)
{
    void* r0 = *(arg1 + 0xc);
    *(r0 + 0x10) = (0x20 | ((arg2 & 0x1f) << 6));
    int32_t r1_1 = 0xffffffff;
    do
    {
        r1_1 = (r1_1 + 1);
        if (r1_1 > 0x30d3f)
        {
            break;
        }
    } while ((*(r0 + 0x10) & 0x20) != 0);
    return 0;
}

int32_t sub_93810(void* arg1)
{
    void* r0 = *(arg1 + 0xc);
    *(r0 + 0x10) = 0x10;
    int32_t r1 = 0xffffffff;
    do
    {
        r1 = (r1 + 1);
        if (r1 > 0x30d3f)
        {
            break;
        }
    } while ((*(r0 + 0x10) & 0x10) != 0);
    return 0;
}

int32_t sub_93852(void* arg1, int32_t arg2)
{
    void* r0_1 = *(arg1 + 0xc);
    int32_t r2_1 = (*(r0_1 + 0xc) & 0x9fffffff);
    int32_t r1;
    if (arg2 == 1)
    {
        r1 = 0x20000000;
    }
    if (arg2 == 0)
    {
        r1 = 0x40000000;
    }
    if ((arg2 == 1 || arg2 == 0))
    {
        r2_1 = (r2_1 | r1);
    }
    *(r0_1 + 0xc) = r2_1;
    sub_93520(0x32);
    return 0;
}

int32_t sub_9387e(void* arg1)
{
    return (1 & (!*(*(arg1 + 0xc) + 0x14)));
}

int32_t sub_9388c(void* arg1)
{
    void* r0_2 = *(arg1 + 0xc);
    return (*(r0_2 + 0x18) & *(r0_2 + 0x14));
}

int32_t sub_93898(void* arg1)
{
    **(arg1 + 0x10c) = 0;
    int32_t* r0_1 = *(arg1 + 0x10);
    *r0_1 = (*r0_1 & 0xffffe7ff);
    if (*(arg1 + 0xb) == 0)
    {
        int32_t r2_2 = (*r0_1 & 0xfffffffc);
        if (*(arg1 + 8) != 1)
        {
            r2_2 = (r2_2 | 1);
        }
        *r0_1 = r2_2;
        void* r0_2 = *(arg1 + 0xc);
        *(r0_2 + 0x24) = 0x200;
        *(r0_2 + 0x28) = 0x100200;
        __builtin_memcpy((r0_2 + 0x104), "\x10\x02\x54\x01\x64\x03\x80\x00\xe4\x03\x10\x00\xf4\x03\x00\x00\xf4\x03\x00\x00", 0x14);
    }
    sub_937c6(arg1, 0x10);
    sub_93810(arg1);
    void* r12 = *(arg1 + 0x10);
    *(r12 + 0x10) = 0;
    *(r12 + 0x14) = 0;
    *(r12 + 0x18) = 0xffffffff;
    *(r12 + 0x1c) = 0;
    uint32_t i_1 = *(arg1 + 1);
    if (i_1 != 0)
    {
        int32_t r4_1 = 0;
        do
        {
            int32_t* r6_1 = *((arg1 + 0x18) + (r4_1 << 2));
            r4_1 = (r4_1 + 1);
            *r6_1 = (0x48000000 & (*r6_1 >> 0x1f));
            r6_1[4] = 0;
            r6_1[2] = 0xff;
        } while (r4_1 < i_1);
        if (i_1 != 0)
        {
            void* r2_4 = (arg1 + 0x54);
            uint32_t i;
            do
            {
                int32_t* r6_2 = *r2_4;
                r2_4 = (r2_4 + 4);
                i = i_1;
                i_1 = (i_1 - 1);
                *r6_2 = (0x48000000 & (*r6_2 >> 0x1f));
                r6_2[4] = 0;
                r6_2[2] = 0xff;
            } while (i != 1);
        }
    }
    *(r12 + 0x10) = (*(r12 + 0x10) | 0x100);
    uint32_t r1_4 = *(arg1 + 3);
    if (r1_4 == 1)
    {
        *(r12 + 0x30) = 0x810103;
    }
    void* r0_7 = *(arg1 + 0xc);
    *(r0_7 + 0x18) = 0;
    *(r0_7 + 0x14) = 0xbfffffff;
    *(r0_7 + 4) = 0xffffffff;
    *(r0_7 + 0x14) = 0xbfffffff;
    *(r0_7 + 0x18) = 0x80000800;
    int32_t r2_5 = 0x3c3808;
    if (r1_4 == 0)
    {
        r2_5 = 0x3c3818;
    }
    *(r0_7 + 0x18) = (((0xffc3c7f7 ^ r2_5) & *(r0_7 + 0x18)) | r2_5);
    return 0;
}

int32_t sub_939ee(void* arg1)
{
    return *(0x9a5b0 + ((((*(*(arg1 + 0x10) + 8) >> 1) & 3) ^ 2) << 2));
}

int32_t sub_93a08(void* arg1)
{
    void* r1 = *(arg1 + 0x10);
    int32_t* r0 = *(arg1 + 0x18);
    int32_t r2 = (*r0 & 0xfffff800);
    if ((*(r1 + 8) & 6) == 4)
    {
        r2 = (r2 | 3);
    }
    *r0 = r2;
    *(r1 + 4) = (*(r1 + 4) | 0x100);
    return 0;
}

int32_t sub_93a34(void* arg1, char* arg2)
{
    uint32_t r3 = *arg2;
    int32_t* r3_1;
    uint32_t r12;
    if (arg2[1] != 1)
    {
        r12 = (0x10000 << r3);
        r3_1 = *((arg1 + (r3 << 2)) + 0x54);
    }
    else
    {
        r12 = (1 << r3);
        r3_1 = *((arg1 + (r3 << 2)) + 0x18);
    }
    int32_t r2_3 = *r3_1;
    if ((r2_3 & 0x8000) == 0)
    {
        int32_t r1_4 = ((((((r2_3 & 0xe4337800) | (*(arg2 + 8) & 0x7ff)) | (0xc0000 & (arg2[3] << 0x12))) | ((*(arg2 + 6) & 0xf) << 0x16)) | 0x18000000) | 0x8000);
        *r3_1 = r1_4;
    }
    void* r0 = *(arg1 + 0x10);
    *(r0 + 0x1c) = (*(r0 + 0x1c) | r12);
    return 0;
}

int32_t sub_93aae(void* arg1, char* arg2)
{
    uint32_t r2_4 = *arg2;
    uint32_t r1_2;
    int32_t* r2_1;
    if (arg2[1] != 1)
    {
        r1_2 = (0x10000 << r2_4);
        r2_1 = *((arg1 + (r2_4 << 2)) + 0x54);
    }
    else
    {
        r2_1 = *((arg1 + (r2_4 << 2)) + 0x18);
        r1_2 = (1 << r2_4);
    }
    *r2_1 = 0;
    void* r0 = *(arg1 + 0x10);
    *(r0 + 0x1c) = (*(r0 + 0x1c) & (!r1_2));
    return 0;
}

int32_t sub_93ae2(void* arg1, char* arg2)
{
    uint32_t r2 = *arg2;
    if (arg2[1] != 1)
    {
        int32_t* r2_2 = *((arg1 + (r2 << 2)) + 0x54);
        int32_t r12_1 = *r2_2;
        int32_t r3_6 = r2_2[4];
        int32_t r5_4 = *(arg2 + 0x18);
        int32_t r4_7 = *(arg2 + 8);
        int32_t r3_8;
        int32_t r5_10;
        if (r5_4 == 0)
        {
            r5_10 = 0x80000;
            r3_8 = ((r3_6 & 0xe0000000) | (r4_7 & 0x7ffff));
        }
        else
        {
            uint32_t r5_7 = (((r5_4 + r4_7) - 1) / r4_7);
            r3_8 = (((r3_6 & 0xe0000000) & 0xe007ffff) | ((r5_7 & 0x3ff) << 0x13));
            r5_10 = ((r4_7 * (r5_7 & 0x3ff)) & 0x7ffff);
        }
        r2_2[4] = (r3_8 | r5_10);
        if (*(arg1 + 3) == 1)
        {
            r2_2[5] = *(arg2 + 0x14);
        }
        if (arg2[3] == 1)
        {
            uint32_t r0_3 = arg2[5];
            int32_t r1_1 = 0x10000000;
            int32_t r0_4 = 0xefffffff;
            if (r0_3 != 0)
            {
                r1_1 = 0x20000000;
            }
            if (r0_3 != 0)
            {
                r0_4 = 0xdfffffff;
            }
            r12_1 = ((r0_4 & r12_1) | r1_1);
        }
        *r2_2 = (r12_1 | 0x84000000);
    }
    else
    {
        int32_t* lr_1 = *((arg1 + (r2 << 2)) + 0x18);
        int32_t r12 = *lr_1;
        int32_t r3_2 = lr_1[4];
        int32_t r4 = *(arg2 + 0x18);
        int32_t r3_5;
        int32_t r4_6;
        int32_t r5_3;
        if (r4 == 0)
        {
            r3_5 = (r3_2 & 0xfff80000);
            r4_6 = 0x80000;
            r5_3 = 0xe007ffff;
        }
        else
        {
            int32_t r5_2 = *(arg2 + 8);
            r3_5 = (((r3_2 & 0xe0000000) | (r4 & 0x7ffff)) | (0x1ff80000 & ((((r4 + r5_2) - 1) / r5_2) << 0x13)));
            if (arg2[3] == 1)
            {
                r4_6 = 0x20000000;
                r5_3 = 0x9fffffff;
            }
        }
        if ((r4 == 0 || (r4 != 0 && arg2[3] == 1)))
        {
            r3_5 = ((r3_5 & r5_3) | r4_6);
        }
        lr_1[4] = r3_5;
        if (*(arg1 + 3) == 1)
        {
            lr_1[5] = *(arg2 + 0x14);
        }
        if (((*(arg1 + 3) != 1 && arg2[3] == 1) || (*(arg1 + 3) == 1 && arg2[3] == 1)))
        {
            int32_t r3_16 = (0x10000000 & (*(*(arg1 + 0x10) + 8) << 0x14));
            *lr_1 = ((((r3_16 ^ 0x10000000) + 0x10000000) | ((0x5fffffff + r3_16) & r12)) | 0x84000000);
            sub_93534(arg1, *(arg2 + 0xc), r2, *(arg2 + 0x18));
        }
        if (((*(arg1 + 3) != 1 && arg2[3] != 1) && *(arg2 + 0x18) != 0))
        {
            void* r0_7 = *(arg1 + 0x10);
            *(r0_7 + 0x34) = ((1 << r2) | *(r0_7 + 0x34));
        }
        if (((*(arg1 + 3) == 1 && arg2[3] != 1) || (*(arg1 + 3) != 1 && arg2[3] != 1)))
        {
            *lr_1 = (r12 | 0x84000000);
        }
    }
    return 0;
}

int32_t sub_93c2e(void* arg1, char* arg2)
{
    int32_t* r2_1;
    uint32_t r3_7;
    int32_t r12;
    if (arg2[1] == 1)
    {
        r2_1 = *(arg1 + 0x18);
        r12 = *r2_1;
        int32_t lr = r2_1[4];
        int32_t r3 = *(arg2 + 0x18);
        int32_t r3_1;
        if (r3 == 0)
        {
            r3_1 = (lr & 0xffffff80);
        }
        else
        {
            int32_t r4_1 = *(arg2 + 8);
            if (r3 > r4_1)
            {
                *(arg2 + 0x18) = r4_1;
                r3 = r4_1;
            }
            r3_1 = ((r3 & 0x7f) | (((lr >> 7) & 0x1ffffff) << 7));
        }
        r2_1[4] = ((r3_1 & 0xffe7ffff) | 0x80000);
        r3_7 = *(arg1 + 3);
        if (r3_7 == 1)
        {
            *(*((arg1 + (*arg2 << 2)) + 0x18) + 0x14) = *(arg2 + 0x14);
        }
        else
        {
            *r2_1 = (r12 | 0x84000000);
            if ((r3_7 == 0 && *(arg2 + 0x18) != 0))
            {
                void* r0_6 = *(arg1 + 0x10);
                *(r0_6 + 0x34) = ((1 << *arg2) | *(r0_6 + 0x34));
            }
        }
    }
    else
    {
        r2_1 = *((arg1 + (*arg2 << 2)) + 0x54);
        r12 = *r2_1;
        int32_t lr_1 = r2_1[4];
        int32_t r3_2 = *(arg2 + 8);
        if (*(arg2 + 0x18) != 0)
        {
            *(arg2 + 0x18) = r3_2;
        }
        r2_1[4] = (((r3_2 & 0x7f) | (0xffe7ff80 & lr_1)) | 0x80000);
        if (*(arg1 + 3) == 1)
        {
            r2_1[5] = *(arg2 + 0x14);
        }
    }
    if (((arg2[1] == 1 && r3_7 == 1) || arg2[1] != 1))
    {
        *r2_1 = (r12 | 0x84000000);
    }
    return 0;
}

int32_t sub_93ce0(int32_t arg1, char* arg2)
{
    void* r0 = (arg1 + (*arg2 << 2));
    int32_t* r0_1;
    int32_t r1_1;
    if (arg2[1] != 1)
    {
        r0_1 = *(r0 + 0x54);
        r1_1 = *r0_1;
    }
    else
    {
        r0_1 = *(r0 + 0x18);
        r1_1 = *r0_1;
        if (r1_1 < 0)
        {
            r1_1 = (r1_1 | 0x40000000);
        }
    }
    *r0_1 = (r1_1 | 0x200000);
    return 0;
}

int32_t sub_93d08(int32_t arg1, char* arg2)
{
    void* r0 = (arg1 + (*arg2 << 2));
    int32_t* r0_1;
    if (arg2[1] != 1)
    {
        r0_1 = *(r0 + 0x54);
    }
    else
    {
        r0_1 = *(r0 + 0x18);
    }
    int32_t r2 = *r0_1;
    uint32_t r1 = arg2[3];
    bool cond:0 = r1 != 3;
    if (r1 != 3)
    {
        cond:0 = r1 != 2;
    }
    int32_t r1_2;
    if (cond:0)
    {
        r1_2 = (r2 & 0xffdfffff);
    }
    else
    {
        r1_2 = ((r2 & 0xefdfffff) | 0x10000000);
    }
    *r0_1 = r1_2;
    return 0;
}

uint32_t sub_93d38(void* arg1)
{
    void* r0_3 = *(arg1 + 0x10);
    return ((*(r0_3 + 0x1c) & *(r0_3 + 0x18)) >> 0x10);
}

int32_t sub_93d44(void* arg1, int32_t arg2)
{
    return (*(*(arg1 + 0x10) + 0x14) & *(*((arg1 + (arg2 << 2)) + 0x54) + 8));
}

uint32_t sub_93d54(void* arg1)
{
    void* r0_3 = *(arg1 + 0x10);
    return (*(r0_3 + 0x1c) & *(r0_3 + 0x18));
}

void sub_93d60(void* arg1)
{
    int32_t* r1 = *(arg1 + 0x54);
    r1[4] = 0xc0080018;
    if (*(arg1 + 3) != 1)
    {
        return;
    }
    r1[5] = (arg1 + 0x644);
    *r1 = 0x80008000;
}

void sub_93d84(int32_t* arg1)
{
    if ((*(arg1 + 0xa) != 0 && (*(arg1[4] + 8) & 1) != 0))
    {
        arg1 = arg1[0x43];
        *arg1 = (arg1 & 0xfffffffc);
    }
}

int32_t sub_93da0(void* arg1)
{
    int32_t r0 = sub_9387e(arg1);
    int32_t r5_1;
    int32_t r9;
    if (r0 != 0)
    {
        r5_1 = sub_9388c(arg1);
        if (r5_1 != 0)
        {
            if ((r5_1 << 0xc) >= 0)
            {
                r9 = 0;
            }
            else
            {
                uint32_t r0_5 = sub_93d38(arg1);
                r9 = 1;
                if (r0_5 != 0)
                {
                    int32_t r6_1 = 0x15;
                    int32_t r11_1 = 0;
                    uint32_t r8_1;
                    do
                    {
                        r8_1 = r0_5;
                        if ((r8_1 << 0x1f) != 0)
                        {
                            uint32_t r5_2 = (r6_1 - 0x15);
                            int32_t r0_9 = sub_93d44(arg1, r5_2);
                            if ((r0_9 & 1) != 0)
                            {
                                void* r0_14 = *(arg1 + (r6_1 << 2));
                                *(r0_14 + 8) = 1;
                                if (*(arg1 + 3) == 1)
                                {
                                    void* r1_6 = (arg1 + r11_1);
                                    *(r1_6 + 0x3cc) = (*(r1_6 + 0x3b8) - (*(r0_14 + 0x10) & 0x7ffff));
                                }
                                **0x20000c58(arg1, r5_2);
                                if ((r11_1 == 0 && (*(arg1 + 3) == 1 && *(arg1 + 0x111) == 5)))
                                {
                                    sub_93d60(arg1);
                                }
                            }
                            else
                            {
                                void* r0_13;
                                int32_t r1_4;
                                if ((r0_9 << 0x1e) < 0)
                                {
                                    r0_13 = *(arg1 + (r6_1 << 2));
                                    r1_4 = 2;
                                }
                                if (((r0_9 << 0x1e) >= 0 && (r0_9 << 0x1c) < 0))
                                {
                                    *(*0x20000c58 + 8)(arg1);
                                    r0_13 = *(arg1 + (r6_1 << 2));
                                    r1_4 = 8;
                                }
                                if (((r0_9 << 0x1e) < 0 || ((r0_9 << 0x1e) >= 0 && (r0_9 << 0x1c) < 0)))
                                {
                                    *(r0_13 + 8) = r1_4;
                                }
                            }
                        }
                        r11_1 = (r11_1 + 0x2c);
                        r6_1 = (r6_1 + 1);
                        r0_5 = (r8_1 >> 1);
                    } while (0 != (r8_1 >> 1));
                    r9 = 1;
                }
            }
            if ((r5_1 << 0xd) < 0)
            {
                uint32_t r0_25 = sub_93d54(arg1);
                r9 = 1;
                if (r0_25 != 0)
                {
                    int32_t r10_1 = 0;
                    uint32_t r11_2;
                    do
                    {
                        r11_2 = r0_25;
                        if ((r11_2 << 0x1f) != 0)
                        {
                            void* r1_8 = *(arg1 + 0x10);
                            void* r0_28 = *((arg1 + (r10_1 << 2)) + 0x18);
                            int32_t r2_8 = ((((*(r1_8 + 0x34) >> r10_1) << 7) | *(r1_8 + 0x10)) & *(r0_28 + 8));
                            if ((r2_8 & 1) != 0)
                            {
                                *(r1_8 + 0x34) = (*(r1_8 + 0x34) & (!(1 << r10_1)));
                                *(r0_28 + 8) = 1;
                                *(*0x20000c58 + 4)(arg1, r10_1);
                                if ((r10_1 == 0 && (*(arg1 + 3) == 1 && *(arg1 + 0x111) == 4)))
                                {
                                    sub_93d60(arg1);
                                }
                            }
                            else
                            {
                                int32_t r1_14;
                                if ((r2_8 << 0x1c) < 0)
                                {
                                    r1_14 = 8;
                                label_93fd6:
                                    *(r0_28 + 8) = r1_14;
                                }
                                else
                                {
                                    if ((r2_8 << 0x1b) < 0)
                                    {
                                        r1_14 = 0x10;
                                        goto label_93fd6;
                                    }
                                    if ((r2_8 << 0x19) < 0)
                                    {
                                        r1_14 = 0x40;
                                        goto label_93fd6;
                                    }
                                    if ((r2_8 << 0x1e) < 0)
                                    {
                                        r1_14 = 2;
                                        goto label_93fd6;
                                    }
                                    if ((r2_8 << 0x18) < 0)
                                    {
                                        void* r2_10 = (arg1 + (r10_1 * 0x2c));
                                        int32_t r3_6 = *(r2_10 + 0x134);
                                        int32_t r5_3 = *(r2_10 + 0x138);
                                        int32_t r5_4 = (r3_6 - r5_3);
                                        int32_t r0_36;
                                        int32_t r2_15;
                                        if (r3_6 != r5_3)
                                        {
                                            int32_t r1_9 = *(r2_10 + 0x124);
                                            if (r5_4 > r1_9)
                                            {
                                                r5_4 = r1_9;
                                            }
                                            if (*(r0_28 + 0x18) >= ((r5_4 + 3) >> 2))
                                            {
                                                char* r1_12 = *(r2_10 + 0x128);
                                                do
                                                {
                                                    sub_93534(arg1, r1_12, r10_1, r5_4);
                                                    r1_12 = &*(r2_10 + 0x128)[r5_4];
                                                    *(r2_10 + 0x128) = r1_12;
                                                    r0_36 = (*(r2_10 + 0x138) + r5_4);
                                                    *(r2_10 + 0x138) = r0_36;
                                                    r2_15 = *(r2_10 + 0x134);
                                                    r5_4 = (r2_15 - r0_36);
                                                    if (r2_15 == r0_36)
                                                    {
                                                        break;
                                                    }
                                                    int32_t r0_38 = *(r2_10 + 0x124);
                                                    if (r5_4 > r0_38)
                                                    {
                                                        r5_4 = r0_38;
                                                    }
                                                    r0_28 = *((arg1 + (r10_1 << 2)) + 0x18);
                                                } while (*(r0_28 + 0x18) >= ((r5_4 + 3) >> 2));
                                                if (r2_15 == r0_36)
                                                {
                                                    r0_28 = *((arg1 + (r10_1 << 2)) + 0x18);
                                                    r1_8 = *(arg1 + 0x10);
                                                }
                                            }
                                        }
                                        if ((((r3_6 != r5_3 && *(r0_28 + 0x18) >= ((r5_4 + 3) >> 2)) && r2_15 == r0_36) || r3_6 == r5_3))
                                        {
                                            *(r1_8 + 0x34) = (*(r1_8 + 0x34) & (!(1 << r10_1)));
                                        }
                                        r1_14 = 0x80;
                                        goto label_93fd6;
                                    }
                                }
                            }
                        }
                        r0_25 = (r11_2 >> 1);
                        r10_1 = (r10_1 + 1);
                    } while (0 != (r11_2 >> 1));
                    r9 = 1;
                }
            }
            if ((r5_1 << 0x1e) < 0)
            {
                *(*(arg1 + 0xc) + 0x14) = 2;
            }
            if (r5_1 <= 0xffffffff)
            {
                if (*(arg1 + 0xa) != 0)
                {
                    int32_t* r0_47 = *(arg1 + 0x10c);
                    *r0_47 = (r0_47 & 0xfffffffc);
                }
                void* r0_48 = *(arg1 + 0x10);
                *(r0_48 + 4) = (*(r0_48 + 4) & 0xfffffffe);
                *(*0x20000c58 + 0x18)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 0x80000000;
            }
            if ((r5_1 << 0x14) < 0)
            {
                char var_25_1 = 0;
                char r0_53 = *(arg1 + 0x112);
                *(*0x20000c58 + 0x14)(arg1);
                bool cond:0_1 = (*(*(arg1 + 0x10) + 8) & 1) == 0;
                *(*(arg1 + 0xc) + 0x14) = 0x800;
                if (((!cond:0_1) && (*(arg1 + 0xa) != 0 && (*(arg1 + 0x115) == 1 && r0_53 == 3))))
                {
                    int32_t* r0_61 = *(arg1 + 0x10c);
                    *r0_61 = (*r0_61 | 1);
                    *r0_61 = (*r0_61 | 3);
                    *0xe000ed10 = (*0xe000ed10 | 6);
                }
                r9 = 1;
            }
            if ((r5_1 << 0x1c) < 0)
            {
                *(*0x20000c58 + 0xc)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 8;
            }
            if ((r5_1 << 0x1b) < 0)
            {
                void* r0_67 = *(arg1 + 0xc);
                *(r0_67 + 0x18) = (*(r0_67 + 0x18) & 0xffffffef);
                int32_t r6_4 = *(r0_67 + 0x20);
                int32_t r0_68 = ((r6_4 >> 0x11) & 0xf);
                int32_t r8_2 = (r6_4 & 0xf);
                if (r0_68 == 6)
                {
                    sub_9359c(arg1, (arg1 + 0x644), 8);
                    void* r0_74 = (arg1 + (r8_2 * 0x2c));
                    *(r0_74 + 0x3cc) = (*(r0_74 + 0x3cc) + ((r6_4 >> 4) & 0x7ff));
                }
                else if (r0_68 == 2)
                {
                    int32_t r9_1 = ((r6_4 >> 4) & 0x7ff);
                    if (r9_1 != 0)
                    {
                        void* r6_5 = (arg1 + (r8_2 * 0x2c));
                        sub_9359c(arg1, *(r6_5 + 0x3c0), r9_1);
                        int32_t r1_31 = *(r6_5 + 0x3cc);
                        *(r6_5 + 0x3c0) = (*(r6_5 + 0x3c0) + r9_1);
                        *(r6_5 + 0x3cc) = (r1_31 + r9_1);
                    }
                }
                void* r0_75 = *(arg1 + 0xc);
                r9 = 1;
                *(r0_75 + 0x18) = (*(r0_75 + 0x18) | 0x10);
            }
            if ((r5_1 << 0x13) < 0)
            {
                void* r0_77 = *(arg1 + 0x10);
                *(r0_77 + 4) = (*(r0_77 + 4) & 0xfffffffe);
                sub_937c6(arg1, 0);
                uint32_t i_1 = *(arg1 + 1);
                if (i_1 != 0)
                {
                    void* r1_39 = (arg1 + 0x54);
                    uint32_t i;
                    do
                    {
                        i = i_1;
                        i_1 = (i_1 - 1);
                        *(*(r1_39 - 0x3c) + 8) = 0xff;
                        void* r3_15 = *r1_39;
                        r1_39 = (r1_39 + 4);
                        *(r3_15 + 8) = 0xff;
                    } while (i != 1);
                }
                int32_t* r0_79 = *(arg1 + 0x10);
                r0_79[6] = 0xffffffff;
                r0_79[7] = 0x10001;
                r0_79[5] = 0xb;
                r0_79[4] = 0xb;
                *r0_79 = (*r0_79 & 0xfffff80f);
                sub_93d60(arg1);
                *(*(arg1 + 0xc) + 0x14) = 0x1000;
                *(*0x20000c58 + 0x10)(arg1);
                r9 = 1;
            }
            if ((r5_1 << 0x12) < 0)
            {
                sub_93a08(arg1);
                int32_t r6_6 = *(*(arg1 + 0xc) + 0xc);
                int32_t r0_88 = sub_939ee(arg1);
                char r1_43 = 0;
                r9 = 1;
                if (r0_88 != 3)
                {
                    r1_43 = 1;
                }
                *(arg1 + 2) = r1_43;
                int16_t r1_44 = 0x40;
                if (r0_88 == 3)
                {
                    r1_44 = 0x200;
                }
                *(arg1 + 4) = r1_44;
                int32_t r1_45 = 0x1400;
                if (r0_88 == 3)
                {
                    r1_45 = 0x2400;
                }
                void* r1_46 = *(arg1 + 0xc);
                *(r1_46 + 0xc) = ((r6_6 & 0xffffc3ff) | r1_45);
                *(r1_46 + 0x14) = 0x2000;
            }
            if ((r5_1 << 0xb) < 0)
            {
                *(*0x20000c58 + 0x1c)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 0x100000;
            }
            if ((r5_1 << 0xa) < 0)
            {
                *(*0x20000c58 + 0x20)(arg1);
                r9 = 1;
                *(*(arg1 + 0xc) + 0x14) = 0x200000;
            }
        }
    }
    if ((r0 == 0 || (r0 != 0 && r5_1 == 0)))
    {
        r9 = 0;
    }
    return r9;
}

int32_t sub_94248(char* arg1)
{
    int32_t r1;
    sub_935f6(arg1, r1);
    arg1[0x112] = 1;
    arg1[0x114] = 0;
    uint32_t r0 = arg1[1];
    if (r0 != 0)
    {
        void* r3_1 = &arg1[0x11c];
        int32_t r5_1 = 0;
        do
        {
            *r3_1 = r5_1;
            *(r3_1 + 1) = 1;
            *(r3_1 + 6) = r5_1;
            r5_1 = (r5_1 + 1);
            *(r3_1 + 3) = 0;
            *(r3_1 + 8) = 0x40;
            *(r3_1 + 0xc) = 0;
            *(r3_1 + 0x10) = 0;
            *(r3_1 + 0x18) = 0;
            r3_1 = (r3_1 + 0x2c);
        } while (r5_1 < r0);
        if (r0 != 0)
        {
            void* r1_1 = &arg1[0x3b0];
            int32_t r5_2 = 0;
            do
            {
                *r1_1 = r5_2;
                *(r1_1 + 1) = 0;
                *(r1_1 + 6) = r5_2;
                r5_2 = (r5_2 + 1);
                *(r1_1 + 3) = 0;
                *(r1_1 + 8) = 0x40;
                *(r1_1 + 0xc) = 0;
                *(r1_1 + 0x10) = 0;
                *(r1_1 + 0x18) = 0;
                r1_1 = (r1_1 + 0x2c);
            } while (r0 != r5_2);
        }
    }
    sub_937b8(arg1);
    sub_936c2(arg1);
    sub_93852(arg1, 0);
    sub_93898(arg1);
    /* tailcall */
    return sub_937aa(arg1);
}

int32_t sub_942d2(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t lr = (arg2 & 0x7f);
    void* r4 = (arg1 + (lr * 0x2c));
    char* r1 = (r4 + 0x11c);
    if ((arg2 & 0x80) == 0)
    {
        r1 = (r4 + 0x3b0);
    }
    r1[1] = (arg2 >> 7);
    *r1 = lr;
    *(r1 + 8) = arg3;
    r1[3] = arg4;
    if (0 != (arg2 >> 7))
    {
        *(r1 + 6) = lr;
    }
    if (arg4 == 2)
    {
        r1[4] = 0;
    }
    sub_93a34(arg1, r1);
    return 0;
}

int32_t sub_9431a(void* arg1, int32_t arg2)
{
    int32_t r12 = (arg2 & 0x7f);
    void* r3 = (arg1 + (r12 * 0x2c));
    char* r2 = (r3 + 0x11c);
    if ((arg2 & 0x80) == 0)
    {
        r2 = (r3 + 0x3b0);
    }
    r2[1] = (arg2 >> 7);
    *r2 = r12;
    sub_93aae(arg1, r2);
    return 0;
}

int32_t sub_9434a(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r12 = (arg2 & 0x7f);
    void* lr = (arg1 + (r12 * 0x2c));
    *(lr + 0x3c0) = arg3;
    *(lr + 0x3bc) = 0;
    *(lr + 0x3c8) = arg4;
    *(lr + 0x3cc) = 0;
    *(lr + 0x3b1) = 0;
    *(lr + 0x3b0) = r12;
    if (*(arg1 + 3) == 1)
    {
        *(lr + 0x3c4) = arg3;
    }
    if (r12 == 0)
    {
        sub_93c2e(arg1, (lr + 0x3b0));
    }
    else
    {
        sub_93ae2(arg1, (lr + 0x3b0));
    }
    return 0;
}

int32_t sub_94394(void* arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r12 = (arg2 & 0x7f);
    void* lr = (arg1 + (r12 * 0x2c));
    *(lr + 0x11c) = r12;
    *(lr + 0x11d) = 1;
    *(lr + 0x128) = arg3;
    *(lr + 0x12c) = 0;
    *(lr + 0x138) = 0;
    *(lr + 0x134) = arg4;
    if (r12 == 0)
    {
        sub_93c2e(arg1, (lr + 0x11c));
    }
    else
    {
        sub_93ae2(arg1, (lr + 0x11c));
    }
    return 0;
}

int32_t sub_943d8(int32_t arg1, int32_t arg2)
{
    int32_t r3 = (arg2 & 0x7f);
    void* r2_2 = (((arg1 + 0x110) + (r3 * 0x2c)) + 0xc);
    if ((arg2 & 0x80) == 0)
    {
        r2_2 = (((arg1 + 0x110) + (arg2 * 0x2c)) + 0x2a0);
    }
    *r2_2 = r3;
    *(r2_2 + 2) = 1;
    *(r2_2 + 1) = (arg2 >> 7);
    sub_93ce0(arg1, r2_2);
    return 0;
}

int32_t sub_94414(int32_t arg1, int32_t arg2)
{
    int32_t r3 = (arg2 & 0x7f);
    void* r2_2 = (((arg1 + 0x110) + (r3 * 0x2c)) + 0xc);
    if ((arg2 & 0x80) == 0)
    {
        r2_2 = (((arg1 + 0x110) + (arg2 * 0x2c)) + 0x2a0);
    }
    *r2_2 = r3;
    *(r2_2 + 2) = 0;
    *(r2_2 + 1) = (arg2 >> 7);
    sub_93d08(arg1, r2_2);
    return 0;
}

int32_t* sub_94450(void* arg1, int32_t arg2)
{
    int32_t* r0 = *(arg1 + 0x10);
    *r0 = (*r0 | ((arg2 & 0x7f) << 4));
    return r0;
}

void* sub_94462(void* arg1, int32_t arg2)
{
    int32_t r12 = (arg2 & 0x7f);
    void* r2 = *(arg1 + 0xc);
    int32_t lr = (1 << r12);
    void* r4_2 = *(arg1 + 0x10);
    int32_t* r1_1 = (arg1 + 0xc)[(r12 + 3)];
    *(r4_2 + 0x1c) = ((0xffff0000 | (!lr)) & *(r4_2 + 0x1c));
    *(r4_2 + 0x34) = (*(r4_2 + 0x34) | lr);
    if (*r1_1 <= 0xffffffff)
    {
        *r1_1 = (*r1_1 | 0x8000000);
        while ((r1_1[2] & 0x40) == 0)
        {
            /* nop */
        }
        *r1_1 = (*r1_1 | 0x40000000);
        while ((*r1_1 & 0x40000000) != 0)
        {
            /* nop */
        }
    }
    *(r2 + 0x10) = ((*(r2 + 0x10) & 0xfffff83f) | ((r12 & 0x1f) << 6));
    *(r2 + 0x10) = (*(r2 + 0x10) | 0x20);
    while ((*(r2 + 0x10) & 0x20) != 0)
    {
        /* nop */
    }
    r1_1[2] = r1_1[2];
    void* r0 = *(arg1 + 0x10);
    *(r0 + 0x1c) = (*(r0 + 0x1c) | lr);
    return r0;
}

int32_t sub_944e8(int32_t* arg1, int32_t arg2)
{
    arg1[1] = arg2;
    arg1[2] = 0;
    *arg1 = (arg2 + sub_4000);
    return 0;
}

int32_t sub_944f8(int32_t* arg1, int32_t arg2)
{
    *arg1 = arg2;
    arg1[2] = 0;
    arg1[1] = (arg2 + 0x18);
    return 0;
}

int32_t sub_94506(int32_t* arg1)
{
    int32_t r0 = *arg1;
    if (r0 > 9)
    {
        return 0xffffffff;
    }
    int32_t r2;
    int32_t r0_5 = r2(&arg1[((r0 * 3) + 1)]);
    if (r0_5 == 0)
    {
        int32_t r0_6 = *arg1;
        arg1[((r0_6 * 3) + 3)] = 1;
        *arg1 = (r0_6 + 1);
        return 0;
    }
    return r0_5;
}

void* sub_9453e(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    if (arg2 < 0xa)
    {
        void* r0 = (arg1 + (arg2 << 2));
        *(r0 + 0xa4) = arg4;
        *(r0 + 0x7c) = arg3;
        return r0;
    }
    /* no return */
}

int32_t sub_9454e() __noreturn
{
    sub_97ef2("setFifos", "/Users/cwlange/Desktop/potassium…", 0x42, "idx < numChSlots");
    /* no return */
}

void* sub_94570(int32_t arg1, int32_t arg2, char arg3)
{
    if (arg2 < 0xa)
    {
        void* r0 = (arg1 + (arg2 * 0xc));
        *(r0 + 0xc) = arg3;
        return r0;
    }
    /* no return */
}

int32_t sub_94580() __noreturn
{
    sub_97ef2("enableFifo", "/Users/cwlange/Desktop/potassium…", 0x48, "idx < numChSlots");
    /* no return */
}

int32_t sub_945a2(int32_t* arg1)
{
    int32_t r0 = *arg1;
    if (r0 >= 1)
    {
        int32_t r8_1 = 0;
        do
        {
            void* r6_1 = &arg1[(r8_1 * 3)];
            if ((*(r6_1 + 0xc) != 0 && arg1[(r8_1 + 0x1f)] != 0))
            {
                int32_t var_2c = 1;
                int32_t var_28;
                if (sub_94a5a(1, (*(r6_1 + 8) + 0x14), &var_28, &var_2c, 0) == 0)
                {
                    int32_t r11_1 = var_28;
                    int32_t r0_3 = sub_8ff78(arg1[(r8_1 + 0x1f)]);
                    if (r0_3 < r11_1)
                    {
                        r11_1 = r0_3;
                    }
                    if (r11_1 > 0x100)
                    {
                        r11_1 = 0x100;
                    }
                    if ((r11_1 > 0x100 || (r11_1 <= 0x100 && (r11_1 << 0x10) != 0)))
                    {
                        uint32_t i_1 = r11_1;
                        int32_t r0_7;
                        uint32_t r12_1;
                        r0_7 = sub_9465a((r6_1 + 4), &arg1[0x33], i_1);
                        if ((r0_7 == 0 && i_1 != 0))
                        {
                            void* r5_1 = &arg1[0x33];
                            uint32_t i;
                            do
                            {
                                char r1_3 = *r5_1;
                                r5_1 = (r5_1 + 1);
                                sub_8ff96(arg1[(r8_1 + 0x1f)], r1_3, r12_1);
                                i = i_1;
                                i_1 = (i_1 - 1);
                            } while (i != 1);
                        }
                    }
                }
            }
            r0 = *arg1;
            r8_1 = (r8_1 + 1);
        } while (r8_1 < r0);
    }
    return r0;
}

int32_t sub_9465a(void* arg1, uint32_t* arg2, int32_t arg3)
{
    int32_t r5 = arg3;
    int32_t r0 = 0;
    uint32_t* r4 = arg2;
    uint32_t r6 = (r5 >> 2);
    uint32_t var_1c = r6;
    if (0 != (r5 >> 2))
    {
        r0 = sub_94a5a(1, (*(arg1 + 4) + 0x10), r4, &var_1c, 0);
        r4 = &r4[r6];
        r5 = (r5 & 3);
    }
    if ((r5 != 0 && r0 == 0))
    {
        var_1c = 1;
        int32_t var_20;
        r0 = sub_94a5a(1, (*(arg1 + 4) + (r5 << 2)), &var_20, &var_1c, 0);
        *r4 = (var_20 >> 8);
    }
    return r0;
}

int32_t sub_946bc(int32_t* arg1)
{
    int32_t r0 = *arg1;
    if (r0 >= 1)
    {
        int32_t r11_1 = 0;
        do
        {
            void* r5_1 = &arg1[(r11_1 * 3)];
            if (*(r5_1 + 0xc) != 0)
            {
                int32_t* r0_3 = arg1[(r11_1 + 0x29)];
                if (r0_3 != 0)
                {
                    uint32_t r6_1 = sub_8ff62(r0_3);
                    if (r6_1 != 0)
                    {
                        int32_t var_2c = 1;
                        int16_t var_28;
                        int32_t r0_6;
                        int32_t r1_2;
                        uint32_t r2_2;
                        r0_6 = sub_94a5a(1, (*(r5_1 + 4) + 0x14), &var_28, &var_2c, 0);
                        if (r0_6 == 0)
                        {
                            uint32_t r0_7 = var_28;
                            if (r0_7 != 0)
                            {
                                if (r6_1 > r0_7)
                                {
                                    r6_1 = r0_7;
                                }
                                if (r6_1 >= 0x100)
                                {
                                    r6_1 = 0x100;
                                }
                                if (r6_1 >= 1)
                                {
                                    int32_t r5_2 = 0;
                                    do
                                    {
                                        char r0_9;
                                        r0_9 = sub_8fff6(arg1[(r11_1 + 0x29)], r1_2, r2_2);
                                        *(&arg1[0x33] + r5_2) = r0_9;
                                        r5_2 = (r5_2 + 1);
                                    } while (r5_2 < r6_1);
                                }
                                sub_9475e((r5_1 + 4), &arg1[0x33], r6_1);
                            }
                        }
                    }
                }
            }
            r0 = *arg1;
            r11_1 = (r11_1 + 1);
        } while (r11_1 < r0);
    }
    return r0;
}

int32_t sub_9475e(int32_t* arg1, int32_t arg2, int32_t arg3)
{
    int32_t r5 = arg3;
    int32_t r0 = 0;
    int32_t r4 = arg2;
    uint32_t r6 = (r5 >> 2);
    uint32_t var_1c = r6;
    if (0 != (r5 >> 2))
    {
        r0 = sub_94a5a(0, (*arg1 + 0x10), r4, &var_1c, 0);
        r4 = (r4 + (r6 << 2));
        r5 = (r5 & 3);
    }
    if ((r5 != 0 && r0 == 0))
    {
        var_1c = 1;
        r0 = sub_94a5a(0, (*arg1 + (r5 << 2)), r4, &var_1c, 0);
    }
    return r0;
}

void sub_947ba(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    int32_t r1 = *0x20000c5c;
    if (r1 == arg1)
    {
        return;
    }
    if (r1 >= 0)
    {
        int32_t r0 = (r1 * 5);
        sub_9453e(0x20006180, r1, (0x2000634c + (r0 << 2)), (0x20006414 + (r0 << 2)));
        sub_80c9a(*0x20000c5c, 1);
    }
    *0x20000c5c = arg1;
    if (arg1 < 0)
    {
        return;
    }
    sub_9453e(0x20006180, arg1, *0x200064dc, *0x200064e0);
    /* tailcall */
    return sub_80c9a(*0x20000c5c, 0);
}

int32_t sub_9483a(int32_t arg1, int32_t arg2)
{
    int32_t i = 0;
    int32_t* r5 = 0x20006414;
    int32_t* r6 = 0x2000634c;
    int32_t r8 = 0x200064e4;
    *0x200064dc = arg2;
    *0x200064e0 = arg1;
    int32_t r0_4;
    do
    {
        sub_8ff4c(r5, r8, 0x100);
        sub_8ff4c(r6, (r8 + 0x100), 0x100);
        sub_9453e(0x20006180, i, r6, r5);
        r0_4 = sub_80b7e(i, r6, r5, (i + 0x7a69));
        i = (i + 1);
        r8 = (r8 + 0x200);
        r6 = &r6[5];
        r5 = &r5[5];
    } while (i != 0xa);
    return r0_4;
}

int32_t sub_948c6(int32_t arg1, int32_t* arg2, int32_t* arg3)
{
    if (arg1 > 0xa)
    {
        return 0;
    }
    if (arg2 != 0)
    {
        *arg2 = (0x2000634c + (arg1 * 0x14));
    }
    if (arg3 != 0)
    {
        *arg3 = (0x20006414 + (arg1 * 0x14));
    }
    return 1;
}

int32_t j_sub_94900(int32_t arg1)
{
    /* tailcall */
    return sub_94900(arg1, 0);
}

uint32_t sub_94900(uint32_t arg1, int32_t arg2)
{
    uint32_t r2 = *0x20000c68;
    uint32_t r4 = r2;
    if (r2 < 0)
    {
        r4 = *0x200078e4;
    }
    if (arg1 >= 0)
    {
        if (arg2 != 1)
        {
            *0x200078e4 = arg1;
        }
        else
        {
            uint32_t r3_1 = arg1;
            void* const r2_1 = &data_99761;
            if (arg1 == 0xffff)
            {
                r3_1 = 0xffffffff;
            }
            if (arg1 == 0xff)
            {
                r3_1 = 0xffffffff;
            }
            *0x20000c68 = r3_1;
            if (r3_1 < 0)
            {
                r2_1 = &data_9975d;
            }
            sub_8fba2(4, "dbgFifo override %s. dbgfifo %u\n", r2_1);
            arg1 = *0x200078e4;
            r2 = *0x20000c68;
        }
        if (r2 < 0)
        {
            r2 = arg1;
        }
        if (r2 != r4)
        {
            if (r2 == 0)
            {
                sub_8fba2(4, "Disable dbgFifo\n", r2);
                int32_t i = 0;
                *0x20007914 = 0;
                *0x20006180 = 0;
                sub_95032();
                sub_947ba(0xffffffff);
                do
                {
                    sub_80bd4(i, 0);
                    i = (i + 1);
                } while (i != 0xa);
            }
            else if (r4 == 0)
            {
                sub_8fba2(4, "Enable dbgFifo\n", r2);
                if (sub_94dd8() == 1)
                {
                    int32_t var_1c;
                    int32_t var_1c_1 = ((var_1c | 0x50000000) | 1);
                    sub_8122a();
                }
            }
            else if (*0x20006180 != 0)
            {
                sub_947ba((r2 - 1));
                int32_t r0_3 = (*0x20000c5c + 1);
                if (*0x20000c68 > 0xffffffff)
                {
                    *0x20000c68 = r0_3;
                }
                else
                {
                    *0x200078e4 = r0_3;
                }
            }
        }
        uint32_t r0_9 = *0x20000c68;
        r4 = *0x200078e4;
        if (r0_9 >= 0)
        {
            r4 = r0_9;
        }
    }
    return r4;
}

void sub_94a3c(int32_t arg1)
{
    if (arg1 <= 0xffffffff)
    {
        *0x20000c60;
        return;
    }
    *0x20000c60 = arg1;
}

int32_t sub_94a5a(int32_t arg1, int32_t arg2, int32_t arg3, int32_t* arg4, int32_t arg5)
{
    int32_t var_28;
    int32_t r5 = sub_81d32(1, 0, &var_28);
    if (r5 == 0)
    {
        int32_t r0_2 = (0x42 | (arg5 << 4));
        int32_t r1 = var_28;
        int32_t r10_1;
        if ((r1 & 0x77) != r0_2)
        {
            r10_1 = 1;
            int32_t var_30 = (r0_2 | (r1 & 0xffffff88));
            sub_81bf6(1, 0, &var_30);
        }
        else
        {
            r10_1 = 0;
        }
        int32_t var_2c;
        int32_t r0_5;
        int32_t r1_2;
        r0_5 = sub_81d32(1, 4, &var_2c);
        int32_t r11_1 = var_2c;
        if (arg1 != 1)
        {
            sub_81c0a(1, r1_2, arg2, 0, arg3, arg4);
        }
        else
        {
            sub_81b74(1, r1_2, arg2, 0, arg3, arg4);
        }
        if (r10_1 != 0)
        {
            sub_81bf6(1, 0, &var_28);
        }
        if (r11_1 != arg2)
        {
            sub_81bf6(1, 4, &var_2c);
        }
        r5 = 0;
    }
    sub_94b16();
    return r5;
}

uint32_t sub_94b16()
{
    uint32_t r0 = sub_94dd8();
    if (r0 == 1)
    {
        int32_t var_c;
        int32_t r0_1 = var_c;
        if ((r0_1 & 0xb2) != 0)
        {
            sub_8122a();
            r0_1 = var_c;
        }
        r0 = sub_80ffe((r0_1 & 1));
        if ((var_c & 0x50000001) != 0x50000001)
        {
            r0 = sub_8122a();
        }
    }
    return r0;
}

int32_t sub_94b5c()
{
    int32_t lr;
    int32_t var_4 = lr;
    uint32_t r1 = *0x20000c68;
    uint32_t r0 = *0x200078e4;
    if (r1 >= 0)
    {
        r0 = r1;
    }
    if ((r0 != 0 && sub_8e98c() > 1))
    {
        if (*0x20006180 == 0)
        {
            int32_t r0_9;
            if (*0x2000790c == 1)
            {
                r0_9 = (*0x20006064 - *0x20007910);
                if (r0_9 < 0)
                {
                    goto label_94c7a;
                }
            }
            int32_t r0_10;
            int32_t r2_3;
            r0_10 = sub_94ca6();
            int32_t r0_11;
            if (r0_10 == 0)
            {
                sub_8fba2(3, "Second Pass of ROM TABLE\n", r2_3);
                *0x20006180 = 0;
                sub_95032();
                r0_11 = sub_94ca6();
                if (r0_11 == 0)
                {
                    *0x2000790c = 0;
                    *0x20007914 = 1;
                    *0x20007918 = (*0x20006064 - 1);
                    sub_95180();
                }
            }
            if ((r0_10 != 0 || (r0_10 == 0 && r0_11 != 0)))
            {
                *0x2000790c = 1;
                r0_9 = (*0x20006064 + *0x20000c64);
                *0x20007910 = r0_9;
            label_94c7a:
                return r0_9;
            }
        }
        if ((*0x20007914 == 1 && (*0x20006064 - *0x20007918) >= 0))
        {
            *0x20007914 = 1;
            *0x20007918 = (*0x20006064 + *0x20000c60);
            sub_945a2(0x20006180);
        }
        /* tailcall */
        return sub_946bc(0x20006180);
    }
    *0x20006180 = 0;
    /* tailcall */
    return sub_95032();
}

int32_t sub_94ca6()
{
    int32_t var_20 = 3;
    int32_t r2;
    sub_8fba2(4, "idChip\n", r2);
    int32_t var_1c;
    int32_t r0;
    int32_t r2_2;
    r0 = sub_94a5a(1, 0x80000fe0, &var_1c, &var_20, 1);
    int32_t r0_1;
    if (r0 != 0)
    {
        sub_8fba2(4, "failed\n", r2_2);
        sub_95100();
        r0_1 = 0xffffffff;
    }
    else
    {
        int32_t var_14;
        int32_t var_28_1 = var_14;
        sub_8fba2(4, "idChip: %X %X %X", var_1c);
        int32_t r0_3;
        int32_t r2_4;
        r0_3 = sub_97894(&data_9a5c4, &var_1c, 0xc);
        if (r0_3 == 0)
        {
            sub_8fc48(4, " Found %s\n", &data_99824);
            int32_t r5_1 = *0x20006180;
            sub_94506(0x20006180);
            sub_95054(0x20006180, r5_1);
        }
        else
        {
            sub_8fc48(4, " Unknown\n", r2_4);
        }
        sub_95152();
        int32_t r2_6 = *0x20006180;
        if (r2_6 == 0)
        {
            int32_t r0_4 = sub_81d32(1, 0xf8, &var_1c);
            if (r0_4 == 0)
            {
                int32_t r2_9 = (var_1c & 0x7fffffff);
                var_1c = r2_9;
                int32_t r2_10 = sub_8fba2(4, "findDbgFifo: base: %X\n", r2_9);
                int32_t r8;
                sub_94e04(0, var_1c, r2_10, r8);
            }
            else
            {
                sub_8fba2(4, "findDbgFifo: couldn't determine …", r0_4);
                sub_94b16();
            }
            r2_6 = *0x20006180;
        }
        sub_8fba2(4, "findDbgFifo: found %u channels\n", r2_6);
        r0_1 = 0;
        if (*0x20006180 == 0)
        {
            r0_1 = 1;
        }
    }
    return r0_1;
}

int32_t sub_94dd8()
{
    int32_t r0_2 = sub_81248();
    if (r0_2 == 7)
    {
        if (sub_810ec() == 0)
        {
            r0_2 = sub_81248();
        }
        else
        {
            r0_2 = 7;
        }
    }
    return r0_2;
}

int32_t sub_94e04(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4 @ r8)
{
    int32_t var_24 = arg4;
    if (arg1 == 0)
    {
        sub_8fba2(3, "exploreRomTable start\n", arg3);
        *0x200078e8 = *0x20006064;
    }
    sub_8fba2(4, "EXPLORE ROMTABLE %X\n", arg2);
    sub_951b2();
    int32_t var_28 = 1;
    int32_t var_2c;
    bool cond:0 = sub_94a5a(1, arg2, &var_2c, &var_28, 1) == 0;
    char const* const r1_8;
    int32_t r2_9;
    int32_t r3_1;
    int32_t r10;
    if (cond:0)
    {
        r10 = arg2;
        int32_t i;
        do
        {
            r3_1 = var_2c;
            if (r3_1 == 0)
            {
                break;
            }
            if ((r3_1 << 0x1f) != 0)
            {
                int32_t var_30 = 8;
                int32_t r0_4 = (r3_1 & 0x3fc);
                int32_t r9_1;
                if ((r0_4 == 0x3fc || r0_4 == 0))
                {
                    int32_t r1_1 = 0;
                    if (r0_4 == 0)
                    {
                        r1_1 = 1;
                    }
                    int32_t r0_5 = 0;
                    if (r0_4 == 0x3fc)
                    {
                        r0_5 = 1;
                    }
                    arg4 = ((r3_1 & 0xfffff000) + arg2);
                    r9_1 = (arg4 + 0xfe0);
                    if ((r0_5 | r1_1) == 0)
                    {
                        goto label_94f1e;
                    }
                    if ((arg4 & 0xc0000000) != 0x40000000)
                    {
                        goto label_94f1e;
                    }
                    int32_t var_40_1 = r9_1;
                    sub_8fba2(7, "  Valid addr: %08X romEntry: %08…", r10);
                    if (sub_94a5a(1, r9_1, 0x200078ec, &var_30, 1) != 0)
                    {
                        sub_8fba2(7, "Bad entry: %X\n", arg4);
                    }
                    else if (sub_97894(0x200078fc, &data_9a5f8, 0x10) == 0)
                    {
                        sub_8fba2(4, "FOUND ROMTABLE %X\n", arg4);
                        sub_94e04((arg1 + 1), arg4);
                    }
                    else
                    {
                        void* r9_2 = &data_9a62c;
                        char const* const j = "DockChannel-M8-A0";
                        do
                        {
                            if (sub_97894(0x200078ec, (r9_2 - 0x20), 0x20) == 0)
                            {
                                int32_t r4_1 = *0x20006180;
                                int32_t var_40_3 = r4_1;
                                sub_8fba2(3, "FOUND %s %X (idx: %d)\n", j);
                                *r9_2;
                                sub_94506(0x20006180);
                                sub_95054(0x20006180, r4_1);
                                break;
                            }
                            j = *(r9_2 + 4);
                            r9_2 = (r9_2 + 0x28);
                        } while (j != 0);
                    }
                }
                if ((r0_4 != 0x3fc && r0_4 != 0))
                {
                    r9_1 = (arg4 + 0xfe0);
                label_94f1e:
                    int32_t var_40_2 = r9_1;
                    sub_8fba2(7, "Invalid addr: %08X romEntry: %08…", r10);
                }
            }
            sub_951b2();
            r10 = (r10 + 4);
            var_28 = 1;
            i = sub_94a5a(1, r10, &var_2c, &var_28, 1);
        } while (i == 0);
        if (r3_1 == 0)
        {
            r2_9 = arg2;
            r1_8 = "END ROMTABLE %X\n";
        }
    }
    else
    {
        r10 = arg2;
    }
    if (((!cond:0) || (cond:0 && r3_1 != 0)))
    {
        r2_9 = r10;
        r1_8 = "Error reading entry @ %X. Bailin…";
    }
    sub_8fba2(4, r1_8, r2_9);
    int32_t r0_14 = arg1;
    if (r0_14 == 0)
    {
        r0_14 = sub_8fba2(3, "exploreRomTable end (time: %d)\n", (*0x20006064 - *0x200078e8));
    }
    return r0_14;
}

int32_t sub_95032()
{
    if (*0x20000508 == 0x206)
    {
        *0x20001d94 = 0;
    }
    return 0;
}

int32_t sub_95054(int32_t arg1, int32_t arg2)
{
    int32_t r0 = (1 << arg2);
    int32_t r2_1 = (*0x20001d94 | r0);
    *0x20001d94 = r2_1;
    if ((*0x20000520 & r0) == 0)
    {
        sub_80bd4(arg2, 0);
        sub_94570(arg1, arg2, 0);
    }
    else
    {
        int32_t r2_2;
        if (*0x20000504 == arg2)
        {
            sub_8fba2(3, "Added as Comms channel\n", r2_1);
            r2_2 = 0x20000b14;
            sub_9453e(arg1, arg2, 0x20000b14, 0x20000b28);
        }
        else
        {
            if (*0x2000051c != arg2)
            {
                sub_8fba2(3, "Hippo Channel Enabled\n", r2_1);
            }
            r2_2 = sub_80bd4(arg2, 1);
        }
        if (*0x2000051c == arg2)
        {
            sub_8fba2(3, "Set as default channel\n", r2_2);
            sub_947ba(arg2);
        }
    }
    return 0;
}

int32_t sub_95100()
{
    int32_t r0 = sub_820ce(0);
    char r1_1 = (*0x2000791c + 1);
    *0x2000791c = r1_1;
    if ((r1_1 >= 3 && (r0 - 0x3e8) >= 0x2710))
    {
        sub_820ce((r0 - 0x3e8));
        sub_8fba2(3, "idChip failed: Setting SWD clock…", sub_820ce(0));
        *0x2000791c = 0;
    }
    sub_8e71e(3);
    return 0;
}

int32_t sub_95152()
{
    sub_8e6a2();
    sub_8fba2(4, "SWD Clock Rate: %d\n", sub_820ce(0));
    *0x2000791c = 0;
    return 0;
}

int32_t sub_95180()
{
    int32_t r0_1;
    if (sub_8e756() != 5)
    {
        r0_1 = 4;
    }
    else
    {
        r0_1 = 6;
    }
    sub_8fba2(3, "Target ready for host comms\n", sub_8e6ee(r0_1));
    *0x20001d9c = 1;
    return 0;
}

int32_t sub_951b2()
{
    sub_8e8ec();
    return 0;
}

int32_t sub_951be(int32_t arg1)
{
    int32_t r8 = ((sub_90194(0x40021000, 0x40) << 1) | sub_90194(0x40021000, 0x80));
    int32_t r0_2 = sub_90194(0x40021000, 0x100);
    int32_t r0_4 = (sub_90194(0x40021000, 0x200) | (r0_2 << 1));
    int32_t r1_2;
    if (arg1 == 0)
    {
        uint32_t r0_7 = r0_4;
        bool cond:0_1 = r8 != 1;
        if (r8 == 1)
        {
            cond:0_1 = r0_7 != 1;
        }
        if ((!cond:0_1))
        {
            goto label_95248;
        }
        if ((r8 == 1 || (r8 != 1 && r0_7 != 1)))
        {
            int32_t r1_3 = 0;
            int32_t r2_3 = r8;
            if (r0_7 != 1)
            {
                r1_3 = 1;
            }
            if (r8 != 1)
            {
                r2_3 = 0;
            }
            int32_t r2_4 = (r2_3 & r1_3);
            r1_2 = 3;
            if (r2_4 != 0)
            {
                r1_2 = 2;
            }
            if ((r0_7 != 1 && (r2_4 == 0 && r8 != 1)))
            {
                r1_2 = 7;
                if ((*0x200004f8 - 1) < 2)
                {
                    r1_2 = 1;
                }
            }
        }
        if ((r8 != 1 && r0_7 == 1))
        {
        label_952c0:
            r1_2 = 1;
        }
    }
    else
    {
        uint32_t r1_1 = r0_4;
        if ((r8 != 3 || (r8 == 3 && (r1_1 | 2) != 3)))
        {
            bool cond:1_1 = r8 == 1;
            if (r8 == 1)
            {
                cond:1_1 = r1_1 == 3;
            }
            if (cond:1_1)
            {
                goto label_95248;
            }
            if ((r8 | 2) != 2)
            {
                r1_2 = 3;
                if ((r0_4 | 2) == 2)
                {
                    if (r8 == 1)
                    {
                        r1_2 = 6;
                    }
                    if (r8 == 3)
                    {
                        r1_2 = 2;
                    }
                }
            }
            else
            {
                if (r1_1 == 3)
                {
                    goto label_952c0;
                }
                if (r1_1 >= 3)
                {
                    r1_2 = 3;
                }
                else
                {
                    r1_2 = *(0x9a6b8 + ((r0_4 << 0x18) >> 0x16));
                }
            }
        }
        if ((r8 == 3 && (r1_1 | 2) == 3))
        {
        label_95248:
            r1_2 = 0;
        }
    }
    int32_t r0_8 = *0x20007920;
    int32_t r6_3;
    if (r1_2 == r0_8)
    {
        *0x20007930 = 0;
    }
    else
    {
        if (*0x20007930 == 0)
        {
            *0x20007930 = 1;
            r6_3 = (*0x20006064 + 0xf);
            *0x20007934 = r6_3;
        }
        else
        {
            r6_3 = *0x20007934;
        }
        if ((*0x20006064 - r6_3) >= 0)
        {
            *0x20007920 = r1_2;
            *0x20007930 = 0;
        }
    }
    if ((r1_2 == r0_8 || (r1_2 != r0_8 && (*0x20006064 - r6_3) >= 0)))
    {
        r0_8 = r1_2;
    }
    return r0_8;
}

int32_t sub_95326(int32_t arg1)
{
    int32_t r1_3;
    bool cond:1_1;
    if (arg1 == 0)
    {
        int32_t r5_2 = ((sub_90194(0x40020c00, 0x40) << 1) | sub_90194(0x40020c00, 0x80));
        char r6_1 = (sub_90194(0x40020c00, 0x100) << 1);
        cond:1_1 = r5_2 == 1;
        int32_t r0_4 = (sub_90194(0x40020c00, 0x200) | r6_1);
        if (r5_2 == 1)
        {
            cond:1_1 = r0_4 == 1;
        }
        if ((!cond:1_1))
        {
            if ((r5_2 != 1 && r0_4 == 1))
            {
                r1_3 = 1;
            }
            if ((r5_2 == 1 || (r5_2 != 1 && r0_4 != 1)))
            {
                if ((r0_4 != 1 && r5_2 == 1))
                {
                    r1_3 = 2;
                }
                if ((r0_4 == 1 || (r0_4 != 1 && r5_2 != 1)))
                {
                    if ((r0_4 | 2) == 2)
                    {
                        r1_3 = 7;
                    }
                    else
                    {
                        r1_3 = 3;
                    }
                }
            }
        }
    }
    if ((arg1 != 0 || (arg1 == 0 && cond:1_1)))
    {
        r1_3 = 0;
    }
    int32_t r0_5 = *0x20007924;
    int32_t r5_3;
    if (r1_3 == r0_5)
    {
        *0x20007938 = 0;
    }
    else
    {
        if (*0x20007938 == 0)
        {
            *0x20007938 = 1;
            r5_3 = (*0x20006064 + 0xf);
            *0x2000793c = r5_3;
        }
        else
        {
            r5_3 = *0x2000793c;
        }
        if ((*0x20006064 - r5_3) >= 0)
        {
            *0x20007924 = r1_3;
            *0x20007938 = 0;
        }
    }
    if ((r1_3 == r0_5 || (r1_3 != r0_5 && (*0x20006064 - r5_3) >= 0)))
    {
        r0_5 = r1_3;
    }
    return r0_5;
}

int32_t sub_9540a()
{
    int32_t r1 = 0;
    if (sub_8f798(0x40012000, 0xe, 1) >= 0x294)
    {
        r1 = 1;
    }
    return r1;
}

int32_t sub_9542c()
{
    int32_t r1 = 0;
    if (sub_8f798(0x40012000, 0xf, 1) >= 0x294)
    {
        r1 = 1;
    }
    return r1;
}

uint32_t sub_9544e(int32_t arg1, int32_t arg2)
{
    if ((*0x40013004 & 0x40) != 0)
    {
        if ((*0x40013008 & 1) != 0)
        {
            do
            {
                /* unimplemented  {rbit r1, r0} */;
                arg2 = sub_954bc(*0x20007928, (arg2 >> 0x18), 8);
            } while ((*0x40013008 & 1) != 0);
        }
        if (*0x20001f3f == 0)
        {
            *0xe000ed04 = 0x10000000;
        }
    }
    uint32_t r0_5 = *0x40013004;
    if ((r0_5 & 0x80) == 0)
    {
        return r0_5;
    }
    uint32_t r0_6 = *0x40013008;
    if ((r0_6 & 2) != 0)
    {
        *0x4001300c = 0xd2;
    }
    return r0_6;
}

void sub_954bc(void* arg1, int32_t arg2, int32_t arg3)
{
    uint32_t r12 = *(arg1 + 0x403);
    uint32_t r3 = *(arg1 + 0x402);
    int32_t r3_1 = (r3 + arg3);
    *(arg1 + (r12 << 2)) = ((arg2 << r3) | (*(arg1 + (r12 << 2)) & ((1 << r3) - 1)));
    *(arg1 + 0x402) = r3_1;
    if ((r3_1 & 0xe0) < 0x20)
    {
        return;
    }
    *(arg1 + 0x402) = (r3_1 - 0x20);
    *(arg1 + 0x403) = (r12 + 1);
    *(arg1 + ((r12 + 1) << 2)) = (arg2 >> (arg3 - (r3_1 - 0x20)));
}

uint32_t sub_9550e(int32_t arg1, int32_t arg2)
{
    if ((*0x40003c04 & 0x40) != 0)
    {
        if ((*0x40003c08 & 1) != 0)
        {
            do
            {
                /* unimplemented  {rbit r1, r0} */;
                arg2 = sub_954bc(*0x2000792c, (arg2 >> 0x18), 8);
            } while ((*0x40003c08 & 1) != 0);
        }
        if (*0x20001f3f == 0)
        {
            *0xe000ed04 = 0x10000000;
        }
    }
    uint32_t r0_5 = *0x40003c04;
    if ((r0_5 & 0x80) == 0)
    {
        return r0_5;
    }
    uint32_t r0_6 = *0x40003c08;
    if ((r0_6 & 2) != 0)
    {
        *0x40003c0c = 0xd2;
    }
    return r0_6;
}

int32_t sub_9557c(void* arg1)
{
    *0x20007928 = arg1;
    *(arg1 + 0x400) = 0;
    sub_9012e(0x40021000, 0x400);
    sub_90190(0x40021000, 0x400);
    sub_90190(0x40021000, 1);
    sub_90190(0x40021000, 2);
    sub_90190(0x40021000, 0x20);
    sub_9012e(0x40021000, 0x20);
    *0x40023844 = (*0x40023844 | 0x1000);
    sub_90190(0x40021000, 0x10);
    sub_90190(0x40021000, 8);
    sub_9012e(0x40021000, 0x10);
    sub_9012e(0x40021000, 8);
    sub_91cee(0x40020400, 4, 5);
    sub_91cee(0x40020000, 7, 5);
    sub_91cee(0x40020400, 3, 5);
    sub_90158(0x40020400, 0x10);
    sub_90158(0x40020000, 0x80);
    sub_90158(0x40020400, 8);
    *0x40013000 = 0;
    *0x40013000 = 0x212;
    *0x40013004 = 0x40;
    *0xe000e104 = 8;
    *0x40013000 = (*0x40013000 | 0x40);
    /* tailcall */
    return sub_90182(0x40021000, 0x20, 0);
}

int32_t sub_95684(void* arg1)
{
    int32_t r11 = ((*(arg1 + 0x402) - *(arg1 + 0x400)) + (0x1fe0 & ((*(arg1 + 0x403) - *(arg1 + 0x401)) << 5)));
    if (*0x20001f3f == 0)
    {
        /* unimplemented  {cpsid I} */;
    }
    if (r11 != 0)
    {
        int32_t r6_1 = 0;
        int32_t r9_1 = 1;
        int32_t r4_1;
        int32_t temp0_1;
        do
        {
            r4_1 = r11;
            if (r11 >= 4)
            {
                r4_1 = 4;
            }
            int32_t r9_2 = ((*(0x9a6a8 + (sub_95ac4(arg1, r6_1) & 0xf)) ^ (0 - r9_1)) & (0xffffffff << ((4 - r4_1) << 1)));
            while ((*0x40013008 & 2) == 0)
            {
                /* nop */
            }
            *0x4001300c = r9_2;
            sub_90182(0x40021000, 0x20, 1);
            r6_1 = (r6_1 + r4_1);
            temp0_1 = r11;
            r11 = (r11 - r4_1);
            r9_1 = (r9_2 & 1);
        } while (temp0_1 != r4_1);
    }
    while ((*0x40013008 & 2) == 0)
    {
        /* nop */
    }
    *0x4001300c = 0;
    while ((*0x40013008 & 2) == 0)
    {
        /* nop */
    }
    sub_90182(0x40021000, 0x20, 0);
    while ((*0x40013008 & 1) != 0)
    {
        *0x4001300c;
    }
    /* unimplemented  {cpsie I} */;
    if (*0x20001f3f != 0)
    {
        *0xe000ed04 = 0x10000000;
    }
    return 0;
}

int32_t sub_9578c(int32_t arg1)
{
    int32_t lr;
    int32_t var_4 = lr;
    if ((arg1 - 1) > 6)
    {
        return (arg1 - 1);
    }
    switch (*(arg1 + 0x9579b))
    {
        case 4:
        {
            sub_90190(0x40021000, 1);
            break;
        }
        case 0xd:
        {
            sub_9018c(0x40021000, 1);
            break;
        }
        case 0x1b:
        {
            sub_90190(0x40021000, 2);
            /* tailcall */
            return sub_9018c(0x40021000, 1);
        }
        case 0x29:
        {
            return (arg1 - 1);
            break;
        }
    }
    if ((*(arg1 + 0x9579b) == 4 || *(arg1 + 0x9579b) == 0xd))
    {
        /* tailcall */
        return sub_9018c(0x40021000, 2);
    }
}

int32_t sub_957f0(int32_t arg1)
{
    if (arg1 == 0)
    {
        sub_90182(0x40021000, 0x20, 0);
        *0x40013004 = (*0x40013004 & 0xff7f);
        *0x40013004 = (*0x40013004 | 0x40);
    }
    else
    {
        *0x40013004 = (*0x40013004 & 0xffbf);
        *0x40013004 = (*0x40013004 | 0x80);
        sub_90182(0x40021000, 0x20, 1);
    }
    return 0;
}

int32_t sub_9583e(void* arg1)
{
    *0x2000792c = arg1;
    *(arg1 + 0x400) = 0;
    sub_9012e(0x40020c00, 0x400);
    sub_90190(0x40020c00, 0x400);
    sub_90190(0x40020c00, 0x20);
    sub_9012e(0x40020c00, 0x20);
    *0x40023840 = (*0x40023840 | 0x8000);
    sub_90190(0x40020c00, 0x10);
    sub_90190(0x40020c00, 8);
    sub_9012e(0x40020c00, 0x10);
    sub_9012e(0x40020c00, 8);
    sub_91cee(0x40020800, 0xb, 6);
    sub_91cee(0x40020800, 0xc, 6);
    sub_91cee(0x40020800, 0xa, 6);
    sub_90158(0x40020800, 0x800);
    sub_90158(0x40020800, 0x1000);
    sub_90158(0x40020800, 0x400);
    *0x40003c00 = 0;
    *0x40003c00 = 0x212;
    *0x40003c04 = 0x40;
    *0xe000e104 = 0x80000;
    *0x40003c00 = (*0x40003c00 | 0x40);
    /* tailcall */
    return sub_90182(0x40020c00, 0x20, 0);
}

int32_t sub_9592e(void* arg1)
{
    int32_t r11 = ((*(arg1 + 0x402) - *(arg1 + 0x400)) + (0x1fe0 & ((*(arg1 + 0x403) - *(arg1 + 0x401)) << 5)));
    if (*0x20001f3f == 0)
    {
        /* unimplemented  {cpsid I} */;
    }
    if (r11 != 0)
    {
        int32_t r6_1 = 0;
        int32_t r9_1 = 1;
        int32_t r4_1;
        int32_t temp0_1;
        do
        {
            r4_1 = r11;
            if (r11 >= 4)
            {
                r4_1 = 4;
            }
            int32_t r9_2 = ((*(0x9a6a8 + (sub_95ac4(arg1, r6_1) & 0xf)) ^ (0 - r9_1)) & (0xffffffff << ((4 - r4_1) << 1)));
            while ((*0x40003c08 & 2) == 0)
            {
                /* nop */
            }
            *0x40003c0c = r9_2;
            sub_90182(0x40020c00, 0x20, 1);
            r6_1 = (r6_1 + r4_1);
            temp0_1 = r11;
            r11 = (r11 - r4_1);
            r9_1 = (r9_2 & 1);
        } while (temp0_1 != r4_1);
    }
    while ((*0x40003c08 & 2) == 0)
    {
        /* nop */
    }
    *0x40003c0c = 0;
    while ((*0x40003c08 & 2) == 0)
    {
        /* nop */
    }
    sub_90182(0x40020c00, 0x20, 0);
    while ((*0x40003c08 & 1) != 0)
    {
        *0x40003c0c;
    }
    /* unimplemented  {cpsie I} */;
    if (*0x20001f3f != 0)
    {
        *0xe000ed04 = 0x10000000;
    }
    return 0;
}

void sub_95a36(int32_t arg1)
{
    if (arg1 != 1)
    {
        return;
    }
    /* tailcall */
    return sub_9018c(0x40020c00, 2);
}

int32_t sub_95a4a(int32_t arg1)
{
    if (arg1 == 0)
    {
        sub_90182(0x40020c00, 0x20, 0);
        *0x40003c04 = (*0x40003c04 & 0xff7f);
        *0x40003c04 = (*0x40003c04 | 0x40);
    }
    else
    {
        *0x40003c04 = (*0x40003c04 & 0xffbf);
        *0x40003c04 = (*0x40003c04 | 0x80);
        sub_90182(0x40020c00, 0x20, 1);
    }
    return 0;
}

int32_t sub_95a98()
{
    sub_95d94();
    sub_95d28(0, &data_9a680, 0);
    /* tailcall */
    return sub_95d28(1, &data_9a694, 0);
}

uint32_t sub_95ac4(void* arg1, int32_t arg2)
{
    int32_t r0_1 = (*(arg1 + 0x400) + (arg2 & 0x1f));
    char r1_2 = (((r0_1 >> 5) & 7) + (*(arg1 + 0x401) + (arg2 >> 5)));
    int32_t r3_3 = (r0_1 & 0x1f);
    uint32_t r0_2 = (*(arg1 + (r1_2 << 2)) >> r3_3);
    if (r3_3 == 0)
    {
        return r0_2;
    }
    return (r0_2 | (*(arg1 + ((r1_2 + 1) << 2)) << (0x20 - r3_3)));
}

void sub_95b02(int32_t arg1, int32_t arg2)
{
    int32_t r1_1 = (arg2 & 0x1f);
    if (r1_1 == 0)
    {
        return;
    }
    /* tailcall */
    return sub_95b0a(arg1, r1_1);
}

char* sub_95b0a(int32_t arg1, int32_t arg2)
{
    char* r0_1 = ((arg1 * 0x47c) + 0x20008550);
    bool cond:1_1;
    do
    {
        if ((arg2 << 0x1f) != 0)
        {
            r0_1[1] = 0xff;
            *r0_1 = 0;
        }
        cond:1_1 = 0 != (arg2 >> 1);
        r0_1 = &r0_1[2];
        arg2 = (arg2 >> 1);
    } while (cond:1_1);
    return r0_1;
}

void* sub_95b40(int32_t arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        arg2 = 1;
    }
    *((arg1 * 0x47c) + 0x2000854c) = arg2;
    return (0x20008148 + (arg1 * 0x47c));
}

uint32_t sub_95b5c(int32_t arg1)
{
    return *((arg1 * 0x47c) + 0x2000854c);
}

void* sub_95b72(int32_t arg1)
{
    *((arg1 * 0x47c) + 0x2000854c) = (*((arg1 * 0x47c) + 0x2000854c) ^ 1);
    return (0x20008148 + (arg1 * 0x47c));
}

void* sub_95b90(int32_t arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        arg2 = 1;
    }
    *((arg1 * 0x47c) + 0x2000854d) = arg2;
    return (0x20008148 + (arg1 * 0x47c));
}

uint32_t sub_95bac(int32_t arg1)
{
    return *((arg1 * 0x47c) + 0x2000854d);
}

void* sub_95bc4(int32_t arg1, int32_t arg2)
{
    if (arg2 != 0)
    {
        arg2 = 1;
    }
    *((arg1 * 0x47c) + 0x2000854e) = arg2;
    return (0x20008148 + (arg1 * 0x47c));
}

void sub_95be0(int32_t arg1, int32_t arg2)
{
    char r2 = arg2;
    if (arg2 != 0)
    {
        r2 = 1;
    }
    *((arg1 * 0x47c) + 0x2000854c) = r2;
    *((arg1 * 0x47c) + 0x2000854d) = r2;
    *((arg1 * 0x47c) + 0x20008578) = 0;
    if (arg2 > 8)
    {
        return;
    }
    switch (jump_table_95c12[arg2])
    {
        case 5:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x10:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x1b:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x26:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x31:
        {
            *(*((arg1 * 0x47c) + 0x2000858c) + 8)(0, *((arg1 * 0x47c) + 0x20008590));
            *((arg1 * 0x47c) + 0x20008578) = 1;
            return;
            break;
        }
        case 0x45:
        {
            *((arg1 * 0x47c) + 0x2000854e) = 1;
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x53:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x5e:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
        case 0x69:
        {
            *((arg1 * 0x47c) + 0x20008590);
            /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 8) */
        }
    }
}

void* sub_95cfc(int32_t arg1, int32_t arg2)
{
    *((arg1 * 0x47c) + 0x2000857c) = arg2;
    return (0x20008148 + (arg1 * 0x47c));
}

int32_t sub_95d12(int32_t arg1)
{
    return *((arg1 * 0x47c) + 0x2000857c);
}

int32_t sub_95d28(int32_t arg1, int32_t* arg2, int32_t arg3)
{
    *((arg1 * 0x47c) + 0x20008590) = arg3;
    *((arg1 * 0x47c) + 0x2000858c) = arg2;
    *((arg1 * 0x47c) + 0x2000857c) = 0x21;
    *((arg1 * 0x47c) + 0x20008548) = 0;
    *((arg1 * 0x47c) + 0x20008594) = 0xffffffff;
    int32_t r4 = 0x1f;
    int32_t i = 0;
    do
    {
        bool cond:0_1 = (r4 << 0x1f) != 0;
        r4 = (r4 >> 1);
        if (cond:0_1)
        {
            void* r5_2 = ((0x20008148 + (arg1 * 0x47c)) + i);
            *(r5_2 + 0x409) = 0xff;
            *(r5_2 + 0x408) = 0;
        }
        i = (i + 2);
    } while (i != 0xa);
    /* jump -> *arg2 */
}

int32_t sub_95d94()
{
    int32_t i = 0;
    *0x20008144 = 0;
    *0x20007d40 = 0;
    *0x20008fe0 = 0x20008a40;
    do
    {
        *(0x20008a40 + i) = (i + 0x20008b60);
        i = (i + 0x120);
    } while (i != 0x480);
    *0x20008ec0 = 0;
    return i;
}

int32_t* sub_95dda(int32_t arg1)
{
    /* unimplemented  {mrs r0, primask} */;
    /* unimplemented  {cpsid I} */;
    int32_t* r5 = *((arg1 * 0x47c) + 0x200085a0);
    int32_t* r0_1;
    if (r5 == 0)
    {
        __msr(0x47c);
        r0_1 = nullptr;
    }
    else
    {
        *((arg1 * 0x47c) + 0x200085a0) = *r5;
        __msr(0x47c);
        if (*((arg1 * 0x47c) + 0x20008578) != 0)
        {
            r0_1 = r5;
        }
    }
    if ((r5 == 0 || (r5 != 0 && *((arg1 * 0x47c) + 0x20008578) != 0)))
    {
        int32_t* r1_1 = *((arg1 * 0x47c) + 0x200085ac);
        if ((r1_1 != 0 && *((arg1 * 0x47c) + 0x200085bc) != 0))
        {
            uint32_t r6_1 = *0x20006064;
            if ((r6_1 - *((arg1 * 0x47c) + 0x200085c0)) >= 0)
            {
                /* unimplemented  {mrs r6, primask} */;
                /* unimplemented  {cpsid I} */;
                *r1_1 = *0x20008fe0;
                *0x20008fe0 = r1_1;
                __msr(r6_1);
                *((arg1 * 0x47c) + 0x200085ac) = 0;
                *((arg1 * 0x47c) + 0x200085bc) = 0;
            }
        }
    }
    if ((r5 != 0 && *((arg1 * 0x47c) + 0x20008578) == 0))
    {
        uint32_t r6_2 = r5[3];
        uint32_t r0_2;
        uint32_t r1_3;
        uint32_t r1_4;
        int32_t r2_4;
        int16_t r11_2;
        if ((r6_2 & 0x8080) != 0x8080)
        {
            r1_4 = 0;
            r11_2 = 0;
            r0_2 = 0;
        }
        else
        {
            r1_3 = *(r5 + 0xe);
            r0_2 = ((r1_3 >> 0xb) & 0xf);
            r11_2 = (r1_3 & 0x1ff);
            if ((r1_3 & 0x400) != 0)
            {
                r2_4 = 1;
                r1_4 = 0;
            }
            else
            {
                r1_4 = (r1_3 >> 0xf);
            }
        }
        if (((r6_2 & 0x8080) != 0x8080 || ((r6_2 & 0x8080) == 0x8080 && (r1_3 & 0x400) == 0)))
        {
            r2_4 = 0;
        }
        void* r3_7 = *((arg1 * 0x47c) + 0x200085a8);
        if (r3_7 == 0)
        {
            int32_t* r2_7 = *((arg1 * 0x47c) + 0x200085ac);
            int32_t* r3_9 = r2_7;
            if (r2_7 != 0)
            {
                r3_9 = &*(nullptr + 1);
            }
            if (((r3_9 | r1_4) != 0 && r1_4 == 0))
            {
                /* unimplemented  {mrs r0, primask} */;
                /* unimplemented  {cpsid I} */;
                *r2_7 = *0x20008fe0;
                *0x20008fe0 = r2_7;
                __msr(r0_2);
                *((arg1 * 0x47c) + 0x200085ac) = nullptr;
            }
            if ((((r3_9 | r1_4) != 0 && r1_4 == 0) || (r3_9 | r1_4) == 0))
            {
                r0_1 = r5;
            }
            if (((r3_9 | r1_4) != 0 && r1_4 != 0))
            {
                uint32_t r1_12;
                int32_t r8_3;
                if (r2_7 != 0)
                {
                    uint32_t r1_7 = r0_2;
                    sub_97f48(((r2_7 + (r1_7 * 0x1a)) + 0x10), &r5[4], (0xfffffffe + (((r6_2 >> 0xc) & 7) << 2)));
                    r0_1 = *((arg1 * 0x47c) + 0x200085ac);
                    r8_3 = 1;
                    r0_1[0x46] = (r0_1[0x46] + (0xfffffffe + (((r6_2 >> 0xc) & 7) << 2)));
                    r1_12 = r1_7;
                }
                else
                {
                    *((arg1 * 0x47c) + 0x200085ac) = r5;
                    int32_t r1_15 = r5[0x47];
                    uint32_t r1_17;
                    uint16_t r2_12;
                    if ((r1_15 & 1) != 0)
                    {
                        r1_17 = *((arg1 * 0x47c) + 0x2000854d);
                        if (r1_17 != 0)
                        {
                            r1_17 = 1;
                        }
                        r2_12 = (*((arg1 * 0x47c) + 0x2000854c) << 5);
                    }
                    else if ((r1_15 & 6) == 0)
                    {
                        r2_12 = 0;
                        r1_17 = 0;
                    }
                    else
                    {
                        r2_12 = 0;
                        r1_17 = *((arg1 * 0x47c) + 0x2000854e);
                        if (r1_17 != 0)
                        {
                            r1_17 = 1;
                        }
                    }
                    r8_3 = 0;
                    *(r5 + 0xe) = (r11_2 & 0x1ff);
                    r5[3] = (((r2_12 | (0xe1f & r6_2)) | (r1_17 << 8)) | 0x8040);
                    r1_12 = r0_2;
                    r0_1 = r5;
                }
                uint32_t r2_16 = r11_2;
                if (((r1_12 + 1) * 0x1a) < r2_16)
                {
                    int32_t r0_14;
                    uint32_t r1_23;
                    r0_14 = sub_9617e(arg1, r5[0x47], (r6_2 & 0x1f), 1, 1, 1, (r1_12 + 1), r2_16, nullptr, 0, 0);
                    if (r8_3 == 1)
                    {
                        /* unimplemented  {mrs r1, primask} */;
                        /* unimplemented  {cpsid I} */;
                        *r5 = *0x20008fe0;
                        *0x20008fe0 = r5;
                        __msr(r1_23);
                    }
                    if (r0_14 == 0)
                    {
                        int32_t r1_26 = *0x20006064;
                        *((arg1 * 0x47c) + 0x200085bc) = 1;
                        *((arg1 * 0x47c) + 0x200085c0) = (r1_26 + 0x1e);
                        r0_1 = nullptr;
                    }
                    else
                    {
                        int32_t* r0_15 = *((arg1 * 0x47c) + 0x200085ac);
                        /* unimplemented  {mrs r1, primask} */;
                        /* unimplemented  {cpsid I} */;
                        *r0_15 = *0x20008fe0;
                        *0x20008fe0 = r0_15;
                        r0_1 = nullptr;
                        __msr(r1_23);
                        *((arg1 * 0x47c) + 0x200085ac) = nullptr;
                        *((arg1 * 0x47c) + 0x200085bc) = 0;
                    }
                }
                else
                {
                    if (r8_3 == 1)
                    {
                        /* unimplemented  {mrs r0, primask} */;
                        /* unimplemented  {cpsid I} */;
                        *r5 = *0x20008fe0;
                        *0x20008fe0 = r5;
                        __msr(r0_1);
                        r0_1 = *((arg1 * 0x47c) + 0x200085ac);
                    }
                    r0_1[0x46] = (r2_16 + 4);
                    *((arg1 * 0x47c) + 0x200085ac) = nullptr;
                    *((arg1 * 0x47c) + 0x200085bc) = 0;
                }
            }
        }
        else
        {
            uint32_t r12_1 = 0xfffffffc;
            uint32_t r2_5;
            if (r2_4 != 1)
            {
                r0_1 = r5;
            }
            else
            {
                int16_t r1_5 = *(r3_7 + 0x118);
                uint32_t r11_3 = r0_2;
                uint32_t r8_1 = 0;
                r2_5 = (r1_5 - 4);
                uint32_t r0_4 = 0x1a;
                uint32_t lr_1 = (r2_5 - (r11_3 * 0x1a));
                int32_t r2_6 = (r6_2 & 0x1f);
                if (lr_1 < 1)
                {
                    r8_1 = 0xfffffffc;
                }
                r6_2 = (r11_3 * 0x1a);
                if (r2_6 == (*(r3_7 + 0xc) & 0x1f))
                {
                    r12_1 = r8_1;
                }
                if (r12_1 == 0)
                {
                    if (lr_1 < 0x1a)
                    {
                        r0_4 = lr_1;
                    }
                    r0_4 = sub_9617e(arg1, r5[0x47], r2_6, 1, 1, 0, r11_3, (-4 + r1_5), ((r3_7 + r6_2) + 0x10), r0_4, 0);
                    r12_1 = r0_4;
                }
                /* unimplemented  {mrs r0, primask} */;
                /* unimplemented  {cpsid I} */;
                *r5 = *0x20008fe0;
                *0x20008fe0 = r5;
                __msr(r0_4);
                if (r12_1 == 0)
                {
                    r0_1 = nullptr;
                    r12_1 = 0;
                }
                else
                {
                    r0_1 = nullptr;
                }
            }
            if (((r2_4 != 1 || (r2_4 == 1 && r12_1 != 0)) || ((r2_4 == 1 && r12_1 == 0) && (r6_2 + 0x1a) >= r2_5)))
            {
                int32_t* r3_11 = *((arg1 * 0x47c) + 0x200085a8);
                /* unimplemented  {mrs r6, primask} */;
                /* unimplemented  {cpsid I} */;
                *r3_11 = *0x20008fe0;
                *0x20008fe0 = r3_11;
                __msr(r6_2);
                *((arg1 * 0x47c) + 0x200085a8) = 0;
                *((arg1 * 0x47c) + 0x200085b4) = 0;
                *((arg1 * 0x47c) + 0x200085b0) = r12_1;
            }
        }
    }
    if (r0_1 != 0)
    {
        r0_1 = &r0_1[3];
    }
    return r0_1;
}

int32_t sub_9617e(int32_t arg1, uint32_t arg2, int16_t arg3, int32_t arg4, uint32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, char* arg9, int32_t arg10, int32_t arg11)
{
    int32_t r1 = arg10;
    uint32_t r4 = 0;
    if (arg4 != 0)
    {
        r1 = (r1 + 2);
    }
    uint32_t r1_2 = arg5;
    if (arg5 != 0)
    {
        r1_2 = ((r1 + 3) >> 2);
    }
    if (arg4 == 0)
    {
        r1_2 = ((r1 + 3) >> 2);
    }
    int32_t r8 = (0x7000 & (r1_2 << 0xc));
    int32_t temp0 = 0;
    uint32_t i = arg2;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    void* r6_3 = ((0x20008148 + (arg1 * 0x47c)) + ((0x1f - (0x20 - temp0)) << 1));
    if (arg2 == 1)
    {
        r4 = 3;
    }
    uint32_t r1_5;
    if ((arg2 & 1) != 0)
    {
        r1_5 = *((arg1 * 0x47c) + 0x2000854d);
        r8 = (r8 | (*((arg1 * 0x47c) + 0x2000854c) << 5));
    }
    else if ((arg2 & 6) == 0)
    {
        r1_5 = 0;
    }
    else
    {
        r1_5 = *((arg1 * 0x47c) + 0x2000854e);
    }
    if ((((arg2 & 1) != 0 || ((arg2 & 1) == 0 && (arg2 & 6) != 0)) && r1_5 != 0))
    {
        r1_5 = 1;
    }
    int32_t r5_8 = (((arg6 << 0xa) | (arg5 << 0xf)) | ((arg7 & 0xf) << 0xb));
    if (arg6 == 0)
    {
        r5_8 = (r5_8 | (arg8 & 0x1ff));
    }
    sub_96454(arg2, 0x20007940, (((((0xe00 & (*(r6_3 + 0x408) << 9)) | ((arg3 & 0x1f) | (arg4 << 0xf))) | r8) | (r1_5 << 8)) | 0x40), r5_8, arg9, arg10, ((arg4 ^ 1) | arg5));
    int32_t r8_1 = 0;
    int32_t r1_7 = *((arg1 * 0x47c) + 0x2000857c);
    *((arg1 * 0x47c) + 0x2000857c) = (r1_7 | arg2);
    int32_t r0_21;
    uint32_t r1_15;
    int32_t r2_6;
    void* r5_10;
    int32_t r6_8;
    while (true)
    {
        *((arg1 * 0x47c) + 0x20008568) = (*((arg1 * 0x47c) + 0x20008568) + 1);
        *(*((arg1 * 0x47c) + 0x2000858c) + 4)(0x20007940, *((arg1 * 0x47c) + 0x20008590));
        *((arg1 * 0x47c) + 0x20008580) = *0x20006064;
        *((arg1 * 0x47c) + 0x20008588) = 0;
        int16_t* var_28;
        uint32_t r2_5;
        r0_21 = sub_96670(arg1, &var_28, arg2, 1, r4, 2);
        if (r0_21 == 0xffffffff)
        {
            if (r4 == 0)
            {
                r8_1 = 0;
                r0_21 = 0xffffffff;
            }
            else
            {
                r4 = (r4 - 1);
                *((arg1 * 0x47c) + 0x20008574) = (*((arg1 * 0x47c) + 0x20008574) + 1);
                continue;
            }
        }
        else if (r0_21 == 0)
        {
            int16_t* r0_22 = var_28;
            uint32_t r1_13 = *r0_22;
            /* unimplemented  {mrs r2, primask} */;
            /* unimplemented  {cpsid I} */;
            *(r0_22 - 0xc) = *0x20008fe0;
            *0x20008fe0 = &r0_22[-6];
            __msr(r2_5);
            r2_6 = arg11;
            int32_t r0_24 = *(r6_3 + 0x408);
            r1_15 = arg2;
            r5_10 = ((arg1 * 0x47c) + 0x2000857c);
            r6_8 = r1_7;
            if (((r1_13 >> 9) & 7) != r0_24)
            {
                r8_1 = 1;
            }
            else
            {
                r8_1 = 0;
                *(r6_3 + 0x408) = ((r0_24 + 1) & 7);
            }
            r0_21 = 0;
            break;
        }
        r1_15 = arg2;
        r2_6 = arg11;
        r5_10 = ((arg1 * 0x47c) + 0x2000857c);
        r6_8 = r1_7;
        break;
    }
    *r5_10 = r6_8;
    int32_t r3_2 = 0;
    if (r0_21 == 0xffffffff)
    {
        r3_2 = 1;
    }
    if ((r2_6 >= 0 && (r3_2 | r8_1) == 1))
    {
        r0_21 = 0xfffffffd;
        if (sub_96e0a(arg1, r1_15, r2_6) == 0)
        {
            r0_21 = 0xfffffffe;
        }
    }
    return r0_21;
}

int32_t* sub_963ba(int32_t arg1, uint32_t arg2)
{
    /* unimplemented  {mrs r1, primask} */;
    /* unimplemented  {cpsid I} */;
    *(arg1 - 0xc) = *0x20008fe0;
    *0x20008fe0 = (arg1 - 0xc);
    __msr(arg2);
    return (arg1 - 0xc);
}

int32_t sub_963d6(void* arg1)
{
    return *(arg1 + 0x110);
}

int32_t sub_963dc(int32_t arg1, uint32_t arg2, int16_t arg3, char* arg4, int32_t arg5, int32_t arg6)
{
    return sub_9617e(arg1, arg2, arg3, 0, *((arg1 * 0x47c) + 0x200085a4), 0, 0, 0, arg4, arg5, arg6);
}

int32_t sub_9641a(int32_t arg1, uint32_t arg2, int16_t arg3, char* arg4, int32_t arg5)
{
    return sub_9617e(arg1, arg2, arg3, 0, *((arg1 * 0x47c) + 0x200085a4), 0, 0, 0, arg4, arg5, 0);
}

int32_t sub_96454(uint32_t arg1, void* arg2, int32_t arg3, int32_t arg4, char* arg5, int32_t arg6, int32_t arg7)
{
    int32_t r8 = 0;
    *(arg2 + 0x400) = 0;
    sub_954bc(arg2, 0xaaaaaaaa, 0x20);
    sub_954bc(arg2, 0xaaaaaaaa, 0x20);
    int32_t temp0 = 0;
    uint32_t i = arg1;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    sub_954bc(arg2, *(0x9a6c4 + ((0x1f - (0x20 - temp0)) << 2)), 0x14);
    uint32_t r5_1 = arg3;
    sub_954bc(arg2, (*(0x9aad8 + (arg3 & 0xf)) | (*(0x9aad8 + (r5_1 >> 4)) << 5)), 0xa);
    sub_954bc(arg2, (*(0x9aad8 + ((arg3 >> 8) & 0xf)) | (*(0x9aad8 + (arg3 >> 0xc)) << 5)), 0xa);
    int32_t r0_13 = (*(0x9a6d8 + ((r5_1 ^ 0xff) << 2)) ^ 0xffffff);
    int32_t r6 = (*(0x9a6d8 + ((r0_13 ^ (arg3 >> 8)) << 2)) ^ (r0_13 >> 8));
    int32_t i_2 = arg6;
    char* r9_1 = arg5;
    if (arg3 <= 0xffffffff)
    {
        sub_954bc(arg2, (*(0x9aad8 + (arg4 & 0xf)) | (*(0x9aad8 + ((arg4 >> 4) & 0xf)) << 5)), 0xa);
        sub_954bc(arg2, (*(0x9aad8 + ((arg4 >> 8) & 0xf)) | (*(0x9aad8 + (arg4 >> 0xc)) << 5)), 0xa);
        int32_t r0_24 = (*(0x9a6d8 + ((r6 ^ arg4) << 2)) ^ (r6 >> 8));
        r8 = 2;
        r6 = (*(0x9a6d8 + ((r0_24 ^ (arg4 >> 8)) << 2)) ^ (r0_24 >> 8));
    }
    int32_t r0_25 = (r8 + i_2);
    if (i_2 != 0)
    {
        int32_t i_1;
        do
        {
            uint32_t r8_2 = *r9_1;
            r9_1 = &r9_1[1];
            sub_954bc(arg2, (*(0x9aad8 + (r8_2 & 0xf)) | (*(0x9aad8 + (r8_2 >> 4)) << 5)), 0xa);
            i_1 = i_2;
            i_2 = (i_2 - 1);
            r6 = (*(0x9a6d8 + ((r6 ^ r8_2) << 2)) ^ (r6 >> 8));
        } while (i_1 != 1);
    }
    if (((r0_25 << 0x1e) != 0 && arg7 != 0))
    {
        int32_t r5_2 = (r0_25 + 1);
        bool cond:3_1;
        do
        {
            sub_954bc(arg2, 0x3de, 0xa);
            cond:3_1 = (r5_2 & 3) != 0;
            r6 = (*(0x9a6d8 + (r6 << 2)) ^ (r6 >> 8));
            r5_2 = (r5_2 + 1);
        } while (cond:3_1);
    }
    int32_t r5_3 = (!r6);
    sub_954bc(arg2, (*(0x9aad8 + (0xf & (!r6))) | (*(0x9aad8 + ((r5_3 >> 4) & 0xf)) << 5)), 0xa);
    sub_954bc(arg2, (*(0x9aad8 + ((r5_3 >> 8) & 0xf)) | (*(0x9aad8 + ((r5_3 >> 0xc) & 0xf)) << 5)), 0xa);
    sub_954bc(arg2, (*(0x9aad8 + ((r5_3 >> 0x10) & 0xf)) | (*(0x9aad8 + ((r5_3 >> 0x14) & 0xf)) << 5)), 0xa);
    sub_954bc(arg2, (*(0x9aad8 + ((r5_3 >> 0x18) & 0xf)) | (*(0x9aad8 + (r5_3 >> 0x1c)) << 5)), 0xa);
    sub_954bc(arg2, 0xd, 5);
    /* tailcall */
    return sub_954bc(arg2, 0, 1);
}

int32_t sub_96670(int32_t arg1, int16_t** arg2, int32_t arg3, int32_t arg4, uint32_t arg5 @ r4, int32_t arg6)
{
    uint32_t var_14 = arg5;
    uint32_t i_1 = 0;
    uint32_t r0_1 = *0x20006064;
    int32_t r10 = (r0_1 + arg6);
    int32_t r0_5;
    while (true)
    {
        int32_t r11_1 = *0x20006064;
        /* unimplemented  {mrs r4, primask} */;
        /* unimplemented  {cpsid I} */;
        int16_t* r5_1 = *((arg1 * 0x47c) + 0x200085a0);
        if (r5_1 != 0)
        {
            r0_1 = *r5_1;
            *((arg1 * 0x47c) + 0x200085a0) = r0_1;
        }
        else
        {
            r5_1 = nullptr;
        }
        __msr(arg5);
        bool cond:0_1 = r5_1 == 0;
        if (r5_1 != 0)
        {
            r5_1 = &r5_1[6];
        }
        if ((!cond:0_1))
        {
            /* unimplemented  {mrs r0, primask} */;
            /* unimplemented  {cpsid I} */;
            arg5 = (r5_1 - 0xc);
            *arg5 = i_1;
            __msr(r0_1);
            int32_t r0_2 = *(arg5 + 0x11c);
            uint32_t r0_3;
            int32_t r6_1;
            if (r0_2 == arg3)
            {
                r0_3 = *r5_1;
                r6_1 = (r0_3 & 0x1f);
                if ((r6_1 != arg4 && (r0_3 & 0x701f) == 0xd))
                {
                    r0_5 = 0xfffffffe;
                }
                if (r6_1 == arg4)
                {
                    /* unimplemented  {mrs r0, primask} */;
                    /* unimplemented  {cpsid I} */;
                    if (arg5 != 0)
                    {
                        i_1 = *arg5;
                    }
                    else
                    {
                        i_1 = 0;
                    }
                    __msr(r0_3);
                    if (arg2 == 0)
                    {
                        /* unimplemented  {mrs r0, primask} */;
                        /* unimplemented  {cpsid I} */;
                        arg2 = 0x20008fe0;
                        *arg5 = *0x20008fe0;
                        *0x20008fe0 = arg5;
                        __msr(r0_3);
                    }
                    else
                    {
                        *arg2 = r5_1;
                    }
                    r0_5 = 0;
                    break;
                }
            }
            if ((r0_2 != arg3 && (r0_2 & 0x60) != 0))
            {
                r0_5 = 0xfffffffd;
            }
            if (((r0_2 != arg3 && (r0_2 & 0x60) != 0) || ((r0_2 == arg3 && r6_1 != arg4) && (r0_3 & 0x701f) == 0xd)))
            {
                i_1 = arg5;
                break;
            }
            if (((r0_2 != arg3 && (r0_2 & 0x60) == 0) || ((r0_2 == arg3 && r6_1 != arg4) && (r0_3 & 0x701f) != 0xd)))
            {
                i_1 = arg5;
            }
        }
        r0_1 = (r11_1 - r10);
        if (r0_1 >= 0)
        {
            r0_5 = 0xffffffff;
            break;
        }
    }
    if (i_1 != 0)
    {
        uint32_t i;
        do
        {
            /* unimplemented  {mrs r1, primask} */;
            /* unimplemented  {cpsid I} */;
            i = *i_1;
            __msr(arg2);
            /* unimplemented  {mrs r1, primask} */;
            /* unimplemented  {cpsid I} */;
            *i_1 = *((arg1 * 0x47c) + 0x200085a0);
            *((arg1 * 0x47c) + 0x200085a0) = i_1;
            i_1 = i;
            __msr(arg2);
        } while (i != 0);
    }
    return r0_5;
}

void sub_9678e(int32_t arg1, int32_t arg2)
{
    if (arg2 != 2)
    {
        return;
    }
    /* tailcall */
    return sub_96794();
}

int32_t sub_96794(int32_t arg1)
{
    *((arg1 * 0x47c) + 0x20008590);
    /* jump -> *(*((arg1 * 0x47c) + 0x2000858c) + 0x10) */
}

void* sub_967b2()
{
    int32_t r4 = 0;
    void* r0 = 0x20008148;
    char* r9 = 0x20008550;
    while (true)
    {
        void* r6_1 = (0x20008148 + (r4 * 0x47c));
        int32_t* r11_1 = *(r6_1 + 0x450);
        void* r5_1 = (r6_1 + 0x450);
        char* var_40_1;
        int32_t var_3c_1;
        void* var_38_1;
        int32_t* r0_9;
        int32_t** i_6;
        void* r4_1;
        void* r5_2;
        void* r8_1;
        void* r9_2;
        void* r10_1;
        if (r11_1 != 0)
        {
            var_38_1 = r5_1;
            var_40_1 = r9;
            var_3c_1 = r4;
            r9_2 = (r6_1 + 0x454);
            r8_1 = (r6_1 + 0x402);
            r10_1 = (r6_1 + 0x400);
            r5_2 = (r6_1 + 0x401);
            r4_1 = (r6_1 + 0x403);
        }
        else
        {
            if (((*(r6_1 + 0x402) - *(r6_1 + 0x400)) + (0x1fe0 & ((*(r6_1 + 0x403) - *(r6_1 + 0x401)) << 5))) < 0x14)
            {
                goto label_96db6;
            }
            var_3c_1 = r4;
            var_38_1 = r5_1;
            r8_1 = (r6_1 + 0x402);
            r10_1 = (r6_1 + 0x400);
            r5_2 = (r6_1 + 0x401);
            r4_1 = (r6_1 + 0x403);
            uint32_t r0_29;
            int32_t r0_30;
            int32_t r9_1;
            while (true)
            {
                r0_29 = sub_95ac4(r6_1, 0);
                int32_t r1_32;
                if ((r0_29 & 0xf) == 0xa)
                {
                    r1_32 = 4;
                }
                else
                {
                    r0_30 = (r0_29 & 0xfffff);
                    r1_32 = 1;
                    switch (r0_30)
                    {
                        case 0x31b18:
                        {
                            var_40_1 = r9;
                            r9_1 = 2;
                            break;
                            break;
                        }
                        case 0x31f07:
                        {
                            int32_t r0_1 = 6;
                            int32_t i = 0;
                            do
                            {
                                if ((r0_1 << 0x1f) != 0)
                                {
                                    void* r2_2 = (r0 + i);
                                    *(r2_2 + 0x409) = 0xff;
                                    *(r2_2 + 0x408) = 0;
                                }
                                i = (i + 2);
                                r0_1 = (r0_1 >> 1);
                            } while (i != 6);
                            var_40_1 = r9;
                            r9_1 = 0x40;
                            break;
                            break;
                        }
                        case 0x360d8:
                        {
                            var_40_1 = r9;
                            r9_1 = 4;
                            break;
                            break;
                        }
                        case 0x36738:
                        {
                            var_40_1 = r9;
                            r9_1 = 8;
                            break;
                            break;
                        }
                        case 0x89b38:
                        {
                            var_40_1 = r9;
                            r9_1 = 0x10;
                            break;
                            break;
                        }
                        case 0x8e318:
                        {
                            var_40_1 = r9;
                            r9_1 = 1;
                            break;
                            break;
                        }
                        case 0xc9ce7:
                        {
                            int32_t r0_10 = 0x1f;
                            int32_t i_1 = 0;
                            do
                            {
                                if ((r0_10 << 0x1f) != 0)
                                {
                                    void* r2_5 = (r0 + i_1);
                                    *(r2_5 + 0x409) = 0xff;
                                    *(r2_5 + 0x408) = 0;
                                }
                                i_1 = (i_1 + 2);
                                r0_10 = (r0_10 >> 1);
                            } while (i_1 != 0xa);
                            var_40_1 = r9;
                            r9_1 = 0x20;
                            *(r6_1 + 0x441) = 0;
                            break;
                            break;
                        }
                    }
                }
                int32_t r0_32 = (*r10_1 + r1_32);
                int32_t r0_33 = (r0_32 & 0x1f);
                int32_t r1_34 = (((r0_32 >> 5) & 7) + *r5_2);
                *r5_2 = r1_34;
                *r10_1 = r0_33;
                if (((*r8_1 - r0_33) + (0x1fe0 & ((*r4_1 - r1_34) << 5))) <= 0x13)
                {
                    r11_1 = nullptr;
                    break;
                }
            }
            if ((!((r0_29 & 0xf) != 0xa && r0_30 == 0x31b18)))
            {
                goto label_96b82;
            }
            int32_t r1_3 = (*r10_1 + 0x14);
            *r5_2 = (*r5_2 + ((r1_3 >> 5) & 7));
            uint32_t r0_4 = (r1_3 & 0x1f);
            *r10_1 = r0_4;
            /* unimplemented  {mrs r0, primask} */;
            /* unimplemented  {cpsid I} */;
            r11_1 = *0x20008fe0;
            if (r11_1 == 0)
            {
                __msr(r0_4);
                r11_1 = nullptr;
                r5_1 = var_38_1;
                *r5_1 = 0;
                r9 = var_40_1;
                r4 = var_3c_1;
                goto label_96dbc;
            }
            *0x20008fe0 = *r11_1;
            __msr(r0_4);
            *var_38_1 = r11_1;
            int32_t var_30;
            sub_91778(&var_30);
            int32_t r0_7 = var_30;
            int32_t var_2c;
            r11_1[2] = var_2c;
            r11_1[1] = r0_7;
            *(r6_1 + 0x454) = 0xffffffff;
            r11_1[0x47] = r9_1;
            r11_1[0x46] = 0;
            if ((r9_1 & 0x60) != 0)
            {
                uint32_t r0_8 = *(r6_1 + 0x434);
                r4 = var_3c_1;
                if ((r0_8 & r9_1) == 0)
                {
                    /* unimplemented  {mrs r0, primask} */;
                    /* unimplemented  {cpsid I} */;
                    *r11_1 = *0x20008fe0;
                    *0x20008fe0 = r11_1;
                    r11_1 = nullptr;
                    __msr(r0_8);
                    r9 = var_40_1;
                    r5_1 = var_38_1;
                    goto label_96dbc;
                }
                r5_1 = var_38_1;
                r0_9 = *r5_1;
                *r0_9 = 0;
                int32_t* i_2 = *(r6_1 + 0x458);
                if (i_2 == 0)
                {
                    i_6 = (r6_1 + 0x458);
                }
                else
                {
                    do
                    {
                        i_6 = i_2;
                        i_2 = *i_6;
                    } while (i_2 != 0);
                }
                r9 = var_40_1;
                goto label_96db4;
            }
            r9_2 = (r6_1 + 0x454);
        }
        if (((*r8_1 - *r10_1) + (0x1fe0 & ((*r4_1 - *r5_2) << 5))) >= 5)
        {
            int32_t r0_16;
            do
            {
                r0_16 = (sub_95ac4(r6_1, 0) & 0x1f);
                int32_t r2_8 = (*r10_1 + 5);
                *r5_2 = (*r5_2 + ((r2_8 >> 5) & 7));
                *r10_1 = (r2_8 & 0x1f);
                if (r0_16 == 0xd)
                {
                    break;
                }
                if (((0x7cfcce00 >> r0_16) << 0x1f) == 0)
                {
                    break;
                }
                int32_t r0_17 = *(0x9aae8 + r0_16);
                uint32_t r1_16 = r11_1[0x46];
                uint32_t r0_19;
                if ((r1_16 & 1) != 0)
                {
                    uint32_t r1_18 = (r1_16 >> 1);
                    *(&r11_1[3] + r1_18) = (*(&r11_1[3] + r1_18) | (r0_17 << 4));
                    r0_19 = r11_1[0x46];
                    int32_t r2_10 = *r9_2;
                    *r9_2 = (*(0x9a6d8 + ((*(&r11_1[3] + (r0_19 >> 1)) ^ r2_10) << 2)) ^ (r2_10 >> 8));
                }
                else
                {
                    *((r11_1 + (r1_16 >> 1)) + 0xc) = r0_17;
                    r0_19 = r11_1[0x46];
                }
                r11_1[0x46] = (r0_19 + 1);
            } while (((*r8_1 - *r10_1) + (0x1fe0 & ((*r4_1 - *r5_2) << 5))) > 4);
            int16_t r0_41;
            if ((r0_16 != 0xd && ((0x7cfcce00 >> r0_16) << 0x1f) == 0))
            {
                *(r6_1 + 0x418) = (*(r6_1 + 0x418) + 1);
                *(r11_1 + 0xd) = 0xff;
                *(r11_1 + 0xe) = r0_16;
                r11_1[3] = r11_1[0x47];
                uint32_t r0_39 = r11_1[0x46];
                *(r11_1 + 0xf) = (r0_39 + (r0_39 << 2));
                r0_41 = 4;
                goto label_96c34;
            }
            if (r0_16 == 0xd)
            {
                uint32_t r0_36 = r11_1[0x46];
                if ((r0_36 & 1) == 0)
                {
                    if (*r9_2 != 0xdebb20e3)
                    {
                        *(r6_1 + 0x414) = (*(r6_1 + 0x414) + 1);
                        *(r11_1 + 0xd) = 0xfd;
                        r11_1[3] = r11_1[0x47];
                        int32_t r0_48 = *r9_2;
                        *(r11_1 + 0xe) = r0_48;
                        r11_1[4] = (r0_48 >> 0x10);
                        r0_41 = 6;
                        goto label_96c34;
                    }
                    *(r6_1 + 0x424) = (*(r6_1 + 0x424) + 1);
                    r11_1[0x46] = (0xfffffffc + (r0_36 >> 1));
                    r9 = var_40_1;
                    if ((r0_36 >> 1) == 4)
                    {
                        goto label_96b82;
                    }
                    goto label_96c40;
                }
                *(r6_1 + 0x41c) = (*(r6_1 + 0x41c) + 1);
                *(r11_1 + 0xd) = 0xfe;
                r11_1[3] = r11_1[0x47];
                r0_41 = 2;
            label_96c34:
                r11_1[0x47] = 0x80;
                r11_1[0x46] = r0_41;
                r9 = var_40_1;
            label_96c40:
                uint32_t r0_50 = r11_1[0x47];
                uint32_t r8_2 = r11_1[3];
                int32_t r2_16 = (*(r6_1 + 0x434) & r0_50);
                bool cond:3_1 = r0_50 == 0x80;
                if (r0_50 != 0x80)
                {
                    cond:3_1 = r2_16 == 0;
                }
                if (cond:3_1)
                {
                    goto label_96d4c;
                }
                int32_t r5_3 = (r8_2 & 0x701f);
                int32_t r1_43 = (r8_2 & 0x8000);
                if (r5_3 != 1)
                {
                    r1_43 = (r1_43 | 1);
                }
                if (r1_43 == 0)
                {
                    break;
                }
                int32_t r3_5 = ((r8_2 >> 9) & 7);
                uint32_t r1_45;
                uint32_t r2_17;
                if ((r0_50 << 0x1f) != 0)
                {
                    r1_45 = *(r6_1 + 0x405);
                    if (r1_45 != 0)
                    {
                        r1_45 = 1;
                    }
                    r2_17 = (*(r6_1 + 0x404) << 5);
                }
                else if ((r0_50 & 6) == 0)
                {
                    r2_17 = 0;
                    r1_45 = 0;
                }
                else
                {
                    r1_45 = *(r6_1 + 0x406);
                    r2_17 = 0;
                    if (r1_45 != 0)
                    {
                        r1_45 = 1;
                    }
                }
                sub_96454(r0_50, 0x20007d44, (((r2_17 | (r8_2 & 0xe00)) | (r1_45 << 8)) | 0x41), 0, nullptr, 0, 0);
                *(*(r6_1 + 0x444) + 4)(0x20007d44, *(r6_1 + 0x448));
                *(r6_1 + 0x420) = (*(r6_1 + 0x420) + 1);
                *r10_1 = 0;
                uint32_t i_5 = r11_1[0x47];
                int32_t r0_54;
                void* r0_57;
                if (r5_3 != 0xd)
                {
                    int32_t temp0_1 = 0;
                    uint32_t i_3 = i_5;
                    while (i_3 != 0)
                    {
                        i_3 = (i_3 >> 1);
                        temp0_1 = (temp0_1 + 1);
                    }
                    r0_57 = (r6_1 + ((0x1f - (0x20 - temp0_1)) << 1));
                    if (r3_5 != *(r0_57 + 0x409))
                    {
                        *(r0_57 + 0x409) = r3_5;
                    }
                    else
                    {
                        r2_16 = 0;
                        *(r6_1 + 0x428) = (*(r6_1 + 0x428) + 1);
                    label_96d4c:
                        r4 = var_3c_1;
                        r5_1 = var_38_1;
                    }
                }
                else
                {
                    r0_54 = (i_5 & 0x1f);
                }
                if (((r5_3 != 0xd && r3_5 != *(r0_57 + 0x409)) || (r5_3 == 0xd && r0_54 == 0)))
                {
                    r4 = var_3c_1;
                    r5_1 = var_38_1;
                }
                if ((r5_3 == 0xd && r0_54 != 0))
                {
                    r4 = var_3c_1;
                    r5_1 = var_38_1;
                    char* r1_48 = r9;
                    bool cond:11_1;
                    do
                    {
                        if ((r0_54 << 0x1f) != 0)
                        {
                            r1_48[1] = 0xff;
                            *r1_48 = 0;
                        }
                        r1_48 = &r1_48[2];
                        cond:11_1 = 0 != (r0_54 >> 1);
                        r0_54 = (r0_54 >> 1);
                    } while (cond:11_1);
                }
                void* r0_61 = (r6_1 + 0x438);
                int32_t r1_50 = (0x701f & r8_2);
                if (r1_50 == 5)
                {
                    r0_61 = (r6_1 + 0x43c);
                }
                *r0_61 = *0x20006064;
                char r0_62 = 0;
                if (r1_50 == 5)
                {
                    r0_62 = 1;
                }
                *(r6_1 + 0x440) = r0_62;
                if (r2_16 == 0)
                {
                    uint32_t r0_63 = *(r6_1 + 0x430);
                    if (r0_63 != 0)
                    {
                        goto label_96d9a;
                    }
                    /* unimplemented  {mrs r0, primask} */;
                    /* unimplemented  {cpsid I} */;
                    *r11_1 = *0x20008fe0;
                    *0x20008fe0 = r11_1;
                    __msr(r0_63);
                    goto label_96db6;
                }
            label_96d9a:
                r0_9 = *r5_1;
                *r0_9 = 0;
                int32_t* i_4 = *(r6_1 + 0x458);
                if (i_4 == 0)
                {
                    i_6 = (r6_1 + 0x458);
                }
                else
                {
                    do
                    {
                        i_6 = i_4;
                        i_4 = *i_6;
                    } while (i_4 != 0);
                }
            label_96db4:
                *i_6 = r0_9;
            label_96db6:
                r11_1 = nullptr;
            label_96dbc:
                r4 = (r4 + 1);
                r9 = &r9[0x47c];
                *r5_1 = r11_1;
                r0 = (r0 + 0x47c);
                if (r4 == 2)
                {
                    return r0;
                }
                continue;
            }
        }
        r9 = var_40_1;
    label_96b82:
        r4 = var_3c_1;
        r5_1 = var_38_1;
        goto label_96dbc;
    }
    goto label_96d4c;
}

int32_t sub_96dd8(int32_t arg1)
{
    void* r2 = ((arg1 * 0x47c) + 0x20008584);
    if (*((arg1 * 0x47c) + 0x20008588) == 0)
    {
        r2 = ((arg1 * 0x47c) + 0x20008580);
    }
    return (*0x20006064 - *r2);
}

int32_t sub_96e0a(int32_t arg1, uint32_t arg2, int32_t arg3)
{
    int32_t r4 = 0;
    *((arg1 * 0x47c) + 0x20008589) = 0;
    if (arg3 == 0)
    {
        int32_t r1_1 = (arg2 & 0x1f);
        if (r1_1 != 0)
        {
            void* r2_1 = ((arg1 * 0x47c) + 0x20008550);
            bool cond:3_1;
            do
            {
                if ((r1_1 << 0x1f) != 0)
                {
                    *(r2_1 + 1) = 0xff;
                    *r2_1 = 0;
                }
                cond:3_1 = 0 != (r1_1 >> 1);
                r2_1 = (r2_1 + 2);
                r1_1 = (r1_1 >> 1);
            } while (cond:3_1);
        }
        int32_t r9_1 = *((arg1 * 0x47c) + 0x2000857c);
        *((arg1 * 0x47c) + 0x2000857c) = (r9_1 | arg2);
        int32_t r0_6 = sub_9617e(arg1, arg2, 0xd, 0, *((arg1 * 0x47c) + 0x200085a4), 0, 0, 0, nullptr, 0, 1);
        int32_t r0_8;
        if (r0_6 == 0)
        {
            r4 = 0;
            r0_8 = sub_96670(arg1, nullptr, arg2, 3, 0, 0x1e);
            if (r0_8 != 0)
            {
                if (arg2 != 1)
                {
                    r4 = 1;
                }
                sub_96ee2((0x20008148 + (arg1 * 0x47c)), r4);
            }
        }
        if ((r0_6 != 0 || (r0_6 == 0 && r0_8 != 0)))
        {
            r4 = 0xffffffff;
        }
        *((arg1 * 0x47c) + 0x2000857c) = r9_1;
    }
    else
    {
        int32_t r1 = 0;
        if (arg2 != 1)
        {
            r1 = 1;
        }
        sub_96ee2((0x20008148 + (arg1 * 0x47c)), r1);
    }
    return r4;
}

int32_t sub_96ee2(void* arg1, int32_t arg2)
{
    int32_t r0 = 0x1f;
    void* r1 = (arg1 + 0x408);
    if (arg2 != 0)
    {
        r0 = 6;
    }
    bool cond:2_1;
    do
    {
        if ((r0 << 0x1f) != 0)
        {
            *(r1 + 1) = 0xff;
            *r1 = 0;
        }
        cond:2_1 = 0 != (r0 >> 1);
        r1 = (r1 + 2);
        r0 = (r0 >> 1);
    } while (cond:2_1);
    *0x20007d40 = 0;
    sub_954bc(0x20007940, 0xaaaaaaaa, 0x20);
    sub_954bc(0x20007940, 0xaaaaaaaa, 0x20);
    int32_t r1_1 = 0xc9ce7;
    if (arg2 != 0)
    {
        r1_1 = 0x31f07;
    }
    sub_954bc(0x20007940, r1_1, 0x14);
    sub_954bc(0x20007940, 0, 1);
    *(*(arg1 + 0x444) + 4)(0x20007940, *(arg1 + 0x448));
    int32_t r0_2 = *0x20006064;
    *(arg1 + 0x440) = 0;
    *(arg1 + 0x438) = r0_2;
    return r0_2;
}

int32_t sub_96f8c(int32_t arg1)
{
    int32_t r0_1;
    if (*((arg1 * 0x47c) + 0x20008589) != 0)
    {
        r0_1 = 3;
    }
    else
    {
        r0_1 = *(*((arg1 * 0x47c) + 0x2000858c) + 0xc)(*((arg1 * 0x47c) + 0x2000854d), *((arg1 * 0x47c) + 0x20008590));
        if (r0_1 != *((arg1 * 0x47c) + 0x20008594))
        {
            int32_t r1_3 = *0x20006064;
            *((arg1 * 0x47c) + 0x20008588) = 0;
            *((arg1 * 0x47c) + 0x20008580) = r1_3;
            if (r0_1 == 0)
            {
                int32_t r5_1 = 0x1f;
                int32_t i = 0;
                do
                {
                    bool cond:1_1 = (r5_1 << 0x1f) != 0;
                    r5_1 = (r5_1 >> 1);
                    if (cond:1_1)
                    {
                        void* r6_2 = ((0x20008148 + (arg1 * 0x47c)) + i);
                        *(r6_2 + 0x409) = 0xff;
                        *(r6_2 + 0x408) = 0;
                    }
                    i = (i + 2);
                } while (i != 0xa);
            }
        }
        *((arg1 * 0x47c) + 0x20008594) = r0_1;
    }
    return r0_1;
}

void* sub_97014(int32_t arg1, char arg2)
{
    *((arg1 * 0x47c) + 0x20008589) = arg2;
    return (0x20008148 + (arg1 * 0x47c));
}

uint32_t sub_9702a(int32_t arg1)
{
    return *((arg1 * 0x47c) + 0x20008589);
}

void sub_97040()
{
    *0x20008144 = 0;
    *0x20007d40 = 0;
    int32_t i = 0xfffff708;
    do
    {
        void* r3_1 = (0x20008148 + i);
        i = (i + 0x47c);
        *(r3_1 + 0xcf8) = 0;
    } while (i != 0);
}

int32_t sub_9707c(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r12 = (arg2 & 0x7fffffff);
    int32_t r5 = 0;
    int32_t r8 = (arg4 & 0x7fffffff);
    int32_t r9 = arg3;
    int32_t r11 = arg4;
    int32_t r10 = arg3;
    int32_t r4 = (r12 - 0);
    int32_t r6 = 0;
    if (r4 > 0x7fefffff)
    {
        r6 = 1;
    }
    int32_t r7_1 = 0;
    if (arg1 == 0)
    {
        r7_1 = 1;
    }
    if (r4 != 0x7fefffff)
    {
        r7_1 = r6;
    }
    if (r7_1 == 0)
    {
        int32_t r7_2 = 0;
        int32_t r6_1 = (r8 - 0);
        if (r6_1 < 0x7fefffff)
        {
            r7_2 = 1;
        }
        int32_t r4_2 = 0;
        if (r9 != 0)
        {
            r4_2 = 1;
        }
        if (r6_1 != 0x7fefffff)
        {
            r4_2 = r7_2;
        }
        if (r4_2 != 0)
        {
        label_9717e:
            int32_t r3_2 = 0;
            int32_t r2_3 = 0;
            int32_t r9_1 = arg2;
            if (r9 > arg1)
            {
                r3_2 = 1;
            }
            if (r8 > r12)
            {
                r2_3 = 1;
            }
            if (r8 == r12)
            {
                r2_3 = r3_2;
            }
            int32_t r3_3 = arg1;
            if (r2_3 != 0)
            {
                r3_3 = r10;
            }
            int32_t var_30 = r3_3;
            if (r2_3 != 0)
            {
                r9_1 = r11;
            }
            if (r2_3 != 0)
            {
                r11 = arg2;
            }
            if (r2_3 != 0)
            {
                r10 = arg1;
            }
            int32_t var_38 = r10;
            int32_t r5_2 = ((r11 >> 0x14) & 0x7ff);
            int32_t r4_5 = ((r9_1 >> 0x14) & 0x7ff);
            if (r4_5 == 0)
            {
                r4_5 = sub_973d0(&var_30);
            }
            if (r5_2 == 0)
            {
                int32_t r0_4 = sub_973d0(&var_38);
                r10 = var_38;
                r5_2 = r0_4;
            }
            int32_t r1_1 = var_30;
            int32_t r3_6 = (r10 << 3);
            int32_t lr_1 = (r1_1 << 3);
            var_30 = lr_1;
            int32_t r12_1 = ((((r9_1 & 0xfffff) << 3) | (r1_1 >> 0x1d)) | 0x800000);
            int32_t var_2c_2 = r12_1;
            uint32_t r1_2 = ((((r11 & 0xfffff) << 3) | (r10 >> 0x1d)) | 0x800000);
            uint32_t var_34_2 = r1_2;
            var_38 = r3_6;
            uint32_t r7_6;
            if (r4_5 == r5_2)
            {
                r7_6 = r1_2;
            }
            else
            {
                int32_t r5_3 = (r4_5 - r5_2);
                if (r5_3 > 0x3f)
                {
                    r7_6 = 0;
                    r3_6 = 1;
                    int32_t var_34_4 = 0;
                }
                else
                {
                    r7_6 = (r1_2 >> r5_3);
                    uint32_t var_34_3 = r7_6;
                    int32_t r6_7 = ((r3_6 >> r5_3) | (r1_2 << (0x20 - r5_3)));
                    if ((r5_3 - 0x20) >= 0)
                    {
                        r6_7 = (r1_2 >> (r5_3 - 0x20));
                    }
                    int32_t r1_5 = ((r3_6 >> (0x20 - (0x40 - r5_3))) | (r1_2 << (0x40 - r5_3)));
                    if ((0x20 - r5_3) >= 0)
                    {
                        r1_5 = (r3_6 << (0x20 - r5_3));
                    }
                    int32_t r0_13 = ((r3_6 << (0x40 - r5_3)) | r1_5);
                    if (r0_13 != 0)
                    {
                        r0_13 = 1;
                    }
                    r3_6 = (r0_13 | r6_7);
                }
                var_38 = r3_6;
            }
            int32_t r1_7;
            uint32_t r5_5;
            if ((r9_1 ^ r11) <= 0xffffffff)
            {
                uint32_t r6_8 = (lr_1 - r3_6);
                arg3 = 0;
                r5_5 = (r12_1 - r7_6);
                var_30 = r6_8;
                uint32_t var_2c_5 = r5_5;
                if (((lr_1 ^ r3_6) | (r12_1 ^ r7_6)) != 0)
                {
                    if (0 != (r5_5 >> 0x17))
                    {
                        r1_7 = r6_8;
                    }
                    else
                    {
                        int32_t r0_19 = sub_9740c(r6_8, r5_5);
                        r1_7 = (r6_8 << (r0_19 - 8));
                        r4_5 = (r4_5 - (r0_19 - 8));
                        r5_5 = ((r6_8 >> (0x28 - r0_19)) | (r5_5 << (r0_19 - 8)));
                        var_30 = r1_7;
                        if ((r0_19 - 0x28) >= 0)
                        {
                            r5_5 = (r6_8 << (r0_19 - 0x28));
                        }
                        uint32_t var_2c_6 = r5_5;
                    }
                }
            }
            else
            {
                r1_7 = (lr_1 + r3_6);
                r5_5 = (r12_1 + r7_6);
                var_30 = r1_7;
                uint32_t var_2c_3 = r5_5;
                if ((r5_5 & 0x1000000) != 0)
                {
                    r5_5 = (r5_5 >> 1);
                    r4_5 = (r4_5 + 1);
                    /* unimplemented  {rrx r1, r1} */;
                    uint32_t var_2c_4 = r5_5;
                    r1_7 = (r1_7 | ((lr_1 + r3_6) & 1));
                    var_30 = r1_7;
                }
            }
            if ((((r9_1 ^ r11) <= 0xffffffff && ((lr_1 ^ r3_6) | (r12_1 ^ r7_6)) != 0) || (r9_1 ^ r11) > 0xffffffff))
            {
                if (r4_5 >= 0x7ff)
                {
                    arg3 = 0;
                }
                else
                {
                    uint32_t r0_22;
                    if (r4_5 > 0)
                    {
                        r0_22 = r5_5;
                    }
                    else
                    {
                        int32_t r3_8 = (0x20 - (1 - r4_5));
                        r0_22 = (r5_5 >> (1 - r4_5));
                        int32_t r7_10 = (0x40 - (1 - r4_5));
                        uint32_t var_2c_7 = r0_22;
                        uint32_t r2_8 = ((r1_7 >> (1 - r4_5)) | (r5_5 << r3_8));
                        int32_t r6_10 = (0xffffffe1 - r4_5);
                        if (r6_10 >= 0)
                        {
                            r2_8 = (r5_5 >> r6_10);
                        }
                        int32_t r6_12 = ((r5_5 << r7_10) | (r1_7 >> (0x20 - r7_10)));
                        if (r3_8 >= 0)
                        {
                            r6_12 = (r1_7 << r3_8);
                        }
                        int32_t r1_11 = ((r1_7 << r7_10) | r6_12);
                        if (r1_11 != 0)
                        {
                            r1_11 = 1;
                        }
                        r1_7 = (r1_11 | r2_8);
                        var_30 = r1_7;
                    }
                    int32_t r1_12 = (r1_7 & 7);
                    int32_t r0_24 = (((r1_7 >> 3) | (r0_22 << 0x1d)) | 0);
                    arg3 = (r0_24 + 1);
                    if (r1_12 <= 4)
                    {
                        arg3 = r0_24;
                    }
                    if (r1_12 == 4)
                    {
                        arg3 = (arg3 + (arg3 & 1));
                    }
                }
            }
            goto label_973ca;
        }
    }
    int32_t r6_2 = 0;
    if (r12 < 0x7ff00000)
    {
        r6_2 = 1;
    }
    if (arg1 == 0)
    {
        r5 = 1;
    }
    if (r12 != 0x7ff00000)
    {
        r5 = r6_2;
    }
    if (r5 != 0)
    {
        int32_t r5_1 = 0;
        int32_t r6_3 = 0;
        if (r8 < 0x7ff00000)
        {
            r5_1 = 1;
        }
        if (r9 == 0)
        {
            r6_3 = 1;
        }
        if (r8 != 0x7ff00000)
        {
            r6_3 = r5_1;
        }
        if (r6_3 == 0)
        {
            arg3 = r10;
            goto label_973ca;
        }
        if (((r12 ^ 0x7ff00000) | arg1) == 0)
        {
            int32_t r2_1 = ((r10 ^ arg1) | ((r11 ^ arg2) ^ 0x80000000));
            if (r2_1 != 0)
            {
                r2_1 = arg1;
            }
            return r2_1;
        }
        if (((r8 ^ 0x7ff00000) | r9) == 0)
        {
            goto label_973ca;
        }
        if ((arg1 | r12) != 0)
        {
            arg3 = arg1;
            if ((r9 | r8) != 0)
            {
                goto label_9717e;
            }
            goto label_973ca;
        }
        if ((r9 | r8) == 0)
        {
            arg3 = (r10 & arg1);
        }
        goto label_973ca;
    }
    arg3 = arg1;
label_973ca:
    return arg3;
}

int32_t sub_973d0(int32_t* arg1)
{
    uint32_t r6 = *arg1;
    uint32_t r7 = arg1[1];
    int32_t r0_1 = sub_9740c(r6, r7);
    uint32_t r3_2 = ((r6 >> (0x2b - r0_1)) | (r7 << (r0_1 - 0xb)));
    if ((r0_1 - 0x2b) >= 0)
    {
        r3_2 = (r6 << (r0_1 - 0x2b));
    }
    *arg1 = (r6 << (r0_1 - 0xb));
    arg1[1] = r3_2;
    return (0xc - r0_1);
}

int32_t sub_9740c(uint32_t arg1, uint32_t arg2) __pure
{
    int32_t r0;
    if (arg2 != 0)
    {
        int32_t temp0 = 0;
        uint32_t i = arg2;
        while (i != 0)
        {
            i = (i >> 1);
            temp0 = (temp0 + 1);
        }
        r0 = (0x20 - temp0);
    }
    else
    {
        int32_t temp0_1 = 0;
        uint32_t i_1 = arg1;
        while (i_1 != 0)
        {
            i_1 = (i_1 >> 1);
            temp0_1 = (temp0_1 + 1);
        }
        r0 = ((0x20 * 2) - temp0_1);
    }
    return r0;
}

void sub_9741c(int32_t arg1) __pure
{
    uint32_t i_1 = (arg1 & 0x7fffffff);
    if ((((i_1 - 0x800000) >> 0x18) > 0x7e && (i_1 < 0x7f800000 && i_1 != 0)))
    {
        int32_t temp0_1 = 0;
        uint32_t i = i_1;
        while (i != 0)
        {
            i = (i >> 1);
            temp0_1 = (temp0_1 + 1);
        }
    }
}

uint32_t sub_97490(int32_t arg1, int32_t arg2) __pure
{
    int32_t r12 = ((arg2 >> 0x14) & 0x7ff);
    uint32_t r2 = 0;
    bool cond:0 = (r12 - 0x3ff) < 0;
    if ((r12 - 0x3ff) >= 0)
    {
        r2 = 0;
        cond:0 = arg2 < 0;
    }
    if ((!cond:0))
    {
        r2 = ((((arg1 >> 0x15) | (arg2 << 0xb)) | 0x80000000) >> (0x41e - r12));
    }
    return r2;
}

int32_t sub_974c0(uint32_t arg1) __pure
{
    if (arg1 == 0)
    {
        return 0;
    }
    uint32_t i_1 = arg1;
    if (arg1 < 0)
    {
        i_1 = (0 - arg1);
    }
    int32_t temp0 = 0;
    uint32_t i = i_1;
    while (i != 0)
    {
        i = (i >> 1);
        temp0 = (temp0 + 1);
    }
    return (i_1 << (0x34 - (0x1f - (0x20 - temp0))));
}

int32_t sub_97518(uint32_t arg1) __pure
{
    int32_t r1 = 0;
    if (arg1 != 0)
    {
        uint32_t i_1 = arg1;
        if (arg1 < 0)
        {
            i_1 = (0 - arg1);
        }
        int32_t temp0_1 = 0;
        uint32_t i = i_1;
        while (i != 0)
        {
            i = (i >> 1);
            temp0_1 = (temp0_1 + 1);
        }
        int32_t r2_1;
        if ((0x1f - (0x20 - temp0_1)) <= 0x17)
        {
            r2_1 = ((i_1 << (0x17 - (0x1f - (0x20 - temp0_1)))) ^ 0x800000);
        }
        else
        {
            int32_t r3_1 = 0;
            int32_t lr_1 = (i_1 << (0x37 - (0x1f - (0x20 - temp0_1))));
            uint32_t r0_5 = (i_1 >> ((0x1f - (0x20 - temp0_1)) - 0x17));
            if (lr_1 > 0x80000000)
            {
                r3_1 = 1;
            }
            r2_1 = ((r0_5 ^ 0x800000) + r3_1);
            if (lr_1 == 0x80000000)
            {
                r2_1 = (r2_1 + ((r0_5 + r3_1) & 1));
            }
        }
        r1 = (((r2_1 + ((0x1f - (0x20 - temp0_1)) << 0x17)) + 0x3f800000) | (arg1 & 0x80000000));
    }
    return r1;
}

int32_t sub_97588(uint32_t arg1) __pure
{
    int32_t r1_2 = 0;
    if (arg1 != 0)
    {
        int32_t temp0_1 = 0;
        uint32_t i = arg1;
        while (i != 0)
        {
            i = (i >> 1);
            temp0_1 = (temp0_1 + 1);
        }
        int32_t r0_1;
        if ((0x1f - (0x20 - temp0_1)) <= 0x17)
        {
            r0_1 = ((arg1 << (0x17 - (0x1f - (0x20 - temp0_1)))) ^ 0x800000);
        }
        else
        {
            int32_t r12_1 = (arg1 << (0x37 - (0x1f - (0x20 - temp0_1))));
            uint32_t r3_2 = (arg1 >> ((0x1f - (0x20 - temp0_1)) - 0x17));
            int32_t r2_3 = 0;
            if (r12_1 > 0x80000000)
            {
                r2_3 = 1;
            }
            r0_1 = ((r3_2 ^ 0x800000) + r2_3);
            if (r12_1 == 0x80000000)
            {
                r0_1 = (r0_1 + ((r2_3 + r3_2) & 1));
            }
        }
        r1_2 = ((r0_1 + ((0x1f - (0x20 - temp0_1)) << 0x17)) + 0x3f800000);
    }
    return r1_2;
}

void sub_975e0(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t r5 = arg3;
    int32_t var_30 = arg1;
    int32_t r7 = 0;
    int32_t var_38 = r5;
    int32_t r9 = ((arg4 >> 0x14) & 0x7ff);
    int32_t r10 = ((arg2 >> 0x14) & 0x7ff);
    int32_t r6_1;
    if ((r10 - 1) <= 0x7fd)
    {
        r6_1 = 0;
        if ((r9 - 1) < 0x7fe)
        {
        label_976d0:
            int32_t r0_8 = var_30;
            var_38 = r5;
            int32_t r3 = ((arg2 & 0xfffff) | 0x100000);
            int32_t r1_6 = (r5 << 0xb);
            int32_t r5_1 = ((arg4 & 0xfffff) | 0x100000);
            var_30 = r0_8;
            int32_t r2_6;
            int32_t r4_3;
            r4_3 = HIGHD((r1_6 * r3));
            r2_6 = LOWD((r1_6 * r3));
            int32_t var_34_1 = r5_1;
            int32_t var_2c_1 = r3;
            /* unimplemented  {umlal r4, r5, r7, r3} */;
            int32_t r3_1;
            int32_t r7_4;
            r3_1 = HIGHD((((r5 >> 0x15) | (r5_1 << 0xb)) * r0_8));
            r7_4 = LOWD((((r5 >> 0x15) | (r5_1 << 0xb)) * r0_8));
            int32_t r0_9;
            int32_t r11_2;
            r0_9 = HIGHD((r1_6 * r0_8));
            r11_2 = LOWD((r1_6 * r0_8));
            int32_t r2_7 = (r2_6 & 0xfffff800);
            int32_t r3_2 = (r3_1 + r4_3);
            int32_t r11_3 = (r11_2 & 0xfffff800);
            int32_t r0_10 = (r0_9 + r2_7);
            int32_t r2_8 = (r0_10 + r7_4);
            int32_t r0_11 = ((0 + 0) + 0);
            int32_t r12_1 = (r3_2 + r0_11);
            int32_t r0_12 = ((0 + 0) + 0);
            int32_t r7_5 = (((r10 + r9) + r6_1) - 0x3ff);
            if ((r0_12 & 0x100000) == 0)
            {
                int32_t temp3_1 = r11_3;
                int32_t temp4_1 = r11_3;
                r11_3 = (r11_3 * 2);
                bool c_6 = (r12_1 * 2) < r12_1;
                r12_1 = ((r12_1 * 2) | (r2_8 >> 0x1f));
                r0_12 = (r0_12 + r0_12);
                r2_8 = (r2_8 + r2_8);
            }
            else
            {
                r7_5 = (r7_5 + 1);
            }
            if (r7_5 < 0x7ff)
            {
                if ((r7_5 <= 0 && (1 - r7_5) < 0x40))
                {
                    int32_t r3_6 = ((r2_8 << (0x20 - (1 - r7_5))) | (r11_3 >> (1 - r7_5)));
                    if (((1 - r7_5) - 0x20) >= 0)
                    {
                        r3_6 = (r2_8 >> ((1 - r7_5) - 0x20));
                    }
                    int32_t r3_8 = ((r11_3 >> (0x20 - (0x40 - (1 - r7_5)))) | (r2_8 << (0x40 - (1 - r7_5))));
                    if ((0x20 - (1 - r7_5)) >= 0)
                    {
                        r3_8 = (r11_3 << (0x20 - (1 - r7_5)));
                    }
                    int32_t r1_15 = ((r11_3 << (0x40 - (1 - r7_5))) | r3_8);
                    if (r1_15 != 0)
                    {
                        r1_15 = 1;
                    }
                    r11_3 = (((r12_1 << (0x40 - (1 - r7_5))) | r3_6) | r1_15);
                    int32_t r5_5 = ((r12_1 >> (0x20 - (0x40 - (1 - r7_5)))) | (r0_12 << (0x40 - (1 - r7_5))));
                    if ((0x20 - (1 - r7_5)) >= 0)
                    {
                        r5_5 = (r12_1 << (0x20 - (1 - r7_5)));
                    }
                    r2_8 = (r5_5 | (r2_8 >> (1 - r7_5)));
                }
                if ((r7_5 > 0 || (r7_5 <= 0 && (1 - r7_5) < 0x40)))
                {
                    /* nop */
                    /* nop */
                    if (r11_3 != 0)
                    {
                        /* nop */
                    }
                    if (r2_8 != 0x80000000)
                    {
                        /* nop */
                    }
                }
            }
        }
    }
    if (((r10 - 1) > 0x7fd || ((r10 - 1) <= 0x7fd && (r9 - 1) >= 0x7fe)))
    {
        int32_t r2_5 = (arg2 & 0x7fffffff);
        int32_t r4_1 = 0;
        if (r2_5 < 0x7ff00000)
        {
            r4_1 = 1;
        }
        if (arg1 == 0)
        {
            r7 = 1;
        }
        if (r2_5 != 0x7ff00000)
        {
            r7 = r4_1;
        }
        if (r7 != 0)
        {
            int32_t r7_1 = (arg4 & 0x7fffffff);
            int32_t r4_2 = 0;
            int32_t r1 = 0;
            if (r7_1 < 0x7ff00000)
            {
                r4_2 = 1;
            }
            if (r5 == 0)
            {
                r1 = 1;
            }
            if (r7_1 != 0x7ff00000)
            {
                r1 = r4_2;
            }
            if (((r1 != 0 && (((r2_5 ^ 0x7ff00000) | arg1) != 0 && ((r7_1 ^ 0x7ff00000) | r5) != 0)) && (arg1 | r2_5) != 0))
            {
                r6_1 = 0;
                if (0 == (r2_5 >> 0x14))
                {
                    r6_1 = sub_97844(&var_30);
                }
                if (0 == (r7_1 >> 0x14))
                {
                    int32_t r0_7 = sub_97844(&var_38);
                    r5 = var_38;
                    r6_1 = (r6_1 + r0_7);
                }
                goto label_976d0;
            }
        }
    }
}

int32_t sub_97844(int32_t* arg1)
{
    uint32_t i_2 = *arg1;
    uint32_t i_3 = arg1[1];
    int32_t r1_1;
    if (i_3 == 0)
    {
        int32_t temp0 = 0;
        uint32_t i = i_2;
        while (i != 0)
        {
            i = (i >> 1);
            temp0 = (temp0 + 1);
        }
        r1_1 = ((0x20 * 2) - temp0);
    }
    else
    {
        int32_t temp0_1 = 0;
        uint32_t i_1 = i_3;
        while (i_1 != 0)
        {
            i_1 = (i_1 >> 1);
            temp0_1 = (temp0_1 + 1);
        }
        r1_1 = (0x20 - temp0_1);
    }
    int32_t r5_3 = ((i_2 >> (0x2b - r1_1)) | (i_3 << (r1_1 - 0xb)));
    if ((r1_1 - 0x2b) >= 0)
    {
        r5_3 = (i_2 << (r1_1 - 0x2b));
    }
    *arg1 = (i_2 << (r1_1 - 0xb));
    arg1[1] = r5_3;
    return (0xc - r1_1);
}

void sub_97886(char* arg1, char arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        char* r3_1 = arg1;
        int32_t i;
        do
        {
            *r3_1 = arg2;
            r3_1 = &r3_1[1];
            i = arg3;
            arg3 = (arg3 - 1);
        } while (i != 1);
    }
}

int32_t sub_97894(char* arg1, char* arg2, int32_t arg3)
{
    if (arg3 != 0)
    {
        int32_t i;
        do
        {
            if (*arg1 != *arg2)
            {
                return 1;
            }
            i = arg3;
            arg3 = (arg3 - 1);
            arg2 = &arg2[1];
            arg1 = &arg1[1];
        } while (i != 1);
    }
    return 0;
}

int32_t sub_978b4(void* arg1, char* arg2, char* arg3)
{
    char* r4 = arg2;
    char* r7 = arg3;
    uint32_t i = *r4;
    int32_t var_2c = 0;
    if (i != 0)
    {
        int32_t r11_1 = 0;
        do
        {
            uint32_t r1_3 = i;
            void* r0_20;
            char* r1_8;
            int32_t r3_4;
            if (r11_1 == 0)
            {
                if (r1_3 == 0x25)
                {
                    r11_1 = 1;
                }
                else
                {
                    r3_4 = *(arg1 + 0x2c);
                    r0_20 = arg1;
                    r1_8 = r4;
                label_97a88:
                    r3_4(r0_20, r1_8, 1);
                    var_2c = (var_2c + 1);
                label_97c92:
                    r11_1 = 0;
                }
            }
            else
            {
                uint32_t r0_25;
                if ((r1_3 - 0x20) > 0x19)
                {
                    void* r0_36;
                    uint32_t r1_9;
                    char* r2_4;
                    int32_t r3_6;
                    int32_t r11_2;
                    if ((r1_3 - 0x63) <= 0x15)
                    {
                        switch (*(r1_3 + &*jump_table_979c8[0xf][1]))
                        {
                            case 0x93:
                            {
                                r11_1 = ((r11_1 & 0xfffffff1) | 2);
                                break;
                            }
                            case 0x96:
                            {
                                int32_t r0_34 = 4;
                                if ((r11_1 & 0xe) == 4)
                                {
                                    r0_34 = 8;
                                }
                                r11_1 = (r0_34 | (r11_1 & 0xfffffff1));
                                break;
                            }
                            case 0xbb:
                            {
                                r1_9 = *r7;
                                r7 = &r7[4];
                                r11_2 = ((r11_1 & 0xffff83ff) | sub_4000);
                                r0_36 = arg1;
                                r2_4 = &data_999f0;
                                break;
                            }
                            case 0xc5:
                            {
                                int32_t r0_37 = (r11_1 & 0x40);
                                int32_t r0_38 = ((r11_1 >> 0xf) & 0xff);
                                char* r8_2 = *r7;
                                r7 = &r7[4];
                                if ((r0_37 == 0 && r0_38 != 0))
                                {
                                    int32_t r6_1;
                                    if (*r8_2 == 0)
                                    {
                                        r6_1 = 0;
                                    }
                                    else
                                    {
                                        r6_1 = 0;
                                        uint32_t j;
                                        do
                                        {
                                            j = r8_2[(1 + r6_1)];
                                            r6_1 = (r6_1 + 1);
                                        } while (j != 0);
                                    }
                                    if (r11_1 <= 0xffffffff)
                                    {
                                        int32_t r0 = ((r11_1 >> 0x17) & 0xff);
                                        if (r0 < r6_1)
                                        {
                                            r6_1 = r0;
                                        }
                                    }
                                    if (r6_1 < r0_38)
                                    {
                                        int32_t j_3 = (r0_38 - r6_1);
                                        int32_t j_1;
                                        do
                                        {
                                            *(arg1 + 0x2c)(arg1, &data_999ee, 1);
                                            j_1 = j_3;
                                            j_3 = (j_3 - 1);
                                        } while (j_1 != 1);
                                        var_2c = ((var_2c + r0_38) - r6_1);
                                    }
                                }
                                int32_t r9_2 = 0;
                                if (*r8_2 != 0)
                                {
                                    while ((!(r11_1 <= 0xffffffff && r9_2 >= ((r11_1 >> 0x17) & 0xff))))
                                    {
                                        void* r10_1 = &r8_2[r9_2];
                                        *(arg1 + 0x2c)(arg1, r10_1, 1);
                                        r9_2 = (r9_2 + 1);
                                        if (*(r10_1 + 1) == 0)
                                        {
                                            break;
                                        }
                                    }
                                    var_2c = (var_2c + r9_2);
                                }
                                r11_1 = 0;
                                if ((r0_38 != 0 && (r0_37 != 0 && r9_2 < r0_38)))
                                {
                                    int32_t j_4 = (r0_38 - r9_2);
                                    int32_t j_2;
                                    do
                                    {
                                        *(arg1 + 0x2c)(arg1, &data_999ee, 1);
                                        j_2 = j_4;
                                        j_4 = (j_4 - 1);
                                    } while (j_2 != 1);
                                    r11_1 = 0;
                                    var_2c = ((var_2c + r0_38) - r9_2);
                                }
                                break;
                            }
                        }
                        switch (*(r1_3 + &*jump_table_979c8[0xf][1]))
                        {
                            case 0x24:
                            {
                                int32_t r0_23 = ((r11_1 >> 1) & 7);
                                if ((r0_23 == 2 || (r0_23 != 2 && r0_23 != 4)))
                                {
                                    r1_9 = *r7;
                                    r7 = &r7[4];
                                }
                                if (r0_23 == 4)
                                {
                                    uint32_t* r7_1 = (&r7[7] & 0xfffffff8);
                                    r1_9 = *r7_1;
                                    r7 = &r7_1[2];
                                }
                                r3_6 = ((r11_1 & 0xffff83ff) | 0x2800);
                                if (r1_9 < 0)
                                {
                                    r2_4 = &data_999f8;
                                }
                                else
                                {
                                    int32_t r0_26 = ((r11_1 >> 4) & 3);
                                    r2_4 = nullptr;
                                    if (r0_26 == 2)
                                    {
                                        r2_4 = &data_999fa;
                                    }
                                    if (r0_26 == 1)
                                    {
                                        r2_4 = &data_999ee;
                                    }
                                }
                                if (r1_9 < 0)
                                {
                                    r1_9 = (0 - r1_9);
                                }
                                r0_36 = arg1;
                                goto label_97c88;
                            }
                            case 0x32:
                            {
                                goto label_97ab6;
                            }
                            case 0x8a:
                            {
                                char r0_32 = *r7;
                                r7 = &r7[4];
                                char var_25;
                                r1_8 = &var_25;
                                var_25 = r0_32;
                                r0_20 = arg1;
                                r3_4 = *(arg1 + 0x2c);
                                goto label_97a88;
                            }
                            case 0xa2:
                            {
                                int32_t* r0_35 = *r7;
                                r7 = &r7[4];
                                int32_t r1_13 = ((r11_1 >> 1) & 7);
                                r11_1 = 0;
                                if (r1_13 <= 4)
                                {
                                    switch (jump_table_97ba4[r1_13])
                                    {
                                        case 3:
                                        {
                                            *r0_35 = var_2c;
                                            r0_35[1] = (var_2c >> 0x1f);
                                            goto label_97c92;
                                        }
                                        case 8:
                                        {
                                            *r0_35 = var_2c;
                                            goto label_97c92;
                                        }
                                        case 0xb:
                                        {
                                            *r0_35 = var_2c;
                                            goto label_97c92;
                                        }
                                    }
                                }
                                break;
                            }
                        }
                    }
                    else if (r1_3 != 0x58)
                    {
                        goto label_97ab6;
                    }
                    if ((((r1_3 - 0x63) <= 0x15 && *(r1_3 + &*jump_table_979c8[0xf][1]) == 0xb) || (r1_3 - 0x63) > 0x15))
                    {
                        r11_2 = ((r11_1 & 0xffff83ff) | sub_4000);
                        int32_t r0_19;
                        if (r1_3 == 0x75)
                        {
                            r0_19 = 0x2800;
                        }
                        if (r1_3 == 0x6f)
                        {
                            r0_19 = 0x2000;
                        }
                        int32_t r2_3;
                        if ((r1_3 == 0x75 || r1_3 == 0x6f))
                        {
                            r2_3 = 0xffff83ff;
                        }
                        if (r1_3 == 0x58)
                        {
                            r0_19 = 0x200;
                            r2_3 = 0xfffffdff;
                        }
                        if (((r1_3 == 0x75 || r1_3 == 0x6f) || r1_3 == 0x58))
                        {
                            r11_2 = ((r2_3 & r11_2) | r0_19);
                        }
                        int32_t r0_41 = ((r11_2 >> 1) & 7);
                        uint32_t r3_7;
                        if ((r0_41 == 2 || (r0_41 != 2 && r0_41 != 4)))
                        {
                            r3_7 = *r7;
                            r7 = &r7[4];
                        }
                        if (r0_41 == 4)
                        {
                            uint32_t* r7_2 = (&r7[7] & 0xfffffff8);
                            r3_7 = *r7_2;
                            r7 = &r7_2[2];
                        }
                        r2_4 = nullptr;
                        if (((r11_2 << 0x18) < 0 && r3_7 != 0))
                        {
                            if (r1_3 == 0x58)
                            {
                                r2_4 = &data_999f3;
                            }
                            else if (r1_3 == 0x6f)
                            {
                                r2_4 = &data_999f6;
                            }
                            else if (r1_3 != 0x78)
                            {
                                r2_4 = nullptr;
                            }
                            else
                            {
                                r2_4 = &data_999f0;
                            }
                        }
                        r0_36 = arg1;
                        r1_9 = r3_7;
                    }
                    if (((((r1_3 - 0x63) <= 0x15 && *(r1_3 + &*jump_table_979c8[0xf][1]) == 0xbb) || ((r1_3 - 0x63) <= 0x15 && *(r1_3 + &*jump_table_979c8[0xf][1]) == 0xb)) || (r1_3 - 0x63) > 0x15))
                    {
                        r3_6 = r11_2;
                    label_97c88:
                        r0_25 = sub_97ca8(r0_36, r1_9, r2_4, r3_6);
                        goto label_97c90;
                    }
                }
                else
                {
                    int32_t r0_17;
                    uint32_t r1_7;
                    switch (jump_table_979c8[(r1_3 - 0x20)])
                    {
                        case 0x1a:
                        {
                            int32_t r1_4 = 0;
                            while ((i - 0x30) <= 9)
                            {
                                r1_4 = ((i - 0x30) + (r1_4 * 0xa));
                                r4 = &r4[1];
                                i = *r4;
                                if (i == 0)
                                {
                                    break;
                                }
                            }
                            r4 = (r4 - 1);
                            r0_17 = (((0x80ff8000 & (r11_1 >> 0x1f)) - 0x7f8001) & r11_1);
                            r1_7 = (r1_4 << ((8 & (r11_1 >> 0x1f)) + 0xf));
                            break;
                        }
                        case 0x73:
                        {
                        label_97ab6:
                            r0_25 = sub_97e08("Unsupported: '%c'", r1_3);
                        label_97c90:
                            var_2c = (var_2c + r0_25);
                            goto label_97c92;
                        }
                        case 0x97:
                        {
                            if ((r11_1 & 0x30) == 0)
                            {
                                r11_1 = ((r11_1 & 0xffffffcf) | 0x10);
                            }
                            break;
                        }
                        case 0x9d:
                        {
                            r11_1 = (r11_1 | 0x80);
                            break;
                        }
                        case 0xa0:
                        {
                            r3_4 = *(arg1 + 0x2c);
                            r0_20 = arg1;
                            r1_8 = &data_999ec;
                            goto label_97a88;
                        }
                        case 0xa7:
                        {
                            uint32_t r2_5 = *r7;
                            r7 = &r7[4];
                            r0_17 = (((0x80ff8000 & (r11_1 >> 0x1f)) - 0x7f8001) & r11_1);
                            r1_7 = (r2_5 << ((8 & (r11_1 >> 0x1f)) + 0xf));
                            break;
                        }
                        case 0xb5:
                        {
                            if ((r11_1 << 0x1a) >= 0)
                            {
                                r11_1 = ((r11_1 & 0xffffffcf) | 0x20);
                            }
                            break;
                        }
                        case 0xbc:
                        {
                            r11_1 = ((r11_1 & 0xfffffebf) | 0x40);
                            break;
                        }
                        case 0xc1:
                        {
                            r11_1 = (r11_1 | 0x80000000);
                            break;
                        }
                        case 0xc4:
                        {
                            r11_1 = (r11_1 | (0x100 & (!(r11_1 << 2))));
                            break;
                        }
                    }
                    if ((*(&jump_table_979c8 + ((r1_3 - 0x20) << 1)) == 0x1a || *(&jump_table_979c8 + ((r1_3 - 0x20) << 1)) == 0xa7))
                    {
                        r11_1 = (r1_7 | r0_17);
                    }
                }
            }
            r4 = &r4[1];
            i = *r4;
        } while (i != 0);
    }
    return var_2c;
}

uint32_t sub_97ca8(void* arg1, uint32_t arg2, char* arg3, int32_t arg4)
{
    char* r5 = arg3;
    char const* const r2 = "0123456789ABCDEF";
    if ((arg4 & 0x200) == 0)
    {
        r2 = "0123456789abcdef";
    }
    int32_t r3 = ((arg4 >> 0xa) & 0x1f);
    void var_25;
    void* r7 = &var_25;
    int32_t r0 = 0;
    if (arg2 != 0)
    {
        bool cond:1_1;
        do
        {
            r0 = (r0 + 1);
            cond:1_1 = r3 <= arg2;
            int32_t r4_1 = (arg2 % r3);
            arg2 = (arg2 / r3);
            *r7 = r2[r4_1];
            r7 = (r7 - 1);
        } while (cond:1_1);
    }
    if (arg4 <= 0xffffffff)
    {
        int32_t i = ((arg4 >> 0x17) & 0xff);
        if (i > r0)
        {
            do
            {
                r0 = (r0 + 1);
                *r7 = 0x30;
                r7 = (r7 - 1);
            } while (i > r0);
        }
    }
    if ((r0 << 0x18) == 0)
    {
        *r7 = 0x30;
        r7 = (r7 - 1);
        r0 = 1;
    }
    uint32_t r8 = r0;
    uint32_t r0_1;
    uint32_t r6_2;
    if (r5 == 0)
    {
        r5 = nullptr;
    }
    else
    {
        r0_1 = *r5;
        if (((arg4 << 0x17) < 0 && r0_1 != 0))
        {
            r6_2 = r8;
            do
            {
                *(arg1 + 0x2c)(arg1, r5, 1);
                r5 = &r5[1];
                r6_2 = (r6_2 + 1);
            } while (*r5 != 0);
        }
    }
    if (((r5 == 0 || ((r5 != 0 && (arg4 << 0x17) < 0) && r0_1 == 0)) || ((r5 != 0 && (arg4 << 0x17) >= 0) && r0_1 == 0)))
    {
        r6_2 = r8;
    }
    if (((r5 != 0 && (arg4 << 0x17) >= 0) && r0_1 != 0))
    {
        int32_t r0_2 = 0;
        void* r1_2;
        do
        {
            r1_2 = &r5[r0_2];
            r0_2 = (r0_2 + 1);
        } while (*(r1_2 + 1) != 0);
        r6_2 = (r8 + r0_2);
    }
    int32_t r4_3 = (arg4 & 0x40);
    uint32_t r10 = ((arg4 >> 0xf) & 0xff);
    char var_65;
    if ((r4_3 == 0 && r10 > r6_2))
    {
        uint32_t i_5 = (r10 - r6_2);
        var_65 = ((0x10 & (arg4 >> 4)) | 0x20);
        if (i_5 >= 1)
        {
            uint32_t i_1;
            do
            {
                *(arg1 + 0x2c)(arg1, &var_65, 1);
                i_1 = i_5;
                i_5 = (i_5 - 1);
            } while (i_1 != 1);
        }
        r6_2 = r10;
    }
    if (((arg4 << 0x17) >= 0 && r5 != 0))
    {
        for (uint32_t i_2 = *r5; i_2 != 0; i_2 = *r5)
        {
            *(arg1 + 0x2c)(arg1, r5, 1);
            r5 = &r5[1];
        }
    }
    *(arg1 + 0x2c)(arg1, (r7 + 1), r8);
    if ((r4_3 == 0 || (r4_3 != 0 && r10 <= r6_2)))
    {
        r10 = r6_2;
    }
    if ((r4_3 != 0 && r10 > r6_2))
    {
        uint32_t i_4 = (r10 - r6_2);
        var_65 = 0x20;
        if (i_4 >= 1)
        {
            uint32_t i_3;
            do
            {
                *(arg1 + 0x2c)(arg1, &var_65, 1);
                i_3 = i_4;
                i_4 = (i_4 - 1);
            } while (i_3 != 1);
        }
    }
    return r10;
}

int32_t sub_97e08(char* arg1, int32_t arg2)
{
    int32_t var_c = arg2;
    int32_t r2;
    int32_t var_8 = r2;
    int32_t r3;
    int32_t var_4 = r3;
    int32_t* var_18 = &var_c;
    return sub_978b4(*0x20000c6c, arg1, &var_c);
}

int32_t sub_97e34(char* arg1, int32_t arg2, char* arg3, char* arg4)
{
    int32_t r6 = (arg2 & 0x7fffffff);
    void* const var_3c = sub_97e76;
    int32_t r0 = r6;
    char* var_58 = arg1;
    if (r6 != 0)
    {
        r0 = (r6 - 1);
    }
    void var_68;
    int32_t r0_2 = sub_978b4(&var_68, arg3, arg4);
    if ((arg1 != 0 && r6 != 0))
    {
        int32_t r1_2 = r0_2;
        if (r0 == 0)
        {
            r1_2 = (r6 - 1);
        }
        arg1[r1_2] = 0;
    }
    return r0_2;
}

int32_t sub_97e76(void* arg1, int32_t* arg2, int32_t arg3)
{
    int32_t r4 = arg3;
    int32_t* r0 = *(arg1 + 0x10);
    if (r0 == 0)
    {
        r4 = 0xffffffff;
    }
    else
    {
        int32_t r2 = *(arg1 + 0x14);
        if (r2 < r4)
        {
            r4 = r2;
        }
        sub_97f48(r0, arg2, r4);
        int32_t r1 = *(arg1 + 0x14);
        *(arg1 + 0x10) = (*(arg1 + 0x10) + r4);
        *(arg1 + 0x14) = (r1 - r4);
    }
    return r4;
}

int32_t sub_97ea4(char* arg1, int32_t arg2, char* arg3, int32_t arg4)
{
    int32_t var_4 = arg4;
    int32_t* var_10 = &var_4;
    return sub_97e34(arg1, arg2, arg3, &var_4);
}

int32_t sub_97ebe() __pure
{
    return;
}

int32_t sub_97ec2(int32_t arg1, char* arg2, int32_t arg3)
{
    char* r5 = arg2;
    if (arg3 != 0)
    {
        int32_t i_1 = arg3;
        int32_t i;
        do
        {
            *r5;
            r5 = &r5[1];
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
    return arg3;
}

int32_t sub_97edc(char* arg1)
{
    if (*arg1 == 0)
    {
        return 0;
    }
    int32_t r0 = 0;
    uint32_t i;
    do
    {
        i = arg1[(1 + r0)];
        r0 = (r0 + 1);
    } while (i != 0);
    return r0;
}

int32_t sub_97ef2(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4) __noreturn
{
    if (arg1 != 0)
    {
        int32_t var_10 = arg3;
        sub_97f24("Assertion failed: (%s), function…", arg4);
        /* no return */
    }
    sub_97f24("Assertion failed: (%s), file %s,…", arg4);
    /* no return */
}

int32_t sub_97f24(char* arg1, int32_t arg2) __noreturn
{
    int32_t var_c = arg2;
    int32_t r2;
    int32_t var_8 = r2;
    int32_t r3;
    int32_t var_4 = r3;
    int32_t* var_18 = &var_c;
    sub_978b4(*0x20000c70, arg1, &var_c);
    while (true)
    {
        /* nop */
    }
}

void sub_97f48(int32_t* arg1, int32_t* arg2, int32_t arg3)
{
    bool v_1 = /* bool v_1 = unimplemented  {orrs r3, r0, r1} */;
    if (((arg1 | arg2) << 0x1e) != 0)
    {
        __msr((arg3 << 0x1c));
        if ((!(TEST_BIT(arg3, 4))))
        {
            arg3 = (arg3 - 2);
            *(arg1 + arg3) = *(arg2 + arg3);
        }
        if (v_1)
        {
            arg3 = (arg3 - 1);
            *(arg1 + arg3) = *(arg2 + arg3);
        }
        uint32_t i_3 = (arg3 >> 2);
        if (i_3 == 0)
        {
            return;
        }
        uint32_t i;
        do
        {
            i = i_3;
            i_3 = (i_3 - 1);
            arg1[i_3] = arg2[i_3];
        } while (i > 1);
        return;
    }
    int32_t* var_20 = arg1;
    int32_t i_2 = (arg3 - 0x20);
    if ((arg3 - 0x20) >= 0)
    {
        int32_t i_1;
        do
        {
            int32_t r3_1 = *arg2;
            int32_t r4_1 = arg2[1];
            int32_t r5_1 = arg2[2];
            int32_t r6_1 = arg2[3];
            int32_t r7_1 = arg2[4];
            int32_t r8_1 = arg2[5];
            int32_t r9_1 = arg2[6];
            int32_t lr_1 = arg2[7];
            arg2 = &arg2[8];
            i_1 = i_2;
            i_2 = (i_2 - 0x20);
            *arg1 = r3_1;
            arg1[1] = r4_1;
            arg1[2] = r5_1;
            arg1[3] = r6_1;
            arg1[4] = r7_1;
            arg1[5] = r8_1;
            arg1[6] = r9_1;
            arg1[7] = lr_1;
            arg1 = &arg1[8];
        } while (i_1 >= 0x20);
    }
    if (i_2 != 0xffffffe0)
    {
        bool v = ((i_2 + 0x20) - 0x10);
        if ((i_2 + 0x10) < 0 == v)
        {
            int32_t r3_2 = *arg2;
            int32_t r4_2 = arg2[1];
            int32_t r5_2 = arg2[2];
            int32_t r6_2 = arg2[3];
            arg2 = &arg2[4];
            *arg1 = r3_2;
            arg1[1] = r4_2;
            arg1[2] = r5_2;
            arg1[3] = r6_2;
            arg1 = &arg1[4];
        }
        __msr(((i_2 + 0x10) << 0x1c));
        if (((i_2 + 0x10) << 0x1c) < 0)
        {
            int32_t r3_3 = *arg2;
            int32_t r4_3 = arg2[1];
            arg2 = &arg2[2];
            *arg1 = r3_3;
            arg1[1] = r4_3;
            arg1 = &arg1[2];
        }
        if (((i_2 + 0x10) & 0xf) == 0)
        {
            int32_t r3_4 = *arg2;
            arg2 = &arg2[1];
            *arg1 = r3_4;
            arg1 = &arg1[1];
        }
        if ((!(TEST_BIT((i_2 + 0x10), 4))))
        {
            int16_t r3_5 = *arg2;
            arg2 = (arg2 + 2);
            *arg1 = r3_5;
            arg1 = (arg1 + 2);
        }
        if (v)
        {
            *arg1 = *arg2;
        }
    }
}

int32_t sub_98652(int32_t arg1, void* arg2, int32_t arg3, void* arg4 @ r4, void* arg5 @ r5, void* arg6 @ r6, int32_t arg7 @ r7)
{
    *(arg4 + 9) = arg2;
    *(arg4 + 0x54) = arg7;
    *(arg5 + 0x10) = arg5;
    *(arg5 + 9) = 0x6f;
    *(arg5 + 0x15) = arg7;
    *(arg4 + 4);
    *(arg4 + 0x11) = arg5;
    *(arg4 + 0x34) = arg5;
    *(arg6 + 0x54) = arg4;
    *(arg2 + 0x14);
    *(arg4 + 0x11) = arg2;
    *(arg4 + 4);
    /* tailcall */
    return sub_200(0x64, arg2, arg3);
}

int32_t sub_987e2(int32_t arg1, char arg2, void* arg3, int32_t arg4, void* arg5 @ r4, char* arg6 @ r5, void* arg7 @ r6, int32_t arg8 @ r7)
{
    *(arg3 + 0x11) = arg4;
    *(arg5 + 9) = arg2;
    *(arg7 + 0x15) = arg5;
    *(arg3 + 0x11) = arg4;
    *(arg5 + 9) = arg2;
    *0x482e4367 = arg5;
    void* r4 = *0x905c86b8;
    *0x525300a8 = arg4;
    arg6[0x19] = arg8;
    *(r4 + 9) = arg6;
    char r1 = (arg8 << 1);
    *(arg3 + 0x14) = arg8;
    arg6[0x11] = r1;
    *(r4 + 0x60) = 0x905c86a4;
    arg6[9] = arg8;
    int16_t* r0 = (0x905c86a4 | r4);
    *(r4 + 1) = r1;
    *(r0 + r4) = r0;
    __builtin_strncpy(0x206f7434, " to ", 4);
    arg6[0x15] = r4;
    *(r4 + 0x11) = r1;
    __builtin_strncpy(&data_79, "tion", 4);
    __builtin_strncpy((arg3 + 0x54), "tion", 4);
    *(arg6 + 0x54) = r4;
    *(r4 + 0x11) = 0x74;
    int16_t* r0_1 = (0x40dee840 | r4);
    *(r4 + 1) = r1;
    *(r0_1 + r4) = r0_1;
    *(arg6 + r0_1) = 0x76;
    *0x64658a = arg3;
    arg6[0xd] = 0x76;
    arg6[0x11] = r1;
    *(arg6 + 0x74);
    int16_t r6 = *(arg6 + 0x34);
    *(0x6e + r4) = 0x6e;
    *(arg6 + 0x6e) = r6;
    *(r4 + 0x14) = arg6;
    *(0x6e + *(r4 + 5)) = 0x6e;
    /* jump -> arg6 */
}

int32_t sub_98994(int16_t* arg1, char arg2, void* arg3, int32_t arg4, int16_t* arg5 @ r4, int16_t* arg6 @ r5, int16_t arg7 @ r6)
{
    *(arg1 + arg6) = arg4;
    *(arg6 + arg5) = arg7;
    int16_t* r5 = *(arg5 + 0x64);
    *(arg3 + 0x1d) = arg4;
    *(arg5 + 1) = arg2;
    *(0xffffff95 + r5) = arg4;
    int32_t r1 = *(arg5 + 0x14);
    *(arg3 + 0x15) = arg5;
    int16_t* r2 = *((arg3 * (r5 << 1)) + 0x64);
    int32_t r7 = *(r5 + 0x64);
    int32_t r6_2 = (r5 << 1);
    *(r2 + r1) = 0x6e;
    *(r2 + 0x54) = arg4;
    *(r5 + 0x44) = r6_2;
    *(arg5 * 2) = 0x6e;
    *(r6_2 + 0x14) = r7;
    int16_t r0 = (r6_2 << 1);
    *(r2 + r1) = r0;
    int32_t r3 = *(r2 + 0x74);
    *(r6_2 + 9) = r5;
    *(arg5 + 0x54) = r3;
    arg5[8] = r0;
    void* r6_3 = *(r5 + 0x34);
    data_de = 0x6f;
    *(r2 + r5) = r2;
    *(r5 + arg5) = r6_3;
    *(r2 + 9) = arg5;
    int32_t r1_1 = *(arg5 + 0x64);
    void* r4 = *(r6_3 + 0x14);
    int32_t r7_1 = *(r5 + 0x64);
    *(r4 + 0x10) = 0x6b;
    *(r5 + 0x64) = r7_1;
    int32_t r6_4 = (r4 << 1);
    *(r2 + r1_1) = 0x6f;
    int32_t r3_1 = *(r2 + 0x74);
    *(r6_4 + 9) = r5;
    *(r4 + 0x54) = r3_1;
    *(r4 + 0x6f) = 0x6f;
    *(r6_4 + 0x14) = r2;
    *(r5 + 0xd) = r6_4;
    *(r5 + 0x11) = r1_1;
    void* r4_1 = *(r6_4 + 0x74);
    int32_t* r0_1 = *(r4_1 + 0x70);
    *(r4_1 + 0x64) = r6_4;
    *(r0_1 * 2) = r0_1;
    *(r2 + r5) = r2;
    *(r5 + r4_1) = r6_4;
    int32_t r1_2 = *(r5 + 0x64);
    int16_t* r4_2 = *(r6_4 + 0x74);
    *(r4_2 * 2) = 0x6b;
    *(r5 + 0x15) = r7_1;
    *(r6_4 + 0x34) = r2;
    *(0x6b + r1_2) = r4_2;
    *(r4_2 * 3) = r6_4;
    /* jump -> r4_2 */
}

int32_t sub_99ac2(int32_t arg1)
{
    int32_t r3 = arg1;
    int32_t r4 = arg1;
    int32_t r0_72;
    do
    {
        uint32_t r0_70 = (*(r4 + 0xa) << 2);
        void* sp;
        *(sp + 0x180) = (*(r4 + r3) - r4);
        r0_72 = (r4 << 2);
        *(r0_70 + 6) = r0_72;
        r3 = r0_72;
        int32_t* temp0_1 = r0_72;
        *temp0_1 = r0_72;
        temp0_1[1] = r0_72;
        sp = (sp + 0x1c0);
        *(r0_72 + r3) = r0_72;
        *(r0_72 + r3) = r0_72;
        r4 = (r0_72 + 0x860000);
    } while ((!(TEST_BIT(r3, 0x1e))));
    int32_t r6_3 = ((r0_72 - 3) << 4);
    *(r4 + 0x34) = (r0_72 - 3);
    int32_t r5_5 = (r0_72 << 8);
    *r3 = r4;
    *(r3 + 4) = r6_3;
    uint32_t r2_9 = ((r0_72 - 3) >> 0xb);
    *(r2_9 + 0x26) = r4;
    *(r3 + 0x2e) = r2_9;
    *(r4 + 0x26) = r2_9;
    *(r5_5 + 0x26) = (r3 + 8);
    *(r2_9 + 0x32) = (r0_72 - 3);
    *(r4 + 0x32) = (r3 + 8);
    *(r6_3 + 0x32) = r5_5;
    *(r0_72 + 0x31) = r6_3;
    *(r4 + 0x34) = 0x10;
    *(r0_72 + 0x33) = (r0_72 - 3);
    *(r6_3 + 0x36) = 0x10;
    *(r0_72 + 0x35) = (r3 + 8);
    *(r5_5 + 0x38) = r2_9;
    *(r0_72 + 0x37) = (r3 + 8);
    *((r0_72 - 3) * 2) = (r3 + 8);
    *(r2_9 * 2) = 0x40020000;
    *(r2_9 + (r3 + 8)) = (r0_72 - 3);
    *((r0_72 - 3) + r5_5) = (r3 + 8);
    *((r3 + 8) + r6_3) = r5_5;
    *((r3 + 8) + r6_3) = 0;
    *(0x40020000 + r6_3) = (r3 + 8);
    *0x80040000 = (r0_72 - 3);
    (r0_72 - 3)[r6_3] = 0;
    *(r0_72 + 0x4001fffd) = (r0_72 - 3);
    (r0_72 - 3)[r6_3] = r5_5;
    *((r3 + 8) + r2_9) = r5_5;
    *((r0_72 - 3) + (r3 + 8)) = r5_5;
    uint32_t r0_234 = ((((((((((((((((((((((*((r0_72 - 3)[r5_5] + r5_5) << 0x10) << 0x10) >> 0x20) >> 0x10) >> 0x20) << 0xc) >> 0x20) << 8) >> 0x20) << 0x10) >> 0x20) >> 0x10) << 1) >> 0x10) << 2) >> 0x10) << 4) >> 0x10) << 8) >> 0x10) << 0x10) << 0x10);
    *r0_234 = r0_234;
    *nullptr = 0;
    *nullptr = 0;
    /* undefined */;
}

int32_t sub_99dec(int32_t arg1 @ r4)
{
    uint32_t r0_138 = ((((((((((((((((arg1 >> 0x20) >> 0x20) >> 0x10) >> 0x20) << 1) >> 0x20) << 2) >> 0x20) << 4) >> 0x20) << 8) >> 0x20) << 0x10) >> 0x20) >> 0x10) << 1);
    uint32_t r0_196 = (((((((((r0_138 >> 0x10) << 2) >> 0x10) << 4) >> 0x10) << 8) >> 0x10) << 0x10) << 0x10);
    *r0_196 = r0_196;
    *nullptr = 0;
    *nullptr = 0;
    /* undefined */;
}

int32_t sub_9aa80(int32_t, int32_t arg2, int32_t, int32_t arg4, int32_t arg5 @ r7, int32_t arg6) __noreturn
{
    trap(0xbb);
}

